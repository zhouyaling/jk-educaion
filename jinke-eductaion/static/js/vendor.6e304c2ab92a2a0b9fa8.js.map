{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/axios/node_modules/is-buffer/index.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/mux.js/lib/mp4/audio-frame-utils.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/qs/lib/stringify.js","webpack:///./node_modules/qs/lib/parse.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/mux.js/lib/aac/utils.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/qs/lib/formats.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/qs/lib/index.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/qs/lib/utils.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js"],"names":["inspectMp4","textifyMp4","parseType","__webpack_require__","parseMp4Date","seconds","Date","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","parse","avc1","data","view","DataView","buffer","byteOffset","byteLength","dataReferenceIndex","getUint16","width","height","horizresolution","vertresolution","frameCount","depth","config","subarray","avcC","numOfPictureParameterSets","nalSize","offset","i","result","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","push","Uint8Array","btrt","bufferSizeDB","getUint32","maxBitrate","avgBitrate","esds","version","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","length","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","boxes","dref","dataReferences","hdlr","getUint8","handlerType","name","String","fromCharCode","decodeURIComponent","escape","mdat","nals","avcStream","avcView","nalParse","mdhd","language","creationTime","modificationTime","timescale","duration","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","samples","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","baseMediaDecodeTime","Math","pow","tfhd","trackId","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","size","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","type","end","box","ab","ArrayBuffer","v","z","inspectedMp4","indent","Array","join","map","index","Object","keys","filter","key","prefix","value","bytes","prototype","slice","call","byte","toString","match","line","JSON","stringify","split","module","exports","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","implementation","trim","findBox","startTime","getVideoTrackIds","toUnsigned","path","subresults","results","concat","init","reduce","id","fragment","trafs","baseTimes","apply","scale","Infinity","min","isFinite","videoTrackIds","forEach","hdlrs","tkhds","warn","condition","message","isError","err","indexOf","extend","a","b","View","functional","props","default","render","_","ref","children","parent","routerView","h","$createElement","route","$route","cache","_routerViewCache","inactive","_routerRoot","vnodeData","$vnode","keepAlive","_inactive","$parent","routerViewDepth","matched","component","components","registerRouteInstance","vm","val","current","instances","hook","prepatch","vnode","componentInstance","propsToPass","params","undefined","resolveProps","attrs","encodeReserveRE","encodeReserveReplacer","c","charCodeAt","commaRE","encode","str","encodeURIComponent","replace","decode","parseQuery","query","res","param","parts","shift","isArray","stringifyQuery","obj","val2","x","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","options","clone","e","meta","hash","fullPath","getFullPath","unshift","formatMatch","freeze","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","every","aVal","bVal","_Vue","toTypes","eventTypes","Link","to","required","exact","Boolean","append","activeClass","exactActiveClass","event","this$1","this","$router","resolve","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","target","queryIncludes","isIncludedRoute","handler","guardEvent","on","click","class","findAnchor","child","$slots","isStatic","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","getAttribute","test","preventDefault","install","Vue","installed","isDef","registerInstance","callVal","$options","_parentVnode","mixin","beforeCreate","_router","util","defineReactive","history","destroyed","defineProperty","get","_route","strats","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","created","inBrowser","window","resolvePath","relative","base","firstChar","charAt","stack","pop","segments","segment","cleanPath","isarray","arr","pathToRegexp_1","pathToRegexp","parse_1","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","RegExp","tokens","defaultDelimiter","delimiter","exec","m","escaped","next","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","pretty","token","TypeError","j","attachKeys","re","sensitive","strict","endsWithDelimiter","groups","source","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","regexpCompileCache","create","fillParams","routeMsg","filler","pathMatch","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","beforeEnter","childMatchAs","alias","aliases","aliasRoute","l","splice","normalizeLocation","raw","_normalized","rawPath","parsedPath","hashIndex","queryIndex","parsePath","basePath","extraQuery","_parseQuery","parsedQuery","resolveQuery","createMatcher","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","hasOwnProperty","resolveRecordPath","aliasedMatch","aliasedRecord","addRoutes","len","positionStore","setupScroll","replaceState","getStateKey","origin","addEventListener","saveScrollPosition","state","_key","handleScroll","from","isPop","app","behavior","scrollBehavior","$nextTick","position","getScrollPosition","shouldScroll","then","scrollToPosition","catch","pageXOffset","y","pageYOffset","isValidPosition","isNumber","normalizePosition","isObject","selector","el","document","querySelector","docRect","documentElement","getBoundingClientRect","elRect","left","top","getElementPosition","scrollTo","ua","supportsPushState","navigator","userAgent","Time","performance","now","genKey","toFixed","pushState","url","runQueue","queue","fn","cb","step","resolveAsyncComponents","hasAsync","pending","error","flatMapComponents","def","cid","once","resolvedDef","__esModule","hasSymbol","Symbol","toStringTag","resolved","reject","reason","msg","Error","comp","flatten","called","args","arguments","History","baseEl","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","extractGuards","records","bind","reverse","guards","instance","guard","extractGuard","bindGuard","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","console","max","updated","activated","deactivated","resolveQueue","extractLeaveGuards","beforeHooks","extractUpdateHooks","iterator","postEnterCbs","cbs","isValid","poll","_isBeingDestroyed","setTimeout","bindEnterGuard","extractEnterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","supportsScroll","initLocation","getLocation","__proto__","constructor","go","n","fromRoute","getCurrentLocation","decodeURI","pathname","search","HashHistory","fallback","checkFallback","ensureSlash","setupListeners","getHash","replaceHash","pushHash","searchIndex","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","mode","prototypeAccessors","configurable","registerHook","list","$once","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","createHref","normalizedTo","defineProperties","use","__webpack_exports__","hasSymbols","toStr","origDefineProperty","supportsDescriptors","enumerable","arePropertyDescriptorsSupported","object","predicate","writable","predicates","getOwnPropertySymbols","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","video","audio","payload","setUint32","set","track","audioobjecttype","samplingfrequencyindex","tracks","trackFragments","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","floor","durationPresent","sizePresent","flagsPresent","initSegment","fileType","movie","global","scope","self","Function","Timeout","clearFn","_id","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","isFunction","parseHeaders","xtend","initParams","uri","callback","createXHR","_createXHR","response","body","errorFunc","evt","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","nodeName","getXml","isJson","getBody","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","code","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","isBuffer","createError","validateStatus","request","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","count","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","StreamTypes","handleRollover","probe","ts","aac","parseAudioPes_","pmt","packet","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","frame","pes","currentFrame","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","baseTimestamp","isLikelyAacData","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","dts","pts","inspectAac_","segmentInfo","audioBaseTimestamp","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","TransportPacketStream","TransportParseStream","ElementaryStream","Stream","CaptionStream","TimestampRolloverStream","m2tsStreamTypes","bytesInBuffer","everything","trigger","flush","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","METADATA_STREAM_TYPE","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream","forceFlush","packetFlushable","packetData","ptsDtsFlags","packetLength","dataAlignmentIndicator","timelineStartInfo","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","Cea608Stream","MetadataStream","utils","normalizedName","_extends","assign","_inheritsLoose","subClass","superClass","_assertThisInitialized","ReferenceError","listeners","_proto","listener","off","callbacks","dispose","pipe","destination","LineStream","_Stream","_this","nextNewline","substring","parseAttributes","attributes","attr","ParseStream","customParsers","tagMappers","_this2","acc","mapper","mappedLine","newLine","tagType","parseFloat","title","parseInt","number","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","toLowerCase","PRECISE","text","addParser","_ref","_this3","expression","customType","dataParser","addTagMapper","_ref2","Parser","lineStream","parseStream","currentMap","uris","currentUri","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","entry","mediaGroup","rendition","allow-cache","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","playlist","stream-inf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","program-date-time","targetduration","targetDuration","totalduration","totalDuration","start","isNaN","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","timeline","comment","custom","chunk","classCallCheck","Constructor","createClass","descriptor","protoProps","staticProps","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","d","th","x2","x4","s","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","delay","timeout_","setPrototypeOf","inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","STEP","asyncStream_","decryptChunk_","padded","video_es_version","video_es__inheritsLoose","_setPrototypeOf","o","p","_construct","Parent","Class","Reflect","construct","sham","Proxy","isNativeReflectConstruct","video_es__assertThisInitialized","_taggedTemplateLiteralLoose","strings","video_es_history","video_es_LogByTypeFactory","log","level","lvl","levels","lvlRegExp","window_default","video_es_log","createLogger","logByType","_len","subname","all","debug","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","each","video_es_assign","sources","isPlain","video_es_computedStyle","prop","getComputedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","createQuerier","context","ctx","createEl","tagName","properties","content","createElement","getOwnPropertyNames","propName","tsml_default","setAttribute","textContent","attrName","appendContent","innerText","prependTo","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","toggleClass","classToToggle","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","parentNode","rect","k","findPosition","docEl","clientLeft","scrollLeft","clientTop","scrollTop","round","getPointerPosition","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","passiveEvents","guid","handlersCopy","passive","attachEvent","removeType","t","elemData","ownerDocument","bubbles","targetData","one","func","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","EVENT_MAP","video_es_createStyleElement","style","setTextContent","styleSheet","cssText","uid","bound","throttle","last","video_es_debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","delete","isEvented","eventBusEl_","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","string","mergeOptions","video_es_Component","Component","play","player_","parentComponent_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","touchEnd","timeoutId","disposeFn","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","apiMap","specApi","prefixedAPI","video_es_i","video_es__i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","keycode_default","isEventKey","focusIndex","focusableEls","focusableEls_","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","div","addToBody","host","protocol","innerHTML","details","video_es_getAbsoluteURL","getFileExtension","pathParts","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","WebVTT","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","video_es_loadTrack","crossOrigin","xhr_default","responseBody","loaded_","tech_","loadHandler","errorHandler","video_es_TextTrack","_Track","TextTrack","settings","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","abs","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","trackingInterval_","handleTimeupdate","seekableEnds","sort","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","fsApi","isFs","fullscreenElement","fullscreen","msMatchesSelector","inactivityTimeout","defaultPlaybackRate","set$1","reduceRight","video_es_get","_this8","PromiseClass","Promise","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","hotkeys","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hookOnce","original","removeHook","style$1","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","writeable","subClassMethods","methods","super_","_inherits$1","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","video_es_resolveUrl","baseURL","relativeURL","url_toolkit_default","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","xhr$$1","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","intervalDuration","endSequence","expired","backward","backwardDuration","forwardDuration","video_es_duration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","hexDump","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","_findBox","mp4Generator","toUnsigned$1","flushSource","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","sampleForFrame","keyFrame","frameUtils","nalUnits","currentNal","nalUnitType","currentGop","gops","nalCount","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","ONE_SECOND_IN_TS$1","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","trackDecodeInfo","maxSegmentDts","maxSegmentPts","keepOriginalTimestamps","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","captionPackets_","ccStreams_","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","format","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","reference","direction","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","dispatchType","frameStart","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","returnSize","lowThree","middle","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","_textifyMp","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$2","parse$$1","mp4Inspector","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","_playlistUpdate","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","mediaRequest_","mpd_parser_es","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","updatedMaster","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","byterangeEnd","Range","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","emptyObject","isUndef","isTrue","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","toNumber","makeMap","expectsLowerCase","isBuiltInTag","isReservedAttribute","hasOwn","cached","camelizeRE","camelize","capitalize","hyphenateRE","hyphenate","boundFn","toArray","_from","toObject","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","silent","productionTip","devtools","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","bailRE","_isServer","hasProto","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","isFF","nativeWatch","watch","supportsPassive","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","ownKeys","Set","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","targetStack","pushTarget","popTarget","VNode","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","createEmptyVNode","createTextVNode","cloneVNode","cloned","arrayProto","arrayMethods","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","copyAugment","walk","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","setter","childOb","dependArray","newVal","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","dedupeHooks","mergeAssets","key$1","inject","computed","provide","defaultStrat","normalizeProps","normalized","normalizeInject","dirs","directives","def$$1","normalizeDirectives","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","stringIndex","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","cur","errorCaptured","globalHandleError","invokeWithErrorHandling","_handled","logError","timerFunc","isUsingMicroTask","flushCallbacks","copies","MutationObserver","counter","observer","textNode","characterData","nextTick","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","createOnceHandler","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","_isVList","resolveInject","provideKey","_provided","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","renderSlot","bindObject","scopedSlotFn","$scopedSlots","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","prependModifier","symbol","installRenderHelpers","_o","_l","_t","_q","_m","_f","_k","_b","_v","_u","_g","_p","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","scopedSlots","_scopeId","_c","cloneAndMarkFunctionalResult","renderContext","mergeProps","componentVNodeHooks","hydrating","_isDestroyed","mountedNode","_isComponent","inlineTemplate","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","parentVnode","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","_renderChildren","_vnode","$attrs","$listeners","propKeys","_propKeys","oldListeners","_parentListeners","updateComponentListeners","$forceUpdate","updateChildComponent","insert","_isMounted","callHook","activatedChildren","activateChildComponent","destroy","deactivateChildComponent","direct","_directInactive","isInInactiveTree","$children","$destroy","hooksToMerge","createComponent","baseCtor","factory","errorComp","currentRenderingInstance","owners","loading","loadingComp","timerLoading","timerTimeout","$on","forceRender","renderCompleted","ensureCtor","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","extractPropsFromVNodeData","vnodes","createFunctionalComponent","nativeOn","abstract","toMerge","_merged","mergeHook$1","installComponentHooks","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","pre","applyNS","force","registerDeepBindings","_createElement","getFirstComponentChild","remove$1","$off","_target","onceHandler","setActiveInstance","prevActiveInstance","_hasHookEvent","$emit","waiting","flushing","currentFlushTimestamp","getNow","flushSchedulerQueue","watcher","activatedQueue","updatedQueue","callActivatedHooks","_watcher","callUpdatedHooks","emit","uid$2","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","dirty","deps","newDeps","depIds","newDepIds","cleanupDeps","queueWatcher","oldValue","evaluate","teardown","sharedPropertyDefinition","sourceKey","initState","propsOptions","isRoot","initProps","initMethods","_data","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","createGetterInvoker","$watch","uid$3","super","superOptions","modifiedOptions","modified","latest","sealed","sealedOptions","resolveModifiedOptions","extendOptions","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","getComponentName","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","initMixin","dataDef","propsDef","$set","$delete","stateMixin","hookRE","i$1","eventsMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","lifecycleMixin","_render","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","mounted","configDef","observable","installedPlugins","_installedPlugins","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","acceptValue","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","nodeOps","multiple","createElementNS","namespace","createComment","newNode","referenceNode","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","baseWarn","pluckModuleFunction","modules","addProp","dynamic","rangeSetItem","plain","addAttr","dynamicAttrs","addRawAttr","attrsMap","attrsList","addDirective","isDynamicArg","prependModifierMarker","addHandler","important","events","native","nativeEvents","newHandler","getRawBindingAttr","rawAttrsMap","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","getAndRemoveAttrByRegex","genComponentModel","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","updateDOMListeners","normalizeEvents","svgContainer","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","notInFocus","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","whitespaceRE","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","onEnd","transformRE","styles","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","toMs","enter","_leaveCb","cancelled","transition","_enterCb","appearClass","appearToClass","appearActiveClass","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","isRenderedModule","inVPre","childrenMatch","fullInvoke","isInitialPatch","isRealElement","oldElm","patchable","i$2","createPatchFunction","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","hasNoMatchingOption","actuallySetSelected","isMultiple","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","dx","dy","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","hasMove","_reflow","propertyName","_hasMove","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","parseText","tagRE","tokenValue","rawTokens","@binding","klass$1","staticKeys","transformNode","classBinding","genData","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","conditionalComment","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","&#39;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","decodeHTMLCached","emptySlotScopeToken","createASTElement","makeAttrsMap","template","isPreTag","root","currentParent","preserveWhitespace","whitespaceOption","whitespace","inPre","closeElement","trimEndingWhitespace","processed","processElement","if","elseif","else","addIfCondition","block","forbidden","findPrevElement","slotScope","slotTarget","lastNode","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","outputSourceRange","start$1","ieNSBug","ieNSPrefix","guardIESVGBug","processPre","processRawAttrs","processFor","processIf","processOnce","end$1","processKey","for","checkInFor","slotTargetDynamic","slotBinding","getSlotName","slotBinding$1","ref$1","dynamic$1","slotContainer","processSlotContent","slotName","processSlotOutlet","processComponent","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","iteratorMatch","iterator1","iterator2","parseFor","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","_warn","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","fnInvokeRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","ctrl","alt","genHandlers","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genProps","bind$$1","genSlot","genData$2","genComponent","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","needRuntime","hasRuntime","gen","genDirectives","containsSlotChild","needsKey","generatedSlots","genScopedSlot","inlineRenderFns","genInlineTemplate","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","dynamicProps","createFunction","createCompileToFunctionFn","compiled","fnGenErrors","baseCompile","finalOptions","tips","tip","compileToFunctions","getShouldDecode","idToTemplate","mount","outerHTML","getOuterHTML","prefixWithSilence","audioTsToVideoTs","ONE_SECOND_IN_TS","videoTsToAudioTs","trimAdtsFramesByEarliestDts","generateSampleTable","concatenateFrameData","settle","buildURL","isURLSameOrigin","requestData","requestHeaders","isFormData","auth","Authorization","btoa","paramsSerializer","statusText","isStandardBrowserEnv","cookies","xsrfValue","xsrfCookieName","read","xsrfHeaderName","onDownloadProgress","onUploadProgress","upload","cancelToken","keysShim","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","$isNaN","formats","arrayPrefixGenerators","brackets","indices","toISO","defaults","encoder","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","generateArrayPrefix","allowDots","formatter","objKeys","formatters","arrayFormat","joined","addQueryPrefix","allowPrototypes","arrayLimit","parameterLimit","plainObjects","parseKeys","givenKey","chain","leaf","cleanRoot","parseArrays","parseObject","ignoreQueryPrefix","tempObj","cleanStr","limit","bracketEqualsPos","parseValues","newObj","merge","compact","serializedParams","isURLSearchParams","isDate","hashmarkIndex","config1","config2","deepMerge","g","eval","scrollSetting","","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","enhanceError","originURL","msie","urlParsingNode","resolveURL","hostname","port","requestURL","AdtsStream","AacStream","aacUtils","modulo","remain","reviver","thisArg","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","isUndefined","adapter","transformRequest","isArrayBuffer","isStream","isFile","isBlob","isArrayBufferView","transformResponse","maxContentLength","common","Accept","groupNalsIntoFrames","groupFramesIntoGops","extendFirstKeyFrame","concatenateNalData","isCallable","forEachString","forEachObject","alert","confirm","prompt","define","getPolyfill","shim","boundTrim","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","argv","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","percentTwenties","RFC1738","RFC3986","InterceptorManager","dispatchRequest","mergeConfig","Axios","instanceConfig","interceptors","interceptor","fulfilled","rejected","getUri","autoKeyword","directionSetting","lr","rl","alignSetting","findAlignSetting","hasBeenReset","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","findDirectionSetting","snapToLines","lineAlign","positionAlign","getCueAsHTML","convertCueToDOMTree","origKeys","originalKeys","GetIntrinsic","$TypeError","$SyntaxError","Property Descriptor","ES","Desc","Type","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","recordType","argumentName","FormData","URLSearchParams","product","assignValue","Cancel","CancelToken","executor","resolvePromise","throwIfRequested","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","__CANCEL__","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","vals","vals0","integer","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","cuetext","overlay","paddedOverlay","margin","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","xy","anchor","onregion","parseRegion","alreadyCollectedLine","hasSubstring","doccy","topLevel","minDoc","leftWhitespace","rightWhitespace","S","ToString","CheckObjectCoercible","that","boundLength","boundArgs","Empty","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","eject","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","baseURLPath","newPath","$Object","$String","assertRecord","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","IsPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","polyfill","searchInput","hasKeyCode","foundNamedKey","nameOrCode","backspace","pause/break","caps lock","page up","page down","home","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","break","caps","return","spc","spacebar","pgup","pgdn","ins","cmd","registerImmediate","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","handle","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","MessageChannel","port1","port2","task","CoalesceStream","collectDtsInfo","calculateTrackBaseMediaDecodeTime","clearDtsInfo","ignoreDuplicateOf","write","expires","domain","secure","cookie","toGMTString","hexTable","arrayToObject","compacted","compactQueue","mergeTarget","clean","sa","callee","isAxiosError","fileName","lineNumber","columnNumber","createInstance","defaultConfig","axios","isCancel","promises","spread","ThrowTypeError","getProto","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","$ %decodeURIComponent%","$ %encodeURI%","$ %encodeURIComponent%","$ %Error%","$ %ErrorPrototype%","$ %eval%","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","$ %Promise_resolve%","$ %Proxy%","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","tryFunctionObject","strClass","parseUTCTiming","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","objects","lists","mergeDiscontiguousPlaylists","_acc$name$segments","formatVideoPlaylist","_ref3","_attributes3","periodIndex","urlToolkit","resolveUrl","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","sourceDuration","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","segmentTime","nextS","segmentRange","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentTimeInfo","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","_attributes","formatAudioPlaylist","_attributes2","organizeVttPlaylists","toM3u8","UTCTimingNode","parseUTCTimingScheme","ES5internalSlots","O","actualHint","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested"],"mappings":"sDAWA,IACAA,EACAC,EAEAC,EAAcC,EAAQ,QAAcD,UACpCE,EAAA,SAAAC,GACA,WAAAC,KAAA,IAAAD,EAAA,aAEAE,EAAA,SAAAC,GACA,OACAC,WAAA,GAAAD,EAAA,QACAE,UAAA,EAAAF,EAAA,GACAG,cAAA,IAAAH,EAAA,QACAI,eAAA,GAAAJ,EAAA,QACAK,cAAA,GAAAL,EAAA,QACAM,gBAAA,EAAAN,EAAA,GACAO,oBAAAP,EAAA,MAAAA,EAAA,KA+CAQ,GAIAC,KAAA,SAAAC,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAC,mBAAAL,EAAAM,UAAA,GACAC,MAAAP,EAAAM,UAAA,IACAE,OAAAR,EAAAM,UAAA,IACAG,gBAAAT,EAAAM,UAAA,IAAAN,EAAAM,UAAA,OACAI,eAAAV,EAAAM,UAAA,IAAAN,EAAAM,UAAA,OACAK,WAAAX,EAAAM,UAAA,IACAM,MAAAZ,EAAAM,UAAA,IACAO,OAAAhC,EAAAkB,EAAAe,SAAA,GAAAf,EAAAK,eAGAW,KAAA,SAAAhB,GACA,IAYAiB,EACAC,EACAC,EACAC,EAdAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAC,qBAAAtB,EAAA,GACAuB,qBAAAvB,EAAA,GACAwB,qBAAAxB,EAAA,GACAyB,mBAAAzB,EAAA,GACA0B,mBAAA,EAAA1B,EAAA,GACA2B,OACAC,QAEAC,EAAA,GAAA7B,EAAA,GAQA,IADAmB,EAAA,EACAC,EAAA,EAAiBA,EAAAS,EAAgCT,IACjDF,EAAAjB,EAAAM,UAAAY,GACAA,GAAA,EACAE,EAAAM,IAAAG,KAAA,IAAAC,WAAA/B,EAAAe,SAAAI,IAAAD,KACAC,GAAAD,EAKA,IAFAD,EAAAjB,EAAAmB,GACAA,IACAC,EAAA,EAAiBA,EAAAH,EAA+BG,IAChDF,EAAAjB,EAAAM,UAAAY,GACAA,GAAA,EACAE,EAAAO,IAAAE,KAAA,IAAAC,WAAA/B,EAAAe,SAAAI,IAAAD,KACAC,GAAAD,EAEA,OAAAG,GAEAW,KAAA,SAAAhC,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACA4B,aAAAhC,EAAAiC,UAAA,GACAC,WAAAlC,EAAAiC,UAAA,GACAE,WAAAnC,EAAAiC,UAAA,KAGAG,KAAA,SAAArC,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAwB,KAAAvC,EAAA,MAAAA,EAAA,GACAwC,eAAA,GAAAxC,EAAA,GACAyC,eACAC,wBAAA1C,EAAA,IACA2C,WAAA3C,EAAA,WACA4C,WAAA5C,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAmC,WAAAnC,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,IACAoC,WAAApC,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,IACA6C,yBACAC,IAAA9C,EAAA,IACA+C,OAAA/C,EAAA,IACAgD,gBAAAhD,EAAA,WACAiD,wBAAA,EAAAjD,EAAA,QACAA,EAAA,UACAkD,qBAAAlD,EAAA,eAKAmD,KAAA,SAAAnD,GASA,IARA,IACAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACA+B,WAAApE,EAAAgB,EAAAe,SAAA,MACAsC,aAAApD,EAAAiC,UAAA,GACAoB,qBAEAlC,EAAA,EACAA,EAAApB,EAAAK,YACAgB,EAAAiC,iBAAAxB,KAAA9C,EAAAgB,EAAAe,SAAAK,IAAA,KACAA,GAAA,EAEA,OAAAC,GAEAkC,KAAA,SAAAvD,GACA,OACAwD,MAAA1E,EAAAkB,KAGAyD,KAAA,SAAAzD,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2C,eAAA5E,EAAAkB,EAAAe,SAAA,MAGA4C,KAAA,SAAA3D,GACA,IAEAqB,GACAiB,QAFA,IAAApC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YAEAuD,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA8C,YAAA7E,EAAAgB,EAAAe,SAAA,OACA+C,KAAA,IAEA1C,EAAA,EAGA,IAAAA,EAAA,GAAkBA,EAAApB,EAAAK,WAAqBe,IAAA,CACvC,OAAApB,EAAAoB,GAAA,CAEAA,IACA,MAEAC,EAAAyC,MAAAC,OAAAC,aAAAhE,EAAAoB,IAMA,OAFAC,EAAAyC,KAAAG,mBAAAC,OAAA7C,EAAAyC,OAEAzC,GAEA8C,KAAA,SAAAnE,GACA,OACAK,WAAAL,EAAAK,WACA+D,KA/LA,SAAAC,GACA,IAGAjD,EACA2B,EAHAuB,EAAA,IAAApE,SAAAmE,EAAAlE,OAAAkE,EAAAjE,WAAAiE,EAAAhE,YACAgB,KAGA,IAAAD,EAAA,EAAeA,EAAA,EAAAiD,EAAAtB,OAA0B3B,GAAA2B,EAKzC,GAJAA,EAAAuB,EAAApC,UAAAd,GACAA,GAAA,EAGA2B,GAAA,EACA1B,EAAAS,KAAA,uDAIA,UAAAuC,EAAAjD,IACA,OACAC,EAAAS,KAAA,yCACA,MACA,OACAT,EAAAS,KAAA,6CACA,MACA,OACAT,EAAAS,KAAA,YACA,MACA,OACAT,EAAAS,KAAA,0BACA,MACA,OACAT,EAAAS,KAAA,0BACA,MACA,OACAT,EAAAS,KAAA,8BACA,MACA,QACAT,EAAAS,KAAA,iBAAAuC,EAAAjD,GAAA,IAIA,OAAAC,EAuJAkD,CAAAvE,KAGAwE,KAAA,SAAAxE,GACA,IAGAyE,EAFAxE,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EAEAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA0D,SAAA,IA4BA,OA1BA,IAAApD,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAEAA,GAAA,EAGAqD,EAAAxE,EAAAM,UAAAa,GACAC,EAAAoD,UAAAV,OAAAC,aAAA,IAAAS,GAAA,KACApD,EAAAoD,UAAAV,OAAAC,aAAA,SAAAS,IAAA,IACApD,EAAAoD,UAAAV,OAAAC,aAAA,OAAAS,IAEApD,GAEAyD,KAAA,SAAA9E,GACA,OACAwD,MAAA1E,EAAAkB,KAGA+E,KAAA,SAAA/E,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAiE,eAAAhF,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,KAGAiF,KAAA,SAAAjF,GACA,OACAwD,MAAA1E,EAAAkB,KAMAkF,KAAA,SAAAlF,GACA,IACAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GAEAf,mBAAAL,EAAAM,UAAA,GAEA4E,aAAAlF,EAAAM,UAAA,IACA6E,WAAAnF,EAAAM,UAAA,IAGA8E,WAAApF,EAAAM,UAAA,IAAAN,EAAAM,UAAA,WAQA,OAHAP,EAAAK,WAAA,KACAgB,EAAAiE,iBAAAxG,EAAAkB,EAAAe,SAAA,SAEAM,GAEAkE,KAAA,SAAAvF,GACA,OACAwD,MAAA1E,EAAAkB,KAGAwF,KAAA,SAAAxF,GACA,OACAwD,MAAA1E,EAAAkB,KAGAyF,KAAA,SAAAzF,GACA,OACAwD,MAAA1E,EAAAkB,KAGA0F,KAAA,SAAA1F,GACA,IACAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EACAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,OAkCA,OA/BA,IAAAM,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAEAA,GAAA,EAGAC,EAAAsE,KAAA1F,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAA,GAAA,EACAC,EAAAuE,OAAA3F,EAAA2D,SAAAxC,GAAAnB,EAAA2D,SAAAxC,EAAA,KACAA,GAAA,EACAA,GAAA,EACAA,GAAA,EACAC,EAAAwE,OAAA,IAAAC,YAAA9F,EAAAe,SAAAK,IAAA,KACAA,GAAA,GACAA,GAAA,GACAC,EAAA0E,YAAA9F,EAAAiC,UAAAd,GACAC,GAEA2E,KAAA,SAAAhG,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA4E,KAAA1F,EAAAiC,UAAA,GACA+D,aAAAhG,EAAAiC,UAAA,KAGAgE,KAAA,SAAAlG,GACA,IAKSoB,EAJTC,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAoF,YAGA,IAAA/E,EAAA,EAAiBA,EAAApB,EAAAK,WAAqBe,IACtCC,EAAA8E,QAAArE,MACAtC,WAAA,GAAAQ,EAAAoB,KAAA,EACA3B,cAAA,GAAAO,EAAAoB,KAAA,EACA1B,cAAA,EAAAM,EAAAoB,KAGA,OAAAC,GAEA+E,KAAA,SAAApG,GACA,IAWAoB,EAXAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAsF,cACAC,YAAArG,EAAAiC,UAAA,GACA0C,UAAA3E,EAAAiC,UAAA,GACAqE,yBAAAtG,EAAAiC,UAAA,IACAsE,YAAAvG,EAAAiC,UAAA,KAEAuE,EAAAxG,EAAAM,UAAA,IAGA,IAAAa,EAAA,GAAkBqF,EAAgBrF,GAAA,GAAAqF,IAClCpF,EAAAgF,WAAAvE,MACA4E,eAAA,IAAA1G,EAAAoB,MAAA,EACAuF,eAAA,WAAA1G,EAAAiC,UAAAd,GACAwF,mBAAA3G,EAAAiC,UAAAd,EAAA,GACAyF,iBAAA,IAAA7G,EAAAoB,EAAA,IACA0F,SAAA,IAAA9G,EAAAoB,EAAA,QACA2F,aAAA,UAAA9G,EAAAiC,UAAAd,EAAA,KAIA,OAAAC,GAEA2F,KAAA,SAAAhH,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAkG,QAAAjH,EAAA,GAAAA,EAAA,SAGAkH,KAAA,SAAAlH,GACA,OACAwD,MAAA1E,EAAAkB,KAGAmH,KAAA,SAAAnH,GACA,IAQAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAqG,iBAEAC,EAAApH,EAAAiC,UAAA,GAEA,IAAAd,EAAA,EAAiBiG,EAAYjG,GAAA,EAAAiG,IAC7BhG,EAAA+F,aAAAtF,KAAA7B,EAAAiC,UAAAd,IAEA,OAAAC,GAEAiG,KAAA,SAAAtH,GACA,IAQAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgH,EAAApH,EAAAiC,UAAA,GACAb,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAwG,mBAGA,IAAAnG,EAAA,EAAiBiG,EAAYjG,GAAA,GAAAiG,IAC7BhG,EAAAkG,eAAAzF,MACA0F,WAAAvH,EAAAiC,UAAAd,GACAqG,gBAAAxH,EAAAiC,UAAAd,EAAA,GACAsG,uBAAAzH,EAAAiC,UAAAd,EAAA,KAGA,OAAAC,GAEAsG,KAAA,SAAA3H,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA6G,mBAAA9I,EAAAkB,EAAAe,SAAA,MAGA8G,KAAA,SAAA7H,GACA,IAQAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA+G,WAAA7H,EAAAiC,UAAA,GACA6F,YAGA,IAAA3G,EAAA,GAAkBA,EAAApB,EAAAK,WAAqBe,GAAA,EACvCC,EAAA0G,QAAAjG,KAAA7B,EAAAiC,UAAAd,IAEA,OAAAC,GAEA2G,KAAA,SAAAhI,GACA,IAQAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAkH,kBAEAZ,EAAApH,EAAAiC,UAAA,GAGA,IAAAd,EAAA,EAAiBiG,EAAYjG,GAAA,EAAAiG,IAC7BhG,EAAA4G,cAAAnG,MACAoG,YAAAjI,EAAAiC,UAAAd,GACA+G,YAAAlI,EAAAiC,UAAAd,EAAA,KAGA,OAAAC,GAEA+G,KAAA,SAAApI,GACA,OAAAF,EAAAqD,KAAAnD,IAEAqI,KAAA,SAAArI,GACA,IAAAqB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAuH,oBAAAtI,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAMA,OAJA,IAAAqB,EAAAiB,UACAjB,EAAAiH,qBAAAC,KAAAC,IAAA,MACAnH,EAAAiH,qBAAAtI,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAEAqB,GAEAoH,KAAA,SAAAzI,GACA,IAcAoB,EAbAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2H,QAAAzI,EAAAiC,UAAA,IAEAyG,EAAA,EAAAtH,EAAA/B,MAAA,GACAsJ,EAAA,EAAAvH,EAAA/B,MAAA,GACAuJ,EAAA,EAAAxH,EAAA/B,MAAA,GACAwJ,EAAA,GAAAzH,EAAA/B,MAAA,GACAyJ,EAAA,GAAA1H,EAAA/B,MAAA,GACA0J,EAAA,MAAA3H,EAAA/B,MAAA,GACA2J,EAAA,OAAA5H,EAAA/B,MAAA,GA+BA,OA5BA8B,EAAA,EACAuH,IACAvH,GAAA,EAEAC,EAAA6H,eAAAjJ,EAAAiC,UAAA,IACAd,GAAA,GAEAwH,IACAvH,EAAAqG,uBAAAzH,EAAAiC,UAAAd,GACAA,GAAA,GAEAyH,IACAxH,EAAA8H,sBAAAlJ,EAAAiC,UAAAd,GACAA,GAAA,GAEA0H,IACAzH,EAAA+H,kBAAAnJ,EAAAiC,UAAAd,GACAA,GAAA,GAEA2H,IACA1H,EAAAgI,mBAAApJ,EAAAiC,UAAAd,IAEA4H,IACA3H,EAAA2H,iBAAA,IAEAL,GAAAM,IACA5H,EAAAiI,sBAAA,GAEAjI,GAEAkI,KAAA,SAAAvJ,GACA,IACAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EACAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,OAqCA,OAnCA,IAAAM,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAqH,QAAAzI,EAAAiC,UAAAd,GACAA,GAAA,EACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,EAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAqH,QAAAzI,EAAAiC,UAAAd,GACAA,GAAA,EACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAEAA,GAAA,EACAA,GAAA,EACAC,EAAAmI,MAAAvJ,EAAAM,UAAAa,GACAA,GAAA,EACAC,EAAAoI,eAAAxJ,EAAAM,UAAAa,GACAA,GAAA,EAEAC,EAAAuE,OAAA3F,EAAA2D,SAAAxC,GAAAnB,EAAA2D,SAAAxC,EAAA,KACAA,GAAA,EACAA,GAAA,EACAC,EAAAwE,OAAA,IAAAC,YAAA9F,EAAAe,SAAAK,IAAA,KACAA,GAAA,GACAC,EAAAb,MAAAP,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAA,GAAA,EACAC,EAAAZ,OAAAR,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAC,GAEAqI,KAAA,SAAA1J,GACA,OACAwD,MAAA1E,EAAAkB,KAGA2J,KAAA,SAAA3J,GACA,OACAwD,MAAA1E,EAAAkB,KAGA4J,KAAA,SAAA5J,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2H,QAAAzI,EAAAiC,UAAA,GACA2H,8BAAA5J,EAAAiC,UAAA,GACAiH,sBAAAlJ,EAAAiC,UAAA,IACAkH,kBAAAnJ,EAAAiC,UAAA,IACA4H,gBAAA,EAAA9J,EAAA,IACA+J,oBAAA,IAAA/J,EAAA,QACAgK,qBAAA,GAAAhK,EAAA,QACAiK,oBAAA,GAAAjK,EAAA,QACAkK,4BAAA,EAAAlK,EAAA,KACAmK,0BAAAlK,EAAAM,UAAA,MAGA6J,KAAA,SAAApK,GACA,IAgBAqK,EAfAhJ,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAoF,YAEAlG,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YAEAiK,EAAA,EAAAjJ,EAAA/B,MAAA,GACAiL,EAAA,EAAAlJ,EAAA/B,MAAA,GACAkL,EAAA,EAAAnJ,EAAA/B,MAAA,GACAmL,EAAA,EAAApJ,EAAA/B,MAAA,GACAoL,EAAA,EAAArJ,EAAA/B,MAAA,GACAqL,EAAA,EAAAtJ,EAAA/B,MAAA,GACA4I,EAAAjI,EAAAiC,UAAA,GACAf,EAAA,EAiCA,IA9BAmJ,IAEAjJ,EAAAuJ,WAAA3K,EAAA4K,SAAA1J,GACAA,GAAA,GAKAoJ,GAAArC,IACAmC,GACA/K,MAAAD,EAAAW,EAAAe,SAAAI,IAAA,KAEAA,GAAA,EACAqJ,IACAH,EAAAxF,SAAA5E,EAAAiC,UAAAf,GACAA,GAAA,GAEAsJ,IACAJ,EAAAS,KAAA7K,EAAAiC,UAAAf,GACAA,GAAA,GAEAwJ,IAEAN,EAAAU,sBAAA9K,EAAAiC,UAAAf,GACAA,GAAA,GAEAE,EAAA8E,QAAArE,KAAAuI,GACAnC,KAGAA,KACAmC,KACAG,IACAH,EAAAxF,SAAA5E,EAAAiC,UAAAf,GACAA,GAAA,GAEAsJ,IACAJ,EAAAS,KAAA7K,EAAAiC,UAAAf,GACAA,GAAA,GAEAuJ,IACAL,EAAA/K,MAAAD,EAAAW,EAAAe,SAAAI,IAAA,IACAA,GAAA,GAEAwJ,IAEAN,EAAAU,sBAAA9K,EAAAiC,UAAAf,GACAA,GAAA,GAEAE,EAAA8E,QAAArE,KAAAuI,GAEA,OAAAhJ,GAEA2J,OAAA,SAAAhL,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,QAGAkK,KAAA,SAAAjL,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAmK,aAAAjL,EAAAM,UAAA,GACA4K,QAAA,IAAAC,aAAAnL,EAAAM,UAAA,GACAN,EAAAM,UAAA,GACAN,EAAAM,UAAA,SAYAzB,EAAA,SAAAkB,GAaA,IAZA,IAGAC,EACA6K,EACAO,EACAC,EACAC,EANAnK,EAAA,EACAC,KAQAmK,EAAA,IAAAC,YAAAzL,EAAA+C,QACA2I,EAAA,IAAA3J,WAAAyJ,GACAG,EAAA,EAAiBA,EAAA3L,EAAA+C,SAAiB4I,EAClCD,EAAAC,GAAA3L,EAAA2L,GAIA,IAFA1L,EAAA,IAAAC,SAAAsL,GAEApK,EAAApB,EAAAK,YAEAyK,EAAA7K,EAAAiC,UAAAd,GACAiK,EAAArM,EAAAgB,EAAAe,SAAAK,EAAA,EAAAA,EAAA,IACAkK,EAAAR,EAAA,EAAA1J,EAAA0J,EAAA9K,EAAAK,YAGAkL,GAAAzL,EAAAuL,IAAA,SAAArL,GACA,OACAA,UAEKA,EAAAe,SAAAK,EAAA,EAAAkK,KACLR,OACAS,EAAAF,OAGAhK,EAAAS,KAAAyJ,GACAnK,EAAAkK,EAEA,OAAAjK,GAaAtC,EAAA,SAAA6M,EAAA/K,GACA,IAAAgL,EAKA,OAJAhL,KAAA,EACAgL,EAAA,IAAAC,MAAA,EAAAjL,EAAA,GAAAkL,KAAA,KAGAH,EAAAI,IAAA,SAAAT,EAAAU,GAGA,OAAAJ,EAAAN,EAAAF,KAAA,KAGAa,OAAAC,KAAAZ,GAAAa,OAAA,SAAAC,GACA,eAAAA,GAAA,UAAAA,IAGOL,IAAA,SAAAK,GACP,IAAAC,EAAAT,EAAA,KAAAQ,EAAA,KACAE,EAAAhB,EAAAc,GAGA,GAAAE,aAAAxK,YAAAwK,aAAAzG,YAAA,CACA,IAAA0G,EAAAV,MAAAW,UAAAC,MAAAC,KAAA,IAAA5K,WAAAwK,EAAApM,OAAAoM,EAAAnM,WAAAmM,EAAAlM,aACA2L,IAAA,SAAAY,GACA,gBAAAA,EAAAC,SAAA,KAAAH,OAAA,KACeX,KAAA,IAAAe,MAAA,YACf,OAAAN,EAGA,IAAAA,EAAAzJ,OACAuJ,EAAA,IAAAE,EAAAT,KAAA,IAAAW,MAAA,OAEAJ,EAAA,MAAAE,EAAAR,IAAA,SAAAe,GACA,OAAAlB,EAAA,KAAAkB,IACWhB,KAAA,WAAAF,EAAA,MAPXS,EAAA,KAWA,OAAAA,EACAU,KAAAC,UAAAV,EAAA,QACAW,MAAA,MAAAlB,IAAA,SAAAe,EAAAd,GACA,WAAAA,EACAc,EAEAlB,EAAA,KAAAkB,IACehB,KAAA,QACRA,KAAA,OAGPR,EAAA/H,MAAA,KAAAzE,EAAAwM,EAAA/H,MAAA3C,EAAA,SACGkL,KAAA,OAGHoB,EAAAC,SACAC,QAAAvO,EACAwO,QAAAvO,EACAwO,UAAAzN,EAAAuI,KACAmF,UAAA1N,EAAA6D,KACA8J,UAAA3N,EAAA2I,KACAiF,UAAA5N,EAAAsK,KACAuD,UAAA7N,EAAAsG,2CC30BA,IAAAwH,EAAqB3O,EAAQ,QAI7BkO,EAAAC,QAAA,WACA,OAAArJ,OAAA0I,UAAAoB,MAHA,UAGAA,OACA9J,OAAA0I,UAAAoB,KAEAD,wCCAA,IACAE,EAAA9O,EAAA4F,EAAAmJ,EAAAC,EADAC,EAAiBhP,EAAQ,QAAcgP,WAIvCH,EAAA,SAAA9N,EAAAkO,GACA,IACA9M,EAAA0J,EAAAO,EAAAC,EAAA6C,EADAC,KAGA,IAAAF,EAAAnL,OAEA,YAGA,IAAA3B,EAAA,EAAaA,EAAApB,EAAAK,YACbyK,EAAAmD,EAAAjO,EAAAoB,IAAA,GACApB,EAAAoB,EAAA,OACApB,EAAAoB,EAAA,MACApB,EAAAoB,EAAA,IAEAiK,EAAArM,EAAAgB,EAAAe,SAAAK,EAAA,EAAAA,EAAA,IAEAkK,EAAAR,EAAA,EAAA1J,EAAA0J,EAAA9K,EAAAK,WAEAgL,IAAA6C,EAAA,KACA,IAAAA,EAAAnL,OAGAqL,EAAAtM,KAAA9B,EAAAe,SAAAK,EAAA,EAAAkK,KAGA6C,EAAAL,EAAA9N,EAAAe,SAAAK,EAAA,EAAAkK,GAAA4C,EAAAxB,MAAA,KACA3J,SACAqL,IAAAC,OAAAF,KAIA/M,EAAAkK,EAIA,OAAA8C,GAQApP,EAAA,SAAAmB,GACA,IAAAkB,EAAA,GAKA,OAJAA,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,KAsBAyE,EAAA,SAAA0J,GAMA,OAHAR,EAAAQ,GAAA,gBAGAC,OAAA,SAAAlN,EAAAsI,GACA,IAAAJ,EAAAjH,EAAA2J,EAAAuC,EAAAhK,EAGA,OADA+E,EAAAuE,EAAAnE,GAAA,cAIArH,EAAAiH,EAAA,GAEAiF,EAAAP,EAAA1E,EADA0C,EAAA,IAAA3J,EAAA,QACA,GACAiH,EAAA0C,EAAA,OACA1C,EAAA0C,EAAA,MACA1C,EAAA0C,EAAA,KAEAzH,EAAAsJ,EAAAnE,GAAA,qBAKAsC,EAAA,KADA3J,EAAAkC,EAAA,IACA,MACAnD,EAAAmN,GAAAP,EAAAzJ,EAAAyH,IAAA,GACAzH,EAAAyH,EAAA,OACAzH,EAAAyH,EAAA,MACAzH,EAAAyH,EAAA,IACA5K,GARA,MAXA,WAuCA0M,EAAA,SAAAnJ,EAAA6J,GACA,IAAAC,EAAAC,EAAAtN,EA6CA,OA1CAqN,EAAAZ,EAAAW,GAAA,gBAGAE,KAAAN,OAAAO,SAAAF,EAAA1C,IAAA,SAAAtC,GACA,OAAAoE,EAAApE,GAAA,SAAAsC,IAAA,SAAAvD,GACA,IAAA+F,EAAAK,EA+BA,OA5BAL,EAAAP,EAAAxF,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IAEAoG,EAAAjK,EAAA4J,IAAA,KAGAV,EAAApE,GAAA,SAAAsC,IAAA,SAAA3D,GACA,IAAA/F,EAAAjB,EAcA,OAZAiB,EAAA+F,EAAA,GACAhH,EAAA4M,EAAA5F,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IACA,IAAA/F,IACAjB,GAAAkH,KAAAC,IAAA,MACAnH,GAAA4M,EAAA5F,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MAEAhH,IACO,IACPyN,KAGAD,OAKAxN,EAAAkH,KAAAwG,IAAAH,MAAA,KAAAD,GACAK,SAAA3N,KAAA,GAcA2M,EAAA,SAAAM,GACA,IACAW,KAuBA,OAxBAnB,EAAAQ,GAAA,gBAGAY,QAAA,SAAAvF,GACA,IAAAwF,EAAArB,EAAAnE,GAAA,gBACAyF,EAAAtB,EAAAnE,GAAA,SAEAwF,EAAAD,QAAA,SAAAvL,EAAAsI,GACA,IAEAhM,EAEAyI,EAJA7E,EAAA7E,EAAA2E,EAAA5C,SAAA,OACAwI,EAAA6F,EAAAnD,GAKA,SAAApI,IAGA6E,EAAA,KAFAzI,EAAA,IAAAC,SAAAqJ,EAAApJ,OAAAoJ,EAAAnJ,WAAAmJ,EAAAlJ,aACAuD,SAAA,GACA3D,EAAAiC,UAAA,IAAAjC,EAAAiC,UAAA,IAEA+M,EAAAnN,KAAA4G,QAKAuG,GAGA9B,EAAAC,SACAU,UACA9O,YACA4F,YACAmJ,YACAkB,cAAAjB;;;;;ICvNA,SAAAqB,EAAAC,EAAAC,GACM,EAKN,SAAAC,EAAAC,GACA,OAAAvD,OAAAO,UAAAI,SAAAF,KAAA8C,GAAAC,QAAA,YAGA,SAAAC,EAAAC,EAAAC,GACA,QAAAxD,KAAAwD,EACAD,EAAAvD,GAAAwD,EAAAxD,GAEA,OAAAuD,EAGA,IAAAE,GACAhM,KAAA,aACAiM,YAAA,EACAC,OACAlM,MACAuH,KAAAtH,OACAkM,QAAA,YAGAC,OAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAAI,EAAAJ,MACAK,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,OACAtQ,EAAAoQ,EAAApQ,KAGAA,EAAAuQ,YAAA,EAaA,IATA,IAAAC,EAAAF,EAAAG,eACA3M,EAAAkM,EAAAlM,KACA4M,EAAAJ,EAAAK,OACAC,EAAAN,EAAAO,mBAAAP,EAAAO,qBAIAhQ,EAAA,EACAiQ,GAAA,EACAR,KAAAS,cAAAT,GAAA,CACA,IAAAU,EAAAV,EAAAW,QAAAX,EAAAW,OAAAjR,KACAgR,IACAA,EAAAT,YACA1P,IAEAmQ,EAAAE,WAAAZ,EAAAa,YACAL,GAAA,IAGAR,IAAAc,QAKA,GAHApR,EAAAqR,gBAAAxQ,EAGAiQ,EACA,OAAAN,EAAAI,EAAA9M,GAAA9D,EAAAqQ,GAGA,IAAAiB,EAAAZ,EAAAY,QAAAzQ,GAEA,IAAAyQ,EAEA,OADAV,EAAA9M,GAAA,KACA0M,IAGA,IAAAe,EAAAX,EAAA9M,GAAAwN,EAAAE,WAAA1N,GAIA9D,EAAAyR,sBAAA,SAAAC,EAAAC,GAEA,IAAAC,EAAAN,EAAAO,UAAA/N,IAEA6N,GAAAC,IAAAF,IACAC,GAAAC,IAAAF,KAEAJ,EAAAO,UAAA/N,GAAA6N,KAMK3R,EAAA8R,OAAA9R,EAAA8R,UAA6BC,SAAA,SAAA5B,EAAA6B,GAClCV,EAAAO,UAAA/N,GAAAkO,EAAAC,mBAKAjS,EAAA8R,KAAAxD,KAAA,SAAA0D,GACAA,EAAAhS,KAAAkR,WACAc,EAAAC,mBACAD,EAAAC,oBAAAX,EAAAO,UAAA/N,KAEAwN,EAAAO,UAAA/N,GAAAkO,EAAAC,oBAKA,IAAAC,EAAAlS,EAAAgQ,MAkBA,SAAAU,EAAA5P,GACA,cAAAA,GACA,gBACA,OACA,aACA,OAAAA,EACA,eACA,OAAAA,EAAA4P,GACA,cACA,OAAA5P,EAAA4P,EAAAyB,YAAAC,EACA,QACU,GA7BVC,CAAA3B,EAAAY,EAAAtB,OAAAsB,EAAAtB,MAAAlM,IACA,GAAAoO,EAAA,CAEAA,EAAAlS,EAAAgQ,MAAAL,KAA0CuC,GAE1C,IAAAI,EAAAtS,EAAAsS,MAAAtS,EAAAsS,UACA,QAAAjG,KAAA6F,EACAX,EAAAvB,OAAA3D,KAAAkF,EAAAvB,QACAsC,EAAAjG,GAAA6F,EAAA7F,UACA6F,EAAA7F,IAKA,OAAAmE,EAAAe,EAAAvR,EAAAqQ,KA2BA,IAAAkC,EAAA,WACAC,EAAA,SAAAC,GAA0C,UAAAA,EAAAC,WAAA,GAAA7F,SAAA,KAC1C8F,EAAA,OAKAC,EAAA,SAAAC,GAA6B,OAAAC,mBAAAD,GAC7BE,QAAAR,EAAAC,GACAO,QAAAJ,EAAA,MAEAK,EAAA/O,mBAuBA,SAAAgP,EAAAC,GACA,IAAAC,KAIA,OAFAD,IAAArF,OAAAkF,QAAA,kBAMAG,EAAAhG,MAAA,KAAAgC,QAAA,SAAAkE,GACA,IAAAC,EAAAD,EAAAL,QAAA,WAAA7F,MAAA,KACAb,EAAA2G,EAAAK,EAAAC,SACA3B,EAAA0B,EAAAtQ,OAAA,EACAiQ,EAAAK,EAAAtH,KAAA,MACA,UAEAqG,IAAAe,EAAA9G,GACA8G,EAAA9G,GAAAsF,EACK7F,MAAAyH,QAAAJ,EAAA9G,IACL8G,EAAA9G,GAAAvK,KAAA6P,GAEAwB,EAAA9G,IAAA8G,EAAA9G,GAAAsF,KAIAwB,GAnBAA,EAsBA,SAAAK,EAAAC,GACA,IAAAN,EAAAM,EAAAvH,OAAAC,KAAAsH,GAAAzH,IAAA,SAAAK,GACA,IAAAsF,EAAA8B,EAAApH,GAEA,QAAA+F,IAAAT,EACA,SAGA,UAAAA,EACA,OAAAiB,EAAAvG,GAGA,GAAAP,MAAAyH,QAAA5B,GAAA,CACA,IAAAtQ,KAWA,OAVAsQ,EAAAzC,QAAA,SAAAwE,QACAtB,IAAAsB,IAGA,OAAAA,EACArS,EAAAS,KAAA8Q,EAAAvG,IAEAhL,EAAAS,KAAA8Q,EAAAvG,GAAA,IAAAuG,EAAAc,OAGArS,EAAA0K,KAAA,KAGA,OAAA6G,EAAAvG,GAAA,IAAAuG,EAAAjB,KACGvF,OAAA,SAAAuH,GAAuB,OAAAA,EAAA5Q,OAAA,IAAuBgJ,KAAA,UACjD,OAAAoH,EAAA,IAAAA,EAAA,GAKA,IAAAS,EAAA,OAEA,SAAAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAAC,EAAAD,KAAAE,QAAAX,eAEAN,EAAAa,EAAAb,UACA,IACAA,EAAAkB,EAAAlB,GACG,MAAAmB,IAEH,IAAA3D,GACA5M,KAAAiQ,EAAAjQ,MAAAgQ,KAAAhQ,KACAwQ,KAAAR,KAAAQ,SACApG,KAAA6F,EAAA7F,MAAA,IACAqG,KAAAR,EAAAQ,MAAA,GACArB,QACAf,OAAA4B,EAAA5B,WACAqC,SAAAC,EAAAV,EAAAG,GACA5C,QAAAwC,EA2BA,SAAAA,GACA,IAAAX,KACA,KAAAW,GACAX,EAAAuB,QAAAZ,GACAA,IAAAxD,OAEA,OAAA6C,EAjCAwB,CAAAb,OAKA,OAHAE,IACAtD,EAAAsD,eAAAS,EAAAT,EAAAE,IAEAhI,OAAA0I,OAAAlE,GAGA,SAAA0D,EAAA7H,GACA,GAAAT,MAAAyH,QAAAhH,GACA,OAAAA,EAAAP,IAAAoI,GACG,GAAA7H,GAAA,iBAAAA,EAAA,CACH,IAAA4G,KACA,QAAA9G,KAAAE,EACA4G,EAAA9G,GAAA+H,EAAA7H,EAAAF,IAEA,OAAA8G,EAEA,OAAA5G,EAKA,IAAAsI,EAAAhB,EAAA,MACA3F,KAAA,MAYA,SAAAuG,EACArE,EACA0E,GAEA,IAAA5G,EAAAkC,EAAAlC,KACAgF,EAAA9C,EAAA8C,WAAwB,IAAAA,UACxB,IAAAqB,EAAAnE,EAAAmE,KAGA,YAHsB,IAAAA,MAAA,KAGtBrG,GAAA,MADA4G,GAAAtB,GACAN,GAAAqB,EAGA,SAAAQ,EAAAnF,EAAAC,GACA,OAAAA,IAAAgF,EACAjF,IAAAC,IACGA,IAEAD,EAAA1B,MAAA2B,EAAA3B,KAEH0B,EAAA1B,KAAA6E,QAAAa,EAAA,MAAA/D,EAAA3B,KAAA6E,QAAAa,EAAA,KACAhE,EAAA2E,OAAA1E,EAAA0E,MACAS,EAAApF,EAAAsD,MAAArD,EAAAqD,UAEGtD,EAAA9L,OAAA+L,EAAA/L,QAEH8L,EAAA9L,OAAA+L,EAAA/L,MACA8L,EAAA2E,OAAA1E,EAAA0E,MACAS,EAAApF,EAAAsD,MAAArD,EAAAqD,QACA8B,EAAApF,EAAAuC,OAAAtC,EAAAsC,UAOA,SAAA6C,EAAApF,EAAAC,GAKA,QAJA,IAAAD,eACA,IAAAC,WAGAD,IAAAC,EAAiB,OAAAD,IAAAC,EACjB,IAAAoF,EAAA/I,OAAAC,KAAAyD,GACAsF,EAAAhJ,OAAAC,KAAA0D,GACA,OAAAoF,EAAAlS,SAAAmS,EAAAnS,QAGAkS,EAAAE,MAAA,SAAA9I,GACA,IAAA+I,EAAAxF,EAAAvD,GACAgJ,EAAAxF,EAAAxD,GAEA,uBAAA+I,GAAA,iBAAAC,EACAL,EAAAI,EAAAC,GAEAtR,OAAAqR,KAAArR,OAAAsR,KA0BA,IAyIAC,EAzIAC,GAAAxR,OAAAmI,QACAsJ,GAAAzR,OAAA+H,OAEA2J,GACA3R,KAAA,aACAkM,OACA0F,IACArK,KAAAkK,EACAI,UAAA,GAEA7S,KACAuI,KAAAtH,OACAkM,QAAA,KAEA2F,MAAAC,QACAC,OAAAD,QACA9C,QAAA8C,QACAE,YAAAhS,OACAiS,iBAAAjS,OACAkS,OACA5K,KAAAmK,EACAvF,QAAA,UAGAC,OAAA,SAAAM,GACA,IAAA0F,EAAAC,KAEAlC,EAAAkC,KAAAC,QACAxE,EAAAuE,KAAAxF,OACAP,EAAA6D,EAAAoC,QAAAF,KAAAT,GAAA9D,EAAAuE,KAAAL,QACA/B,EAAA3D,EAAA2D,SACArD,EAAAN,EAAAM,MACA4F,EAAAlG,EAAAkG,KAEAC,KACAC,EAAAvC,EAAAE,QAAAsC,gBACAC,EAAAzC,EAAAE,QAAAwC,qBAEAC,EAAA,MAAAJ,EACA,qBACAA,EACAK,EAAA,MAAAH,EACA,2BACAA,EACAX,EAAA,MAAAI,KAAAJ,YACAa,EACAT,KAAAJ,YACAC,EAAA,MAAAG,KAAAH,iBACAa,EACAV,KAAAH,iBACAc,EAAA/C,EAAA7F,KACA2F,EAAA,KAAAE,EAAA,KAAAE,GACAvD,EAEA6F,EAAAP,GAAAjB,EAAAnD,EAAAkF,GACAP,EAAAR,GAAAI,KAAAP,MACAW,EAAAP,GA9EA,SAAApE,EAAAmF,GACA,OAGA,IAFAnF,EAAA1D,KAAA6E,QAAAa,EAAA,KAAAlE,QACAqH,EAAA7I,KAAA6E,QAAAa,EAAA,SAEAmD,EAAAxC,MAAA3C,EAAA2C,OAAAwC,EAAAxC,OAKA,SAAA3C,EAAAmF,GACA,QAAA1K,KAAA0K,EACA,KAAA1K,KAAAuF,GACA,SAGA,SAVAoF,CAAApF,EAAAsB,MAAA6D,EAAA7D,OAyEA+D,CAAArF,EAAAkF,GAEA,IAAAI,EAAA,SAAA7C,GACA8C,EAAA9C,KACA6B,EAAAnD,QACAkB,EAAAlB,QAAAgB,GAEAE,EAAAnS,KAAAiS,KAKAqD,GAAcC,MAAAF,GACdrL,MAAAyH,QAAA4C,KAAAF,OACAE,KAAAF,MAAA/G,QAAA,SAAAmF,GAAuC+C,EAAA/C,GAAA6C,IAEvCE,EAAAjB,KAAAF,OAAAiB,EAGA,IAAAlX,GACAsX,MAAAf,GAGA,SAAAJ,KAAArT,IACA9C,EAAAoX,KACApX,EAAAsS,OAAoBgE,YACf,CAEL,IAAA1G,EAqCA,SAAA2H,EAAAlH,GACA,GAAAA,EAEA,IADA,IAAAmH,EACApW,EAAA,EAAmBA,EAAAiP,EAAAtN,OAAqB3B,IAAA,CAExC,UADAoW,EAAAnH,EAAAjP,IACA0B,IACA,OAAA0U,EAEA,GAAAA,EAAAnH,WAAAmH,EAAAD,EAAAC,EAAAnH,WACA,OAAAmH,GA9CAD,CAAApB,KAAAsB,OAAAxH,SACA,GAAAL,EAEAA,EAAA8H,UAAA,GACA9H,EAAA5P,KAAA2P,KAAsCC,EAAA5P,OACtCoX,MACAxH,EAAA5P,KAAAsS,MAAA3C,KAA6CC,EAAA5P,KAAAsS,QAC7CgE,YAGAtW,EAAAoX,KAIA,OAAA5G,EAAA2F,KAAArT,IAAA9C,EAAAmW,KAAAsB,OAAAxH,WAIA,SAAAkH,EAAA9C,GAEA,KAAAA,EAAAsD,SAAAtD,EAAAuD,QAAAvD,EAAAwD,SAAAxD,EAAAyD,UAEAzD,EAAA0D,uBAEA3F,IAAAiC,EAAA2D,QAAA,IAAA3D,EAAA2D,QAAA,CAEA,GAAA3D,EAAA4D,eAAA5D,EAAA4D,cAAAC,aAAA,CACA,IAAAnB,EAAA1C,EAAA4D,cAAAC,aAAA,UACA,iBAAAC,KAAApB,GAAqC,OAMrC,OAHA1C,EAAA+D,gBACA/D,EAAA+D,kBAEA,GAoBA,SAAAC,EAAAC,GACA,IAAAD,EAAAE,WAAAjD,IAAAgD,EAAA,CACAD,EAAAE,WAAA,EAEAjD,EAAAgD,EAEA,IAAAE,EAAA,SAAA9M,GAA4B,YAAA0G,IAAA1G,GAE5B+M,EAAA,SAAA/G,EAAAgH,GACA,IAAAtX,EAAAsQ,EAAAiH,SAAAC,aACAJ,EAAApX,IAAAoX,EAAApX,IAAApB,OAAAwY,EAAApX,IAAAqQ,wBACArQ,EAAAsQ,EAAAgH,IAIAJ,EAAAO,OACAC,aAAA,WACAN,EAAArC,KAAAwC,SAAA1E,SACAkC,KAAApF,YAAAoF,KACAA,KAAA4C,QAAA5C,KAAAwC,SAAA1E,OACAkC,KAAA4C,QAAAzK,KAAA6H,MACAmC,EAAAU,KAAAC,eAAA9C,KAAA,SAAAA,KAAA4C,QAAAG,QAAAtH,UAEAuE,KAAApF,YAAAoF,KAAA/E,SAAA+E,KAAA/E,QAAAL,aAAAoF,KAEAsC,EAAAtC,YAEAgD,UAAA,WACAV,EAAAtC,SAIAjK,OAAAkN,eAAAd,EAAA7L,UAAA,WACA4M,IAAA,WAA0B,OAAAlD,KAAApF,YAAAgI,WAG1B7M,OAAAkN,eAAAd,EAAA7L,UAAA,UACA4M,IAAA,WAA0B,OAAAlD,KAAApF,YAAAuI,UAG1BhB,EAAA/G,UAAA,aAAAzB,GACAwI,EAAA/G,UAAA,aAAAkE,GAEA,IAAA8D,EAAAjB,EAAAxX,OAAA0Y,sBAEAD,EAAAE,iBAAAF,EAAAG,iBAAAH,EAAAI,kBAAAJ,EAAAK,SAKA,IAAAC,EAAA,oBAAAC,OAIA,SAAAC,EACAC,EACAC,EACAnE,GAEA,IAAAoE,EAAAF,EAAAG,OAAA,GACA,SAAAD,EACA,OAAAF,EAGA,SAAAE,GAAA,MAAAA,EACA,OAAAD,EAAAD,EAGA,IAAAI,EAAAH,EAAA/M,MAAA,KAKA4I,GAAAsE,IAAArX,OAAA,IACAqX,EAAAC,MAKA,IADA,IAAAC,EAAAN,EAAAjH,QAAA,UAAA7F,MAAA,KACA9L,EAAA,EAAiBA,EAAAkZ,EAAAvX,OAAqB3B,IAAA,CACtC,IAAAmZ,EAAAD,EAAAlZ,GACA,OAAAmZ,EACAH,EAAAC,MACK,MAAAE,GACLH,EAAAtY,KAAAyY,GASA,MAJA,KAAAH,EAAA,IACAA,EAAA1F,QAAA,IAGA0F,EAAArO,KAAA,KA0BA,SAAAyO,EAAAtM,GACA,OAAAA,EAAA6E,QAAA,aAGA,IAAA0H,EAAA3O,MAAAyH,SAAA,SAAAmH,GACA,wBAAAxO,OAAAO,UAAAI,SAAAF,KAAA+N,IAMAC,EAAAC,EACAC,EAAA/a,EACAgb,EAsGA,SAAAjI,EAAAsB,GACA,OAAA4G,EAAAjb,EAAA+S,EAAAsB,KAtGA6G,EAAAD,EACAE,EAAAC,EAOAC,EAAA,IAAAC,QAGA,UAOA,0GACArP,KAAA,UASA,SAAAjM,EAAA+S,EAAAsB,GAQA,IAPA,IAKAhB,EALAkI,KACAhP,EAAA,EACAJ,EAAA,EACAiC,EAAA,GACAoN,EAAAnH,KAAAoH,WAAA,IAGA,OAAApI,EAAAgI,EAAAK,KAAA3I,KAAA,CACA,IAAA4I,EAAAtI,EAAA,GACAuI,EAAAvI,EAAA,GACAhS,EAAAgS,EAAAlH,MAKA,GAJAiC,GAAA2E,EAAAnG,MAAAT,EAAA9K,GACA8K,EAAA9K,EAAAsa,EAAA1Y,OAGA2Y,EACAxN,GAAAwN,EAAA,OADA,CAKA,IAAAC,EAAA9I,EAAA5G,GACAK,EAAA6G,EAAA,GACArP,EAAAqP,EAAA,GACAyI,EAAAzI,EAAA,GACA0I,EAAA1I,EAAA,GACA2I,EAAA3I,EAAA,GACA4I,EAAA5I,EAAA,GAGAjF,IACAmN,EAAAvZ,KAAAoM,GACAA,EAAA,IAGA,IAAA8N,EAAA,MAAA1P,GAAA,MAAAqP,OAAArP,EACA2P,EAAA,MAAAH,GAAA,MAAAA,EACAI,EAAA,MAAAJ,GAAA,MAAAA,EACAP,EAAApI,EAAA,IAAAmI,EACAa,EAAAP,GAAAC,EAEAR,EAAAvZ,MACAgC,QAAAuI,IACAC,UAAA,GACAiP,YACAW,WACAD,SACAD,UACAD,aACAI,UAAAC,EAAAD,GAAAJ,EAAA,UAAAM,EAAAd,GAAA,SAcA,OATAtP,EAAA4G,EAAA9P,SACAmL,GAAA2E,EAAAyJ,OAAArQ,IAIAiC,GACAmN,EAAAvZ,KAAAoM,GAGAmN,EAoBA,SAAAkB,EAAA1J,GACA,OAAA2J,UAAA3J,GAAAE,QAAA,mBAAAN,GACA,UAAAA,EAAAC,WAAA,GAAA7F,SAAA,IAAA4P,gBAmBA,SAAA1B,EAAAM,GAKA,IAHA,IAAAqB,EAAA,IAAA5Q,MAAAuP,EAAAtY,QAGA3B,EAAA,EAAiBA,EAAAia,EAAAtY,OAAmB3B,IACpC,iBAAAia,EAAAja,KACAsb,EAAAtb,GAAA,IAAAga,OAAA,OAAAC,EAAAja,GAAA+a,QAAA,OAIA,gBAAA1I,EAAAkJ,GAMA,IALA,IAAAzO,EAAA,GACAlO,EAAAyT,MAEAb,GADA+J,OACAC,OAAAL,EAAAzJ,mBAEA1R,EAAA,EAAmBA,EAAAia,EAAAtY,OAAmB3B,IAAA,CACtC,IAAAyb,EAAAxB,EAAAja,GAEA,oBAAAyb,EAAA,CAMA,IACAtC,EADAhO,EAAAvM,EAAA6c,EAAA/Y,MAGA,SAAAyI,EAAA,CACA,GAAAsQ,EAAAX,SAAA,CAEAW,EAAAb,UACA9N,GAAA2O,EAAAvQ,QAGA,SAEA,UAAAwQ,UAAA,aAAAD,EAAA/Y,KAAA,mBAIA,GAAA2W,EAAAlO,GAAA,CACA,IAAAsQ,EAAAZ,OACA,UAAAa,UAAA,aAAAD,EAAA/Y,KAAA,kCAAAkJ,KAAAC,UAAAV,GAAA,KAGA,OAAAA,EAAAxJ,OAAA,CACA,GAAA8Z,EAAAX,SACA,SAEA,UAAAY,UAAA,aAAAD,EAAA/Y,KAAA,qBAIA,QAAAiZ,EAAA,EAAuBA,EAAAxQ,EAAAxJ,OAAkBga,IAAA,CAGzC,GAFAxC,EAAA3H,EAAArG,EAAAwQ,KAEAL,EAAAtb,GAAA+W,KAAAoC,GACA,UAAAuC,UAAA,iBAAAD,EAAA/Y,KAAA,eAAA+Y,EAAAV,QAAA,oBAAAnP,KAAAC,UAAAsN,GAAA,KAGArM,IAAA,IAAA6O,EAAAF,EAAAvQ,OAAAuQ,EAAAtB,WAAAhB,OApBA,CA4BA,GAFAA,EAAAsC,EAAAd,SA5EAS,UA4EAjQ,GA5EAwG,QAAA,iBAAAN,GACA,UAAAA,EAAAC,WAAA,GAAA7F,SAAA,IAAA4P,gBA2EA7J,EAAArG,IAEAmQ,EAAAtb,GAAA+W,KAAAoC,GACA,UAAAuC,UAAA,aAAAD,EAAA/Y,KAAA,eAAA+Y,EAAAV,QAAA,oBAAA5B,EAAA,KAGArM,GAAA2O,EAAAvQ,OAAAiO,QArDArM,GAAA2O,EAwDA,OAAA3O,GAUA,SAAAmO,EAAAxJ,GACA,OAAAA,EAAAE,QAAA,6BAAmC,QASnC,SAAAqJ,EAAAP,GACA,OAAAA,EAAA9I,QAAA,wBAUA,SAAAiK,EAAAC,EAAA9Q,GAEA,OADA8Q,EAAA9Q,OACA8Q,EASA,SAAA3d,EAAA6U,GACA,OAAAA,EAAA+I,UAAA,OAwEA,SAAAhC,EAAAG,EAAAlP,EAAAgI,GACAsG,EAAAtO,KACAgI,EAAiChI,GAAAgI,EACjChI,MAUA,IALA,IAAAgR,GAFAhJ,SAEAgJ,OACA7R,GAAA,IAAA6I,EAAA7I,IACAoF,EAAA,GAGAtP,EAAA,EAAiBA,EAAAia,EAAAtY,OAAmB3B,IAAA,CACpC,IAAAyb,EAAAxB,EAAAja,GAEA,oBAAAyb,EACAnM,GAAA2L,EAAAQ,OACK,CACL,IAAAvQ,EAAA+P,EAAAQ,EAAAvQ,QACAsP,EAAA,MAAAiB,EAAAV,QAAA,IAEAhQ,EAAArK,KAAA+a,GAEAA,EAAAZ,SACAL,GAAA,MAAAtP,EAAAsP,EAAA,MAaAlL,GANAkL,EAJAiB,EAAAX,SACAW,EAAAb,QAGA1P,EAAA,IAAAsP,EAAA,KAFA,MAAAtP,EAAA,IAAAsP,EAAA,MAKAtP,EAAA,IAAAsP,EAAA,KAOA,IAAAL,EAAAc,EAAAlI,EAAAoH,WAAA,KACA6B,EAAA1M,EAAAhE,OAAA6O,EAAAxY,UAAAwY,EAkBA,OAZA4B,IACAzM,GAAA0M,EAAA1M,EAAAhE,MAAA,GAAA6O,EAAAxY,QAAA2N,GAAA,MAAA6K,EAAA,WAIA7K,GADApF,EACA,IAIA6R,GAAAC,EAAA,SAAA7B,EAAA,MAGAyB,EAAA,IAAA5B,OAAA,IAAA1K,EAAApR,EAAA6U,IAAAhI,GAeA,SAAAyO,EAAA1M,EAAA/B,EAAAgI,GAQA,OAPAsG,EAAAtO,KACAgI,EAAiChI,GAAAgI,EACjChI,MAGAgI,QAEAjG,aAAAkN,OAlJA,SAAAlN,EAAA/B,GAEA,IAAAkR,EAAAnP,EAAAoP,OAAAxQ,MAAA,aAEA,GAAAuQ,EACA,QAAAjc,EAAA,EAAmBA,EAAAic,EAAAta,OAAmB3B,IACtC+K,EAAArK,MACAgC,KAAA1C,EACAkL,OAAA,KACAiP,UAAA,KACAW,UAAA,EACAD,QAAA,EACAD,SAAA,EACAD,UAAA,EACAI,QAAA,OAKA,OAAAa,EAAA9O,EAAA/B,GAgIAoR,CAAArP,EAAkD,GAGlDuM,EAAAvM,GAxHA,SAAAA,EAAA/B,EAAAgI,GAGA,IAFA,IAAAd,KAEAjS,EAAA,EAAiBA,EAAA8M,EAAAnL,OAAiB3B,IAClCiS,EAAAvR,KAAA8Y,EAAA1M,EAAA9M,GAAA+K,EAAAgI,GAAAmJ,QAKA,OAAAN,EAFA,IAAA5B,OAAA,MAAA/H,EAAAtH,KAAA,SAAAzM,EAAA6U,IAEAhI,GAgHAqR,CAA2C,EAA8B,EAAArJ,GArGzE,SAAAjG,EAAA/B,EAAAgI,GACA,OAAA+G,EAAApb,EAAAoO,EAAAiG,GAAAhI,EAAAgI,GAuGAsJ,CAA0C,EAA8B,EAAAtJ,GAExEwG,EAAA7a,MAAA+a,EACAF,EAAA+C,QAAA5C,EACAH,EAAAI,iBAAAC,EACAL,EAAAO,eAAAD,EAKA,IAAA0C,EAAAzR,OAAA0R,OAAA,MAEA,SAAAC,EACA3P,EACAiE,EACA2L,GAEA3L,QACA,IACA,IAAA4L,EACAJ,EAAAzP,KACAyP,EAAAzP,GAAAyM,EAAA+C,QAAAxP,IAKA,OAFAiE,EAAA6L,YAA2B7L,EAAA,GAAAA,EAAA6L,WAE3BD,EAAA5L,GAA2ByK,QAAA,IACxB,MAAAvI,GAIH,SACG,eAEHlC,EAAA,IAMA,SAAA8L,EACAC,EACAC,EACAC,EACAC,GAGA,IAAAC,EAAAH,MAEAI,EAAAH,GAAAlS,OAAA0R,OAAA,MAEAY,EAAAH,GAAAnS,OAAA0R,OAAA,MAEAM,EAAAhP,QAAA,SAAAwB,IAoBA,SAAA+N,EACAH,EACAC,EACAC,EACA9N,EACAJ,EACAoO,GAEA,IAAAxQ,EAAAwC,EAAAxC,KACA,IAAApK,EAAA4M,EAAA5M,KACM,EASN,IAAA6a,EAAAjO,EAAAiO,wBACA,IAAAC,EAuGA,SAAA1Q,EAAAoC,EAAA6M,GACAA,IAAgBjP,IAAA6E,QAAA,WAChB,SAAA7E,EAAA,GAAwB,OAAAA,EACxB,SAAAoC,EAAuB,OAAApC,EACvB,OAAAsM,EAAAlK,EAAA,SAAApC,GA3GA2Q,CACA3Q,EACAoC,EACAqO,EAAAxB,QAGA,kBAAAzM,EAAAoO,gBACAH,EAAAzB,UAAAxM,EAAAoO,eAGA,IAAAhL,GACA5F,KAAA0Q,EACAG,MA+EA,SAAA7Q,EAAAyQ,GACA,IAAAI,EAAApE,EAAAzM,KAAAyQ,GAQA,OAAAI,EAxFAC,CAAAJ,EAAAD,GACAnN,WAAAd,EAAAc,aAAqCvB,QAAAS,EAAAa,WACrCM,aACA/N,OACAwM,SACAoO,UACAO,SAAAvO,EAAAuO,SACAC,YAAAxO,EAAAwO,YACA5K,KAAA5D,EAAA4D,SACAtE,MAAA,MAAAU,EAAAV,SAEAU,EAAAc,WACAd,EAAAV,OACWC,QAAAS,EAAAV,QAGXU,EAAAL,UAgBAK,EAAAL,SAAAnB,QAAA,SAAAsI,GACA,IAAA2H,EAAAT,EACAlE,EAAAkE,EAAA,IAAAlH,EAAA,WACApF,EACAqM,EAAAH,EAAAC,EAAAC,EAAAhH,EAAA1D,EAAAqL,KAIA,QAAA/M,IAAA1B,EAAA0O,MAAA,CACA,IAAAC,EAAAvT,MAAAyH,QAAA7C,EAAA0O,OACA1O,EAAA0O,OACA1O,EAAA0O,OAEAC,EAAAnQ,QAAA,SAAAkQ,GACA,IAAAE,GACApR,KAAAkR,EACA/O,SAAAK,EAAAL,UAEAoO,EACAH,EACAC,EACAC,EACAc,EACAhP,EACAwD,EAAA5F,MAAA,OAKAqQ,EAAAzK,EAAA5F,QACAoQ,EAAAxc,KAAAgS,EAAA5F,MACAqQ,EAAAzK,EAAA5F,MAAA4F,GAGAhQ,IACA0a,EAAA1a,KACA0a,EAAA1a,GAAAgQ,IAvHA2K,CAAAH,EAAAC,EAAAC,EAAA9N,KAIA,QAAAtP,EAAA,EAAAme,EAAAjB,EAAAvb,OAAsC3B,EAAAme,EAAOne,IAC7C,MAAAkd,EAAAld,KACAkd,EAAAxc,KAAAwc,EAAAkB,OAAApe,EAAA,OACAme,IACAne,KAIA,OACAkd,WACAC,UACAC,WAwIA,SAAAiB,EACAC,EACA9N,EACAkE,EACA7B,GAEA,IAAA0H,EAAA,iBAAA+D,GAAwCxR,KAAAwR,GAAYA,EAEpD,GAAA/D,EAAAgE,YACA,OAAAhE,EACG,GAAAA,EAAA7X,KACH,OAAA6L,KAAoB+P,GAIpB,IAAA/D,EAAAzN,MAAAyN,EAAAxJ,QAAAP,EAAA,EACA+J,EAAAhM,KAAoBgM,IACpBgE,aAAA,EACA,IAAAxN,EAAAxC,OAAiCiC,EAAAO,QAAAwJ,EAAAxJ,QACjC,GAAAP,EAAA9N,KACA6X,EAAA7X,KAAA8N,EAAA9N,KACA6X,EAAAxJ,cACK,GAAAP,EAAAN,QAAAvO,OAAA,CACL,IAAA6c,EAAAhO,EAAAN,QAAAM,EAAAN,QAAAvO,OAAA,GAAAmL,KACAyN,EAAAzN,KAAA2P,EAAA+B,EAAAzN,EAAAP,EAAA,WACe,EAGf,OAAA+J,EAGA,IAAAkE,EAjrBA,SAAA3R,GACA,IAAAqG,EAAA,GACArB,EAAA,GAEA4M,EAAA5R,EAAAwB,QAAA,KACAoQ,GAAA,IACAvL,EAAArG,EAAAxB,MAAAoT,GACA5R,IAAAxB,MAAA,EAAAoT,IAGA,IAAAC,EAAA7R,EAAAwB,QAAA,KAMA,OALAqQ,GAAA,IACA7M,EAAAhF,EAAAxB,MAAAqT,EAAA,GACA7R,IAAAxB,MAAA,EAAAqT,KAIA7R,OACAgF,QACAqB,QA8pBAyL,CAAArE,EAAAzN,MAAA,IACA+R,EAAArO,KAAA1D,MAAA,IACAA,EAAA2R,EAAA3R,KACA6L,EAAA8F,EAAA3R,KAAA+R,EAAAnK,GAAA6F,EAAA7F,QACAmK,EAEA/M,EA/nCA,SACAA,EACAgN,EACAC,QAEA,IAAAD,UAEA,IACAE,EADAtgB,EAAAqgB,GAAAlN,EAEA,IACAmN,EAAAtgB,EAAAoT,GAAA,IACG,MAAAmB,GAEH+L,KAEA,QAAA/T,KAAA6T,EACAE,EAAA/T,GAAA6T,EAAA7T,GAEA,OAAA+T,EA6mCAC,CACAR,EAAA3M,MACAyI,EAAAzI,MACAe,KAAAE,QAAAlB,YAGAsB,EAAAoH,EAAApH,MAAAsL,EAAAtL,KAKA,OAJAA,GAAA,MAAAA,EAAA4F,OAAA,KACA5F,EAAA,IAAAA,IAIAoL,aAAA,EACAzR,OACAgF,QACAqB,QAQA,SAAA+L,EACApC,EACAjK,GAEA,IAAA7D,EAAA6N,EAAAC,GACAI,EAAAlO,EAAAkO,SACAC,EAAAnO,EAAAmO,QACAC,EAAApO,EAAAoO,QAMA,SAAA1R,EACA4S,EACAa,EACAvM,GAEA,IAAAD,EAAA0L,EAAAC,EAAAa,GAAA,EAAAtM,GACAnQ,EAAAiQ,EAAAjQ,KAEA,GAAAA,EAAA,CACA,IAAAgQ,EAAA0K,EAAA1a,GAIA,IAAAgQ,EAAoB,OAAA0M,EAAA,KAAAzM,GACpB,IAAA0M,EAAA3M,EAAAiL,MAAA5S,KACAC,OAAA,SAAAC,GAAgC,OAAAA,EAAA6P,WAChClQ,IAAA,SAAAK,GAA6B,OAAAA,EAAAvI,OAM7B,GAJA,iBAAAiQ,EAAA5B,SACA4B,EAAA5B,WAGAoO,GAAA,iBAAAA,EAAApO,OACA,QAAA9F,KAAAkU,EAAApO,SACA9F,KAAA0H,EAAA5B,SAAAsO,EAAA/Q,QAAArD,IAAA,IACA0H,EAAA5B,OAAA9F,GAAAkU,EAAApO,OAAA9F,IAKA,GAAAyH,EAEA,OADAC,EAAA7F,KAAA2P,EAAA/J,EAAA5F,KAAA6F,EAAA5B,QACAqO,EAAA1M,EAAAC,EAAAC,QAEK,GAAAD,EAAA7F,KAAA,CACL6F,EAAA5B,UACA,QAAA/Q,EAAA,EAAqBA,EAAAkd,EAAAvb,OAAqB3B,IAAA,CAC1C,IAAA8M,EAAAoQ,EAAAld,GACAsf,EAAAnC,EAAArQ,GACA,GAAAyS,EAAAD,EAAA3B,MAAAhL,EAAA7F,KAAA6F,EAAA5B,QACA,OAAAqO,EAAAE,EAAA3M,EAAAC,IAKA,OAAAwM,EAAA,KAAAzM,GAGA,SAAAkL,EACAnL,EACAC,GAEA,IAAA6M,EAAA9M,EAAAmL,SACAA,EAAA,mBAAA2B,EACAA,EAAA/M,EAAAC,EAAAC,EAAA,KAAAE,IACA2M,EAMA,GAJA,iBAAA3B,IACAA,GAAkB/Q,KAAA+Q,KAGlBA,GAAA,iBAAAA,EAMA,OAAAuB,EAAA,KAAAzM,GAGA,IAAAkJ,EAAAgC,EACAnb,EAAAmZ,EAAAnZ,KACAoK,EAAA+O,EAAA/O,KACAgF,EAAAa,EAAAb,MACAqB,EAAAR,EAAAQ,KACApC,EAAA4B,EAAA5B,OAKA,GAJAe,EAAA+J,EAAA4D,eAAA,SAAA5D,EAAA/J,QACAqB,EAAA0I,EAAA4D,eAAA,QAAA5D,EAAA1I,OACApC,EAAA8K,EAAA4D,eAAA,UAAA5D,EAAA9K,SAEArO,EAAA,CAEA0a,EAAA1a,GAIA,OAAAgJ,GACA6S,aAAA,EACA7b,OACAoP,QACAqB,OACApC,eACOC,EAAA2B,GACF,GAAA7F,EAAA,CAEL,IAAA0R,EAkFA,SAAA1R,EAAA4F,GACA,OAAAiG,EAAA7L,EAAA4F,EAAAxD,OAAAwD,EAAAxD,OAAApC,KAAA,QAnFA4S,CAAA5S,EAAA4F,GAIA,OAAAhH,GACA6S,aAAA,EACAzR,KAJA2P,EAAA+B,EAAAzN,GAKAe,QACAqB,aACOnC,EAAA2B,GAKP,OAAAyM,EAAA,KAAAzM,GAuBA,SAAAyM,EACA1M,EACAC,EACAC,GAEA,OAAAF,KAAAmL,SACAA,EAAAnL,EAAAE,GAAAD,GAEAD,KAAA4K,QA3BA,SACA5K,EACAC,EACA2K,GAEA,IACAqC,EAAAjU,GACA6S,aAAA,EACAzR,KAHA2P,EAAAa,EAAA3K,EAAA5B,UAKA,GAAA4O,EAAA,CACA,IAAAzP,EAAAyP,EAAAzP,QACA0P,EAAA1P,IAAAvO,OAAA,GAEA,OADAgR,EAAA5B,OAAA4O,EAAA5O,OACAqO,EAAAQ,EAAAjN,GAEA,OAAAyM,EAAA,KAAAzM,GAYAqL,CAAAtL,EAAAC,EAAAD,EAAA4K,SAEA7K,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,OACAnH,QACAmU,UAxJA,SAAA/C,GACAD,EAAAC,EAAAI,EAAAC,EAAAC,KA2JA,SAAAmC,EACA5B,EACA7Q,EACAiE,GAEA,IAAAsJ,EAAAvN,EAAApB,MAAAiS,GAEA,IAAAtD,EACA,SACG,IAAAtJ,EACH,SAGA,QAAA/Q,EAAA,EAAA8f,EAAAzF,EAAA1Y,OAAiC3B,EAAA8f,IAAS9f,EAAA,CAC1C,IAAAiL,EAAA0S,EAAA5S,KAAA/K,EAAA,GACAuQ,EAAA,iBAAA8J,EAAAra,GAAA6C,mBAAAwX,EAAAra,IAAAqa,EAAAra,GACAiL,IAEA8F,EAAA9F,EAAAvI,MAAA,aAAA6N,GAIA,SASA,IAAAwP,EAAAjV,OAAA0R,OAAA,MAEA,SAAAwD,IAGAtH,OAAAZ,QAAAmI,cAA+BhV,IAAAiV,MAAqB,GAAAxH,OAAA/F,SAAAuC,KAAAvD,QAAA+G,OAAA/F,SAAAwN,OAAA,KACpDzH,OAAA0H,iBAAA,oBAAAnN,GAuJA,IAAAhI,EAtJAoV,KACApN,EAAAqN,OAAArN,EAAAqN,MAAArV,MAqJAA,EApJAgI,EAAAqN,MAAArV,IAqJAsV,GAAAtV,KAhJA,SAAAuV,GACA3N,EACAyB,EACAmM,EACAC,GAEA,GAAA7N,EAAA8N,IAAA,CAIA,IAAAC,EAAA/N,EAAAE,QAAA8N,eACAD,GASA/N,EAAA8N,IAAAG,UAAA,WACA,IAAAC,EA+BA,WACA,IAAA9V,EAAAiV,KACA,GAAAjV,EACA,OAAA8U,EAAA9U,GAlCA+V,GACAC,EAAAL,EAAArV,KAAAsH,EAAAyB,EAAAmM,EAAAC,EAAAK,EAAA,MAEAE,IAIA,mBAAAA,EAAAC,KACAD,EAAAC,KAAA,SAAAD,GACAE,GAAA,EAAAJ,KACOK,MAAA,SAAA/S,GACK,IAKZ8S,GAAAF,EAAAF,OAKA,SAAAV,KACA,IAAApV,EAAAiV,KACAjV,IACA8U,EAAA9U,IACAsH,EAAAmG,OAAA2I,YACAC,EAAA5I,OAAA6I,cAsBA,SAAAC,GAAAnP,GACA,OAAAoP,GAAApP,EAAAE,IAAAkP,GAAApP,EAAAiP,GAGA,SAAAI,GAAArP,GACA,OACAE,EAAAkP,GAAApP,EAAAE,GAAAF,EAAAE,EAAAmG,OAAA2I,YACAC,EAAAG,GAAApP,EAAAiP,GAAAjP,EAAAiP,EAAA5I,OAAA6I,aAWA,SAAAE,GAAAnX,GACA,uBAAAA,EAGA,SAAA6W,GAAAF,EAAAF,GACA,IAZA1O,EAYAsP,EAAA,iBAAAV,EACA,GAAAU,GAAA,iBAAAV,EAAAW,SAAA,CACA,IAAAC,EAAAC,SAAAC,cAAAd,EAAAW,UACA,GAAAC,EAAA,CACA,IAAA9hB,EAAAkhB,EAAAlhB,QAAA,iBAAAkhB,EAAAlhB,OAAAkhB,EAAAlhB,UAEAghB,EAvCA,SAAAc,EAAA9hB,GACA,IACAiiB,EADAF,SAAAG,gBACAC,wBACAC,EAAAN,EAAAK,wBACA,OACA3P,EAAA4P,EAAAC,KAAAJ,EAAAI,KAAAriB,EAAAwS,EACA+O,EAAAa,EAAAE,IAAAL,EAAAK,IAAAtiB,EAAAuhB,GAiCAgB,CAAAT,EADA9hB,GAfAwS,EAAAkP,IAFApP,EAiBAtS,GAfAwS,GAAAF,EAAAE,EAAA,EACA+O,EAAAG,GAAApP,EAAAiP,GAAAjP,EAAAiP,EAAA,SAgBKE,GAAAP,KACLF,EAAAW,GAAAT,SAEGU,GAAAH,GAAAP,KACHF,EAAAW,GAAAT,IAGAF,GACArI,OAAA6J,SAAAxB,EAAAxO,EAAAwO,EAAAO,GAMA,IACAkB,GADAC,GAAAhK,MAIA,KAHA+J,GAAA9J,OAAAgK,UAAAC,WAGArU,QAAA,oBAAAkU,GAAAlU,QAAA,iBACA,IAAAkU,GAAAlU,QAAA,mBACA,IAAAkU,GAAAlU,QAAA,YACA,IAAAkU,GAAAlU,QAAA,mBAKAoK,OAAAZ,SAAA,cAAAY,OAAAZ,SAIA8K,GAAAnK,GAAAC,OAAAmK,aAAAnK,OAAAmK,YAAAC,IACApK,OAAAmK,YACA7kB,KAEAuiB,GAAAwC,KAEA,SAAAA,KACA,OAAAH,GAAAE,MAAAE,QAAA,GAGA,SAAA9C,KACA,OAAAK,GAOA,SAAA0C,GAAAC,EAAAvR,GACA0O,KAGA,IAAAvI,EAAAY,OAAAZ,QACA,IACAnG,EACAmG,EAAAmI,cAA4BhV,IAAAsV,IAAY,GAAA2C,IAExC3C,GAAAwC,KACAjL,EAAAmL,WAAyBhY,IAAAsV,IAAY,GAAA2C,IAElC,MAAAjQ,GACHyF,OAAA/F,SAAAhB,EAAA,oBAAAuR,IAIA,SAAAjD,GAAAiD,GACAD,GAAAC,GAAA,GAKA,SAAAC,GAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,SAAA1Y,GACAA,GAAAuY,EAAAzhB,OACA2hB,IAEAF,EAAAvY,GACAwY,EAAAD,EAAAvY,GAAA,WACA0Y,EAAA1Y,EAAA,KAGA0Y,EAAA1Y,EAAA,IAIA0Y,EAAA,GAKA,SAAAC,GAAAtT,GACA,gBAAAoE,EAAAmM,EAAAlG,GACA,IAAAkJ,GAAA,EACAC,EAAA,EACAC,EAAA,KAEAC,GAAA1T,EAAA,SAAA2T,EAAA9U,EAAArD,EAAAT,GAMA,sBAAA4Y,QAAA7S,IAAA6S,EAAAC,IAAA,CACAL,GAAA,EACAC,IAEA,IA0BA3R,EA1BAkD,EAAA8O,GAAA,SAAAC,GAuEA,IAAA3R,MAtEA2R,GAuEAC,YAAAC,IAAA,WAAA7R,EAAA8R,OAAAC,gBAtEAJ,IAAAnV,SAGAgV,EAAAQ,SAAA,mBAAAL,EACAA,EACA9P,EAAA3F,OAAAyV,GACAtY,EAAA0E,WAAAnF,GAAA+Y,IACAN,GACA,GACAnJ,MAIA+J,EAAAP,GAAA,SAAAQ,GACA,IAAAC,EAAA,qCAAAvZ,EAAA,KAAAsZ,EAEAZ,IACAA,EAAAvV,EAAAmW,GACAA,EACA,IAAAE,MAAAD,GACAjK,EAAAoJ,MAKA,IACA5R,EAAA8R,EAAA5O,EAAAqP,GACS,MAAArR,GACTqR,EAAArR,GAEA,GAAAlB,EACA,sBAAAA,EAAAmP,KACAnP,EAAAmP,KAAAjM,EAAAqP,OACW,CAEX,IAAAI,EAAA3S,EAAA5B,UACAuU,GAAA,mBAAAA,EAAAxD,MACAwD,EAAAxD,KAAAjM,EAAAqP,OAOAb,GAAoBlJ,KAIpB,SAAAqJ,GACA1T,EACAmT,GAEA,OAAAsB,GAAAzU,EAAAtF,IAAA,SAAAyP,GACA,OAAAvP,OAAAC,KAAAsP,EAAAjK,YAAAxF,IAAA,SAAAK,GAAyD,OAAAoY,EACzDhJ,EAAAjK,WAAAnF,GACAoP,EAAA5J,UAAAxF,GACAoP,EAAApP,QAKA,SAAA0Z,GAAArL,GACA,OAAA5O,MAAAW,UAAA4B,OAAAO,SAAA8L,GAGA,IAAA4K,GACA,mBAAAC,QACA,iBAAAA,OAAAC,YAUA,SAAAL,GAAAV,GACA,IAAAuB,GAAA,EACA,kBAEA,IADA,IAAAC,KAAA/E,EAAAgF,UAAAnjB,OACAme,KAAA+E,EAAA/E,GAAAgF,UAAAhF,GAEA,IAAA8E,EAEA,OADAA,GAAA,EACAvB,EAAA7V,MAAAuH,KAAA8P,IAMA,IAAAE,GAAA,SAAAlS,EAAAgG,GACA9D,KAAAlC,SACAkC,KAAA8D,KAkKA,SAAAA,GACA,IAAAA,EACA,GAAAJ,EAAA,CAEA,IAAAuM,EAAAlD,SAAAC,cAAA,QAGAlJ,GAFAA,EAAAmM,KAAAlO,aAAA,cAEAnF,QAAA,8BAEAkH,EAAA,IAIA,MAAAA,EAAAE,OAAA,KACAF,EAAA,IAAAA,GAGA,OAAAA,EAAAlH,QAAA,UAnLAsT,CAAApM,GAEA9D,KAAAvE,QAAAiD,EACAsB,KAAA2O,QAAA,KACA3O,KAAAmQ,OAAA,EACAnQ,KAAAoQ,YACApQ,KAAAqQ,iBACArQ,KAAAsQ,aAiMA,SAAAC,GACAC,EACA7iB,EACA8iB,EACAC,GAEA,IAAAC,EAAA9B,GAAA2B,EAAA,SAAA1B,EAAA8B,EAAAja,EAAAT,GACA,IAAA2a,EAUA,SACA/B,EACA5Y,GAEA,mBAAA4Y,IAEAA,EAAA3P,EAAA3F,OAAAsV,IAEA,OAAAA,EAAA9Q,QAAA9H,GAlBA4a,CAAAhC,EAAAnhB,GACA,GAAAkjB,EACA,OAAAlb,MAAAyH,QAAAyT,GACAA,EAAAhb,IAAA,SAAAgb,GAAsC,OAAAJ,EAAAI,EAAAD,EAAAja,EAAAT,KACtCua,EAAAI,EAAAD,EAAAja,EAAAT,KAGA,OAAA0Z,GAAAc,EAAAC,EAAAD,UAAAC,GAsBA,SAAAI,GAAAF,EAAAD,GACA,GAAAA,EACA,kBACA,OAAAC,EAAApY,MAAAmY,EAAAb,YArOAC,GAAA1Z,UAAA0a,OAAA,SAAAzC,GACAvO,KAAAuO,MAGAyB,GAAA1Z,UAAA2a,QAAA,SAAA1C,EAAA2C,GACAlR,KAAAmQ,MACA5B,KAEAvO,KAAAoQ,SAAAzkB,KAAA4iB,GACA2C,GACAlR,KAAAqQ,cAAA1kB,KAAAulB,KAKAlB,GAAA1Z,UAAA6a,QAAA,SAAAD,GACAlR,KAAAsQ,SAAA3kB,KAAAulB,IAGAlB,GAAA1Z,UAAA8a,aAAA,SAAAxT,EAAAyT,EAAAC,GACA,IAAAvR,EAAAC,KAEAzF,EAAAyF,KAAAlC,OAAAnH,MAAAiH,EAAAoC,KAAAvE,SACAuE,KAAAuR,kBAAAhX,EAAA,WACAwF,EAAAyR,YAAAjX,GACA8W,KAAA9W,GACAwF,EAAA0R,YAGA1R,EAAAoQ,QACApQ,EAAAoQ,OAAA,EACApQ,EAAAqQ,SAAArX,QAAA,SAAAwV,GAA6CA,EAAAhU,OAE1C,SAAAjB,GACHgY,GACAA,EAAAhY,GAEAA,IAAAyG,EAAAoQ,QACApQ,EAAAoQ,OAAA,EACApQ,EAAAsQ,cAAAtX,QAAA,SAAAwV,GAAkDA,EAAAjV,SAKlD0W,GAAA1Z,UAAAib,kBAAA,SAAAhX,EAAA8W,EAAAC,GACA,IAAAvR,EAAAC,KAEAvE,EAAAuE,KAAAvE,QACAiW,EAAA,SAAApY,GACAD,EAAAC,KACAyG,EAAAuQ,SAAA1jB,OACAmT,EAAAuQ,SAAAvX,QAAA,SAAAwV,GAA+CA,EAAAjV,MAE/CJ,IACAyY,QAAA/C,MAAAtV,KAGAgY,KAAAhY,IAEA,GACAsF,EAAArE,EAAAkB,IAEAlB,EAAAY,QAAAvO,SAAA6O,EAAAN,QAAAvO,OAGA,OADAoT,KAAAyR,YACAC,IAGA,IAAAzX,EAwGA,SACAwB,EACA+J,GAEA,IAAAva,EACA2mB,EAAAxf,KAAAwf,IAAAnW,EAAA7O,OAAA4Y,EAAA5Y,QACA,IAAA3B,EAAA,EAAaA,EAAA2mB,GACbnW,EAAAxQ,KAAAua,EAAAva,GADsBA,KAKtB,OACA4mB,QAAArM,EAAAjP,MAAA,EAAAtL,GACA6mB,UAAAtM,EAAAjP,MAAAtL,GACA8mB,YAAAtW,EAAAlF,MAAAtL,IAtHA+mB,CAAAhS,KAAAvE,QAAAN,QAAAZ,EAAAY,SACA0W,EAAA5X,EAAA4X,QACAE,EAAA9X,EAAA8X,YACAD,EAAA7X,EAAA6X,UAEAzD,KAAAnW,OAiJA,SAAA6Z,GACA,OAAAxB,GAAAwB,EAAA,mBAAAhB,IAAA,GAhJAkB,CAAAF,GAEA/R,KAAAlC,OAAAoU,YAiJA,SAAAL,GACA,OAAAtB,GAAAsB,EAAA,oBAAAd,IAhJAoB,CAAAN,GAEAC,EAAAjc,IAAA,SAAAyP,GAAgC,OAAAA,EAAAyD,cAEhC0F,GAAAqD,IAGA9R,KAAA2O,QAAApU,EACA,IAAA6X,EAAA,SAAAzW,EAAA6J,GACA,GAAAzF,EAAA4O,UAAApU,EACA,OAAAmX,IAEA,IACA/V,EAAApB,EAAAkB,EAAA,SAAA8D,IACA,IAAAA,GAAAlG,EAAAkG,IAEAQ,EAAA0R,WAAA,GACAC,EAAAnS,IAEA,iBAAAA,GACA,iBAAAA,IACA,iBAAAA,EAAAxH,MACA,iBAAAwH,EAAA5R,OAIA+jB,IACA,iBAAAnS,KAAA3C,QACAmD,EAAAnD,QAAA2C,GAEAQ,EAAApU,KAAA4T,IAIAiG,EAAAjG,KAGK,MAAArB,GACLwT,EAAAxT,KAIAkQ,GAAAC,EAAA+D,EAAA,WACA,IAAAC,KAMAjE,GA0GA,SACA0D,EACAQ,EACAC,GAEA,OAAAhC,GAAAuB,EAAA,4BAAAjB,EAAA7W,EAAArD,EAAAT,GACA,OAIA,SACA2a,EACAla,EACAT,EACAoc,EACAC,GAEA,gBAAAhT,EAAAmM,EAAAlG,GACA,OAAAqL,EAAAtR,EAAAmM,EAAA,SAAA6C,GACA/I,EAAA+I,GACA,mBAAAA,GACA+D,EAAA3mB,KAAA,YAaA,SAAA6mB,EACAjE,EACA7S,EACAxF,EACAqc,GAGA7W,EAAAxF,KACAwF,EAAAxF,GAAAuc,kBAEAlE,EAAA7S,EAAAxF,IACGqc,KACHG,WAAA,WACAF,EAAAjE,EAAA7S,EAAAxF,EAAAqc,IACK,IArBLC,CAAAjE,EAAA5X,EAAA+E,UAAAxF,EAAAqc,QArBAI,CAAA9B,EAAAla,EAAAT,EAAAoc,EAAAC,KAlHAK,CAAAd,EAAAO,EAHA,WAA+B,OAAAtS,EAAAtE,UAAAlB,IAI/BrC,OAAA6H,EAAAjC,OAAA+U,cACAT,EAAA,WACA,GAAArS,EAAA4O,UAAApU,EACA,OAAAmX,IAEA3R,EAAA4O,QAAA,KACA0C,EAAA9W,GACAwF,EAAAjC,OAAA8N,KACA7L,EAAAjC,OAAA8N,IAAAG,UAAA,WACAsG,EAAAtZ,QAAA,SAAAwV,GAA8CA,aAO9CyB,GAAA1Z,UAAAkb,YAAA,SAAAjX,GACA,IAAAuY,EAAA9S,KAAAvE,QACAuE,KAAAvE,QAAAlB,EACAyF,KAAAuO,IAAAvO,KAAAuO,GAAAhU,GACAyF,KAAAlC,OAAAiV,WAAAha,QAAA,SAAA4C,GACAA,KAAApB,EAAAuY,MA4IA,IAAAE,GAAA,SAAAC,GACA,SAAAD,EAAAlV,EAAAgG,GACA,IAAA/D,EAAAC,KAEAiT,EAAAzc,KAAAwJ,KAAAlC,EAAAgG,GAEA,IAAAoP,EAAApV,EAAAE,QAAA8N,eACAqH,EAAAzF,IAAAwF,EAEAC,GACAlI,IAGA,IAAAmI,EAAAC,GAAArT,KAAA8D,MACAH,OAAA0H,iBAAA,oBAAAnN,GACA,IAAAzC,EAAAsE,EAAAtE,QAIAmC,EAAAyV,GAAAtT,EAAA+D,MACA/D,EAAAtE,UAAAiD,GAAAd,IAAAwV,GAIArT,EAAAqR,aAAAxT,EAAA,SAAArD,GACA4Y,GACA1H,GAAA3N,EAAAvD,EAAAkB,GAAA,OAiDA,OA3CAwX,IAAAD,EAAAM,UAAAL,GACAD,EAAA1c,UAAAP,OAAA0R,OAAAwL,KAAA3c,WACA0c,EAAA1c,UAAAid,YAAAP,EAEAA,EAAA1c,UAAAkd,GAAA,SAAAC,GACA9P,OAAAZ,QAAAyQ,GAAAC,IAGAT,EAAA1c,UAAA3K,KAAA,SAAAiS,EAAAyT,EAAAC,GACA,IAAAvR,EAAAC,KAGA0T,EADA1T,KACAvE,QACAuE,KAAAoR,aAAAxT,EAAA,SAAArD,GACA2T,GAAA7J,EAAAtE,EAAA+D,KAAAvJ,EAAA8D,WACAoN,GAAA1L,EAAAjC,OAAAvD,EAAAmZ,GAAA,GACArC,KAAA9W,IACK+W,IAGL0B,EAAA1c,UAAAsG,QAAA,SAAAgB,EAAAyT,EAAAC,GACA,IAAAvR,EAAAC,KAGA0T,EADA1T,KACAvE,QACAuE,KAAAoR,aAAAxT,EAAA,SAAArD,GACA2Q,GAAA7G,EAAAtE,EAAA+D,KAAAvJ,EAAA8D,WACAoN,GAAA1L,EAAAjC,OAAAvD,EAAAmZ,GAAA,GACArC,KAAA9W,IACK+W,IAGL0B,EAAA1c,UAAAmb,UAAA,SAAA9lB,GACA,GAAA0nB,GAAArT,KAAA8D,QAAA9D,KAAAvE,QAAA4C,SAAA,CACA,IAAA5C,EAAA4I,EAAArE,KAAA8D,KAAA9D,KAAAvE,QAAA4C,UACA1S,EAAAuiB,GAAAzS,GAAAyP,GAAAzP,KAIAuX,EAAA1c,UAAAqd,mBAAA,WACA,OAAAN,GAAArT,KAAA8D,OAGAkP,EA3EA,CA4EChD,IAED,SAAAqD,GAAAvP,GACA,IAAA/L,EAAA6b,UAAAjQ,OAAA/F,SAAAiW,UAIA,OAHA/P,GAAA,IAAA/L,EAAAwB,QAAAuK,KACA/L,IAAAxB,MAAAuN,EAAAlX,UAEAmL,GAAA,KAAA4L,OAAA/F,SAAAkW,OAAAnQ,OAAA/F,SAAAQ,KAKA,IAAA2V,GAAA,SAAAd,GACA,SAAAc,EAAAjW,EAAAgG,EAAAkQ,GACAf,EAAAzc,KAAAwJ,KAAAlC,EAAAgG,GAEAkQ,GAiFA,SAAAlQ,GACA,IAAAlG,EAAAyV,GAAAvP,GACA,WAAA9B,KAAApE,GAIA,OAHA+F,OAAA/F,SAAAhB,QACAyH,EAAAP,EAAA,KAAAlG,KAEA,EAvFAqW,CAAAjU,KAAA8D,OAGAoQ,KA2EA,OAxEAjB,IAAAc,EAAAT,UAAAL,GACAc,EAAAzd,UAAAP,OAAA0R,OAAAwL,KAAA3c,WACAyd,EAAAzd,UAAAid,YAAAQ,EAIAA,EAAAzd,UAAA6d,eAAA,WACA,IAAApU,EAAAC,KAGAkT,EADAlT,KAAAlC,OACAE,QAAA8N,eACAqH,EAAAzF,IAAAwF,EAEAC,GACAlI,IAGAtH,OAAA0H,iBAAAqC,GAAA,mCACA,IAAAjS,EAAAsE,EAAAtE,QACAyY,MAGAnU,EAAAqR,aAAAgD,KAAA,SAAA7Z,GACA4Y,GACA1H,GAAA1L,EAAAjC,OAAAvD,EAAAkB,GAAA,GAEAiS,IACA2G,GAAA9Z,EAAA8D,eAMA0V,EAAAzd,UAAA3K,KAAA,SAAAiS,EAAAyT,EAAAC,GACA,IAAAvR,EAAAC,KAGA0T,EADA1T,KACAvE,QACAuE,KAAAoR,aAAAxT,EAAA,SAAArD,GACA+Z,GAAA/Z,EAAA8D,UACAoN,GAAA1L,EAAAjC,OAAAvD,EAAAmZ,GAAA,GACArC,KAAA9W,IACK+W,IAGLyC,EAAAzd,UAAAsG,QAAA,SAAAgB,EAAAyT,EAAAC,GACA,IAAAvR,EAAAC,KAGA0T,EADA1T,KACAvE,QACAuE,KAAAoR,aAAAxT,EAAA,SAAArD,GACA8Z,GAAA9Z,EAAA8D,UACAoN,GAAA1L,EAAAjC,OAAAvD,EAAAmZ,GAAA,GACArC,KAAA9W,IACK+W,IAGLyC,EAAAzd,UAAAkd,GAAA,SAAAC,GACA9P,OAAAZ,QAAAyQ,GAAAC,IAGAM,EAAAzd,UAAAmb,UAAA,SAAA9lB,GACA,IAAA8P,EAAAuE,KAAAvE,QAAA4C,SACA+V,OAAA3Y,IACA9P,EAAA2oB,GAAA7Y,GAAA4Y,GAAA5Y,KAIAsY,EAAAzd,UAAAqd,mBAAA,WACA,OAAAS,MAGAL,EAlFA,CAmFC/D,IAYD,SAAAkE,KACA,IAAAnc,EAAAqc,KACA,YAAArc,EAAAiM,OAAA,KAGAqQ,GAAA,IAAAtc,IACA,GAGA,SAAAqc,KAGA,IAAAjU,EAAAwD,OAAA/F,SAAAuC,KACArK,EAAAqK,EAAA5G,QAAA,KAEA,GAAAzD,EAAA,EAAkB,SAMlB,IAAAye,GAJApU,IAAA5J,MAAAT,EAAA,IAIAyD,QAAA,KACA,GAAAgb,EAAA,GACA,IAAA5K,EAAAxJ,EAAA5G,QAAA,KACyB4G,EAAzBwJ,GAAA,EAAyBiK,UAAAzT,EAAA5J,MAAA,EAAAoT,IAAAxJ,EAAA5J,MAAAoT,GACfiK,UAAAzT,QAEVoU,GAAA,IAA2BpU,EAAAyT,UAAAzT,EAAA5J,MAAA,EAAAge,IAAApU,EAAA5J,MAAAge,IAG3B,OAAApU,EAGA,SAAAqU,GAAAzc,GACA,IAAAoI,EAAAwD,OAAA/F,SAAAuC,KACAlV,EAAAkV,EAAA5G,QAAA,KAEA,OADAtO,GAAA,EAAAkV,EAAA5J,MAAA,EAAAtL,GAAAkV,GACA,IAAApI,EAGA,SAAAuc,GAAAvc,GACA2V,GACAQ,GAAAsG,GAAAzc,IAEA4L,OAAA/F,SAAAQ,KAAArG,EAIA,SAAAsc,GAAAtc,GACA2V,GACAxC,GAAAsJ,GAAAzc,IAEA4L,OAAA/F,SAAAhB,QAAA4X,GAAAzc,IAMA,IAAA0c,GAAA,SAAAxB,GACA,SAAAwB,EAAA3W,EAAAgG,GACAmP,EAAAzc,KAAAwJ,KAAAlC,EAAAgG,GACA9D,KAAAiE,SACAjE,KAAAlK,OAAA,EAiDA,OA9CAmd,IAAAwB,EAAAnB,UAAAL,GACAwB,EAAAne,UAAAP,OAAA0R,OAAAwL,KAAA3c,WACAme,EAAAne,UAAAid,YAAAkB,EAEAA,EAAAne,UAAA3K,KAAA,SAAAiS,EAAAyT,EAAAC,GACA,IAAAvR,EAAAC,KAEAA,KAAAoR,aAAAxT,EAAA,SAAArD,GACAwF,EAAAkE,MAAAlE,EAAAkE,MAAA1N,MAAA,EAAAwJ,EAAAjK,MAAA,GAAAoC,OAAAqC,GACAwF,EAAAjK,QACAub,KAAA9W,IACK+W,IAGLmD,EAAAne,UAAAsG,QAAA,SAAAgB,EAAAyT,EAAAC,GACA,IAAAvR,EAAAC,KAEAA,KAAAoR,aAAAxT,EAAA,SAAArD,GACAwF,EAAAkE,MAAAlE,EAAAkE,MAAA1N,MAAA,EAAAwJ,EAAAjK,OAAAoC,OAAAqC,GACA8W,KAAA9W,IACK+W,IAGLmD,EAAAne,UAAAkd,GAAA,SAAAC,GACA,IAAA1T,EAAAC,KAEA0U,EAAA1U,KAAAlK,MAAA2d,EACA,KAAAiB,EAAA,GAAAA,GAAA1U,KAAAiE,MAAArX,QAAA,CAGA,IAAA2N,EAAAyF,KAAAiE,MAAAyQ,GACA1U,KAAAuR,kBAAAhX,EAAA,WACAwF,EAAAjK,MAAA4e,EACA3U,EAAAyR,YAAAjX,OAIAka,EAAAne,UAAAqd,mBAAA,WACA,IAAAlY,EAAAuE,KAAAiE,MAAAjE,KAAAiE,MAAArX,OAAA,GACA,OAAA6O,IAAA4C,SAAA,KAGAoW,EAAAne,UAAAmb,UAAA,aAIAgD,EArDA,CAsDCzE,IAMD2E,GAAA,SAAA3W,QACA,IAAAA,UAEAgC,KAAA4L,IAAA,KACA5L,KAAA4U,QACA5U,KAAAhC,UACAgC,KAAAkS,eACAlS,KAAA6S,gBACA7S,KAAA+S,cACA/S,KAAA6U,QAAA1K,EAAAnM,EAAA+J,WAAA/H,MAEA,IAAA8U,EAAA9W,EAAA8W,MAAA,OAUA,OATA9U,KAAAgU,SAAA,YAAAc,IAAApH,KAAA,IAAA1P,EAAAgW,SACAhU,KAAAgU,WACAc,EAAA,QAEApR,IACAoR,EAAA,YAEA9U,KAAA8U,OAEAA,GACA,cACA9U,KAAA+C,QAAA,IAAAiQ,GAAAhT,KAAAhC,EAAA8F,MACA,MACA,WACA9D,KAAA+C,QAAA,IAAAgR,GAAA/T,KAAAhC,EAAA8F,KAAA9D,KAAAgU,UACA,MACA,eACAhU,KAAA+C,QAAA,IAAA0R,GAAAzU,KAAAhC,EAAA8F,MACA,MACA,QACU,IAMViR,IAA0B3K,cAAgB4K,cAAA,IA6J1C,SAAAC,GAAAC,EAAA5G,GAEA,OADA4G,EAAAvpB,KAAA2iB,GACA,WACA,IAAArjB,EAAAiqB,EAAA3b,QAAA+U,GACArjB,GAAA,GAAiBiqB,EAAA7L,OAAApe,EAAA,IA/JjB0pB,GAAAre,UAAAK,MAAA,SACA4S,EACA9N,EACAoC,GAEA,OAAAmC,KAAA6U,QAAAle,MAAA4S,EAAA9N,EAAAoC,IAGAkX,GAAA3K,aAAAlH,IAAA,WACA,OAAAlD,KAAA+C,SAAA/C,KAAA+C,QAAAtH,SAGAkZ,GAAAre,UAAA6B,KAAA,SAAAyT,GACA,IAAA7L,EAAAC,KAuBA,GAfAA,KAAA4U,KAAAjpB,KAAAigB,GAIAA,EAAAuJ,MAAA,4BAEA,IAAArf,EAAAiK,EAAA6U,KAAArb,QAAAqS,GACA9V,GAAA,GAAqBiK,EAAA6U,KAAAvL,OAAAvT,EAAA,GAGrBiK,EAAA6L,UAA6B7L,EAAA6L,IAAA7L,EAAA6U,KAAA,aAK7B5U,KAAA4L,IAAA,CAIA5L,KAAA4L,MAEA,IAAA7I,EAAA/C,KAAA+C,QAEA,GAAAA,aAAAiQ,GACAjQ,EAAAqO,aAAArO,EAAA4Q,2BACG,GAAA5Q,aAAAgR,GAAA,CACH,IAAAqB,EAAA,WACArS,EAAAoR,kBAEApR,EAAAqO,aACArO,EAAA4Q,qBACAyB,EACAA,GAIArS,EAAAiO,OAAA,SAAAzW,GACAwF,EAAA6U,KAAA7b,QAAA,SAAA6S,GACAA,EAAAzI,OAAA5I,QAKAoa,GAAAre,UAAA+e,WAAA,SAAA/G,GACA,OAAA2G,GAAAjV,KAAAkS,YAAA5D,IAGAqG,GAAAre,UAAAgf,cAAA,SAAAhH,GACA,OAAA2G,GAAAjV,KAAA6S,aAAAvE,IAGAqG,GAAAre,UAAAif,UAAA,SAAAjH,GACA,OAAA2G,GAAAjV,KAAA+S,WAAAzE,IAGAqG,GAAAre,UAAA2a,QAAA,SAAA1C,EAAA2C,GACAlR,KAAA+C,QAAAkO,QAAA1C,EAAA2C,IAGAyD,GAAAre,UAAA6a,QAAA,SAAAD,GACAlR,KAAA+C,QAAAoO,QAAAD,IAGAyD,GAAAre,UAAA3K,KAAA,SAAAiS,EAAAyT,EAAAC,GACAtR,KAAA+C,QAAApX,KAAAiS,EAAAyT,EAAAC,IAGAqD,GAAAre,UAAAsG,QAAA,SAAAgB,EAAAyT,EAAAC,GACAtR,KAAA+C,QAAAnG,QAAAgB,EAAAyT,EAAAC,IAGAqD,GAAAre,UAAAkd,GAAA,SAAAC,GACAzT,KAAA+C,QAAAyQ,GAAAC,IAGAkB,GAAAre,UAAAkf,KAAA,WACAxV,KAAAwT,IAAA,IAGAmB,GAAAre,UAAAmf,QAAA,WACAzV,KAAAwT,GAAA,IAGAmB,GAAAre,UAAAof,qBAAA,SAAAnW,GACA,IAAAhF,EAAAgF,EACAA,EAAApE,QACAoE,EACAS,KAAAE,QAAAX,GAAAhF,MACAyF,KAAAoK,aACA,OAAA7P,KAGArC,OAAAO,SAAA8B,EAAAY,QAAAtF,IAAA,SAAAyP,GACA,OAAAvP,OAAAC,KAAAsP,EAAAjK,YAAAxF,IAAA,SAAAK,GACA,OAAAoP,EAAAjK,WAAAnF,YAKAye,GAAAre,UAAA4J,QAAA,SACAX,EACA9D,EACAkE,GAGA,IAAA/B,EAAA0L,EACA/J,EAFA9D,KAAAuE,KAAA+C,QAAAtH,QAIAkE,EACAK,MAEAzF,EAAAyF,KAAArJ,MAAAiH,EAAAnC,GACA4C,EAAA9D,EAAAsD,gBAAAtD,EAAA8D,SAGA,OACAT,WACArD,QACA4F,KAwBA,SAAA2D,EAAAzF,EAAAyW,GACA,IAAA/c,EAAA,SAAA+c,EAAA,IAAAzW,IACA,OAAAyF,EAAAO,EAAAP,EAAA,IAAA/L,KA9BA4d,CADA3V,KAAA+C,QAAAe,KACAzF,EAAA2B,KAAA8U,MAMAc,aAAAhY,EACA0R,SAAA/U,IAIAoa,GAAAre,UAAAwU,UAAA,SAAA/C,GACA/H,KAAA6U,QAAA/J,UAAA/C,GACA/H,KAAA+C,QAAAtH,UAAAiD,GACAsB,KAAA+C,QAAAqO,aAAApR,KAAA+C,QAAA4Q,uBAIA5d,OAAA8f,iBAAAlB,GAAAre,UAAAye,IAeAJ,GAAAzS,UACAyS,GAAAxoB,QAAA,QAEAuX,GAAAC,OAAAxB,KACAwB,OAAAxB,IAAA2T,IAAAnB,IAGeoB,EAAA,0CC5mFf,IAAA/f,EAAWlN,EAAQ,QACnBktB,EAAA,mBAAA5G,QAAA,iBAAAA,OAAA,OAEA6G,EAAAlgB,OAAAO,UAAAI,SACAwB,EAAAvC,MAAAW,UAAA4B,OACAge,EAAAngB,OAAAkN,eAmBAkT,EAAAD,GAbA,WACA,IAAA5Y,KACA,IAGA,QAAAtD,KAFAkc,EAAA5Y,EAAA,KAAgC8Y,YAAA,EAAAhgB,MAAAkH,IAEhCA,EACA,SAEA,OAAAA,EAAAE,IAAAF,EACE,MAAAY,GACF,UAGAmY,GAEApT,EAAA,SAAAqT,EAAA3oB,EAAAyI,EAAAmgB,GAnBA,IAAAjI,EAoBA3gB,KAAA2oB,IAnBA,mBADAhI,EAoBAiI,IAnBA,sBAAAN,EAAAzf,KAAA8X,KAmBAiI,OAGAJ,EACAD,EAAAI,EAAA3oB,GACAqnB,cAAA,EACAoB,YAAA,EACAhgB,QACAogB,UAAA,IAGAF,EAAA3oB,GAAAyI,IAIAyf,EAAA,SAAAS,EAAAzgB,GACA,IAAA4gB,EAAA1G,UAAAnjB,OAAA,EAAAmjB,UAAA,MACAlW,EAAA7D,EAAAH,GACAmgB,IACAnc,EAAA3B,EAAA1B,KAAAqD,EAAA9D,OAAA2gB,sBAAA7gB,KAEA,QAAA5K,EAAA,EAAgBA,EAAA4O,EAAAjN,OAAkB3B,GAAA,EAClCgY,EAAAqT,EAAAzc,EAAA5O,GAAA4K,EAAAgE,EAAA5O,IAAAwrB,EAAA5c,EAAA5O,MAIA4qB,EAAAM,wBAEAnf,EAAAC,QAAA4e,uCC9CA,IAEAzgB,EAAAhI,EAAAlB,EAAAc,EAAAgB,EAAAY,EAAAE,EAAAM,EAAAC,EAAAC,EAAAC,EACAiE,EAAAJ,EAAAzE,EAAAN,EAAAb,EAAAuC,EAAAgB,EAAAS,EAAA+B,EAAAE,EACAQ,EAAA0iB,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAkXAC,EAAAC,EAiQAC,EAAAC,EAAAC,EAxnBAC,EAAA1lB,KAAAC,IAAA,SAQA,WACA,IAAApH,EAyCA,GAxCA0rB,GACA/sB,QACAiB,QACAgB,QACAuB,QACAE,QACApB,QACAc,QACAQ,QACAQ,QACAK,QACAM,QACAC,QACAE,QACAM,QACAC,QACAN,QACAO,QACAC,QACAQ,QACAc,QACAE,QACAC,QACAG,QACAK,QACAE,QACAG,QACAI,QACAC,QACAI,QACAiB,QACAC,QACAS,QACAR,QACAL,QACA0B,SAKA,oBAAAlJ,WAAA,CAIA,IAAAX,KAAA0rB,EACAA,EAAAjM,eAAAzf,KACA0rB,EAAA1rB,IACAA,EAAAsR,WAAA,GACAtR,EAAAsR,WAAA,GACAtR,EAAAsR,WAAA,GACAtR,EAAAsR,WAAA,KAKAqa,EAAA,IAAAhrB,YACA,IAAA2Q,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,KAEAua,EAAA,IAAAlrB,YACA,IAAA2Q,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,KAEAsa,EAAA,IAAAjrB,YAAA,UACAmrB,EAAA,IAAAnrB,YACA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,eACA,cACA,oBAEAorB,EAAA,IAAAprB,YACA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,eACA,cACA,oBAEAqrB,GACAc,MAAAhB,EACAiB,MAAAhB,GAEAI,EAAA,IAAAxrB,YACA,EACA,MACA,QACA,SACA,eACA,EACA,QAEAurB,EAAA,IAAAvrB,YACA,EACA,MACA,IACA,MAEAyrB,EAAA,IAAAzrB,YACA,EACA,MACA,UAEA0rB,EAAAD,EACAE,EAAA,IAAA3rB,YACA,EACA,MACA,QACA,UAEA4rB,EAAAH,EACAH,EAAA,IAAAtrB,YACA,EACA,MACA,IACA,IACA,IACA,OApIA,GAwIAwJ,EAAA,SAAAF,GACA,IAGAjK,EACAC,EAHA+sB,KACAtjB,EAAA,EAKA,IAAA1J,EAAA,EAAaA,EAAA8kB,UAAAnjB,OAAsB3B,IACnCgtB,EAAAtsB,KAAAokB,UAAA9kB,IAMA,IAHAA,EAAAgtB,EAAArrB,OAGA3B,KACA0J,GAAAsjB,EAAAhtB,GAAAf,WAQA,IANAgB,EAAA,IAAAU,WAAA+I,EAAA,GACA,IAAA5K,SAAAmB,EAAAlB,OAAAkB,EAAAjB,WAAAiB,EAAAhB,YACAguB,UAAA,EAAAhtB,EAAAhB,YACAgB,EAAAitB,IAAAjjB,EAAA,GAGAjK,EAAA,EAAA0J,EAAA,EAAuB1J,EAAAgtB,EAAArrB,OAAoB3B,IAC3CC,EAAAitB,IAAAF,EAAAhtB,GAAA0J,GACAA,GAAAsjB,EAAAhtB,GAAAf,WAEA,OAAAgB,GAGAkC,EAAA,WACA,OAAAgI,EAAAuhB,EAAAvpB,KAAAgI,EAAAuhB,EAAArpB,KAAA8pB,KAGAlrB,EAAA,SAAAksB,GACA,OAAAhjB,EAAAuhB,EAAAzqB,KAAA,IAAAN,YACA,EACA,MAGA,EACA,GACA,IACA,EAGA,EACA,GACA,GACA,GACA,MACA,YACA,YAGA,EACA,EAGAwsB,EAAAC,iBAAA,EAAAD,EAAAE,yBAAA,EACAF,EAAAE,wBAAA,EAAAF,EAAAppB,cAAA,EACA,UAIAhC,EAAA,WACA,OAAAoI,EAAAuhB,EAAA3pB,KAAA4pB,EAAAC,EAAAD,EAAAE,IAGAtpB,EAAA,SAAA0H,GACA,OAAAE,EAAAuhB,EAAAnpB,KAAAypB,EAAA/hB,KAEAlH,EAAA,SAAAnE,GACA,OAAAuL,EAAAuhB,EAAA3oB,KAAAnE,IAEAwE,EAAA,SAAA+pB,GACA,IAAAltB,EAAA,IAAAU,YACA,EACA,MACA,QACA,QACA,WAEAwsB,EAAA1pB,WAAA,OACA0pB,EAAA1pB,WAAA,OACA0pB,EAAA1pB,WAAA,MACA,IAAA0pB,EAAA1pB,SACA,OACA,MAaA,OAPA0pB,EAAAlpB,aACAhE,EAAA,IAAAktB,EAAAlpB,aAAA,OACAhE,EAAA,IAAAktB,EAAAlpB,aAAA,OACAhE,EAAA,IAAAktB,EAAAlpB,aAAA,MACAhE,EAAA,QAAAktB,EAAA,YAGAhjB,EAAAuhB,EAAAtoB,KAAAnD,IAEAyD,EAAA,SAAAypB,GACA,OAAAhjB,EAAAuhB,EAAAhoB,KAAAN,EAAA+pB,GAAA5qB,EAAA4qB,EAAAljB,MAAApG,EAAAspB,KAEAxpB,EAAA,SAAAC,GACA,OAAAuG,EAAAuhB,EAAA/nB,KAAA,IAAAhD,YACA,EACA,OACA,WAAAiD,IAAA,IACA,SAAAA,IAAA,IACA,MAAAA,IAAA,EACA,IAAAA,MAGAC,EAAA,SAAAspB,GACA,OAAAhjB,EAAAuhB,EAAA7nB,KACA,UAAAspB,EAAAljB,KAAAE,EAAAuhB,EAAA7hB,KAAAoiB,GAAA9hB,EAAAuhB,EAAA9lB,KAAAsmB,GACA/pB,IACA2D,EAAAqnB,KAEAhpB,EAAA,SAAAP,EAAA0pB,GAKA,IAJA,IACAC,KACAvtB,EAAAstB,EAAA3rB,OAEA3B,KACAutB,EAAAvtB,GAAAsI,EAAAglB,EAAAttB,IAEA,OAAAmK,EAAAqD,MAAA,MACAke,EAAAvnB,KACAR,EAAAC,IACAqJ,OAAAsgB,KAOAnpB,EAAA,SAAAkpB,GAKA,IAJA,IACAttB,EAAAstB,EAAA3rB,OACAS,KAEApC,KACAoC,EAAApC,GAAAuI,EAAA+kB,EAAAttB,IAGA,OAAAmK,EAAAqD,MAAA,MAAAke,EAAAtnB,KAAAE,EAAA,aAAA2I,OAAA7K,GAAA6K,OAAA5I,EAAAipB,MAEAjpB,EAAA,SAAAipB,GAKA,IAJA,IACAttB,EAAAstB,EAAA3rB,OACAS,KAEApC,KACAoC,EAAApC,GAAAwI,EAAA8kB,EAAAttB,IAEA,OAAAmK,EAAAqD,MAAA,MAAAke,EAAArnB,MAAA4I,OAAA7K,KAEAkC,EAAA,SAAAb,GACA,IACA2H,EAAA,IAAAzK,YACA,EACA,MACA,QACA,QACA,YACA,WAAA8C,IAAA,IACA,SAAAA,IAAA,IACA,MAAAA,IAAA,EACA,IAAAA,EACA,QACA,IACA,IACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,kBAEA,OAAA0G,EAAAuhB,EAAApnB,KAAA8G,IAGAtG,EAAA,SAAAqoB,GACA,IAGAjvB,EACA8B,EAHA+E,EAAAooB,EAAApoB,YACAqG,EAAA,IAAAzK,WAAA,EAAAoE,EAAApD,QAOA,IAAA3B,EAAA,EAAaA,EAAA+E,EAAApD,OAAoB3B,IACjC9B,EAAA6G,EAAA/E,GAAA9B,MAEAkN,EAAApL,EAAA,GAAA9B,EAAAE,WAAA,EACAF,EAAAG,cAAA,EACAH,EAAA,cAGA,OAAAiM,EAAAuhB,EAAA5mB,KACAsG,IAGAtF,EAAA,SAAAqnB,GACA,OAAAhjB,EAAAuhB,EAAA5lB,KACAS,EAAA4mB,GACAhjB,EAAAuhB,EAAA9kB,KAAA2lB,GACApiB,EAAAuhB,EAAAxlB,KAAAmmB,GACAliB,EAAAuhB,EAAAjlB,KAAA6lB,GACAniB,EAAAuhB,EAAA3lB,KAAAqmB,KAMA7lB,EAAA,SAAA4mB,GAEA,OAAAhjB,EAAAuhB,EAAAnlB,KAAA,IAAA5F,YACA,EACA,MACA,UACA,UAAAwsB,EAAAljB,KAAAuiB,EAAAW,GAAAV,EAAAU,KAGAX,EAAA,SAAAW,GACA,IAKAntB,EAJAO,EAAA4sB,EAAA5sB,QACAC,EAAA2sB,EAAA3sB,QACAgtB,KACAC,KAIA,IAAAztB,EAAA,EAAeA,EAAAO,EAAAoB,OAAgB3B,IAC/BwtB,EAAA9sB,MAAA,MAAAH,EAAAP,GAAAf,cAAA,GACAuuB,EAAA9sB,KAAA,IAAAH,EAAAP,GAAAf,YACAuuB,IAAAvgB,OAAAvC,MAAAW,UAAAC,MAAAC,KAAAhL,EAAAP,KAIA,IAAAA,EAAA,EAAeA,EAAAQ,EAAAmB,OAAgB3B,IAC/BytB,EAAA/sB,MAAA,MAAAF,EAAAR,GAAAf,cAAA,GACAwuB,EAAA/sB,KAAA,IAAAF,EAAAR,GAAAf,YACAwuB,IAAAxgB,OAAAvC,MAAAW,UAAAC,MAAAC,KAAA/K,EAAAR,KAGA,OAAAmK,EAAAuhB,EAAA/sB,KAAA,IAAAgC,YACA,MACA,MACA,IACA,IACA,IACA,QACA,QACA,SACA,MAAAwsB,EAAA/tB,QAAA,EACA,IAAA+tB,EAAA/tB,OACA,MAAA+tB,EAAA9tB,SAAA,EACA,IAAA8tB,EAAA9tB,OACA,SACA,SACA,QACA,IACA,GACA,gBACA,eACA,eACA,cACA,cACA,QACA,QACA,MACA,KACA,QACA8K,EAAAuhB,EAAA9rB,KAAA,IAAAe,YACA,EACAwsB,EAAAO,WACAP,EAAA/sB,qBACA+sB,EAAAQ,SACA,KACA1gB,QACA1M,EAAAoB,SACAsL,OAAAugB,GAAAvgB,QACAzM,EAAAmB,SACAsL,OAAAwgB,KACAtjB,EAAAuhB,EAAA9qB,KAAA,IAAAD,YACA,aACA,aACA,kBAKA8rB,EAAA,SAAAU,GACA,OAAAhjB,EAAAuhB,EAAA5nB,KAAA,IAAAnD,YAGA,MACA,MACA,IAGA,QACA,SACA,MAAAwsB,EAAAppB,eAAA,EACA,IAAAopB,EAAAppB,cAEA,MAAAopB,EAAAnpB,aAAA,EACA,IAAAmpB,EAAAnpB,WACA,IACA,KAEA,MAAAmpB,EAAAlpB,aAAA,EACA,IAAAkpB,EAAAlpB,WACA,MAGAhD,EAAAksB,KAIAhlB,EAAA,SAAAglB,GACA,IAAAltB,EAAA,IAAAU,YACA,EACA,MACA,QACA,SACA,WAAAwsB,EAAA/f,KAAA,IACA,SAAA+f,EAAA/f,KAAA,IACA,MAAA+f,EAAA/f,KAAA,EACA,IAAA+f,EAAA/f,GACA,SACA,WAAA+f,EAAA1pB,WAAA,IACA,SAAA0pB,EAAA1pB,WAAA,IACA,MAAA0pB,EAAA1pB,WAAA,EACA,IAAA0pB,EAAA1pB,SACA,QACA,QACA,IACA,IACA,IACA,IACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,MAAA0pB,EAAA/tB,QAAA,EACA,IAAA+tB,EAAA/tB,MACA,KACA,MAAA+tB,EAAA9tB,SAAA,EACA,IAAA8tB,EAAA9tB,OACA,MAGA,OAAA8K,EAAAuhB,EAAAvjB,KAAAlI,IAOAqI,EAAA,SAAA6kB,GACA,IAAAS,EAAAC,EAAAC,EACAC,EACAC,EAAAC,EA2CA,OAzCAL,EAAAzjB,EAAAuhB,EAAArkB,KAAA,IAAA1G,YACA,EACA,QACA,WAAAwsB,EAAA/f,KAAA,IACA,SAAA+f,EAAA/f,KAAA,IACA,MAAA+f,EAAA/f,KAAA,EACA,IAAA+f,EAAA/f,GACA,QACA,QACA,QACA,WAGA4gB,EAAA7mB,KAAA+mB,MAAAf,EAAAjmB,qBAAA2lB,EAAA,IACAoB,EAAA9mB,KAAA+mB,MAAAf,EAAAjmB,qBAAA2lB,EAAA,IAEAgB,EAAA1jB,EAAAuhB,EAAAzkB,KAAA,IAAAtG,YACA,EACA,MAEAqtB,IAAA,OACAA,IAAA,OACAA,IAAA,MACA,IAAAA,EACAC,IAAA,OACAA,IAAA,OACAA,IAAA,MACA,IAAAA,KAMA,GAQA,UAAAd,EAAAljB,MACA6jB,EAAA9kB,EAAAmkB,EATA,IAUAhjB,EAAAuhB,EAAApjB,KACAslB,EACAC,EACAC,KAMAC,EAAAjpB,EAAAqoB,GACAW,EAAA9kB,EAAAmkB,EACAY,EAAApsB,OArBA,IAsBAwI,EAAAuhB,EAAApjB,KACAslB,EACAC,EACAC,EACAC,KAQAxlB,EAAA,SAAA4kB,GAEA,OADAA,EAAA1pB,SAAA0pB,EAAA1pB,UAAA,WACA0G,EAAAuhB,EAAAnjB,KACAJ,EAAAglB,GACAzpB,EAAAypB,KAGA3kB,EAAA,SAAA2kB,GACA,IAAAltB,EAAA,IAAAU,YACA,EACA,OACA,WAAAwsB,EAAA/f,KAAA,IACA,SAAA+f,EAAA/f,KAAA,IACA,MAAA+f,EAAA/f,KAAA,EACA,IAAA+f,EAAA/f,GACA,QACA,QACA,QACA,UAUA,MAJA,UAAA+f,EAAAljB,OACAhK,IAAA0B,OAAA,MAGAwI,EAAAuhB,EAAAljB,KAAAvI,IAUA2sB,EAAA,SAAA7nB,EAAAhF,GACA,IAAAouB,EAAA,EAAAC,EAAA,EACAC,EAAA,EAAA1kB,EAAA,EAkBA,OAfA5E,EAAApD,cACAqP,IAAAjM,EAAA,GAAAtB,WACA0qB,EAAA,QAEAnd,IAAAjM,EAAA,GAAA2E,OACA0kB,EAAA,QAEApd,IAAAjM,EAAA,GAAA7G,QACAmwB,EAAA,QAEArd,IAAAjM,EAAA,GAAA4E,wBACAA,EAAA,KAKA,EACA,EACAwkB,EAAAC,EAAAC,EAAA1kB,EACA,GACA,WAAA5E,EAAApD,UAAA,IACA,SAAAoD,EAAApD,UAAA,IACA,MAAAoD,EAAApD,UAAA,EACA,IAAAoD,EAAApD,QACA,WAAA5B,KAAA,IACA,SAAAA,KAAA,IACA,MAAAA,KAAA,EACA,IAAAA,IAIA4sB,EAAA,SAAAQ,EAAAptB,GACA,IAAAqL,EAAArG,EAAAkE,EAAAjJ,EAOA,IAJAD,GAAA,OADAgF,EAAAooB,EAAApoB,aACApD,OAEAyJ,EAAAwhB,EAAA7nB,EAAAhF,GAEAC,EAAA,EAAeA,EAAA+E,EAAApD,OAAoB3B,IACnCiJ,EAAAlE,EAAA/E,GACAoL,IAAA6B,SACA,WAAAhE,EAAAxF,YAAA,IACA,SAAAwF,EAAAxF,YAAA,IACA,MAAAwF,EAAAxF,YAAA,EACA,IAAAwF,EAAAxF,UACA,WAAAwF,EAAAS,QAAA,IACA,SAAAT,EAAAS,QAAA,IACA,MAAAT,EAAAS,QAAA,EACA,IAAAT,EAAAS,KACAT,EAAA/K,MAAAC,WAAA,EAAA8K,EAAA/K,MAAAE,UACA6K,EAAA/K,MAAAG,cAAA,EACA4K,EAAA/K,MAAAI,eAAA,EACA2K,EAAA/K,MAAAK,cAAA,EACA0K,EAAA/K,MAAAM,gBACA,MAAAyK,EAAA/K,MAAAO,oBACA,GAAAwK,EAAA/K,MAAAO,qBACA,WAAAwK,EAAAU,yBAAA,IACA,SAAAV,EAAAU,yBAAA,IACA,MAAAV,EAAAU,yBAAA,EACA,IAAAV,EAAAU,wBAGA,OAAAQ,EAAAuhB,EAAA1iB,KAAA,IAAArI,WAAAyK,KAGAshB,EAAA,SAAAS,EAAAptB,GACA,IAAAqL,EAAArG,EAAAkE,EAAAjJ,EAOA,IAJAD,GAAA,MADAgF,EAAAooB,EAAApoB,aACApD,OAEAyJ,EAAAwhB,EAAA7nB,EAAAhF,GAEAC,EAAA,EAAeA,EAAA+E,EAAApD,OAAoB3B,IACnCiJ,EAAAlE,EAAA/E,GACAoL,IAAA6B,SACA,WAAAhE,EAAAxF,YAAA,IACA,SAAAwF,EAAAxF,YAAA,IACA,MAAAwF,EAAAxF,YAAA,EACA,IAAAwF,EAAAxF,UACA,WAAAwF,EAAAS,QAAA,IACA,SAAAT,EAAAS,QAAA,IACA,MAAAT,EAAAS,QAAA,EACA,IAAAT,EAAAS,OAGA,OAAAS,EAAAuhB,EAAA1iB,KAAA,IAAArI,WAAAyK,KAGApC,EAAA,SAAAmkB,EAAAptB,GACA,gBAAAotB,EAAAljB,KACAyiB,EAAAS,EAAAptB,GAGA4sB,EAAAQ,EAAAptB,IAIAgM,EAAAC,SACAjK,OACAgB,OACAoB,OACAC,OACAkqB,YAAA,SAAAhB,GACA,IAGArtB,EAFAsuB,EAAAxsB,IACAysB,EAAApqB,EAAAkpB,GAMA,OAHArtB,EAAA,IAAAU,WAAA4tB,EAAAtvB,WAAAuvB,EAAAvvB,aACAiuB,IAAAqB,GACAtuB,EAAAitB,IAAAsB,EAAAD,EAAAtvB,YACAgB,6BC/vBA,SAAAwuB,GAAA,IAAAC,OAAA,IAAAD,MACA,oBAAAE,YACAjW,OACAlL,EAAAohB,SAAAvjB,UAAAmC,MAiBA,SAAAqhB,EAAAzhB,EAAA0hB,GACA/Z,KAAAga,IAAA3hB,EACA2H,KAAAia,SAAAF,EAfA9iB,EAAAyb,WAAA,WACA,WAAAoH,EAAArhB,EAAAjC,KAAAkc,WAAAiH,EAAA5J,WAAAmK,eAEAjjB,EAAAkjB,YAAA,WACA,WAAAL,EAAArhB,EAAAjC,KAAA2jB,YAAAR,EAAA5J,WAAAqK,gBAEAnjB,EAAAijB,aACAjjB,EAAAmjB,cAAA,SAAAC,GACAA,GACAA,EAAAC,SAQAR,EAAAxjB,UAAAikB,MAAAT,EAAAxjB,UAAA2D,IAAA,aACA6f,EAAAxjB,UAAAgkB,MAAA,WACAta,KAAAia,SAAAzjB,KAAAmjB,EAAA3Z,KAAAga,MAIA/iB,EAAAujB,OAAA,SAAAC,EAAAC,GACAR,aAAAO,EAAAE,gBACAF,EAAAG,aAAAF,GAGAzjB,EAAA4jB,SAAA,SAAAJ,GACAP,aAAAO,EAAAE,gBACAF,EAAAG,cAAA,GAGA3jB,EAAA6jB,aAAA7jB,EAAA8jB,OAAA,SAAAN,GACAP,aAAAO,EAAAE,gBAEA,IAAAD,EAAAD,EAAAG,aACAF,GAAA,IACAD,EAAAE,eAAAjI,WAAA,WACA+H,EAAAO,YACAP,EAAAO,cACKN,KAKL5xB,EAAQ,QAIRmO,EAAAgkB,aAAA,oBAAArB,WAAAqB,mBACA,IAAAvB,KAAAuB,cACAjb,WAAAib,aACAhkB,EAAAikB,eAAA,oBAAAtB,WAAAsB,qBACA,IAAAxB,KAAAwB,gBACAlb,WAAAkb,wEC7DA,IAAAvX,EAAa7a,EAAQ,QACrBqyB,EAAiBryB,EAAQ,QACzBsyB,EAAmBtyB,EAAQ,QAC3BuyB,EAAYvyB,EAAQ,QA2BpB,SAAAwyB,EAAAC,EAAAvd,EAAAwd,GACA,IAAAxf,EAAAuf,EAYA,OAVAJ,EAAAnd,IACAwd,EAAAxd,EACA,iBAAAud,IACAvf,GAAsBuf,SAGtBvf,EAAAqf,EAAArd,GAAiCud,QAGjCvf,EAAAwf,WACAxf,EAGA,SAAAyf,EAAAF,EAAAvd,EAAAwd,GAEA,OAAAE,EADA1d,EAAAsd,EAAAC,EAAAvd,EAAAwd,IAIA,SAAAE,EAAA1d,GACA,YAAAA,EAAAwd,SACA,UAAA9L,MAAA,6BAGA,IAAAG,GAAA,EACA2L,EAAA,SAAAliB,EAAAqiB,EAAAC,GACA/L,IACAA,GAAA,EACA7R,EAAAwd,SAAAliB,EAAAqiB,EAAAC,KA6BA,SAAAC,EAAAC,GAMA,OALA5B,aAAA6B,GACAD,aAAApM,QACAoM,EAAA,IAAApM,MAAA,IAAAoM,GAAA,kCAEAA,EAAAE,WAAA,EACAR,EAAAM,EAAAG,GAIA,SAAAC,IACA,IAAAC,EAAA,CACA,IAAAC,EACAlC,aAAA6B,GAGAK,EAFApe,EAAAqe,aAAApgB,IAAAqgB,EAAAF,OAEA,IAEA,OAAAE,EAAAF,OAAA,IAAAE,EAAAF,OAEA,IAAAT,EAAAM,EACA3iB,EAAA,KAiBA,OAfA,IAAA8iB,GACAT,GACAC,KA5CA,WAEA,IAAAA,OAAA3f,EAQA,GALA2f,EADAU,EAAAX,SACAW,EAAAX,SAEAW,EAAAC,cAsJA,SAAAD,GACA,gBAAAA,EAAAE,aACA,OAAAF,EAAAG,YAEA,IAAAC,EAAAJ,EAAAG,aAAA,gBAAAH,EAAAG,YAAAvP,gBAAAyP,SACA,WAAAL,EAAAE,cAAAE,EAIA,KAHAJ,EAAAG,YA5JAG,CAAAN,GAGAO,EACA,IACAjB,EAAA/kB,KAAAlN,MAAAiyB,GACa,MAAA1d,IAGb,OAAA0d,EA4BAkB,GACAd,WAAAI,EACAW,SACAC,WACA7O,IAAAoN,EACA0B,WAAAX,GAEAA,EAAAY,wBACAvB,EAAAqB,QAAA5B,EAAAkB,EAAAY,2BAGA5jB,EAAA,IAAAoW,MAAA,iCAEA8L,EAAAliB,EAAAqiB,IAAAC,OAGA,IAUA1lB,EACAimB,EAXAG,EAAAte,EAAAse,KAAA,KAEAA,IAEAA,EADAte,EAAAmf,MAAAnf,EAAAqe,OACA,IAAAZ,EAAA2B,eAEA,IAAA3B,EAAA4B,gBAMA,IAMAtB,EANAR,EAAAe,EAAAnO,IAAAnQ,EAAAud,KAAAvd,EAAAmQ,IACA4O,EAAAT,EAAAS,OAAA/e,EAAA+e,QAAA,MACAnB,EAAA5d,EAAA4d,MAAA5d,EAAAnU,KACAmzB,EAAAV,EAAAU,QAAAhf,EAAAgf,YACAM,IAAAtf,EAAAsf,KACAT,GAAA,EAEAZ,GACAL,UAAA3f,EACA+gB,WACAhB,WAAA,EACAe,SACA5O,IAAAoN,EACA0B,WAAAX,GA0CA,GAvCA,SAAAte,IAAA,IAAAA,EAAAuf,OACAV,GAAA,EACAG,EAAA,QAAAA,EAAA,SAAAA,EAAA,2BACA,QAAAD,GAAA,SAAAA,IACAC,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,oCACApB,EAAA/kB,KAAAC,WAAA,IAAAkH,EAAAuf,KAAA3B,EAAA5d,EAAAuf,QAIAjB,EAAAkB,mBAvGA,WACA,IAAAlB,EAAAmB,YACA/K,WAAAwJ,EAAA,IAsGAI,EAAAoB,OAAAxB,EACAI,EAAAqB,QAAA9B,EAEAS,EAAAsB,WAAA,aAGAtB,EAAAuB,QAAA,WACA1B,GAAA,GAEAG,EAAAwB,UAAAjC,EACAS,EAAAyB,KAAAhB,EAAAxB,GAAA+B,EAAAtf,EAAAggB,SAAAhgB,EAAAigB,UAEAX,IACAhB,EAAA4B,kBAAAlgB,EAAAkgB,kBAKAZ,GAAAtf,EAAAqc,QAAA,IACA0B,EAAArJ,WAAA,WACA,IAAAyJ,EAAA,CACAA,GAAA,EACAG,EAAA5K,MAAA,WACA,IAAAxT,EAAA,IAAAwR,MAAA,0BACAxR,EAAAigB,KAAA,YACAtC,EAAA3d,KACSF,EAAAqc,UAGTiC,EAAA8B,iBACA,IAAAloB,KAAA8mB,EACAA,EAAAtS,eAAAxU,IACAomB,EAAA8B,iBAAAloB,EAAA8mB,EAAA9mB,SAGK,GAAA8H,EAAAgf,UApLL,SAAA1f,GACA,QAAArS,KAAAqS,EACA,GAAAA,EAAAoN,eAAAzf,GAAA,SAEA,SAgLKozB,CAAArgB,EAAAgf,SACL,UAAAtN,MAAA,qDAkBA,MAfA,iBAAA1R,IACAse,EAAAE,aAAAxe,EAAAwe,cAGA,eAAAxe,GACA,mBAAAA,EAAAsgB,YAEAtgB,EAAAsgB,WAAAhC,GAMAA,EAAAiC,KAAA3C,GAAA,MAEAU,EAzNAtlB,EAAAC,QAAAwkB,EACAA,EAAA4B,eAAA1Z,EAAA0Z,gBAyOA,aAxOA5B,EAAA2B,eAAA,wBAAA3B,EAAA4B,eAAA5B,EAAA4B,eAAA1Z,EAAAyZ,eAUA,SAAAoB,EAAApM,GACA,QAAAnnB,EAAA,EAAmBA,EAAAuzB,EAAA5xB,OAAkB3B,IACrCmnB,EAAAoM,EAAAvzB,IAVAwzB,EAAA,qDAAA1B,GACAtB,EAAA,WAAAsB,EAAA,MAAAA,GAAA,SAAAxB,EAAAvd,EAAAwd,GAGA,OAFAxd,EAAAsd,EAAAC,EAAAvd,EAAAwd,IACAuB,SAAAzW,cACAoV,EAAA1d;;;;;;;ACPAhH,EAAAC,QAAA,SAAAqG,GACA,aAAAA,GAAA,MAAAA,EAAAiW,aACA,mBAAAjW,EAAAiW,YAAAmL,UAAAphB,EAAAiW,YAAAmL,SAAAphB,yCCPA,IAAAqhB,EAAkB71B,EAAQ,QAS1BkO,EAAAC,QAAA,SAAAiJ,EAAAqP,EAAAoM,GACA,IAAAiD,EAAAjD,EAAAhxB,OAAAi0B,gBACAA,KAAAjD,EAAAS,QACAlc,EAAAyb,GAEApM,EAAAoP,EACA,mCAAAhD,EAAAS,OACAT,EAAAhxB,OACA,KACAgxB,EAAAkD,QACAlD,0CCnBA,IAAAmD,EAMAA,EAAA,SAAAC,GACA,IAEAC,EAAAD,EAAA70B,WAGA+0B,EAAA,EAGAC,EAAA,EAGAlf,KAAApT,OAAA,WACA,SAAAoyB,GAIAhf,KAAAmf,cAAA,WACA,SAAAH,EAAAE,GAIAlf,KAAAof,SAAA,WACA,IACApT,EAAA+S,EAAA70B,WAAA80B,EACAK,EAAA,IAAAzzB,WAAA,GACA0zB,EAAAltB,KAAAwG,IAAA,EAAAomB,GAEA,OAAAM,EACA,UAAA5P,MAAA,sBAGA2P,EAAAlH,IAAA4G,EAAAn0B,SAAAohB,EACAA,EAAAsT,IACAL,EAAA,IAAAl1B,SAAAs1B,EAAAr1B,QAAA+B,UAAA,GAGAmzB,EAAA,EAAAI,EACAN,GAAAM,GAIAtf,KAAAuf,SAAA,SAAAC,GACA,IAAAC,EACAP,EAAAM,GACAP,IAAAO,EACAN,GAAAM,IAEAA,GAAAN,EAGAM,GAAA,GAFAC,EAAArtB,KAAA+mB,MAAAqG,EAAA,IAGAR,GAAAS,EAEAzf,KAAAof,WAEAH,IAAAO,EACAN,GAAAM,IAKAxf,KAAA0f,SAAA,SAAA/qB,GACA,IACAgrB,EAAAvtB,KAAAwG,IAAAsmB,EAAAvqB,GACAirB,EAAAX,IAAA,GAAAU,EAUA,OARAT,GAAAS,GACA,EACAV,IAAAU,EACKX,EAAA,GACLhf,KAAAof,YAGAO,EAAAhrB,EAAAgrB,GACA,EACAC,GAAAD,EAAA3f,KAAA0f,SAAAC,GAEAC,GAIA5f,KAAA6f,iBAAA,WACA,IAAAC,EACA,IAAAA,EAAA,EAA8BA,EAAAZ,IAAyCY,EACvE,OAAAb,EAAA,aAAAa,GAIA,OAFAb,IAAAa,EACAZ,GAAAY,EACAA,EAMA,OADA9f,KAAAof,WACAU,EAAA9f,KAAA6f,oBAIA7f,KAAA+f,sBAAA,WACA/f,KAAAuf,SAAA,EAAAvf,KAAA6f,qBAIA7f,KAAAggB,cAAA,WACAhgB,KAAAuf,SAAA,EAAAvf,KAAA6f,qBAIA7f,KAAAigB,sBAAA,WACA,IAAAC,EAAAlgB,KAAA6f,mBACA,OAAA7f,KAAA0f,SAAAQ,EAAA,MAIAlgB,KAAAmgB,cAAA,WACA,IAAAP,EAAA5f,KAAAigB,wBACA,SAAAL,EAEA,EAAAA,IAAA,GAEA,GAAAA,IAAA,IAKA5f,KAAAogB,YAAA,WACA,WAAApgB,KAAA0f,SAAA,IAIA1f,KAAAqgB,iBAAA,WACA,OAAArgB,KAAA0f,SAAA,IAGA1f,KAAAof,YAGApoB,EAAAC,QAAA6nB,uCCxIA,IAAAwB,EAAkBx3B,EAAQ,QAC1By3B,EAAqBz3B,EAAQ,QAAsCy3B,eACnEC,KACAA,EAAAC,GAAW33B,EAAQ,QACnB03B,EAAAE,IAAY53B,EAAQ,QAGpB,IA2DA63B,EAAA,SAAAtqB,EAAAuqB,EAAA11B,GASA,IARA,IAGA21B,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,EACAC,EA5DA,IA+DAC,GAAA,EAGAD,GAAA7qB,EAAAnM,YAEA,GAnEA,KAmEAmM,EAAA4qB,IAnEA,KAoEA5qB,EAAA6qB,QAAA7qB,EAAAnM,WAkCA+2B,IACAC,QApCA,CAMA,OAHAL,EAAAxqB,EAAAzL,SAAAq2B,EAAAC,GACAV,EAAAC,GAAA53B,UAAAg4B,EAAAD,EAAAQ,MAGA,UACAN,EAAAN,EAAAC,GAAAY,aAAAR,EAAAD,EAAAU,OACAP,EAAAP,EAAAC,GAAAc,+BAAAV,GACA,UAAAC,GAAAC,IACAC,EAAAR,EAAAC,GAAAe,aAAAX,MAEAG,EAAA9rB,KAAA,QACAhK,EAAA8sB,MAAArsB,KAAAq1B,GACAG,GAAA,GAQA,GAAAA,EACA,MAGAF,GA/FA,IAgGAC,GAhGA,IA+GA,IAFAD,GADAC,EAAA7qB,EAAAnM,YA5GA,IA8GAi3B,GAAA,EACAF,GAAA,GAEA,GAhHA,KAgHA5qB,EAAA4qB,IAhHA,KAiHA5qB,EAAA6qB,QAAA7qB,EAAAnM,WAkCA+2B,IACAC,QApCA,CAMA,OAHAL,EAAAxqB,EAAAzL,SAAAq2B,EAAAC,GACAV,EAAAC,GAAA53B,UAAAg4B,EAAAD,EAAAQ,MAGA,UACAN,EAAAN,EAAAC,GAAAY,aAAAR,EAAAD,EAAAU,OACAP,EAAAP,EAAAC,GAAAc,+BAAAV,GACA,UAAAC,GAAAC,IACAC,EAAAR,EAAAC,GAAAe,aAAAX,MAEAG,EAAA9rB,KAAA,QACAhK,EAAA8sB,MAAArsB,KAAAq1B,GACAG,GAAA,GAQA,GAAAA,EACA,MAGAF,GA5IA,IA6IAC,GA7IA,MA8JAO,EAAA,SAAAprB,EAAAuqB,EAAA11B,GAcA,IAbA,IAGA21B,EAAAC,EAAAC,EAAAC,EAAAU,EAAAz2B,EAAA02B,EAFAV,EAAA,EACAC,EAjKA,IAoKAC,GAAA,EAEAS,GACA/3B,QACA8K,KAAA,GAIAusB,EAAA7qB,EAAAnM,YAEA,GA7KA,KA6KAmM,EAAA4qB,IA7KA,KA6KA5qB,EAAA6qB,GAwDAD,IACAC,QAzDA,CAKA,OAHAL,EAAAxqB,EAAAzL,SAAAq2B,EAAAC,GACAV,EAAAC,GAAA53B,UAAAg4B,EAAAD,EAAAQ,MAGA,UAGA,GAFAN,EAAAN,EAAAC,GAAAY,aAAAR,EAAAD,EAAAU,OACAP,EAAAP,EAAAC,GAAAc,+BAAAV,GACA,UAAAC,IACAC,IAAAI,IACAH,EAAAR,EAAAC,GAAAe,aAAAX,MAEAG,EAAA9rB,KAAA,QACAhK,EAAA6sB,MAAApsB,KAAAq1B,GACAG,GAAA,IAGAj2B,EAAA22B,eAAA,CACA,GAAAd,GACA,IAAAa,EAAAjtB,KAAA,CAGA,IAFA+sB,EAAA,IAAA91B,WAAAg2B,EAAAjtB,MACA1J,EAAA,EACA22B,EAAA/3B,KAAA+C,QACA+0B,EAAAC,EAAA/3B,KAAAsT,QACAukB,EAAAvJ,IAAAwJ,EAAA12B,GACAA,GAAA02B,EAAAz3B,WAEAs2B,EAAAC,GAAAqB,4BAAAJ,KACAx2B,EAAA22B,cAAArB,EAAAC,GAAAe,aAAAE,GACAx2B,EAAA22B,cAAA3sB,KAAA,SAEA0sB,EAAAjtB,KAAA,EAGAitB,EAAA/3B,KAAA8B,KAAAk1B,GACAe,EAAAjtB,MAAAksB,EAAA32B,YAQA,GAAAi3B,GAAAj2B,EAAA22B,cACA,MAGAZ,GA9NA,IA+NAC,GA/NA,IA8OA,IAFAD,GADAC,EAAA7qB,EAAAnM,YA3OA,IA6OAi3B,GAAA,EACAF,GAAA,GAEA,GA/OA,KA+OA5qB,EAAA4qB,IA/OA,KA+OA5qB,EAAA6qB,GAkCAD,IACAC,QAnCA,CAKA,OAHAL,EAAAxqB,EAAAzL,SAAAq2B,EAAAC,GACAV,EAAAC,GAAA53B,UAAAg4B,EAAAD,EAAAQ,MAGA,UACAN,EAAAN,EAAAC,GAAAY,aAAAR,EAAAD,EAAAU,OACAP,EAAAP,EAAAC,GAAAc,+BAAAV,GACA,UAAAC,GAAAC,IACAC,EAAAR,EAAAC,GAAAe,aAAAX,MAEAG,EAAA9rB,KAAA,QACAhK,EAAA6sB,MAAApsB,KAAAq1B,GACAG,GAAA,GAQA,GAAAA,EACA,MAGAF,GA1QA,IA2QAC,GA3QA,MAmaAa,EAAA,SAAA1rB,GACA,IAAAuqB,GACAQ,IAAA,KACAE,MAAA,MAGAp2B,KAIA,QAAAk2B,KAtaA,SAAA/qB,EAAAuqB,GAMA,IALA,IAGAC,EAFAI,EAAA,EACAC,EAVA,IAaAA,EAAA7qB,EAAAnM,YAEA,GAdA,KAcAmM,EAAA4qB,IAdA,KAcA5qB,EAAA6qB,GAiCAD,IACAC,QAlCA,CAKA,OAHAL,EAAAxqB,EAAAzL,SAAAq2B,EAAAC,GACAV,EAAAC,GAAA53B,UAAAg4B,EAAAD,EAAAQ,MAGA,UACAR,EAAAQ,MACAR,EAAAQ,IAAAZ,EAAAC,GAAAuB,SAAAnB,IAEA,MACA,UACAD,EAAAU,QACAV,EAAAU,MAAAd,EAAAC,GAAAwB,SAAApB,IAQA,GAAAD,EAAAQ,KAAAR,EAAAU,MACA,OAGAL,GAxCA,IAyCAC,GAzCA,KA2aAgB,CAAA7rB,EAAAuqB,GAEAA,EAAAU,MAAA,CACA,GAAAV,EAAAU,MAAA5W,eAAA0W,GAEA,OADAR,EAAAU,MAAAF,IAEA,KAAAd,EAAA6B,iBACAj3B,EAAA6sB,SACA0J,EAAAprB,EAAAuqB,EAAA11B,GACA,IAAAA,EAAA6sB,MAAAnrB,eACA1B,EAAA6sB,MAEA,MACA,KAAAuI,EAAA8B,iBACAl3B,EAAA8sB,SACA2I,EAAAtqB,EAAAuqB,EAAA11B,GACA,IAAAA,EAAA8sB,MAAAprB,eACA1B,EAAA8sB,OAQA,OAAA9sB,GA+BA8L,EAAAC,SACAC,QArBA,SAAAb,EAAAgsB,GACA,IAEAn3B,EAQA,OALAA,EALAs1B,EAAAE,IAAA4B,gBAAAjsB,GA5IA,SAAAA,GAUA,IATA,IAOAwqB,EANAM,GAAA,EACAoB,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAA,EACAC,EAAA,EAGAtsB,EAAAzJ,OAAA+1B,GAAA,IAEA,OADAnC,EAAAE,IAAA73B,UAAAwN,EAAAssB,IAEA,qBAGA,GAAAtsB,EAAAzJ,OAAA+1B,EAAA,IACAxB,GAAA,EACA,MAOA,IAJAuB,EAAAlC,EAAAE,IAAAkC,gBAAAvsB,EAAAssB,IAIAtsB,EAAAzJ,OAAA,CACAu0B,GAAA,EACA,MAEA,OAAAsB,IACA5B,EAAAxqB,EAAAzL,SAAA+3B,IAAAD,GACAD,EAAAjC,EAAAE,IAAAmC,kBAAAhC,IAEA8B,GAAAD,EACA,MACA,YAGA,GAAArsB,EAAAzJ,OAAA+1B,EAAA,GACAxB,GAAA,EACA,MAOA,IAJAuB,EAAAlC,EAAAE,IAAAoC,cAAAzsB,EAAAssB,IAIAtsB,EAAAzJ,OAAA,CACAu0B,GAAA,EACA,MAEA,OAAAqB,IACA3B,EAAAxqB,EAAAzL,SAAA+3B,IAAAD,GACAF,EAAAhC,EAAAE,IAAAqC,gBAAAlC,IAEA0B,IACAI,GAAAD,EACA,MACA,QACAC,IAGA,GAAAxB,EACA,YAGA,UAAAqB,GAAA,OAAAC,EACA,YAGA,IAAAO,EA3YA,IA2YAR,EAiBA,OAdAxK,QAEA9iB,KAAA,QACA+tB,IAAAR,EACAS,IAAAT,IAGAvtB,KAAA,QACA+tB,IAAAR,EAAA,KAAAF,EAAAS,EACAE,IAAAT,EAAA,KAAAF,EAAAS,KA+DAG,CAAA9sB,GAEA0rB,EAAA1rB,MAGAnL,EAAA8sB,OAAA9sB,EAAA6sB,QA/LA,SAAAqL,EAAAf,GACA,GAAAe,EAAApL,OAAAoL,EAAApL,MAAAprB,OAAA,CACA,IAAAy2B,EAAAhB,OACA,IAAAgB,IACAA,EAAAD,EAAApL,MAAA,GAAAiL,KAEAG,EAAApL,MAAAjf,QAAA,SAAAuqB,GACAA,EAAAL,IAAA1C,EAAA+C,EAAAL,IAAAI,GACAC,EAAAJ,IAAA3C,EAAA+C,EAAAJ,IAAAG,GAEAC,EAAAC,QAAAD,EAAAL,IAtSA,IAuSAK,EAAAE,QAAAF,EAAAJ,IAvSA,MA2SA,GAAAE,EAAArL,OAAAqL,EAAArL,MAAAnrB,OAAA,CACA,IAAA62B,EAAApB,EAWA,QAVA,IAAAoB,IACAA,EAAAL,EAAArL,MAAA,GAAAkL,KAEAG,EAAArL,MAAAhf,QAAA,SAAAuqB,GACAA,EAAAL,IAAA1C,EAAA+C,EAAAL,IAAAQ,GACAH,EAAAJ,IAAA3C,EAAA+C,EAAAJ,IAAAO,GAEAH,EAAAC,QAAAD,EAAAL,IApTA,IAqTAK,EAAAE,QAAAF,EAAAJ,IArTA,MAuTAE,EAAAvB,cAAA,CACA,IAAAH,EAAA0B,EAAAvB,cACAH,EAAAuB,IAAA1C,EAAAmB,EAAAuB,IAAAQ,GACA/B,EAAAwB,IAAA3C,EAAAmB,EAAAwB,IAAAO,GAEA/B,EAAA6B,QAAA7B,EAAAuB,IA5TA,IA6TAvB,EAAA8B,QAAA9B,EAAAuB,IA7TA,MA+dAS,CAAAx4B,EAAAm3B,GAEAn3B,GALA,MAUAy1B,uDC7eA,IAQAgD,EAAAC,EAAAC,EARAC,EAAah7B,EAAQ,QACrBi7B,EAAkBj7B,EAAQ,QAC1Bw3B,EAAgBx3B,EAAQ,QACxBk7B,EAA4Bl7B,EAAQ,QAA6Bk7B,wBAEjEC,EAAsBn7B,EAAQ,SAc9B66B,EAAA,WACA,IACA35B,EAAA,IAAA4B,WATA,KAUAs4B,EAAA,EAEAP,EAAArtB,UAAA6B,KAAA3B,KAAAwJ,MAOAA,KAAArU,KAAA,SAAA0K,GACA,IAGA8tB,EAFAlD,EAAA,EACAC,EAtBA,IAqCA,IAVAgD,IACAC,EAAA,IAAAv4B,WAAAyK,EAAAnM,WAAAg6B,IACA/L,IAAAnuB,EAAAY,SAAA,EAAAs5B,IACAC,EAAAhM,IAAA9hB,EAAA6tB,GACAA,EAAA,GAEAC,EAAA9tB,EAIA6qB,EAAAiD,EAAAj6B,YApCA,KAsCAi6B,EAAAlD,IAtCA,KAsCAkD,EAAAjD,IAWAD,IACAC,MATAlhB,KAAAokB,QAAA,OAAAD,EAAAv5B,SAAAq2B,EAAAC,IACAD,GA3CA,IA4CAC,GA5CA,KAyDAD,EAAAkD,EAAAj6B,aACAF,EAAAmuB,IAAAgM,EAAAv5B,SAAAq2B,GAAA,GACAiD,EAAAC,EAAAj6B,WAAA+2B,IAOAjhB,KAAAqkB,MAAA,WAlEA,MAsEAH,GArEA,KAqEAl6B,EAAA,KACAgW,KAAAokB,QAAA,OAAAp6B,GACAk6B,EAAA,GAEAlkB,KAAAokB,QAAA,WAGA9tB,UAAA,IAAAwtB,GAMAF,EAAA,WACA,IAAAU,EAAAtC,EAAAC,EAAArI,EACAgK,EAAAttB,UAAA6B,KAAA3B,KAAAwJ,MACA4Z,EAAA5Z,KAEAA,KAAAukB,wBACAvkB,KAAAwkB,qBAAAvoB,EAEAqoB,EAAA,SAAArM,EAAAwM,GACA,IAAAz5B,EAAA,EAQAy5B,EAAAC,4BACA15B,GAAAitB,EAAAjtB,GAAA,GAGA,QAAAy5B,EAAAvvB,KACA8sB,EAAA/J,EAAArtB,SAAAI,GAAAy5B,GAEAxC,EAAAhK,EAAArtB,SAAAI,GAAAy5B,IAIAzC,EAAA,SAAA/J,EAAA0M,GACAA,EAAAC,eAAA3M,EAAA,GACA0M,EAAAE,oBAAA5M,EAAA,GAGA2B,EAAAkL,QAAA,GAAA7M,EAAA,QAAAA,EAAA,IACA0M,EAAAG,OAAAlL,EAAAkL,QAWA7C,EAAA,SAAAhK,EAAA2I,GACA,IAAAmE,EAAA/5B,EAOA,KAAAitB,EAAA,IAqBA,IAhBA2B,EAAA4K,iBACAzM,MAAA,KACAC,MAAA,KACAgN,qBAKAD,EAAA,IADA,GAAA9M,EAAA,OAAAA,EAAA,IACA,EAOAjtB,EAAA,KAHA,GAAAitB,EAAA,QAAAA,EAAA,KAIAjtB,EAAA+5B,GAAA,CACA,IAAAv4B,EAAAyrB,EAAAjtB,GACAo2B,GAAA,GAAAnJ,EAAAjtB,EAAA,OAAAitB,EAAAjtB,EAAA,GAKAwB,IAAA8zB,EAAA6B,kBACA,OAAAvI,EAAA4K,gBAAAzM,MACA6B,EAAA4K,gBAAAzM,MAAAqJ,EACO50B,IAAA8zB,EAAA8B,kBACP,OAAAxI,EAAA4K,gBAAAxM,MACA4B,EAAA4K,gBAAAxM,MAAAoJ,EACO50B,IAAA8zB,EAAA2E,uBAEPrL,EAAA4K,gBAAA,kBAAApD,GAAA50B,GAKAxB,GAAA,OAAAitB,EAAAjtB,EAAA,OAAAitB,EAAAjtB,EAAA,IAIA41B,EAAA4D,gBAAA5K,EAAA4K,kBAMAxkB,KAAArU,KAAA,SAAAk1B,GACA,IACA31B,KACAF,EAAA,EAmBA,GAjBAE,EAAAw5B,6BAAA,GAAA7D,EAAA,IAGA31B,EAAAk2B,IAAA,GAAAP,EAAA,GACA31B,EAAAk2B,MAAA,EACAl2B,EAAAk2B,KAAAP,EAAA,IAOA,GAAAA,EAAA,YACA71B,GAAA61B,EAAA71B,GAAA,GAIA,IAAAE,EAAAk2B,IACAl2B,EAAAgK,KAAA,MACAovB,EAAAzD,EAAAj2B,SAAAI,GAAAE,GACA8U,KAAAokB,QAAA,OAAAl5B,QACK,GAAAA,EAAAk2B,MAAAphB,KAAA8kB,OAML,IALA55B,EAAAgK,KAAA,MACAovB,EAAAzD,EAAAj2B,SAAAI,GAAAE,GACA8U,KAAAokB,QAAA,OAAAl5B,GAGA8U,KAAAukB,qBAAA33B,QACAoT,KAAAklB,YAAAzsB,MAAAuH,UAAAukB,qBAAApnB,mBAEKlB,IAAA+D,KAAAwkB,gBAGLxkB,KAAAukB,qBAAA54B,MAAAk1B,EAAA71B,EAAAE,IAEA8U,KAAAklB,YAAArE,EAAA71B,EAAAE,IAIA8U,KAAAklB,YAAA,SAAArE,EAAA71B,EAAAE,GAEAA,EAAAk2B,MAAAphB,KAAAwkB,gBAAAzM,MACA7sB,EAAAsB,WAAA8zB,EAAA6B,iBACKj3B,EAAAk2B,MAAAphB,KAAAwkB,gBAAAxM,MACL9sB,EAAAsB,WAAA8zB,EAAA8B,iBAIAl3B,EAAAsB,WAAAwT,KAAAwkB,gBAAA,kBAAAt5B,EAAAk2B,KAGAl2B,EAAAgK,KAAA,MACAhK,EAAArB,KAAAg3B,EAAAj2B,SAAAI,GAEAgV,KAAAokB,QAAA,OAAAl5B,MAIAoL,UAAA,IAAAwtB,EACAF,EAAAuB,cACAC,KAAA,GACAC,KAAA,KAWAxB,EAAA,WACA,IACAjK,EAAA5Z,KAEA+X,GACAluB,QACA8K,KAAA,GAEAqjB,GACAnuB,QACA8K,KAAA,GAEA2wB,GACAz7B,QACA8K,KAAA,GAqDA4wB,EAAA,SAAAC,EAAAtwB,EAAAuwB,GACA,IAOAC,EACAptB,EAPAqtB,EAAA,IAAA/5B,WAAA45B,EAAA7wB,MACAmL,GACA5K,QAEAjK,EAAA,EACAD,EAAA,EAMA,GAAAw6B,EAAA37B,KAAA+C,UAAA44B,EAAA7wB,KAAA,IAMA,IAHAmL,EAAAvN,QAAAizB,EAAA37B,KAAA,GAAAu3B,IAGAn2B,EAAA,EAAiBA,EAAAu6B,EAAA37B,KAAA+C,OAAwB3B,IACzCqN,EAAAktB,EAAA37B,KAAAoB,GAEA06B,EAAAxN,IAAA7f,EAAAzO,KAAAmB,GACAA,GAAAsN,EAAAzO,KAAAK,WA1EA,IAAA+tB,EAAA0J,EACAiE,EADA3N,EA8EA0N,GA9EAhE,EA8EA7hB,GA1EA+lB,aAAA,GAAA5N,EAAA,MAAAA,EAAA,IAGA0J,EAAAmE,uBAAA,MAAA7N,EAAA,IAcA,KAVA2N,EAAA3N,EAAA,MAcA0J,EAAAuB,KAAA,GAAAjL,EAAA,SACA,IAAAA,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,SACA,IAAAA,EAAA,SACA0J,EAAAuB,KAAA,EACAvB,EAAAuB,MAAA,EAAAjL,EAAA,SACA0J,EAAAsB,IAAAtB,EAAAuB,IACA,GAAA0C,IACAjE,EAAAsB,KAAA,GAAAhL,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,SACA,IAAAA,EAAA,SACA0J,EAAAsB,KAAA,EACAtB,EAAAsB,MAAA,EAAAhL,EAAA,WAMA0J,EAAA93B,KAAAouB,EAAArtB,SAAA,EAAAqtB,EAAA,IAoCAyN,EAAA,UAAAxwB,GAAA4K,EAAA+lB,cAAAL,EAAA7wB,MAGA8wB,GAAAC,KACAF,EAAA7wB,KAAA,EACA6wB,EAAA37B,KAAA+C,OAAA,GAKA84B,GACA9L,EAAAwK,QAAA,OAAAtkB,KAIA+jB,EAAAvtB,UAAA6B,KAAA3B,KAAAwJ,MAMAA,KAAArU,KAAA,SAAA9B,KAEA86B,IAAA,aAIAhD,IAAA,WACA,IAAA6D,EAAAh5B,EAEA,OAAA3C,EAAA2C,YACA,KAAA8zB,EAAA6B,iBACA,KAAA8B,EAAA9B,iBACAqD,EAAAzN,EACAvrB,EAAA,QACA,MACA,KAAA8zB,EAAA8B,iBACAoD,EAAAxN,EACAxrB,EAAA,QACA,MACA,KAAA8zB,EAAA2E,qBACAO,EAAAF,EACA94B,EAAA,iBACA,MACA,QAEA,OAKA3C,EAAA66B,2BACAa,EAAAC,EAAAh5B,GAAA,GAKAg5B,EAAA37B,KAAA8B,KAAA9B,GACA27B,EAAA7wB,MAAA9K,OAAAK,YAEA02B,IAAA,WACA,IACA9gB,GACA5K,KAAA,WACAqjB,WAEAiM,EAAA36B,EAAA26B,gBAGA,OAAAA,EAAAzM,OACAjY,EAAAyY,OAAA5sB,MACAo6B,mBACA5zB,oBAAA,GAEAkG,IAAAmsB,EAAAzM,MACAiO,MAAA,MACA9wB,KAAA,UAGA,OAAAsvB,EAAAxM,OACAlY,EAAAyY,OAAA5sB,MACAo6B,mBACA5zB,oBAAA,GAEAkG,IAAAmsB,EAAAxM,MACAgO,MAAA,OACA9wB,KAAA,UAIA0kB,EAAAwK,QAAA,OAAAtkB,MAEKjW,EAAAqL,SAYL8K,KAAAqkB,MAAA,WAGAkB,EAAAxN,EAAA,SACAwN,EAAAvN,EAAA,SACAuN,EAAAD,EAAA,kBACAtlB,KAAAokB,QAAA,WAGA9tB,UAAA,IAAAwtB,EAEA,IAAAmC,GACAC,QAAA,EACAC,mBA/dA,IAgeAxC,wBACAC,uBACAC,mBACAG,0BACAD,8BACAqC,aAAArC,EAAAqC,aACAC,eAAkBv9B,EAAQ,SAG1B,QAAAoM,KAAAorB,EACAA,EAAA5V,eAAAxV,KACA+wB,EAAA/wB,GAAAorB,EAAAprB,IAIA8B,EAAAC,QAAAgvB,uCCpgBA,IAAAK,EAAYx9B,EAAQ,QAEpBkO,EAAAC,QAAA,SAAA+lB,EAAAuJ,GACAD,EAAAvtB,QAAAikB,EAAA,SAAA5mB,EAAAzI,GACAA,IAAA44B,GAAA54B,EAAA2Y,gBAAAigB,EAAAjgB,gBACA0W,EAAAuJ,GAAAnwB,SACA4mB,EAAArvB;;ACPA,SAAA64B,IAeA,OAdAA,EAAAzwB,OAAA0wB,QAAA,SAAA7lB,GACA,QAAA3V,EAAA,EAAmBA,EAAA8kB,UAAAnjB,OAAsB3B,IAAA,CACzC,IAAAkc,EAAA4I,UAAA9kB,GAEA,QAAAiL,KAAAiR,EACApR,OAAAO,UAAAoU,eAAAlU,KAAA2Q,EAAAjR,KACA0K,EAAA1K,GAAAiR,EAAAjR,IAKA,OAAA0K,IAGAnI,MAAAuH,KAAA+P,WAGA,SAAA2W,EAAAC,EAAAC,GACAD,EAAArwB,UAAAP,OAAA0R,OAAAmf,EAAAtwB,WACAqwB,EAAArwB,UAAAid,YAAAoT,EACAA,EAAArT,UAAAsT,EAGA,SAAAC,EAAAjN,GACA,YAAAA,EACA,UAAAkN,eAAA,6DAGA,OAAAlN,EAYA,IAAAkK,EAEA,WACA,SAAAA,IACA9jB,KAAA+mB,aAWA,IAAAC,EAAAlD,EAAAxtB,UAyFA,OAvFA0wB,EAAA/lB,GAAA,SAAA/L,EAAA+xB,GACAjnB,KAAA+mB,UAAA7xB,KACA8K,KAAA+mB,UAAA7xB,OAGA8K,KAAA+mB,UAAA7xB,GAAAvJ,KAAAs7B,IAYAD,EAAAE,IAAA,SAAAhyB,EAAA+xB,GACA,IAAAjnB,KAAA+mB,UAAA7xB,GACA,SAGA,IAAAY,EAAAkK,KAAA+mB,UAAA7xB,GAAAqE,QAAA0tB,GAEA,OADAjnB,KAAA+mB,UAAA7xB,GAAAmU,OAAAvT,EAAA,GACAA,GAAA,GAUAkxB,EAAA5C,QAAA,SAAAlvB,GACA,IACAjK,EACA2B,EACAkjB,EAHAqX,EAAAnnB,KAAA+mB,UAAA7xB,GAKA,GAAAiyB,EAQA,OAAApX,UAAAnjB,OAGA,IAFAA,EAAAu6B,EAAAv6B,OAEA3B,EAAA,EAAiBA,EAAA2B,IAAY3B,EAC7Bk8B,EAAAl8B,GAAAuL,KAAAwJ,KAAA+P,UAAA,SAMA,IAHAD,EAAAna,MAAAW,UAAAC,MAAAC,KAAAuZ,UAAA,GACAnjB,EAAAu6B,EAAAv6B,OAEA3B,EAAA,EAAiBA,EAAA2B,IAAY3B,EAC7Bk8B,EAAAl8B,GAAAwN,MAAAuH,KAAA8P,IASAkX,EAAAI,QAAA,WACApnB,KAAA+mB,cAYAC,EAAAK,KAAA,SAAAC,GACAtnB,KAAAiB,GAAA,gBAAApX,GACAy9B,EAAA37B,KAAA9B,MAIAi6B,EAtGA,GAiHAyD,EAEA,SAAAC,GAGA,SAAAD,IACA,IAAAE,EAIA,OAFAA,EAAAD,EAAAhxB,KAAAwJ,aACAhW,OAAA,GACAy9B,EAsBA,OA7BAf,EAAAa,EAAAC,GAgBAD,EAAAjxB,UAEA3K,KAAA,SAAA9B,GACA,IAAA69B,EAIA,IAHA1nB,KAAAhW,QAAAH,EACA69B,EAAA1nB,KAAAhW,OAAAuP,QAAA,MAEUmuB,GAAA,EAAkBA,EAAA1nB,KAAAhW,OAAAuP,QAAA,MAC5ByG,KAAAokB,QAAA,OAAApkB,KAAAhW,OAAA29B,UAAA,EAAAD,IACA1nB,KAAAhW,OAAAgW,KAAAhW,OAAA29B,UAAAD,EAAA,IAIAH,EA9BA,CA+BCzD,GAuBD8D,EAAA,SAAAC,GAOA,IALA,IAGAC,EAHA3rB,EAAA0rB,EAAA9wB,MAXA,IAAAkO,OAAA,yCAYA/Z,KACAD,EAAAkR,EAAAvP,OAGA3B,KAEA,KAAAkR,EAAAlR,MAKA68B,EAAA,eAAAziB,KAAAlJ,EAAAlR,IAAAsL,MAAA,IAEA,GAAAuxB,EAAA,GAAAlrB,QAAA,iBACAkrB,EAAA,GAAAA,EAAA,GAAAlrB,QAAA,iBACAkrB,EAAA,GAAAA,EAAA,GAAAlrB,QAAA,wBACA1R,EAAA48B,EAAA,IAAAA,EAAA,IAGA,OAAA58B,GA4BA68B,EAEA,SAAAP,GAGA,SAAAO,IACA,IAAAN,EAKA,OAHAA,EAAAD,EAAAhxB,KAAAwJ,aACAgoB,iBACAP,EAAAQ,cACAR,EARAf,EAAAqB,EAAAP,GAiBA,IAAAR,EAAAe,EAAAzxB,UA0hBA,OAxhBA0wB,EAAAr7B,KAAA,SAAAiL,GACA,IAEAD,EACAmJ,EAHAooB,EAAAloB,KAOA,KAFApJ,IAAAc,QAEA9K,SAMA,MAAAgK,EAAA,GASAoJ,KAAAioB,WAAA7vB,OAAA,SAAA+vB,EAAAC,GACA,IAAAC,EAAAD,EAAAxxB,GAEA,OAAAyxB,IAAAzxB,EACAuxB,EAGAA,EAAAjwB,QAAAmwB,MACKzxB,IACLmC,QAAA,SAAAuvB,GACA,QAAAr9B,EAAA,EAAqBA,EAAAi9B,EAAAF,cAAAp7B,OAAiC3B,IACtD,GAAAi9B,EAAAF,cAAA/8B,GAAAuL,KAAA0xB,EAAAI,GACA,OAKA,OAAAA,EAAA/uB,QAAA,QAeA,GAJA+uB,IAAA1rB,QAAA,SAEAjG,EAAA,WAAA0O,KAAAijB,GAGAJ,EAAA9D,QAAA,QACAlvB,KAAA,MACAqzB,QAAA,YAHA,CAWA,GAFA5xB,EAAA,gCAAA0O,KAAAijB,GAkBA,OAfAxoB,GACA5K,KAAA,MACAqzB,QAAA,OAGA5xB,EAAA,KACAmJ,EAAApR,SAAA85B,WAAA7xB,EAAA,KAGAA,EAAA,KACAmJ,EAAA2oB,MAAA9xB,EAAA,SAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,qCAAA0O,KAAAijB,GAcA,OAXAxoB,GACA5K,KAAA,MACAqzB,QAAA,kBAGA5xB,EAAA,KACAmJ,EAAApR,SAAAg6B,SAAA/xB,EAAA,aAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,mCAAA0O,KAAAijB,GAcA,OAXAxoB,GACA5K,KAAA,MACAqzB,QAAA,iBAGA5xB,EAAA,KACAmJ,EAAApR,SAAAg6B,SAAA/xB,EAAA,aAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,8BAAA0O,KAAAijB,GAcA,OAXAxoB,GACA5K,KAAA,MACAqzB,QAAA,WAGA5xB,EAAA,KACAmJ,EAAA3T,QAAAu8B,SAAA/xB,EAAA,aAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,wCAAA0O,KAAAijB,GAcA,OAXAxoB,GACA5K,KAAA,MACAqzB,QAAA,kBAGA5xB,EAAA,KACAmJ,EAAA6oB,OAAAD,SAAA/xB,EAAA,aAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,gDAAA0O,KAAAijB,GAcA,OAXAxoB,GACA5K,KAAA,MACAqzB,QAAA,0BAGA5xB,EAAA,KACAmJ,EAAA6oB,OAAAD,SAAA/xB,EAAA,aAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,gCAAA0O,KAAAijB,GAcA,OAXAxoB,GACA5K,KAAA,MACAqzB,QAAA,iBAGA5xB,EAAA,KACAmJ,EAAA8oB,aAAAjyB,EAAA,SAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,4CAAA0O,KAAAijB,GAkBA,OAfAxoB,GACA5K,KAAA,MACAqzB,QAAA,aAGA5xB,EAAA,KACAmJ,EAAAlT,OAAA87B,SAAA/xB,EAAA,QAGAA,EAAA,KACAmJ,EAAA9U,OAAA09B,SAAA/xB,EAAA,aAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,iCAAA0O,KAAAijB,GAcA,OAXAxoB,GACA5K,KAAA,MACAqzB,QAAA,eAGA5xB,EAAA,KACAmJ,EAAA+oB,SAAA,KAAA7mB,KAAArL,EAAA,UAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,qBAAA0O,KAAAijB,GAEA,CAMA,GALAxoB,GACA5K,KAAA,MACAqzB,QAAA,OAGA5xB,EAAA,IACA,IAAAkxB,EAAAD,EAAAjxB,EAAA,IAMA,GAJAkxB,EAAAiB,MACAhpB,EAAAyb,IAAAsM,EAAAiB,KAGAjB,EAAAkB,UAAA,CACA,IAAAC,EAAAnB,EAAAkB,UAAAhyB,MAAA,KACAnK,EAAAo8B,EAAA,GACAh+B,EAAAg+B,EAAA,GAEAlpB,EAAAmpB,aAEAr8B,IACAkT,EAAAmpB,UAAAr8B,OAAA87B,SAAA97B,EAAA,KAGA5B,IACA8U,EAAAmpB,UAAAj+B,OAAA09B,SAAA19B,EAAA,MAKAk9B,EAAA9D,QAAA,OAAAtkB,QAOA,GAFAnJ,EAAA,4BAAA0O,KAAAijB,GAEA,CAMA,GALAxoB,GACA5K,KAAA,MACAqzB,QAAA,cAGA5xB,EAAA,IAGA,GAFAmJ,EAAA+nB,WAAAD,EAAAjxB,EAAA,IAEAmJ,EAAA+nB,WAAAqB,WAAA,CACA,IAAAnyB,EAAA+I,EAAA+nB,WAAAqB,WAAAnyB,MAAA,KACAoyB,KAEApyB,EAAA,KACAoyB,EAAA9+B,MAAAq+B,SAAA3xB,EAAA,QAGAA,EAAA,KACAoyB,EAAA7+B,OAAAo+B,SAAA3xB,EAAA,QAGA+I,EAAA+nB,WAAAqB,WAAAC,EAGArpB,EAAA+nB,WAAAuB,YACAtpB,EAAA+nB,WAAAuB,UAAAV,SAAA5oB,EAAA+nB,WAAAuB,UAAA,KAGAtpB,EAAA+nB,WAAA,gBACA/nB,EAAA+nB,WAAA,cAAAa,SAAA5oB,EAAA+nB,WAAA,mBAIAK,EAAA9D,QAAA,OAAAtkB,OAjCA,CAwCA,GAFAnJ,EAAA,uBAAA0O,KAAAijB,GAcA,OAXAxoB,GACA5K,KAAA,MACAqzB,QAAA,SAGA5xB,EAAA,KACAmJ,EAAA+nB,WAAAD,EAAAjxB,EAAA,UAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,kBAAA0O,KAAAijB,GAGAJ,EAAA9D,QAAA,QACAlvB,KAAA,MACAqzB,QAAA,iBAQA,GAFA5xB,EAAA,wBAAA0O,KAAAijB,GAGAJ,EAAA9D,QAAA,QACAlvB,KAAA,MACAqzB,QAAA,sBAHA,CAWA,GAFA5xB,EAAA,mCAAA0O,KAAAijB,GAeA,OAZAxoB,GACA5K,KAAA,MACAqzB,QAAA,qBAGA5xB,EAAA,KACAmJ,EAAAupB,eAAA1yB,EAAA,GACAmJ,EAAAwpB,eAAA,IAAArgC,KAAA0N,EAAA,UAGAuxB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,qBAAA0O,KAAAijB,GA2BA,OAxBAxoB,GACA5K,KAAA,MACAqzB,QAAA,OAGA5xB,EAAA,KACAmJ,EAAA+nB,WAAAD,EAAAjxB,EAAA,IAEAmJ,EAAA+nB,WAAA0B,KACA,OAAAzpB,EAAA+nB,WAAA0B,GAAA5B,UAAA,KAAA6B,gBACA1pB,EAAA+nB,WAAA0B,GAAAzpB,EAAA+nB,WAAA0B,GAAA5B,UAAA,IAGA7nB,EAAA+nB,WAAA0B,GAAAzpB,EAAA+nB,WAAA0B,GAAA5yB,MAAA,SACAmJ,EAAA+nB,WAAA0B,GAAA,GAAAb,SAAA5oB,EAAA+nB,WAAA0B,GAAA,OACAzpB,EAAA+nB,WAAA0B,GAAA,GAAAb,SAAA5oB,EAAA+nB,WAAA0B,GAAA,OACAzpB,EAAA+nB,WAAA0B,GAAA,GAAAb,SAAA5oB,EAAA+nB,WAAA0B,GAAA,OACAzpB,EAAA+nB,WAAA0B,GAAA,GAAAb,SAAA5oB,EAAA+nB,WAAA0B,GAAA,OACAzpB,EAAA+nB,WAAA0B,GAAA,IAAA55B,YAAAmQ,EAAA+nB,WAAA0B,WAIArB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,uBAAA0O,KAAAijB,GAgBA,OAbAxoB,GACA5K,KAAA,MACAqzB,QAAA,SAGA5xB,EAAA,KACAmJ,EAAA+nB,WAAAD,EAAAjxB,EAAA,IACAmJ,EAAA+nB,WAAA,eAAAW,WAAA1oB,EAAA+nB,WAAA,gBACA/nB,EAAA+nB,WAAA4B,QAAA,MAAAznB,KAAAlC,EAAA+nB,WAAA4B,eAGAvB,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,+BAAA0O,KAAAijB,GAgBA,OAbAxoB,GACA5K,KAAA,MACAqzB,QAAA,gBAGA5xB,EAAA,GACAmJ,EAAAjW,KAAA8M,EAAA,GAEAmJ,EAAAjW,KAAA,QAGAq+B,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,0BAAA0O,KAAAijB,GAgBA,OAbAxoB,GACA5K,KAAA,MACAqzB,QAAA,WAGA5xB,EAAA,GACAmJ,EAAAjW,KAAA8M,EAAA,GAEAmJ,EAAAjW,KAAA,QAGAq+B,EAAA9D,QAAA,OAAAtkB,GAOA,GAFAnJ,EAAA,yBAAA0O,KAAAijB,GAgBA,OAbAxoB,GACA5K,KAAA,MACAqzB,QAAA,UAGA5xB,EAAA,GACAmJ,EAAAjW,KAAA8M,EAAA,GAEAmJ,EAAAjW,KAAA,QAGAq+B,EAAA9D,QAAA,OAAAtkB,GAMAooB,EAAA9D,QAAA,QACAlvB,KAAA,MACArL,KAAAy+B,EAAA/xB,MAAA,YA3aA2xB,EAAA9D,QAAA,QACAlvB,KAAA,UACAw0B,KAAApB,EAAA/xB,MAAA,OA5BAyJ,KAAAokB,QAAA,QACAlvB,KAAA,MACAqmB,IAAA3kB,MAkdAowB,EAAA2C,UAAA,SAAAC,GACA,IAAAC,EAAA7pB,KAEA8pB,EAAAF,EAAAE,WACAC,EAAAH,EAAAG,WACAC,EAAAJ,EAAAI,WACA5lB,EAAAwlB,EAAAxlB,QAEA,mBAAA4lB,IACAA,EAAA,SAAApzB,GACA,OAAAA,IAIAoJ,KAAAgoB,cAAAr8B,KAAA,SAAAiL,GAGA,GAFAkzB,EAAAzkB,KAAAzO,GAUA,OAPAizB,EAAAzF,QAAA,QACAlvB,KAAA,SACArL,KAAAmgC,EAAApzB,GACAmzB,aACA3lB,aAGA,KAaA4iB,EAAAiD,aAAA,SAAAC,GACA,IAAAJ,EAAAI,EAAAJ,WACAj0B,EAAAq0B,EAAAr0B,IAUAmK,KAAAioB,WAAAt8B,KARA,SAAAiL,GACA,OAAAkzB,EAAA9nB,KAAApL,GACAf,EAAAe,GAGAA,KAMAmxB,EA5iBA,CA6iBCjE,GAwBDqG,EAEA,SAAA3C,GAGA,SAAA2C,IACA,IAAA1C,GAEAA,EAAAD,EAAAhxB,KAAAwJ,aACAoqB,WAAA,IAAA7C,EACAE,EAAA4C,YAAA,IAAAtC,EAEAN,EAAA2C,WAAA/C,KAAAI,EAAA4C,aAIA,IAOAC,EAEA9e,EATAoO,EAAAiN,IAAAY,IAIA8C,KACAC,KAQAC,GACAC,SACAC,SACAC,qBACAC,cAGAC,EAAA,EAkUA,OAhUArD,EAAAsD,UACAC,YAAA,EACAC,uBACA9mB,aAGAsjB,EAAA4C,YAAAppB,GAAA,gBAAAiqB,GACA,IAAAC,EACAC,IAEAz+B,IAAA,cAGA0+B,cAAA,WACArrB,KAAA+qB,SAAAC,WAAAE,EAAArC,QAEA,YAAAqC,IACAlrB,KAAAokB,QAAA,QACAhrB,QAAA,iCAEA4G,KAAA+qB,SAAAC,YAAA,IAGA/B,UAAA,WACA,IAAAA,KAEA,WAAAiC,IACAV,EAAAvB,YACAA,EAAAr8B,OAAAs+B,EAAAt+B,OAEA,WAAAs+B,IACAlrB,KAAAokB,QAAA,QACAhrB,QAAA,8BAEA8xB,EAAAlgC,OAAA,IAIA,WAAAkgC,IACAV,EAAAvB,YACAA,EAAAj+B,OAAAkgC,EAAAlgC,SAGAsgC,QAAA,WACAtrB,KAAA+qB,SAAAQ,SAAA,GAEAC,IAAA,WACA,kBAAAxrB,KAAA+qB,WACA/qB,KAAA+qB,SAAAU,cAAA,EACAzrB,KAAAokB,QAAA,QACAhrB,QAAA,uCAIA,0BAAA4G,KAAA+qB,WACA/qB,KAAA+qB,SAAAW,sBAAA,EACA1rB,KAAAokB,QAAA,QACAhrB,QAAA,+CAIA8xB,EAAAx8B,SAAA,IACA87B,EAAA97B,SAAAw8B,EAAAx8B,UAGA,IAAAw8B,EAAAx8B,WACA87B,EAAA97B,SAAA,IACAsR,KAAAokB,QAAA,QACAhrB,QAAA,qDAIA4G,KAAA+qB,SAAA5mB,SAAAomB,GAEAr0B,IAAA,WACAg1B,EAAArD,WAQA,SAAAqD,EAAArD,WAAA8D,OAKAT,EAAArD,WAAAiB,KAOAoC,EAAArD,WAAA8D,QACA3rB,KAAAokB,QAAA,QACAhrB,QAAA,qCAKAoS,GACAuR,OAAAmO,EAAArD,WAAA8D,QAAA,UACApQ,IAAA2P,EAAArD,WAAAiB,UAGA,IAAAoC,EAAArD,WAAA0B,KACA/d,EAAAogB,GAAAV,EAAArD,WAAA0B,KAnBAvpB,KAAAokB,QAAA,QACAhrB,QAAA,yCANAoS,EAAA,KARAxL,KAAAokB,QAAA,QACAhrB,QAAA,qDAkCAyyB,iBAAA,WACAhzB,SAAAqyB,EAAAvC,QAOA3oB,KAAA+qB,SAAAU,cAAAP,EAAAvC,OANA3oB,KAAAokB,QAAA,QACAhrB,QAAA,oCAAA8xB,EAAAvC,UAOAmD,yBAAA,WACAjzB,SAAAqyB,EAAAvC,SAOA3oB,KAAA+qB,SAAAW,sBAAAR,EAAAvC,OACAmC,EAAAI,EAAAvC,QAPA3oB,KAAAokB,QAAA,QACAhrB,QAAA,4CAAA8xB,EAAAvC,UAQAoD,gBAAA,WACA,YAAA/pB,KAAAkpB,EAAAtC,cAOA5oB,KAAA+qB,SAAAnC,aAAAsC,EAAAtC,aANA5oB,KAAAokB,QAAA,QACAhrB,QAAA,mCAAA8xB,EAAAc,YAOAn2B,IAAA,WACAy0B,KAEAY,EAAA3P,MACA+O,EAAA/O,IAAA2P,EAAA3P,KAGA2P,EAAAjC,YACAqB,EAAArB,UAAAiC,EAAAjC,YAGAgD,aAAA,WACAjsB,KAAA+qB,SAAAmB,UAAA3B,EACAvqB,KAAA+qB,SAAAoB,YAAAnsB,KAAA+qB,SAAAoB,aAAA1B,EAEAS,EAAArD,YAOA2C,EAAA3C,aACA2C,EAAA3C,eAGArB,EAAAgE,EAAA3C,WAAAqD,EAAArD,aAVA7nB,KAAAokB,QAAA,QACAhrB,QAAA,0CAWAgzB,MAAA,WAGA,GAFApsB,KAAA+qB,SAAAoB,YAAAnsB,KAAA+qB,SAAAoB,aAAA1B,EAEAS,EAAArD,YAAAqD,EAAArD,WAAAwE,MAAAnB,EAAArD,WAAA,aAAAqD,EAAArD,WAAAyE,KAAA,CAQA,IAAAC,EAAAvsB,KAAA+qB,SAAAoB,YAAAjB,EAAArD,WAAAwE,MACAE,EAAArB,EAAArD,WAAA,aAAA0E,EAAArB,EAAArD,WAAA,iBACAsD,EAAAoB,EAAArB,EAAArD,WAAA,cAEAuD,GACAtxB,QAAA,OAAAkI,KAAAkpB,EAAArD,WAAA2E,WAGA1yB,QACAsxB,EAAAqB,YAAA,EAEArB,EAAAqB,WAAA,OAAAzqB,KAAAkpB,EAAArD,WAAA6E,YAGAxB,EAAArD,WAAA8E,WACAvB,EAAA98B,SAAA48B,EAAArD,WAAA8E,UAGAzB,EAAArD,WAAAiB,MACAsC,EAAA7P,IAAA2P,EAAArD,WAAAiB,KAGAoC,EAAArD,WAAA,iBACAuD,EAAAwB,WAAA1B,EAAArD,WAAA,gBAGAqD,EAAArD,WAAAgF,kBACAzB,EAAA0B,gBAAA5B,EAAArD,WAAAgF,iBAGA3B,EAAArD,WAAAkF,SACA3B,EAAA4B,OAAA,OAAAhrB,KAAAkpB,EAAArD,WAAAkF,SAIA5B,EAAAD,EAAArD,WAAAyE,MAAAlB,OA1CAprB,KAAAokB,QAAA,QACAhrB,QAAA,gDA2CA6zB,cAAA,WACAnC,GAAA,EACAN,EAAAyC,eAAA,EACAjtB,KAAA+qB,SAAAE,oBAAAt/B,KAAA4+B,EAAA39B,SAEAsgC,oBAAA,gBACA,IAAAltB,KAAA+qB,SAAA1B,iBAKArpB,KAAA+qB,SAAA1B,eAAA6B,EAAA7B,eACArpB,KAAA+qB,SAAAzB,eAAA4B,EAAA5B,gBAGAkB,EAAAnB,eAAA6B,EAAA7B,eACAmB,EAAAlB,eAAA4B,EAAA5B,gBAEA6D,eAAA,YACAt0B,SAAAqyB,EAAAx8B,WAAAw8B,EAAAx8B,SAAA,EACAsR,KAAAokB,QAAA,QACAhrB,QAAA,qCAAA8xB,EAAAx8B,WAKAsR,KAAA+qB,SAAAqC,eAAAlC,EAAAx8B,UAEA2+B,cAAA,YACAx0B,SAAAqyB,EAAAx8B,WAAAw8B,EAAAx8B,SAAA,EACAsR,KAAAokB,QAAA,QACAhrB,QAAA,oCAAA8xB,EAAAx8B,WAKAsR,KAAA+qB,SAAAuC,cAAApC,EAAAx8B,UAEA6+B,MAAA,WACArC,EAAArD,aAAA2F,MAAAtC,EAAArD,WAAA,gBAOA7nB,KAAA+qB,SAAAwC,OACAE,WAAAvC,EAAArD,WAAA,eACA6F,QAAAxC,EAAArD,WAAA4B,SARAzpB,KAAAokB,QAAA,QACAhrB,QAAA,mEAUAu0B,UAAA,WACAnD,EAAAoD,OAAA1C,EAAArhC,MAEAgkC,eAAA,WACArD,EAAAsD,WAAA5C,EAAArhC,MAEAkkC,SAAA,WACAvD,EAAAwD,MAAA9C,EAAArhC,QAEWqhC,EAAA3C,UAjSX,cAiSW/xB,KAAAojB,IAEX2B,IAAA,WACAiP,EAAAjP,IAAA2P,EAAA3P,IACAgP,EAAA5+B,KAAA6+B,IAEAxqB,KAAA+qB,SAAAqC,gBAAA,aAAA5C,IACAxqB,KAAAokB,QAAA,QACAhrB,QAAA,uDAEAoxB,EAAA97B,SAAAsR,KAAA+qB,SAAAqC,gBAIA5hB,IACAgf,EAAAt0B,IAAAsV,GAGAgf,EAAAyD,SAAAnD,EAEAR,IACAE,EAAA30B,IAAAy0B,GAIAE,MAEA0D,QAAA,aAEAC,OAAA,WAEAjD,EAAA9mB,SACAomB,EAAA2D,OAAA3D,EAAA2D,WACA3D,EAAA2D,OAAAjD,EAAAnB,YAAAmB,EAAArhC,OAEAmW,KAAA+qB,SAAAoD,OAAAnuB,KAAA+qB,SAAAoD,WACAnuB,KAAA+qB,SAAAoD,OAAAjD,EAAAnB,YAAAmB,EAAArhC,SAGOqhC,EAAAh2B,MAAAsB,KAAAojB,KAGP6N,EAnWAf,EAAAyD,EAAA3C,GA4WA,IAAAR,EAAAmD,EAAA7zB,UA2CA,OAzCA0wB,EAAAr7B,KAAA,SAAAyiC,GACApuB,KAAAoqB,WAAAz+B,KAAAyiC,IASApH,EAAA7xB,IAAA,WAEA6K,KAAAoqB,WAAAz+B,KAAA,OAaAq7B,EAAA2C,UAAA,SAAA3rB,GACAgC,KAAAqqB,YAAAV,UAAA3rB,IAWAgpB,EAAAiD,aAAA,SAAAjsB,GACAgC,KAAAqqB,YAAAJ,aAAAjsB,IAGAmsB,EAxZA,CAyZCrG,qEClsCD,ICrCAuK,EAAA,SAAAzd,EAAA0d,GACA,KAAA1d,aAAA0d,GACA,UAAA3nB,UAAA,sCAIA4nB,EAAA,WACA,SAAA1Y,EAAAjV,EAAA/G,GACA,QAAA5O,EAAA,EAAmBA,EAAA4O,EAAAjN,OAAkB3B,IAAA,CACrC,IAAAujC,EAAA30B,EAAA5O,GACAujC,EAAApY,WAAAoY,EAAApY,aAAA,EACAoY,EAAAxZ,cAAA,EACA,UAAAwZ,MAAAhY,UAAA,GACAzgB,OAAAkN,eAAArC,EAAA4tB,EAAAt4B,IAAAs4B,IAIA,gBAAAF,EAAAG,EAAAC,GAGA,OAFAD,GAAA5Y,EAAAyY,EAAAh4B,UAAAm4B,GACAC,GAAA7Y,EAAAyY,EAAAI,GACAJ,GAdA,GAoDAK,EAAA,SAAA/U,EAAApjB,GACA,IAAAojB,EACA,UAAAkN,eAAA,6DAGA,OAAAtwB,GAAA,iBAAAA,GAAA,mBAAAA,EAAAojB,EAAApjB,GA+CAo4B,EAAA,WACA,IAAAC,sCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACA9jC,OAAA,EACAuS,OAAA,EACA0xB,OAAA,EACAC,KACAC,KACAC,OAAA,EACAC,OAAA,EAEAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAGA,IAAAxkC,EAAA,EAAaA,EAAA,IAASA,IACtBmkC,GAAAD,EAAAlkC,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAAuS,EAAA0xB,EAAA,GAAoBF,EAAAxxB,GAAUA,GAAA6xB,GAAA,EAAAH,EAAAE,EAAAF,IAAA,EAY9B,IATAK,GADAA,EAAAL,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,IACA,MAAAK,EAAA,GACAP,EAAAxxB,GAAA+xB,EACAN,EAAAM,GAAA/xB,EAIAiyB,EAAA,SADAN,EAAAG,EAAAH,EAAAE,EAAAF,EAAA3xB,KACA,MAAA8xB,EAAA,IAAAD,EAAA,SAAA7xB,EACAgyB,EAAA,IAAAL,EAAAI,GAAA,SAAAA,EAEAtkC,EAAA,EAAeA,EAAA,EAAOA,IACtB6jC,EAAA7jC,GAAAuS,GAAAgyB,KAAA,GAAAA,IAAA,EACAT,EAAA9jC,GAAAskC,GAAAE,KAAA,GAAAA,IAAA,EAKA,IAAAxkC,EAAA,EAAaA,EAAA,EAAOA,IACpB6jC,EAAA7jC,GAAA6jC,EAAA7jC,GAAAsL,MAAA,GACAw4B,EAAA9jC,GAAA8jC,EAAA9jC,GAAAsL,MAAA,GAEA,OAAAs4B,GAEAa,EAAA,KAUAC,EAAA,WACA,SAAAA,EAAAz5B,GACAm4B,EAAAruB,KAAA2vB,GAgBAD,IACAA,EAAAd,KAGA5uB,KAAA4vB,UAAAF,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,UAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,UACA,IAAAtL,OAAA,EACA2b,OAAA,EACAipB,OAAA,EACAC,OAAA,EACAC,OAAA,EACAf,EAAAhvB,KAAA4vB,QAAA,MACAb,EAAA/uB,KAAA4vB,QAAA,GACAI,EAAA95B,EAAAtJ,OACAqjC,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAtgB,MAAA,wBAQA,IALAogB,EAAA55B,EAAAK,MAAA,GACAw5B,KACA/vB,KAAAwL,MAAAskB,EAAAC,GAGA9kC,EAAA+kC,EAAoB/kC,EAAA,EAAA+kC,EAAA,GAAqB/kC,IACzC4kC,EAAAC,EAAA7kC,EAAA,IAGAA,EAAA+kC,GAAA,OAAAA,GAAA/kC,EAAA+kC,GAAA,KACAH,EAAAb,EAAAa,IAAA,QAAAb,EAAAa,GAAA,YAAAb,EAAAa,GAAA,UAAAb,EAAA,IAAAa,GAGA5kC,EAAA+kC,GAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAA7kC,GAAA6kC,EAAA7kC,EAAA+kC,GAAAH,EAIA,IAAAjpB,EAAA,EAAe3b,EAAG2b,IAAA3b,IAClB4kC,EAAAC,EAAA,EAAAlpB,EAAA3b,IAAA,GAEA8kC,EAAAnpB,GADA3b,GAAA,GAAA2b,EAAA,EACAipB,EAEAd,EAAA,GAAAC,EAAAa,IAAA,KAAAd,EAAA,GAAAC,EAAAa,GAAA,SAAAd,EAAA,GAAAC,EAAAa,GAAA,QAAAd,EAAA,GAAAC,EAAA,IAAAa,IA6DA,OAzCAF,EAAAr5B,UAAA45B,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvlC,GACA,IAAAkL,EAAA8J,KAAAwL,KAAA,GAEA/R,EAAA02B,EAAAj6B,EAAA,GACAwD,EAAA42B,EAAAp6B,EAAA,GACAoG,EAAA+zB,EAAAn6B,EAAA,GACAi5B,EAAAiB,EAAAl6B,EAAA,GACAs6B,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAC,EAAAz6B,EAAAtJ,OAAA,IACA3B,OAAA,EACA2lC,EAAA,EACAtP,EAAAthB,KAAA4vB,QAAA,GAGAiB,EAAAvP,EAAA,GACAwP,EAAAxP,EAAA,GACAyP,EAAAzP,EAAA,GACA0P,EAAA1P,EAAA,GACA0N,EAAA1N,EAAA,GAGA,IAAAr2B,EAAA,EAAeA,EAAA0lC,EAAkB1lC,IACjCulC,EAAAK,EAAAp3B,IAAA,IAAAq3B,EAAAp3B,GAAA,QAAAq3B,EAAAz0B,GAAA,OAAA00B,EAAA,IAAA7B,GAAAj5B,EAAA06B,GACAH,EAAAI,EAAAn3B,IAAA,IAAAo3B,EAAAx0B,GAAA,QAAAy0B,EAAA5B,GAAA,OAAA6B,EAAA,IAAAv3B,GAAAvD,EAAA06B,EAAA,GACAF,EAAAG,EAAAv0B,IAAA,IAAAw0B,EAAA3B,GAAA,QAAA4B,EAAAt3B,GAAA,OAAAu3B,EAAA,IAAAt3B,GAAAxD,EAAA06B,EAAA,GACAzB,EAAA0B,EAAA1B,IAAA,IAAA2B,EAAAr3B,GAAA,QAAAs3B,EAAAr3B,GAAA,OAAAs3B,EAAA,IAAA10B,GAAApG,EAAA06B,EAAA,GACAA,GAAA,EACAn3B,EAAA+2B,EAAa92B,EAAA+2B,EAAOn0B,EAAAo0B,EAIpB,IAAAzlC,EAAA,EAAeA,EAAA,EAAOA,IACtBslC,GAAA,GAAAtlC,GAAAD,GAAAgkC,EAAAv1B,IAAA,QAAAu1B,EAAAt1B,GAAA,YAAAs1B,EAAA1yB,GAAA,UAAA0yB,EAAA,IAAAG,GAAAj5B,EAAA06B,KACAJ,EAAA/2B,EAAaA,EAAAC,EAAMA,EAAA4C,EAAMA,EAAA6yB,EAAMA,EAAAqB,GAI/Bb,EA9HA,GAyIIsB,EAAM,WACV,SAAAnN,IACAuK,EAAAruB,KAAA8jB,GAEA9jB,KAAA+mB,aAmGA,OAvFAjD,EAAAxtB,UAAA2K,GAAA,SAAA/L,EAAA+xB,GACAjnB,KAAA+mB,UAAA7xB,KACA8K,KAAA+mB,UAAA7xB,OAEA8K,KAAA+mB,UAAA7xB,GAAAvJ,KAAAs7B,IAaAnD,EAAAxtB,UAAA4wB,IAAA,SAAAhyB,EAAA+xB,GACA,IAAAjnB,KAAA+mB,UAAA7xB,GACA,SAGA,IAAAY,EAAAkK,KAAA+mB,UAAA7xB,GAAAqE,QAAA0tB,GAGA,OADAjnB,KAAA+mB,UAAA7xB,GAAAmU,OAAAvT,EAAA,GACAA,GAAA,GAWAguB,EAAAxtB,UAAA8tB,QAAA,SAAAlvB,GACA,IAAAiyB,EAAAnnB,KAAA+mB,UAAA7xB,GAEA,GAAAiyB,EAQA,OAAApX,UAAAnjB,OAGA,IAFA,IAAAA,EAAAu6B,EAAAv6B,OAEA3B,EAAA,EAAqBA,EAAA2B,IAAY3B,EACjCk8B,EAAAl8B,GAAAuL,KAAAwJ,KAAA+P,UAAA,SAMA,IAHA,IAAAD,EAAAna,MAAAW,UAAAC,MAAAC,KAAAuZ,UAAA,GACAmhB,EAAA/J,EAAAv6B,OAEAukC,EAAA,EAAsBA,EAAAD,IAAcC,EACpChK,EAAAgK,GAAA14B,MAAAuH,KAAA8P,IAUAgU,EAAAxtB,UAAA8wB,QAAA,WACApnB,KAAA+mB,cAYAjD,EAAAxtB,UAAA+wB,KAAA,SAAAC,GACAtnB,KAAAiB,GAAA,gBAAApX,GACAy9B,EAAA37B,KAAA9B,MAIAi6B,EAvGU,GAqHVsN,EAAA,SAAA5J,GAGA,SAAA4J,IACA/C,EAAAruB,KAAAoxB,GAEA,IAAA3J,EAAAkH,EAAA3uB,KAAAwnB,EAAAhxB,KAAAwJ,KAAmEixB,IAKnE,OAHAxJ,EAAA4J,QACA5J,EAAA6J,MAAA,EACA7J,EAAA8J,SAAA,KACA9J,EAiCA,OAlbA,SAAAd,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAjgB,UAAA,kEAAAigB,GAGAD,EAAArwB,UAAAP,OAAA0R,OAAAmf,KAAAtwB,WACAid,aACAnd,MAAAuwB,EACAvQ,YAAA,EACAI,UAAA,EACAxB,cAAA,KAGA4R,IAAA7wB,OAAAy7B,eAAAz7B,OAAAy7B,eAAA7K,EAAAC,GAAAD,EAAArT,UAAAsT,GA0XA6K,CAAAL,EAAA5J,GAoBA4J,EAAA96B,UAAAo7B,YAAA,WACA1xB,KAAAqxB,KAAAl0B,OAAA6C,GACAA,KAAAqxB,KAAAzkC,OACAoT,KAAAuxB,SAAA7e,WAAA1S,KAAA0xB,YAAAjhB,KAAAzQ,WAAAsxB,OAEAtxB,KAAAuxB,SAAA,MAWAH,EAAA96B,UAAA3K,KAAA,SAAAgmC,GACA3xB,KAAAqxB,KAAA1lC,KAAAgmC,GACA3xB,KAAAuxB,WACAvxB,KAAAuxB,SAAA7e,WAAA1S,KAAA0xB,YAAAjhB,KAAAzQ,WAAAsxB,SAIAF,EA5CA,CA6CEH,GAaFW,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAgBA3B,EAAA,SAAA4B,EAAA57B,EAAA67B,GAEA,IAAAC,EAAA,IAAAC,WAAAH,EAAA9nC,OAAA8nC,EAAA7nC,WAAA6nC,EAAA5nC,YAAA,GAEAgoC,EAAA,IAAAvC,EAAAh6B,MAAAW,UAAAC,MAAAC,KAAAN,IAGAi8B,EAAA,IAAAvmC,WAAAkmC,EAAA5nC,YACAkoC,EAAA,IAAAH,WAAAE,EAAAnoC,QAIAqoC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACArC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAmC,OAAA,EAWA,IAPAJ,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GAIAU,EAAA,EAAkBA,EAAAT,EAAAplC,OAA6B6lC,GAAA,EAG/CtC,EAAAyB,EAAAI,EAAAS,IACArC,EAAAwB,EAAAI,EAAAS,EAAA,IACApC,EAAAuB,EAAAI,EAAAS,EAAA,IACAnC,EAAAsB,EAAAI,EAAAS,EAAA,IAGAP,EAAAhC,QAAAC,EAAAC,EAAAC,EAAAC,EAAA8B,EAAAK,GAIAL,EAAAK,GAAAb,EAAAQ,EAAAK,GAAAJ,GACAD,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAH,GACAF,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAF,GACAH,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAD,GAGAH,EAAAlC,EACAmC,EAAAlC,EACAmC,EAAAlC,EACAmC,EAAAlC,EAGA,OAAA6B,GAeIO,EAAS,WACb,SAAAC,EAAAb,EAAA57B,EAAA67B,EAAAa,GACAvE,EAAAruB,KAAA2yB,GAEA,IAAAnkB,EAAAmkB,EAAAE,KACAb,EAAA,IAAAC,WAAAH,EAAA9nC,QACAmoC,EAAA,IAAAvmC,WAAAkmC,EAAA5nC,YACAe,EAAA,EAMA,IAJA+U,KAAA8yB,aAAA,IAAA1B,EAGApxB,KAAA8yB,aAAAnnC,KAAAqU,KAAA+yB,cAAAf,EAAApnC,SAAAK,IAAAujB,GAAAtY,EAAA67B,EAAAI,IACAlnC,EAAAujB,EAAkBvjB,EAAA+mC,EAAAplC,OAAwB3B,GAAAujB,EAC1CujB,EAAA,IAAApiC,aAAAiiC,EAAAI,EAAA/mC,EAAA,IAAA2mC,EAAAI,EAAA/mC,EAAA,IAAA2mC,EAAAI,EAAA/mC,EAAA,IAAA2mC,EAAAI,EAAA/mC,EAAA,MACA+U,KAAA8yB,aAAAnnC,KAAAqU,KAAA+yB,cAAAf,EAAApnC,SAAAK,IAAAujB,GAAAtY,EAAA67B,EAAAI,IAGAnyB,KAAA8yB,aAAAnnC,KAAA,WD3iBA,IAAAqnC,EC6iBAJ,EAAA,MD7iBAI,EC6iBsBb,GD5iBtBvnC,SAAA,EAAAooC,EAAA9oC,WAAA8oC,IAAA9oC,WAAA,OCykBA,OAfAyoC,EAAAr8B,UAAAy8B,cAAA,SAAAjB,EAAA57B,EAAA67B,EAAAI,GACA,kBACA,IAAA97B,EAAA65B,EAAA4B,EAAA57B,EAAA67B,GAEAI,EAAAha,IAAA9hB,EAAAy7B,EAAA7nC,cAIAskC,EAAAoE,EAAA,OACAz8B,IAAA,OACAgN,IAAA,WAEA,gBAGAyvB,EAjDa,GCjiBTM,EAAO,QAEX,SAASC,EAAcvM,EAAAC,GACvBD,EAAArwB,UAAAP,OAAA0R,OAAAmf,EAAAtwB,WACAqwB,EAAArwB,UAAAid,YAAAoT,EACAA,EAAArT,UAAAsT,EAGA,SAAAuM,EAAAC,EAAAC,GAMA,OALAF,EAAAp9B,OAAAy7B,gBAAA,SAAA4B,EAAAC,GAEA,OADAD,EAAA9f,UAAA+f,EACAD,IAGAA,EAAAC,GAgBA,SAAAC,EAAAC,EAAAzjB,EAAA0jB,GAcA,OAVAF,EAjBA,WACA,uBAAAG,kBAAAC,UAAA,SACA,GAAAD,QAAAC,UAAAC,KAAA,SACA,sBAAAC,MAAA,SAEA,IAEA,OADA3qC,KAAAqN,UAAAI,SAAAF,KAAAi9B,QAAAC,UAAAzqC,QAAA,gBACA,EACG,MAAAiV,GACH,UAKA21B,GACAJ,QAAAC,UAEA,SAAAH,EAAAzjB,EAAA0jB,GACA,IAAA/5B,GAAA,MACAA,EAAA9N,KAAA8M,MAAAgB,EAAAqW,GACA,IACAc,EAAA,IADAiJ,SAAApJ,KAAAhY,MAAA86B,EAAA95B,IAGA,OADA+5B,GAAAL,EAAAviB,EAAA4iB,EAAAl9B,WACAsa,IAIAnY,MAAA,KAAAsX,WAGA,SAAS+jB,EAAsBla,GAC/B,YAAAA,EACA,UAAAkN,eAAA,6DAGA,OAAAlN,EAGA,SAAAma,EAAAC,EAAAzqB,GAMA,OALAA,IACAA,EAAAyqB,EAAAz9B,MAAA,IAGAy9B,EAAAzqB,MACAyqB,EAQA,IAAIC,KAYAC,EAAgB,SAAAvmC,EAAAwmC,GACpB,gBAAAj/B,EAAAk/B,EAAAtkB,GACA,IAAAukB,EAAAF,EAAAG,OAAAF,GACAG,EAAA,IAAAtvB,OAAA,KAAAovB,EAAA,MAgBA,GAdA,QAAAn/B,GAEA4a,EAAAvR,QAAArJ,EAAAoR,cAAA,KAIAwJ,EAAAvR,QAAA5Q,EAAA,KAEQsmC,GACFA,EAAOtoC,QAAAuM,OAAA4X,IAKJ0kB,EAAA/6B,EAAQkY,QAAjB,CAOA,IAAArD,EAAakmB,EAAA/6B,EAAQkY,QAAAzc,GAErBoZ,GAAA,UAAApZ,IAGAoZ,EAAWkmB,EAAA/6B,EAAQkY,QAAA2R,MAAiBkR,EAAA/6B,EAAQkY,QAAAwiB,KAK5C7lB,GAAA+lB,GAAAE,EAAAvyB,KAAA9M,IAIAoZ,EAAA3Y,MAAAyH,QAAA0S,GAAA,gBAA+C0kB,EAAA/6B,EAAQkY,QAAA7B,MAqOvD,IAAI2kB,EAjOJ,SAAAC,EAAA/mC,GAEA,IAEAgnC,EAFAP,EAAA,OAyBAD,EAAA,WACA,QAAAS,EAAA7kB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAAi/B,GAAAppB,EAAA,EAAuEA,EAAAopB,EAAappB,IACpFsE,EAAAtE,GAAAuE,UAAAvE,GAGAmpB,EAAA,MAAAP,EAAAtkB,IA0LA,OAtLA6kB,EAAcT,EAAgBvmC,EAAAwmC,GAe9BA,EAAAO,aAAA,SAAAG,GACA,OAAAH,EAAA/mC,EAAA,KAAAknC,IAuBAV,EAAAG,QACAQ,IAAA,uBACA5N,IAAA,GACA6N,MAAA,uBACAzR,KAAA,iBACApqB,KAAA,aACA0V,MAAA,QACA4d,QAAA4H,GAeAD,EAAAC,MAAA,SAAAC,GACA,oBAAAA,EAAA,CACA,IAAAF,EAAAG,OAAA5pB,eAAA2pB,GACA,UAAA3kB,MAAA,IAAA2kB,EAAA,8BAGAD,EAAAC,EAGA,OAAAD,IAaAD,EAAApxB,QAAA,WACA,OAAWkxB,KAAO/7B,OAAa+7B,QAa/Bh+B,OAAA,SAAA++B,GACA,OAAYf,OAAOh+B,OAAA,SAAAg/B,GAEnB,WAAAhwB,OAAA,KAAA+vB,EAAA,MAAAhzB,KAAAizB,EAAA,OASAd,EAAApxB,QAAAmyB,MAAA,WACQjB,IACFA,EAAOrnC,OAAA,IAQbunC,EAAApxB,QAAAoyB,QAAA,WACe,OAAPlB,IACFA,EAAOrnC,OAAA,EACPqnC,EAAO,OAQbE,EAAApxB,QAAAqyB,OAAA,WACe,OAAPnB,IACFA,OAWNE,EAAAvlB,MAAA,WACA,QAAAymB,EAAAtlB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAA0/B,GAAAC,EAAA,EAA0EA,EAAAD,EAAeC,IACzFxlB,EAAAwlB,GAAAvlB,UAAAulB,GAGA,OAAAX,EAAA,QAAAP,EAAAtkB,IAUAqkB,EAAAj7B,KAAA,WACA,QAAAq8B,EAAAxlB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAA4/B,GAAAC,EAAA,EAA0EA,EAAAD,EAAeC,IACzF1lB,EAAA0lB,GAAAzlB,UAAAylB,GAGA,OAAAb,EAAA,OAAAP,EAAAtkB,IAWAqkB,EAAAY,MAAA,WACA,QAAAU,EAAA1lB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAA8/B,GAAAC,EAAA,EAA0EA,EAAAD,EAAeC,IACzF5lB,EAAA4lB,GAAA3lB,UAAA2lB,GAGA,OAAAf,EAAA,QAAAP,EAAAtkB,IAGAqkB,EAOOO,CAAA,WACPiB,EAAqBlB,EAAGC,aAgCpBkB,GAAQ7/B,OAAAO,UAAAI,SAcZV,GAAA,SAAAsgB,GACA,OAAA1J,GAAA0J,GAAAvgB,OAAAC,KAAAsgB,OAaA,SAAAuf,GAAAvf,EAAAhI,GACAtY,GAAAsgB,GAAAvd,QAAA,SAAA7C,GACA,OAAAoY,EAAAgI,EAAApgB,QAsCA,SAAS4/B,GAAMl1B,GACf,QAAAg0B,EAAA7kB,UAAAnjB,OAAAmpC,EAAA,IAAApgC,MAAAi/B,EAAA,EAAAA,EAAA,KAAAppB,EAAA,EAA2FA,EAAAopB,EAAappB,IACxGuqB,EAAAvqB,EAAA,GAAAuE,UAAAvE,GAGA,OAAAzV,OAAA0wB,OACA1wB,OAAA0wB,OAAAhuB,MAAA1C,QAAA6K,GAAA1I,OAAA69B,KAGAA,EAAAh9B,QAAA,SAAAoO,GACAA,GAIA0uB,GAAA1uB,EAAA,SAAA/Q,EAAAF,GACA0K,EAAA1K,GAAAE,MAGAwK,GAaA,SAAAgM,GAAAxW,GACA,QAAAA,GAAA,iBAAAA,EAUA,SAAA4/B,GAAA5/B,GACA,OAAAwW,GAAAxW,IAAoC,oBAARw/B,GAAQp/B,KAAAJ,MAAAmd,cAAAxd,OAwBpC,SAASkgC,GAAanpB,EAAAopB,GACtB,IAAAppB,IAAAopB,EACA,SAGA,GAAqB,mBAAR1B,EAAA/6B,EAAQ08B,iBAAA,CACrB,IAAAC,EAAa5B,EAAA/6B,EAAQ08B,iBAAArpB,GACrB,OAAAspB,IAAAF,GAAA,GAGA,SAGA,SAAAG,KACA,IAAAxsC,EAAAkqC,GAAA,yNAMA,OAJAsC,GAAA,WACA,OAAAxsC,GAGAA,EAcA,SAAAysC,GAAA55B,GACA,uBAAAA,GAAA,KAAAsF,KAAAtF,GAeA,SAAA65B,GAAA75B,GACA,QAAAsF,KAAAtF,GACA,UAAAgT,MAAA,2CA2BA,SAAA8mB,KAEA,OAASC,EAAAh9B,IAAa+6B,EAAA/6B,EAAQsT,SAY9B,SAAA2pB,GAAAtgC,GACA,OAAAwW,GAAAxW,IAAA,IAAAA,EAAAugC,SAUA,SAAAC,KAGA,IACA,OAAWpC,EAAA/6B,EAAQU,SAAYq6B,EAAA/6B,EAAQmgB,KACpC,MAAApc,GACH,UAcA,SAAAq5B,GAAA9Z,GACA,gBAAAlQ,EAAAiqB,GACA,IAAAR,GAAAzpB,GACA,OAAa4pB,EAAAh9B,EAAQsjB,GAAA,MAGrBuZ,GAAAQ,KACAA,EAAgBL,EAAAh9B,EAAQuT,cAAA8pB,IAGxB,IAAAC,EAAAL,GAAAI,KAAwCL,EAAAh9B,EACxC,OAAAs9B,EAAAha,IAAAga,EAAAha,GAAAlQ,IAuBA,SAAAmqB,GAAAC,EAAAC,EAAArP,EAAAsP,QACA,IAAAF,IACAA,EAAA,YAGA,IAAAC,IACAA,WAGA,IAAArP,IACAA,MAGA,IAAA/a,EAAW2pB,EAAAh9B,EAAQ29B,cAAAH,GAwBnB,OAvBAlhC,OAAAshC,oBAAAH,GAAAn+B,QAAA,SAAAu+B,GACA,IAAA97B,EAAA07B,EAAAI,IAIA,IAAAA,EAAA/9B,QAAA,mBAAA+9B,GAAA,SAAAA,GACM7C,EAAGv7B,KAAMq+B,IAAIlB,KAAAiB,EAAA97B,IACnBsR,EAAA0qB,aAAAF,EAAA97B,IAEK,gBAAA87B,EACLG,GAAA3qB,EAAAtR,GAEAsR,EAAAwqB,GAAA97B,IAGAzF,OAAAshC,oBAAAxP,GAAA9uB,QAAA,SAAA2+B,GACA5qB,EAAA0qB,aAAAE,EAAA7P,EAAA6P,MAGAP,GACAQ,GAAA7qB,EAAAqqB,GAGArqB,EAeA,SAAA2qB,GAAA3qB,EAAA4c,GAOA,YANA,IAAA5c,EAAA2qB,YACA3qB,EAAA8qB,UAAAlO,EAEA5c,EAAA2qB,YAAA/N,EAGA5c,EAYA,SAAA+qB,GAAAx2B,EAAAlH,GACAA,EAAA29B,WACA39B,EAAA49B,aAAA12B,EAAAlH,EAAA29B,YAEA39B,EAAA69B,YAAA32B,GAmBA,SAAA42B,GAAAC,EAAAC,GAGA,OAFA5B,GAAA4B,GAEAD,EAAAE,UACAF,EAAAE,UAAAC,SAAAF,IA5LAG,EA+LAH,EA9LA,IAAAlzB,OAAA,UAAAqzB,EAAA,YA8LAt2B,KAAAk2B,EAAAI,WA/LA,IAAAA,EA8MA,SAAAC,GAAAL,EAAAM,GAQA,OAPAN,EAAAE,UACAF,EAAAE,UAAAK,IAAAD,GAEGP,GAAAC,EAAAM,KACHN,EAAAI,WAAAJ,EAAAI,UAAA,IAAAE,GAAA9gC,QAGAwgC,EAeA,SAAAQ,GAAAR,EAAAS,GAUA,OATAT,EAAAE,UACAF,EAAAE,UAAAQ,OAAAD,IAEApC,GAAAoC,GACAT,EAAAI,UAAAJ,EAAAI,UAAAvhC,MAAA,OAAAd,OAAA,SAAAqG,GACA,OAAAA,IAAAq8B,IACK/iC,KAAA,MAGLsiC,EAmCA,SAAAW,GAAAX,EAAAY,EAAAviB,GAIA,IAAAwiB,EAAAd,GAAAC,EAAAY,GAYA,GAVA,mBAAAviB,IACAA,IAAA2hB,EAAAY,IAGA,kBAAAviB,IACAA,GAAAwiB,GAKAxiB,IAAAwiB,EAUA,OANAxiB,EACAgiB,GAAAL,EAAAY,GAEAJ,GAAAR,EAAAY,GAGAZ,EAYA,SAAAc,GAAAlsB,EAAA+a,GACA9xB,OAAAshC,oBAAAxP,GAAA9uB,QAAA,SAAA2+B,GACA,IAAAuB,EAAApR,EAAA6P,GAEA,OAAAuB,QAAA,IAAAA,IAAA,IAAAA,EACAnsB,EAAAosB,gBAAAxB,GAEA5qB,EAAA0qB,aAAAE,GAAA,IAAAuB,EAAA,GAAAA,KAkBA,SAAAE,GAAAxsC,GACA,IAAA2Q,KAIA87B,EAAA,kEAEA,GAAAzsC,KAAAk7B,YAAAl7B,EAAAk7B,WAAAj7B,OAAA,EAGA,IAFA,IAAAuP,EAAAxP,EAAAk7B,WAEA58B,EAAAkR,EAAAvP,OAAA,EAAkC3B,GAAA,EAAQA,IAAA,CAC1C,IAAAysC,EAAAv7B,EAAAlR,GAAA0C,KACA0rC,EAAAl9B,EAAAlR,GAAAmL,MAGA,kBAAAzJ,EAAA+qC,KAAA,IAAA0B,EAAA7/B,QAAA,IAAAm+B,EAAA,OAIA2B,EAAA,OAAAA,GAGA/7B,EAAAo6B,GAAA2B,EAIA,OAAA/7B,EAeA,SAAAyE,GAAA+K,EAAAwsB,GACA,OAAAxsB,EAAA/K,aAAAu3B,GAeA,SAAA9B,GAAA1qB,EAAAwsB,EAAAljC,GACA0W,EAAA0qB,aAAA8B,EAAAljC,GAYA,SAAA8iC,GAAApsB,EAAAwsB,GACAxsB,EAAAosB,gBAAAI,GAMA,SAAAC,KACE9C,EAAAh9B,EAAQmiB,KAAA4d,QAER/C,EAAAh9B,EAAQggC,cAAA,WACV,UAOA,SAAAC,KACEjD,EAAAh9B,EAAQggC,cAAA,WACV,UAuBA,SAAAtsB,GAAAL,GACA,GAAAA,KAAAK,uBAAAL,EAAA6sB,WAAA,CACA,IAAAC,EAAA9sB,EAAAK,wBACAjiB,KAeA,OAdA,gDAAA6N,QAAA,SAAA8gC,QACA59B,IAAA29B,EAAAC,KACA3uC,EAAA2uC,GAAAD,EAAAC,MAIA3uC,EAAAZ,SACAY,EAAAZ,OAAAk+B,WAAiCyN,GAAanpB,EAAA,YAG9C5hB,EAAAb,QACAa,EAAAb,MAAAm+B,WAAgCyN,GAAanpB,EAAA,WAG7C5hB,GA6BA,SAAA4uC,GAAAhtB,GACA,IAAA1X,EAMA,GAJA0X,EAAAK,uBAAAL,EAAA6sB,aACAvkC,EAAA0X,EAAAK,0BAGA/X,EACA,OACAiY,KAAA,EACAC,IAAA,GAIA,IAAAysB,EAActD,EAAAh9B,EAAQyT,gBACtB0O,EAAa6a,EAAAh9B,EAAQmiB,KACrBoe,EAAAD,EAAAC,YAAApe,EAAAoe,YAAA,EACAC,EAAmBzF,EAAA/6B,EAAQ6S,aAAAsP,EAAAqe,WAC3B5sB,EAAAjY,EAAAiY,KAAA4sB,EAAAD,EACAE,EAAAH,EAAAG,WAAAte,EAAAse,WAAA,EACAC,EAAkB3F,EAAA/6B,EAAQ+S,aAAAoP,EAAAue,UAC1B7sB,EAAAlY,EAAAkY,IAAA6sB,EAAAD,EAEA,OACA7sB,KAAAjb,KAAAgoC,MAAA/sB,GACAC,IAAAlb,KAAAgoC,MAAA9sB,IA+BA,SAAA+sB,GAAAvtB,EAAAhN,GACA,IAAAkM,KACA5W,EAAA0kC,GAAAhtB,GACAwtB,EAAAxtB,EAAAytB,YACAC,EAAA1tB,EAAA2tB,aACAC,EAAAtlC,EAAAkY,IACAqtB,EAAAvlC,EAAAiY,KACAutB,EAAA96B,EAAA86B,MACAC,EAAA/6B,EAAA+6B,MASA,OAPA/6B,EAAAg7B,iBACAD,EAAA/6B,EAAAg7B,eAAA,GAAAD,MACAD,EAAA96B,EAAAg7B,eAAA,GAAAF,OAGA5uB,EAAAO,EAAAna,KAAAwf,IAAA,EAAAxf,KAAAwG,IAAA,GAAA8hC,EAAAE,EAAAJ,OACAxuB,EAAAxO,EAAApL,KAAAwf,IAAA,EAAAxf,KAAAwG,IAAA,GAAAiiC,EAAAF,GAAAL,IACAtuB,EAYA,SAAA+uB,GAAA3kC,GACA,OAAAwW,GAAAxW,IAAA,IAAAA,EAAAugC,SAYA,SAAAqE,GAAAluB,GACA,KAAAA,EAAAgrB,YACAhrB,EAAAmuB,YAAAnuB,EAAAgrB,YAGA,OAAAhrB,EAmCA,SAAAouB,GAAA/D,GASA,MANA,mBAAAA,IACAA,QAKAxhC,MAAAyH,QAAA+5B,UAAAthC,IAAA,SAAAO,GAOA,MAJA,mBAAAA,IACAA,OAGAsgC,GAAAtgC,IAAA2kC,GAAA3kC,GACAA,EAGA,iBAAAA,GAAA,KAAA4L,KAAA5L,GACaqgC,EAAAh9B,EAAQ0hC,eAAA/kC,QADrB,IAGGH,OAAA,SAAAG,GACH,OAAAA,IAgBA,SAAAuhC,GAAA7qB,EAAAqqB,GAIA,OAHA+D,GAAA/D,GAAAp+B,QAAA,SAAAqiC,GACA,OAAAtuB,EAAAkrB,YAAAoD,KAEAtuB,EAgBA,SAAAuuB,GAAAvuB,EAAAqqB,GACA,OAAAQ,GAAAqD,GAAAluB,GAAAqqB,GAYA,SAAAmE,GAAAx7B,GAIA,YAAA7D,IAAA6D,EAAA+B,aAAA5F,IAAA6D,EAAAy7B,UAcA,IAAAz7B,EAAA+B,aAAA5F,IAAA6D,EAAAy7B,SAMA,IAAAz7B,EAAA+B,QAAA,IAAA/B,EAAAy7B,SA2BA,IAAAC,GAAA3E,GAAA,iBAoBA4E,GAAA5E,GAAA,oBAEA6E,GAAA3lC,OAAA0I,QACA+3B,UACAE,QACAE,aACAI,YACAS,eACAI,aACAI,YACAM,YACAG,eACAG,eACAG,iBACAG,iBACAp3B,gBACAy1B,gBACA0B,mBACAK,sBACAG,wBACAvsB,yBACA2sB,gBACAO,sBACAU,cACAC,WACAE,oBACAvD,iBACA0D,iBACAC,qBACAE,KACAC,QAYAE,GAAA,EAQA,SAAAC,KACA,OAAAD,KAkBA,IAAAE,MASAC,GAAA,aAAA7yC,MAAA8yC,UAWA,SAAAC,GAAAlvB,GACA,IAAAzU,EAAAyU,EAAAgvB,IAUA,OARAzjC,IACAA,EAAAyU,EAAAgvB,IAAAF,MAGAC,GAAAxjC,KACAwjC,GAAAxjC,OAGAwjC,GAAAxjC,GAaA,SAAA4jC,GAAAnvB,GACA,IAAAzU,EAAAyU,EAAAgvB,IAEA,QAAAzjC,KAIAtC,OAAAshC,oBAAAwE,GAAAxjC,IAAAzL,OASA,SAAAsvC,GAAApvB,GACA,IAAAzU,EAAAyU,EAAAgvB,IAEA,GAAAzjC,EAAA,QAKAwjC,GAAAxjC,GAEA,WACAyU,EAAAgvB,IACG,MAAA59B,GACH4O,EAAAosB,gBACApsB,EAAAosB,gBAAA4C,IAGAhvB,EAAAgvB,IAAA,OAwBA,SAAAK,GAAAC,EAAAlnC,GACA,IAAArL,EAAAmyC,GAAAI,GAEA,IAAAvyC,EAAAwyC,SAAAnnC,GAAAtI,gBACA/C,EAAAwyC,SAAAnnC,GAIAknC,EAAAE,oBACAF,EAAAE,oBAAApnC,EAAArL,EAAA0yC,YAAA,GACKH,EAAAI,aACLJ,EAAAI,YAAA,KAAAtnC,EAAArL,EAAA0yC,aAKAxmC,OAAAshC,oBAAAxtC,EAAAwyC,UAAAzvC,QAAA,WACA/C,EAAAwyC,gBACAxyC,EAAA0yC,kBACA1yC,EAAA4yC,UAIA,IAAA1mC,OAAAshC,oBAAAxtC,GAAA+C,QACAsvC,GAAAE,GAoBA,SAAAM,GAAApuB,EAAA8tB,EAAAzlB,EAAA6E,GACA7E,EAAA5d,QAAA,SAAA7D,GAEAoZ,EAAA8tB,EAAAlnC,EAAAsmB,KAcA,SAAAmhB,GAAA78B,GACA,SAAA88B,IACA,SAGA,SAAAC,IACA,SAQA,IAAA/8B,MAAAg9B,qBAAA,CACA,IAAAC,EAAAj9B,GAAuB00B,EAAA/6B,EAAQqG,MAO/B,QAAA5J,KANA4J,KAMAi9B,EAIA,WAAA7mC,GAAA,WAAAA,GAAA,gBAAAA,GAAA,oBAAAA,GAAA,oBAAAA,IAGA,gBAAAA,GAAA6mC,EAAA96B,iBACAnC,EAAA5J,GAAA6mC,EAAA7mC,KAmDA,GA7CA4J,EAAAc,SACAd,EAAAc,OAAAd,EAAAk9B,YAAyCvG,EAAAh9B,GAIzCqG,EAAAm9B,gBACAn9B,EAAAm9B,cAAAn9B,EAAAo9B,cAAAp9B,EAAAc,OAAAd,EAAAq9B,UAAAr9B,EAAAo9B,aAIAp9B,EAAAmC,eAAA,WACA86B,EAAA96B,gBACA86B,EAAA96B,iBAGAnC,EAAAs9B,aAAA,EACAL,EAAAK,aAAA,EACAt9B,EAAA8B,kBAAA,GAGA9B,EAAA8B,kBAAA,EAEA9B,EAAAu9B,gBAAA,WACAN,EAAAM,iBACAN,EAAAM,kBAGAv9B,EAAAw9B,cAAA,EACAP,EAAAO,cAAA,EACAx9B,EAAAg9B,qBAAAF,GAGA98B,EAAAg9B,qBAAAD,EAEA/8B,EAAAy9B,yBAAA,WACAR,EAAAQ,0BACAR,EAAAQ,2BAGAz9B,EAAA09B,8BAAAZ,EACA98B,EAAAu9B,mBAGAv9B,EAAA09B,8BAAAX,EAEA,OAAA/8B,EAAA29B,cAAAxhC,IAAA6D,EAAA29B,QAAA,CACA,IAAAC,EAAgBjH,EAAAh9B,EAAQyT,gBACxB0O,EAAiB6a,EAAAh9B,EAAQmiB,KACzB9b,EAAA+6B,MAAA/6B,EAAA29B,SAAAC,KAAAzD,YAAAre,KAAAqe,YAAA,IAAAyD,KAAA1D,YAAApe,KAAAoe,YAAA,GACAl6B,EAAA86B,MAAA96B,EAAA69B,SAAAD,KAAAvD,WAAAve,KAAAue,WAAA,IAAAuD,KAAAxD,WAAAte,KAAAse,WAAA,GAIAp6B,EAAA89B,MAAA99B,EAAA+9B,UAAA/9B,EAAAg+B,QAGA,OAAAh+B,EAAA+B,aAAA5F,IAAA6D,EAAA+B,SAKA/B,EAAA+B,OAAA,EAAA/B,EAAA+B,OAAA,IAAA/B,EAAA+B,OAAA,IAAA/B,EAAA+B,OAAA,KAMA,OAAA/B,EAMA,IAAAi+B,IAAA,GAEA,WACA,IACA,IAAAv3B,EAAAzQ,OAAAkN,kBAAuC,WACvCC,IAAA,WACA66B,IAAA,KAGIvJ,EAAA/6B,EAAQ4R,iBAAA,YAAA7E,GACRguB,EAAA/6B,EAAQ6iC,oBAAA,YAAA91B,GACT,MAAAtI,KATH,GAiBA,IAAA8/B,IAAA,0BAiBA,SAAA/8B,GAAAm7B,EAAAlnC,EAAAoZ,GACA,GAAA3Y,MAAAyH,QAAAlI,GACA,OAAAwnC,GAAAz7B,GAAAm7B,EAAAlnC,EAAAoZ,GAGA,IAAAzkB,EAAAmyC,GAAAI,GA8CA,GA5CAvyC,EAAAwyC,WACAxyC,EAAAwyC,aAGAxyC,EAAAwyC,SAAAnnC,KACArL,EAAAwyC,SAAAnnC,OAGAoZ,EAAA2vB,OACA3vB,EAAA2vB,KAAArC,MAGA/xC,EAAAwyC,SAAAnnC,GAAAvJ,KAAA2iB,GAEAzkB,EAAA0yC,aACA1yC,EAAA4yC,UAAA,EAEA5yC,EAAA0yC,WAAA,SAAAz8B,EAAA1B,GACA,IAAAvU,EAAA4yC,SAAA,CAIA38B,EAAA68B,GAAA78B,GACA,IAAAu8B,EAAAxyC,EAAAwyC,SAAAv8B,EAAA5K,MAEA,GAAAmnC,EAIA,IAFA,IAAA6B,EAAA7B,EAAA9lC,MAAA,GAEA+O,EAAA,EAAAmO,EAAAyqB,EAAAtxC,OAAgD0Y,EAAAmO,IAChD3T,EAAA09B,gCADuDl4B,IAIvD,IACA44B,EAAA54B,GAAA9O,KAAA4lC,EAAAt8B,EAAA1B,GACa,MAAAF,GACCu2B,EAAG7lB,MAAA1Q,OAQjB,IAAArU,EAAAwyC,SAAAnnC,GAAAtI,OACA,GAAAwvC,EAAA/wB,iBAAA,CACA,IAAArN,GAAA,EAEA+/B,IAAAC,GAAAzkC,QAAArE,IAAA,IACA8I,GACAmgC,SAAA,IAIA/B,EAAA/wB,iBAAAnW,EAAArL,EAAA0yC,WAAAv+B,QACKo+B,EAAAgC,aACLhC,EAAAgC,YAAA,KAAAlpC,EAAArL,EAAA0yC,YAkBA,SAAArV,GAAAkV,EAAAlnC,EAAAoZ,GAEA,GAAA2tB,GAAAG,GAAA,CAIA,IAAAvyC,EAAAmyC,GAAAI,GAEA,GAAAvyC,EAAAwyC,SAAA,CAIA,GAAA1mC,MAAAyH,QAAAlI,GACA,OAAAwnC,GAAAxV,GAAAkV,EAAAlnC,EAAAoZ,GAIA,IAAA+vB,EAAA,SAAAvxB,EAAAwxB,GACAz0C,EAAAwyC,SAAAiC,MAEAnC,GAAArvB,EAAAwxB,IAIA,QAAAriC,IAAA/G,EAAA,CAUA,IAAAmnC,EAAAxyC,EAAAwyC,SAAAnnC,GAEA,GAAAmnC,EAKA,GAAA/tB,EAAA,CAMA,GAAAA,EAAA2vB,KACA,QAAAxqB,EAAA,EAAmBA,EAAA4oB,EAAAzvC,OAAqB6mB,IACxC4oB,EAAA5oB,GAAAwqB,OAAA3vB,EAAA2vB,MACA5B,EAAAhzB,OAAAoK,IAAA,GAKA0oB,GAAAC,EAAAlnC,QAbAmpC,EAAAjC,EAAAlnC,QAjBA,QAAAopC,KAAAz0C,EAAAwyC,SACAtmC,OAAAO,UAAAoU,eAAAlU,KAAA3M,EAAAwyC,aAAkEiC,IAClED,EAAAjC,EAAAkC,KA+CA,SAAAla,GAAAgY,EAAAt8B,EAAA1B,GAIA,IAAAmgC,EAAAtC,GAAAG,GAAAJ,GAAAI,MACAjiC,EAAAiiC,EAAAzC,YAAAyC,EAAAoC,cAsBA,GAlBA,iBAAA1+B,EACAA,GACA5K,KAAA4K,EACAc,OAAAw7B,GAEGt8B,EAAAc,SACHd,EAAAc,OAAAw7B,GAIAt8B,EAAA68B,GAAA78B,GAEAy+B,EAAAhC,YACAgC,EAAAhC,WAAA/lC,KAAA4lC,EAAAt8B,EAAA1B,GAKAjE,IAAA2F,EAAAg9B,yBAAA,IAAAh9B,EAAA2+B,QACAra,GAAA5tB,KAAA,KAAA2D,EAAA2F,EAAA1B,QACG,IAAAjE,IAAA2F,EAAA8B,kBAAA9B,EAAAc,QAAAd,EAAAc,OAAAd,EAAA5K,MAAA,CACH,IAAAwpC,EAAA1C,GAAAl8B,EAAAc,QAEAd,EAAAc,OAAAd,EAAA5K,QAEAwpC,EAAAjC,UAAA,EAEA,mBAAA38B,EAAAc,OAAAd,EAAA5K,OACA4K,EAAAc,OAAAd,EAAA5K,QAIAwpC,EAAAjC,UAAA,GAKA,OAAA38B,EAAA8B,iBAeA,SAAA+8B,GAAAvC,EAAAlnC,EAAAoZ,GACA,GAAA3Y,MAAAyH,QAAAlI,GACA,OAAAwnC,GAAAiC,GAAAvC,EAAAlnC,EAAAoZ,GAGA,IAAAswB,EAAA,SAAAA,IACA1X,GAAAkV,EAAAlnC,EAAA0pC,GACAtwB,EAAA7V,MAAAuH,KAAA+P,YAIA6uB,EAAAX,KAAA3vB,EAAA2vB,KAAA3vB,EAAA2vB,MAAArC,KACA36B,GAAAm7B,EAAAlnC,EAAA0pC,GAGA,IAeAC,GAfAC,GAAA/oC,OAAA0I,QACAk+B,YACA17B,MACAimB,OACA9C,WACAua,SASAI,IAAA,EAMIC,GAAS,WAEb,GAAAxI,OAAA,IAAAqI,GAAA7gC,QAAAihC,UAAA,CAIA,IAAAC,EAAAvpC,MAAAW,UAAAC,MAAAC,KAAwCigC,EAAAh9B,EAAQ0lC,qBAAA,UAChDC,EAAAzpC,MAAAW,UAAAC,MAAAC,KAA0CigC,EAAAh9B,EAAQ0lC,qBAAA,UAClDE,EAAA1pC,MAAAW,UAAAC,MAAAC,KAAwCigC,EAAAh9B,EAAQ0lC,qBAAA,aAChDG,EAAAJ,EAAAhnC,OAAAknC,EAAAC,GAEA,GAAAC,KAAA1yC,OAAA,EACA,QAAA3B,EAAA,EAAAiT,EAAAohC,EAAA1yC,OAAwC3B,EAAAiT,EAAOjT,IAAA,CAC/C,IAAAs0C,EAAAD,EAAAr0C,GAEA,IAAAs0C,MAAAx9B,aAYO,CACPy9B,GAAA,GACA,WAZAvjC,IAAAsjC,EAAAE,QAIA,OAHAF,EAAAx9B,aAAA,eAKA88B,GAAAU,QAUGR,IACHS,GAAA,KAeA,SAAAA,GAAAE,EAAAC,GACAA,IACAd,GAAAc,GAGEnL,EAAA/6B,EAAQiZ,WAAYssB,GAASU,GAG/BlJ,MAAwB,aAARC,EAAAh9B,EAAQgkB,WACxBshB,IAAA,EAOAJ,GAAMnK,EAAA/6B,EAAQ,kBACdslC,IAAA,IAkBA,IAgVAa,GAhVIC,GAAkB,SAAAvH,GACtB,IAAAwH,EAAcrJ,EAAAh9B,EAAQ29B,cAAA,SAEtB,OADA0I,EAAAxH,YACAwH,GAYAC,GAAA,SAAAjzB,EAAAqqB,GACArqB,EAAAkzB,WACAlzB,EAAAkzB,WAAAC,QAAA9I,EAEArqB,EAAA2qB,YAAAN,GA6BA1mB,GAAA,SAAAqmB,EAAAxoB,EAAA4xB,GAEA5xB,EAAA2vB,OACA3vB,EAAA2vB,KAAArC,MAIA,IAAAuE,EAAA,WACA,OAAA7xB,EAAA7V,MAAAq+B,EAAA/mB,YAUA,OADAowB,EAAAlC,KAAAiC,IAAA,IAAA5xB,EAAA2vB,KAAA3vB,EAAA2vB,KACAkC,GAgBAC,GAAA,SAAA9xB,EAAAoxB,GACA,IAAAW,EAAAp3C,KAAA8kB,MAWA,OATA,WACA,IAAAA,EAAA9kB,KAAA8kB,MAEAA,EAAAsyB,GAAAX,IACApxB,EAAA7V,WAAA,EAAAsX,WACAswB,EAAAtyB,KAiCIuyB,GAAQ,SAAA1B,EAAAc,EAAAa,EAAAzJ,GAKZ,IAAAzc,OAJA,IAAAyc,IACAA,EAActC,EAAA/6B,GAKd,IAOA+mC,EAAA,WACA,IAAA5mB,EAAA5Z,KACA8P,EAAAC,UAEA0wB,EAAA,WACApmB,EAAA,KACAomB,EAAA,KAEAF,GACA3B,EAAAnmC,MAAAmhB,EAAA9J,KAIAuK,GAAAkmB,GACA3B,EAAAnmC,MAAAmhB,EAAA9J,GAGAgnB,EAAA5c,aAAAG,GACAA,EAAAyc,EAAApkB,WAAA+tB,EAAAf,IAMA,OADAc,EAAAE,OA9BA,WACA5J,EAAA5c,aAAAG,GACAA,EAAA,MA6BAmmB,GAeAG,GAAA,aAgCAA,GAAArqC,UAAAsqC,kBAYAD,GAAArqC,UAAA2K,GAAA,SAAA/L,EAAAoZ,GAGA,IAAAuyB,EAAA7gC,KAAAqL,iBAEArL,KAAAqL,iBAAA,aAEApK,GAAAjB,KAAA9K,EAAAoZ,GACAtO,KAAAqL,iBAAAw1B,GAWAF,GAAArqC,UAAA+U,iBAAAs1B,GAAArqC,UAAA2K,GAaA0/B,GAAArqC,UAAA4wB,IAAA,SAAAhyB,EAAAoZ,GACA4Y,GAAAlnB,KAAA9K,EAAAoZ,IAWAqyB,GAAArqC,UAAAgmC,oBAAAqE,GAAArqC,UAAA4wB,IAaAyZ,GAAArqC,UAAAqoC,IAAA,SAAAzpC,EAAAoZ,GAGA,IAAAuyB,EAAA7gC,KAAAqL,iBAEArL,KAAAqL,iBAAA,aAEAszB,GAAA3+B,KAAA9K,EAAAoZ,GACAtO,KAAAqL,iBAAAw1B,GAoBAF,GAAArqC,UAAA8tB,QAAA,SAAAtkB,GACA,IAAA5K,EAAA4K,EAAA5K,MAAA4K,EAMA,iBAAAA,IACAA,GACA5K,SAIA4K,EAAA68B,GAAA78B,GAEAE,KAAA4gC,eAAA1rC,IAAA8K,KAAA,KAAA9K,IACA8K,KAAA,KAAA9K,GAAA4K,GAGAskB,GAAApkB,KAAAF,IAWA6gC,GAAArqC,UAAAwqC,cAAAH,GAAArqC,UAAA8tB,QAGAuc,GAAArqC,UAAAyqC,aAAA,SAAAjhC,GACA,IAAA2nB,EAAAznB,KAGA4/B,KACAA,GAAA,IAAAoB,KAGA,IAAA9rC,EAAA4K,EAAA5K,MAAA4K,EACAjK,EAAA+pC,GAAA18B,IAAAlD,MAEAnK,IACAA,EAAA,IAAAmrC,IACApB,GAAAznB,IAAAnY,KAAAnK,IAGA,IAAAorC,EAAAprC,EAAAqN,IAAAhO,GACAW,EAAAqrC,OAAAhsC,GACEs/B,EAAA/6B,EAAQygB,aAAA+mB,GACV,IAAA5mB,EAAgBma,EAAA/6B,EAAQiZ,WAAA,WAExB,IAAA7c,EAAAlB,OACAkB,EAAA,KACA+pC,GAAAsB,OAAAzZ,IAGAA,EAAArD,QAAAtkB,IACG,GACHjK,EAAAsiB,IAAAjjB,EAAAmlB,IAiBA,IAAA8mB,GAAA,SAAA7qB,GACA,OAAAA,aAAAqqB,MAAArqB,EAAA8qB,cAAA,4BAAApiC,MAAA,SAAA66B,GACA,yBAAAvjB,EAAAujB,MAoCAwH,GAAA,SAAAnsC,GACA,MAEA,iBAAAA,GAAA,KAAA8M,KAAA9M,IAAAS,MAAAyH,QAAAlI,QAAAtI,QAeA00C,GAAA,SAAA1gC,GACA,IAAAA,EAAA+b,WAAAwkB,GAAAvgC,GACA,UAAA8O,MAAA,0DAeA6xB,GAAA,SAAArsC,GACA,IAAAmsC,GAAAnsC,GACA,UAAAwa,MAAA,6DAeA8xB,GAAA,SAAAva,GACA,sBAAAA,EACA,UAAAvX,MAAA,0CAoBA+xB,GAAA,SAAA7nB,EAAA9J,GAGA,IACAlP,EACA1L,EACA+xB,EAHAya,EAAA5xB,EAAAljB,OAAA,GAAAkjB,EAAA,KAAA8J,GAAA9J,EAAA,KAAA8J,EAAAwnB,YAyBA,OApBAM,GACA9gC,EAAAgZ,EAAAwnB,YAGAtxB,EAAAljB,QAAA,GACAkjB,EAAA3S,QAGAjI,EAAA4a,EAAA,GACAmX,EAAAnX,EAAA,KAEAlP,EAAAkP,EAAA,GACA5a,EAAA4a,EAAA,GACAmX,EAAAnX,EAAA,IAGAwxB,GAAA1gC,GACA2gC,GAAArsC,GACAssC,GAAAva,IAGAya,kBACA9gC,SACA1L,OACA+xB,SALAA,EAAAxW,GAAAmJ,EAAAqN,KA2BAjW,GAAA,SAAApQ,EAAAmc,EAAA7nB,EAAA+xB,GACAqa,GAAA1gC,GAEAA,EAAA+b,SACAmiB,GAAA/hB,GAAAnc,EAAA1L,EAAA+xB,GAEArmB,EAAAmc,GAAA7nB,EAAA+xB,IAWA0a,IAwBA1gC,GAAA,WAGA,IAFA,IAAAwmB,EAAAznB,KAEA40B,EAAA7kB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAAi/B,GAAAppB,EAAA,EAAuEA,EAAAopB,EAAappB,IACpFsE,EAAAtE,GAAAuE,UAAAvE,GAGA,IAAAo2B,EAAAH,GAAAzhC,KAAA8P,GACA4xB,EAAAE,EAAAF,gBACA9gC,EAAAghC,EAAAhhC,OACA1L,EAAA0sC,EAAA1sC,KACA+xB,EAAA2a,EAAA3a,SAIA,GAFAjW,GAAApQ,EAAA,KAAA1L,EAAA+xB,IAEAya,EAAA,CAEA,IAAAG,EAAA,WACA,OAAApa,EAAAP,IAAAtmB,EAAA1L,EAAA+xB,IAKA4a,EAAA5D,KAAAhX,EAAAgX,KAIA,IAAA6D,EAAA,WACA,OAAAra,EAAAP,IAAA,UAAA2a,IAKAC,EAAA7D,KAAAhX,EAAAgX,KACAjtB,GAAAhR,KAAA,eAAA6hC,GACA7wB,GAAApQ,EAAA,eAAAkhC,KA2BAnD,IAAA,WAGA,IAFA,IAAAzW,EAAAloB,KAEAq1B,EAAAtlB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAA0/B,GAAAC,EAAA,EAA0EA,EAAAD,EAAeC,IACzFxlB,EAAAwlB,GAAAvlB,UAAAulB,GAGA,IAAAyM,EAAAN,GAAAzhC,KAAA8P,GACA4xB,EAAAK,EAAAL,gBACA9gC,EAAAmhC,EAAAnhC,OACA1L,EAAA6sC,EAAA7sC,KACA+xB,EAAA8a,EAAA9a,SAGA,GAAAya,EACA1wB,GAAApQ,EAAA,MAAA1L,EAAA+xB,OACK,CACL,IAAA+a,EAAA,SAAAA,IACA9Z,EAAAhB,IAAAtmB,EAAA1L,EAAA8sC,GAEA,QAAAzM,EAAAxlB,UAAAnjB,OAAAq1C,EAAA,IAAAtsC,MAAA4/B,GAAAC,EAAA,EAA+EA,EAAAD,EAAeC,IAC9FyM,EAAAzM,GAAAzlB,UAAAylB,GAGAvO,EAAAxuB,MAAA,KAAAwpC,IAKAD,EAAA/D,KAAAhX,EAAAgX,KACAjtB,GAAApQ,EAAA,MAAA1L,EAAA8sC,KAuBA9a,IAAA,SAAAgb,EAAAC,EAAAlb,GAEA,IAAAib,GAAAb,GAAAa,GACAhb,GAAAlnB,KAAAohC,YAAAc,EAAAC,OACK,CACL,IAAAvhC,EAAAshC,EACAhtC,EAAAitC,EAEAb,GAAA1gC,GACA2gC,GAAArsC,GACAssC,GAAAva,GAEAA,EAAAxW,GAAAzQ,KAAAinB,GAGAjnB,KAAAknB,IAAA,UAAAD,GAEArmB,EAAA+b,UACAuK,GAAAtmB,EAAA1L,EAAA+xB,GACAC,GAAAtmB,EAAA,UAAAqmB,IACOka,GAAAvgC,KACPA,EAAAsmB,IAAAhyB,EAAA+xB,GACArmB,EAAAsmB,IAAA,UAAAD,MAiBA7C,QAAA,SAAAtkB,EAAA1B,GACA,OAAAgmB,GAAApkB,KAAAohC,YAAAthC,EAAA1B,KAqBA,SAAAgkC,GAAAxhC,EAAA5C,QACA,IAAAA,IACAA,MAGA,IACAqkC,EADArkC,EACAqkC,YAEA,GAAAA,EAAA,CACA,IAAAzhC,EAAAyhC,GAAA1lB,SACA,UAAAjN,MAAA,oBAAA2yB,EAAA,mCAGAzhC,EAAAwgC,YAAAxgC,EAAAyhC,QAEAzhC,EAAAwgC,YAAApK,GAAA,QACAsB,UAAA,kBAmBA,OAfExC,GAAMl1B,EAAA+gC,IAER/gC,EAAA0hC,kBACA1hC,EAAA0hC,iBAAAvpC,QAAA,SAAAyiB,GACAA,MAKA5a,EAAAK,GAAA,qBACAL,EAAAsmB,MACIsN,EAAA/6B,EAAQiZ,WAAA,WACZ9R,EAAAwgC,YAAA,MACK,KAELxgC,EAcA,IAAA2hC,IAOAh3B,SAeAi3B,SAAA,SAAAC,GACA,IAOAC,EAPAjb,EAAAznB,KA0CA,MAvCA,mBAAAyiC,IACAA,OAIA5M,GAAA4M,EAAA,SAAArsC,EAAAF,GAGAuxB,EAAAlc,MAAArV,KAAAE,KACAssC,SACAxsC,IACAwV,KAAA+b,EAAAlc,MAAArV,GACAqJ,GAAAnJ,IAIAqxB,EAAAlc,MAAArV,GAAAE,IAKAssC,GAAAvB,GAAAnhC,OAYAA,KAAAokB,SACAse,UACAxtC,KAAA,iBAIAwtC,IAsBA,SAAAC,GAAA/hC,EAAAgiC,GAUA,OATE9M,GAAMl1B,EAAA2hC,IAGR3hC,EAAA2K,MAAiBuqB,MAASl1B,EAAA2K,MAAAq3B,GAE1B,mBAAAhiC,EAAAiiC,oBAAA1B,GAAAvgC,IACAA,EAAAK,GAAA,eAAAL,EAAAiiC,oBAGAjiC,EAiBA,SAAAkiC,GAAAC,GACA,uBAAAA,EACAA,EAGAA,EAAA/+B,OAAA,GAAAsC,cAAAy8B,EAAAxsC,MAAA,GAyCA,SAAAysC,KAGA,IAFA,IAAA93C,KAEA0pC,EAAA7kB,UAAAnjB,OAAAmpC,EAAA,IAAApgC,MAAAi/B,GAAAppB,EAAA,EAAwEA,EAAAopB,EAAappB,IACrFuqB,EAAAvqB,GAAAuE,UAAAvE,GAqBA,OAlBAuqB,EAAAh9B,QAAA,SAAAoO,GACAA,GAIA0uB,GAAA1uB,EAAA,SAAA/Q,EAAAF,GACA8/B,GAAA5/B,IAKA4/B,GAAA9qC,EAAAgL,MACAhL,EAAAgL,OAGAhL,EAAAgL,GAAA8sC,GAAA93C,EAAAgL,GAAAE,IARAlL,EAAAgL,GAAAE,MAWAlL,EAiBA,IAAI+3C,GAEJ,WA0BA,SAAAC,EAAAzD,EAAAzhC,EAAAmS,GAiBA,IAfAsvB,GAAAz/B,KAAAmjC,KACAnjC,KAAAojC,QAAA3D,EAAAz/B,KAEAA,KAAAojC,QAAA3D,EAIAz/B,KAAAqjC,iBAAA,KAEArjC,KAAAsjC,SAAAN,MAAmChjC,KAAAsjC,UAEnCtlC,EAAAgC,KAAAsjC,SAAAN,GAAAhjC,KAAAsjC,SAAAtlC,GAEAgC,KAAAujC,IAAAvlC,EAAA3F,IAAA2F,EAAA8O,IAAA9O,EAAA8O,GAAAzU,IAEA2H,KAAAujC,IAAA,CAEA,IAAAlrC,EAAAonC,KAAApnC,IAAAonC,EAAApnC,MAAA,YACA2H,KAAAujC,IAAAlrC,EAAA,cAAAujC,KAGA57B,KAAAwjC,MAAAxlC,EAAArQ,MAAA,KAEAqQ,EAAA8O,GACA9M,KAAAyjC,IAAAzlC,EAAA8O,IACK,IAAA9O,EAAAg5B,WACLh3B,KAAAyjC,IAAAzjC,KAAAg3B,aAIA,IAAAh5B,EAAAokC,SAEAA,GAAApiC,MACAqiC,YAAAriC,KAAAyjC,IAAA,aAIAd,GAAA3iC,UAAAuT,YAAAqvB,cACA5iC,KAAA0jC,aACA1jC,KAAA2jC,eACA3jC,KAAA4jC,oBAEA,IAAA5lC,EAAA6lC,cACA7jC,KAAA6jC,eAGA7jC,KAAAmQ,UAGA,IAAAnS,EAAA8lC,qBACA9jC,KAAA+jC,sBAUA,IAAA/c,EAAAkc,EAAA5sC,UA69CA,OA39CA0wB,EAAAI,QAAA,WAgBA,GALApnB,KAAAokB,SACAlvB,KAAA,UACAupC,SAAA,IAGAz+B,KAAA0jC,UACA,QAAAz4C,EAAA+U,KAAA0jC,UAAA92C,OAAA,EAA6C3B,GAAA,EAAQA,IACrD+U,KAAA0jC,UAAAz4C,GAAAm8B,SACApnB,KAAA0jC,UAAAz4C,GAAAm8B,UAMApnB,KAAA0jC,UAAA,KACA1jC,KAAA2jC,YAAA,KACA3jC,KAAA4jC,gBAAA,KACA5jC,KAAAqjC,iBAAA,KAEArjC,KAAAyjC,MAEAzjC,KAAAyjC,IAAA9J,YACA35B,KAAAyjC,IAAA9J,WAAAsB,YAAAj7B,KAAAyjC,KAGAvH,GAAAl8B,KAAAyjC,KACAzjC,KAAAyjC,IAAA,MAIAzjC,KAAAojC,QAAA,MAUApc,EAAAyY,OAAA,WACA,OAAAz/B,KAAAojC,SAiBApc,EAAAhpB,QAAA,SAAAV,GAGA,OAFIm3B,EAAGv7B,KAAA,kFAEPoE,GAIA0C,KAAAsjC,SAAAN,GAAAhjC,KAAAsjC,SAAAhmC,GACA0C,KAAAsjC,UAJAtjC,KAAAsjC,UAcAtc,EAAAla,GAAA,WACA,OAAA9M,KAAAyjC,KAmBAzc,EAAAgQ,SAAA,SAAAC,EAAAC,EAAArP,GACA,OAAAmP,GAAAC,EAAAC,EAAArP,IA0CAb,EAAAgd,SAAA,SAAAjB,EAAA79B,EAAA++B,QACA,IAAAA,IACAA,EAAAlB,GAGA,IAAA5kB,EAAAne,KAAAojC,QAAA90C,UAAA0R,KAAAojC,QAAA90C,WACA41C,EAAAlkC,KAAAojC,QAAAc,WAAAlkC,KAAAojC,QAAAc,YACA51C,EAAA41C,KAAA/lB,GACAgmB,EAAAhmB,KAAApnB,MAAA,QACAqtC,EAAAF,KAAAC,GACAE,EAAAJ,EAqBA,OAnBA31C,KAAAy0C,GACAsB,EAAA/1C,EAAAy0C,GACKqB,KAAArB,KACLsB,EAAAD,EAAArB,IAGA79B,IACAm/B,IAAAznC,QAAA,aAA0D,SAAAjG,EAAAb,GAC1D,IAAAM,EAAA8O,EAAApP,EAAA,GACAwuC,EAAAluC,EAMA,YAJA,IAAAA,IACAkuC,EAAA3tC,GAGA2tC,KAIAD,GAWArd,EAAAud,UAAA,WACA,OAAAvkC,KAAAwkC,YAAAxkC,KAAAyjC,KAUAzc,EAAA3uB,GAAA,WACA,OAAA2H,KAAAujC,KAWAvc,EAAAr5B,KAAA,WACA,OAAAqS,KAAAwjC,OAUAxc,EAAA9sB,SAAA,WACA,OAAA8F,KAAA0jC,WAaA1c,EAAAyd,aAAA,SAAApsC,GACA,OAAA2H,KAAA2jC,YAAAtrC,IAaA2uB,EAAA0d,SAAA,SAAA/2C,GACA,GAAAA,EAKA,OADAA,EAAAm1C,GAAAn1C,GACAqS,KAAA4jC,gBAAAj2C,IAsBAq5B,EAAA2d,SAAA,SAAAtjC,EAAArD,EAAAlI,GASA,IAAAsF,EACAwpC,EAEA,QAXA,IAAA5mC,IACAA,WAGA,IAAAlI,IACAA,EAAAkK,KAAA0jC,UAAA92C,QAMA,iBAAAyU,EAAA,CACAujC,EAAA9B,GAAAzhC,GACA,IAAAwjC,EAAA7mC,EAAA8mC,gBAAAF,EAEA5mC,EAAArQ,KAAAi3C,EAGA,IAAAG,EAAA7B,EAAA8B,aAAAH,GAEA,IAAAE,EACA,UAAAr1B,MAAA,aAAAm1B,EAAA,mBAOA,sBAAAE,EACA,YAGA3pC,EAAA,IAAA2pC,EAAA/kC,KAAAojC,SAAApjC,KAAAhC,QAEA5C,EAAAiG,EAwBA,GArBAjG,EAAAioC,kBACAjoC,EAAAioC,iBAAApI,YAAA7/B,GAGA4E,KAAA0jC,UAAAr6B,OAAAvT,EAAA,EAAAsF,GACAA,EAAAioC,iBAAArjC,KAEA,mBAAA5E,EAAA/C,KACA2H,KAAA2jC,YAAAvoC,EAAA/C,MAAA+C,IAKAwpC,KAAAxpC,EAAAzN,MAAAm1C,GAAA1nC,EAAAzN,WAGAqS,KAAA4jC,gBAAAgB,GAAAxpC,GAKA,mBAAAA,EAAA0R,IAAA1R,EAAA0R,KAAA,CACA,IACAm4B,EADAjlC,KAAAukC,YAAArqC,SACApE,IAAA,KACAkK,KAAAukC,YAAAxM,aAAA38B,EAAA0R,KAAAm4B,GAIA,OAAA7pC,GAWA4rB,EAAAiU,YAAA,SAAA7/B,GAKA,GAJA,iBAAAA,IACAA,EAAA4E,KAAA0kC,SAAAtpC,IAGAA,GAAA4E,KAAA0jC,UAAA,CAMA,IAFA,IAAAwB,GAAA,EAEAj6C,EAAA+U,KAAA0jC,UAAA92C,OAAA,EAA2C3B,GAAA,EAAQA,IACnD,GAAA+U,KAAA0jC,UAAAz4C,KAAAmQ,EAAA,CACA8pC,GAAA,EACAllC,KAAA0jC,UAAAr6B,OAAApe,EAAA,GACA,MAIA,GAAAi6C,EAAA,CAIA9pC,EAAAioC,iBAAA,KACArjC,KAAA2jC,YAAAvoC,EAAA/C,MAAA,KACA2H,KAAA4jC,gBAAAxoC,EAAAzN,QAAA,KACA,IAAAw3C,EAAA/pC,EAAA0R,KAEAq4B,KAAAxL,aAAA35B,KAAAukC,aACAvkC,KAAAukC,YAAAtJ,YAAA7/B,EAAA0R,SAQAka,EAAA6c,aAAA,WACA,IAAApc,EAAAznB,KAEA9F,EAAA8F,KAAAsjC,SAAAppC,SAEA,GAAAA,EAAA,CAEA,IAwCAkrC,EAxCAC,EAAArlC,KAAAsjC,SAyCAgC,EAAApC,EAAA8B,aAAA,SAGAI,EADAzvC,MAAAyH,QAAAlD,GACAA,EAEAnE,OAAAC,KAAAkE,IAKAhC,OAAAnC,OAAAC,KAAAgK,KAAAsjC,UAAArtC,OAAA,SAAAoL,GACA,OAAA+jC,EAAAG,KAAA,SAAAC,GACA,uBAAAA,EACAnkC,IAAAmkC,EAGAnkC,IAAAmkC,EAAA73C,UAEOkI,IAAA,SAAAwL,GACP,IAAA1T,EACA6Y,EAUA,MARA,iBAAAnF,EAEAmF,EAAAtM,EADAvM,EAAA0T,IACAomB,EAAA6b,SAAA31C,QAEAA,EAAA0T,EAAA1T,KACA6Y,EAAAnF,IAIA1T,OACA6Y,UAEOvQ,OAAA,SAAAoL,GAIP,IAAA/E,EAAA4mC,EAAA8B,aAAA3jC,EAAAmF,KAAAs+B,gBAAAhC,GAAAzhC,EAAA1T,OACA,OAAA2O,IAAAgpC,EAAAG,OAAAnpC,KACOvD,QA/EP,SAAAsI,GACA,IAAA1T,EAAA0T,EAAA1T,KACA6Y,EAAAnF,EAAAmF,KAUA,QANAvK,IAAAopC,EAAA13C,KACA6Y,EAAA6+B,EAAA13C,KAKA,IAAA6Y,EAAA,EAMA,IAAAA,IACAA,MAMAA,EAAAk/B,cAAAje,EAAA6b,SAAAoC,cAKA,IAAAC,EAAAle,EAAAkd,SAAAh3C,EAAA6Y,GAEAm/B,IACAle,EAAA95B,GAAAg4C,QA2DA3e,EAAA4e,cAAA,WAGA,UAYA5e,EAAA7W,MAAA,SAAA7B,EAAAgP,GAKA,QAJA,IAAAA,IACAA,GAAA,GAGAhP,EAIA,OAAAtO,KAAA6lC,cAMAvoB,EACAhP,EAAA9X,KAAAwJ,MAGAA,KAAA0S,WAAApE,EAAA,KATAtO,KAAA8lC,YAAA9lC,KAAA8lC,qBACA9lC,KAAA8lC,YAAAn6C,KAAA2iB,KAkBA0Y,EAAA+e,aAAA,WACA/lC,KAAA6lC,UAAA,EAEA7lC,KAAA0S,WAAA,WACA,IAAAszB,EAAAhmC,KAAA8lC,YAEA9lC,KAAA8lC,eAEAE,KAAAp5C,OAAA,GACAo5C,EAAAjtC,QAAA,SAAAuV,GACAA,EAAA9X,KAAAwJ,OACSA,MAWTA,KAAAokB,QAAA,UACK,IAsBL4C,EAAAwU,EAAA,SAAA3uB,EAAAiqB,GACA,OAAA0E,GAAA3uB,EAAAiqB,GAAA92B,KAAAukC,cAsBAvd,EAAAyU,GAAA,SAAA5uB,EAAAiqB,GACA,OAAA2E,GAAA5uB,EAAAiqB,GAAA92B,KAAAukC,cAcAvd,EAAAiR,SAAA,SAAAE,GACA,OAAAF,GAAAj4B,KAAAyjC,IAAAtL,IAUAnR,EAAAuR,SAAA,SAAAC,GACAD,GAAAv4B,KAAAyjC,IAAAjL,IAUAxR,EAAA0R,YAAA,SAAAC,GACAD,GAAA14B,KAAAyjC,IAAA9K,IAeA3R,EAAA6R,YAAA,SAAAC,EAAAviB,GACAsiB,GAAA74B,KAAAyjC,IAAA3K,EAAAviB,IAQAyQ,EAAAif,KAAA,WACAjmC,KAAA04B,YAAA,eAQA1R,EAAAkf,KAAA,WACAlmC,KAAAu4B,SAAA,eAUAvR,EAAAmf,YAAA,WACAnmC,KAAAu4B,SAAA,qBAUAvR,EAAAof,cAAA,WACApmC,KAAA04B,YAAA,qBAmBA1R,EAAAjlB,aAAA,SAAAu3B,GACA,OAAAv3B,GAAA/B,KAAAyjC,IAAAnK,IAeAtS,EAAAwQ,aAAA,SAAA8B,EAAAljC,GACAohC,GAAAx3B,KAAAyjC,IAAAnK,EAAAljC,IAYA4wB,EAAAkS,gBAAA,SAAAI,GACAJ,GAAAl5B,KAAAyjC,IAAAnK,IAkBAtS,EAAA38B,MAAA,SAAAg8C,EAAAC,GACA,OAAAtmC,KAAAumC,UAAA,QAAAF,EAAAC,IAkBAtf,EAAA18B,OAAA,SAAA+7C,EAAAC,GACA,OAAAtmC,KAAAumC,UAAA,SAAAF,EAAAC,IAaAtf,EAAAwf,WAAA,SAAAn8C,EAAAC,GAEA0V,KAAA3V,SAAA,GACA2V,KAAA1V,WAgCA08B,EAAAuf,UAAA,SAAAE,EAAAJ,EAAAC,GACA,QAAArqC,IAAAoqC,EA0BA,OAxBA,OAAAA,UACAA,EAAA,IAIA,QAAAA,GAAA9sC,QAAA,eAAA8sC,GAAA9sC,QAAA,MACAyG,KAAAyjC,IAAA3D,MAAA2G,GAAAJ,EAEArmC,KAAAyjC,IAAA3D,MAAA2G,GADO,SAAAJ,EACP,GAEAA,EAAA,UAIAC,GAOAtmC,KAAAokB,QAAA,oBAQA,IAAApkB,KAAAyjC,IACA,SAIA,IAAAjoC,EAAAwE,KAAAyjC,IAAA3D,MAAA2G,GACAC,EAAAlrC,EAAAjC,QAAA,MAEA,WAAAmtC,EAEAhe,SAAAltB,EAAAjF,MAAA,EAAAmwC,GAAA,IAMAhe,SAAA1oB,KAAAyjC,IAAA,SAAAX,GAAA2D,IAAA,KAgBAzf,EAAA2f,iBAAA,SAAAF,GACA,IAAAG,EAAA,EAEA,aAAAH,GAAA,WAAAA,EACA,UAAA/2B,MAAA,uDAGA,GAAuB,mBAAR8kB,EAAA/6B,EAAQ08B,iBAAA,CACvB,IAAA0Q,EAA0BrS,EAAA/6B,EAAQ08B,iBAAAn2B,KAAAyjC,KAClCmD,EAAAC,EAAAC,iBAAAL,IAAAI,EAAAJ,GAQA,QAJAG,EAAApe,WAAAoe,IAIA,CACA,IAAAG,EAAA,SAAAjE,GAAA2D,GACAG,EAAA5mC,KAAAyjC,IAAAsD,GAGA,OAAAH,GA0BA5f,EAAAggB,kBAAA,WACA,OACA38C,MAAA2V,KAAA2mC,iBAAA,SACAr8C,OAAA0V,KAAA2mC,iBAAA,YAaA3f,EAAAigB,aAAA,WACA,OAAAjnC,KAAA2mC,iBAAA,UAYA3f,EAAAkgB,cAAA,WACA,OAAAlnC,KAAA2mC,iBAAA,WAOA3f,EAAAwS,MAAA,WACAx5B,KAAAyjC,IAAAjK,SAOAxS,EAAAmgB,KAAA,WACAnnC,KAAAyjC,IAAA0D,QAWAngB,EAAAogB,cAAA,SAAAtnC,GACAE,KAAAojC,UAGAtjC,EAAAu9B,kBACAr9B,KAAAojC,QAAAgE,cAAAtnC,KAcAknB,EAAAqgB,eAAA,SAAAvnC,GACAE,KAAAonC,cAAAtnC,IAiBAknB,EAAAsgB,cAAA,WAEA,IAQAC,EARAC,EAAA,EACAC,EAAA,KAQAznC,KAAAiB,GAAA,sBAAAnB,GAEA,IAAAA,EAAA4nC,QAAA96C,SAEA66C,GACA5M,MAAA/6B,EAAA4nC,QAAA,GAAA7M,MACAD,MAAA96B,EAAA4nC,QAAA,GAAA9M,OAGA4M,GAAA,IAAAv+C,MAAA8yC,UAEAwL,GAAA,KAGAvnC,KAAAiB,GAAA,qBAAAnB,GAEA,GAAAA,EAAA4nC,QAAA96C,OAAA,EACA26C,GAAA,OACO,GAAAE,EAAA,CAGP,IAAAE,EAAA7nC,EAAA4nC,QAAA,GAAA7M,MAAA4M,EAAA5M,MACA+M,EAAA9nC,EAAA4nC,QAAA,GAAA9M,MAAA6M,EAAA7M,MACAxoC,KAAAy1C,KAAAF,IAAAC,KA3BA,KA8BAL,GAAA,MAKA,IAAAO,EAAA,WACAP,GAAA,GAIAvnC,KAAAiB,GAAA,aAAA6mC,GACA9nC,KAAAiB,GAAA,cAAA6mC,GAGA9nC,KAAAiB,GAAA,oBAAAnB,IACA2nC,EAAA,MAEA,IAAAF,MAEA,IAAAt+C,MAAA8yC,UAAAyL,EA/CA,MAmDA1nC,EAAAmC,iBAQAjC,KAAAokB,QAAA,YAgCA4C,EAAA+c,oBAAA,WAEA,GAAA/jC,KAAAy/B,UAAAz/B,KAAAy/B,SAAAsI,mBAAA,CAKA,IACAC,EADAC,EAAAx3B,GAAAzQ,KAAAy/B,SAAAz/B,KAAAy/B,SAAAsI,oBAEA/nC,KAAAiB,GAAA,wBACAgnC,IAIAjoC,KAAAoa,cAAA4tB,GAEAA,EAAAhoC,KAAAma,YAAA8tB,EAAA,OAGA,IAAAC,EAAA,SAAApoC,GACAmoC,IAEAjoC,KAAAoa,cAAA4tB,IAGAhoC,KAAAiB,GAAA,YAAAgnC,GACAjoC,KAAAiB,GAAA,WAAAinC,GACAloC,KAAAiB,GAAA,cAAAinC,KAqCAlhB,EAAAtU,WAAA,SAAApE,EAAA+L,GACA,IAIA8tB,EAAAC,EAJAlgB,EAAAloB,KAkBA,OAbAsO,EAAAmC,GAAAzQ,KAAAsO,GACA65B,EAAgB3T,EAAA/6B,EAAQiZ,WAAA,WACxBwV,EAAAhB,IAAA,UAAAkhB,GAEA95B,KACK+L,IAEL+tB,EAAA,WACA,OAAAlgB,EAAAhO,aAAAiuB,KAGAlK,KAAA,eAAAkK,EACAnoC,KAAAiB,GAAA,UAAAmnC,GACAD,GAmBAnhB,EAAA9M,aAAA,SAAAiuB,GACI3T,EAAA/6B,EAAQygB,aAAAiuB,GAEZ,IAAAC,EAAA,aAIA,OAFAA,EAAAnK,KAAA,eAAAkK,EACAnoC,KAAAknB,IAAA,UAAAkhB,GACAD,GAwBAnhB,EAAA7M,YAAA,SAAA7L,EAAA+5B,GACA,IAAAxe,EAAA7pB,KAEAsO,EAAAmC,GAAAzQ,KAAAsO,GACA,IAAAg6B,EAAqB9T,EAAA/6B,EAAQ0gB,YAAA7L,EAAA+5B,GAE7BD,EAAA,WACA,OAAAve,EAAAzP,cAAAkuB,IAKA,OAFAF,EAAAnK,KAAA,gBAAAqK,EACAtoC,KAAAiB,GAAA,UAAAmnC,GACAE,GAmBAthB,EAAA5M,cAAA,SAAAkuB,GACI9T,EAAA/6B,EAAQ2gB,cAAAkuB,GAEZ,IAAAF,EAAA,aAIA,OAFAA,EAAAnK,KAAA,gBAAAqK,EACAtoC,KAAAknB,IAAA,UAAAkhB,GACAE,GA6BAthB,EAAAuhB,sBAAA,SAAAj6B,GACA,IAIAjW,EAAA+vC,EAJAI,EAAAxoC,KAMA,OAAAA,KAAAyoC,cACAn6B,EAAAmC,GAAAzQ,KAAAsO,GACAjW,EAAWm8B,EAAA/6B,EAAQ8uC,sBAAA,WACnBC,EAAAthB,IAAA,UAAAkhB,GAEA95B,OAGA85B,EAAA,WACA,OAAAI,EAAAE,qBAAArwC,KAGA4lC,KAAA,WAAA5lC,EACA2H,KAAAiB,GAAA,UAAAmnC,GACA/vC,GAIA2H,KAAA0S,WAAApE,EAAA,SAoBA0Y,EAAA0hB,qBAAA,SAAArwC,GACA,GAAA2H,KAAAyoC,aAAA,CACMjU,EAAA/6B,EAAQivC,qBAAArwC,GAEd,IAAA+vC,EAAA,aAIA,OAFAA,EAAAnK,KAAA,WAAA5lC,EACA2H,KAAAknB,IAAA,UAAAkhB,GACA/vC,EAIA,OAAA2H,KAAAka,aAAA7hB,IAuBA6qC,EAAAyF,kBAAA,SAAAh7C,EAAAi7C,GACA,oBAAAj7C,MACA,UAAA+hB,MAAA,4BAAA/hB,EAAA,kCAGA,IAMA6hB,EANA81B,EAAApC,EAAA8B,aAAA,QAEAS,EAAAH,KAAAG,OAAAmD,GACAC,EAAA3F,IAAA0F,GAAA1F,EAAA5sC,UAAAwyC,cAAAF,EAAAtyC,WAEA,GAAAmvC,IAAAoD,EASA,MALAr5B,EADAi2B,EACA,qDAEA,+BAGA,IAAA/1B,MAAA,uBAAA/hB,EAAA,MAA2D6hB,EAAA,KAG3D7hB,EAAAm1C,GAAAn1C,GAEAu1C,EAAA6F,cACA7F,EAAA6F,gBAGA,IAAAC,EAAA9F,EAAA8B,aAAA,UAEA,cAAAr3C,GAAAq7C,KAAAC,QAAA,CACA,IAAAA,EAAAD,EAAAC,QACAC,EAAAnzC,OAAAC,KAAAizC,GAKA,GAAAA,GAAAC,EAAAt8C,OAAA,GAAAs8C,EAAArzC,IAAA,SAAAszC,GACA,OAAAF,EAAAE,KACOnqC,MAAAU,SACP,UAAAgQ,MAAA,oEAKA,OADAwzB,EAAA6F,YAAAp7C,GAAAi7C,EACAA,GAkBA1F,EAAA8B,aAAA,SAAAr3C,GACA,GAAAA,EAMA,OAFAA,EAAAm1C,GAAAn1C,GAEAu1C,EAAA6F,aAAA7F,EAAA6F,YAAAp7C,GACAu1C,EAAA6F,YAAAp7C,QADA,GAKAu1C,EArjDA,GAikDAD,GAAS3sC,UAAAmyC,aAAyC,mBAARjU,EAAA/6B,EAAQ8uC,uBAAwD,mBAAR/T,EAAA/6B,EAAQivC,qBAC1GzF,GAAS0F,kBAAA,YAAgC1F,IAMzC,IAmDAtsC,GAnDAyyC,GAAiB5U,EAAA/6B,EAAQkU,WAAc6mB,EAAA/6B,EAAQkU,UAAAC,WAAA,GAC/Cy7B,GAAA,yBAAAhkC,KAAA+jC,IACAE,GAAAD,GAAA7gB,WAAA6gB,GAAAnlC,OAAA,KASAqlC,GAAA,QAAAvnC,KAAAonC,IAYAI,GAAA,UAAAxnC,KAAAonC,MAAAG,GASAE,GAAA,QAAAznC,KAAAonC,IASAM,GAAAF,IAAAD,IAAAE,GASAE,IACAhzC,GAAAyyC,GAAAzyC,MAAA,gBAEAA,GAAA,GACAA,GAAA,GAGA,KAUAizC,GAAA,WAAA5nC,KAAAonC,IASAS,GAAA,WAGA,IAAAlzC,EAAAyyC,GAAAzyC,MAAA,0CAEA,IAAAA,EACA,YAGA,IAAAmzC,EAAAnzC,EAAA,IAAA6xB,WAAA7xB,EAAA,IACAozC,EAAApzC,EAAA,IAAA6xB,WAAA7xB,EAAA,IAEA,OAAAmzC,GAAAC,EACAvhB,WAAA7xB,EAAA,OAAAA,EAAA,IACGmzC,GAIH,KAlBA,GA4BAE,GAAAJ,IAAAC,GAAA,GAAAP,GAAA,IASAW,GAAA,WAAAjoC,KAAAonC,IASAc,GAAA,QAAAloC,KAAAonC,IAYAe,IAAAD,KAAA,UAAAloC,KAAAonC,KAAA,SAAApnC,KAAAonC,KASAgB,GAAA,WACA,IAAAzzC,EAAAyyC,GAAAzyC,MAAA,yBAEA,OAAAA,KAAA,GACA6xB,WAAA7xB,EAAA,IAGA,KAPA,GAiBA0zC,GAAA,WACA,IAAAn/C,EAAA,kBAAAma,KAAA+jC,IACAj9C,EAAAjB,GAAAs9B,WAAAt9B,EAAA,IAOA,OALAiB,GAAA,gBAAA6V,KAAAonC,KAAA,UAAApnC,KAAAonC,MAEAj9C,EAAA,IAGAA,EATA,GAmBAm+C,GAAA,UAAAtoC,KAAAonC,MAAAe,KAAAP,KAAAM,GASAK,IAAAD,IAAAZ,MAAAS,GASAK,GAAAhU,OAAA,iBAAmDhC,EAAA/6B,GAAY+6B,EAAA/6B,EAAQkU,UAAA88B,gBAA6BjW,EAAA/6B,EAAQixC,eAAkBlW,EAAA/6B,EAAQsT,oBAAqBynB,EAAA/6B,EAAQixC,eAEnKC,GAAA50C,OAAA0I,QACA8qC,WACAC,aACAC,WACAC,UACAC,eACAC,cACAC,mBACAG,qBACAC,cACAC,WACAC,aACAC,kBACAC,cACAC,aACAC,iBACAC,mBAuFA,SAAAI,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,OAjCA,SAAAH,EAAA/0C,EAAAm1C,GACA,oBAAAn1C,KAAA,GAAAA,EAAAm1C,EACA,UAAAv7B,MAAA,sBAAAm7B,EAAA,0CAAA/0C,EAAA,wCAAAm1C,EAAA,MA8BAC,CAAAL,EAAAG,EAAAD,EAAAn+C,OAAA,GACAm+C,EAAAC,GAAAF,GAWA,SAAAK,GAAAJ,GACA,YAAA9uC,IAAA8uC,GAAA,IAAAA,EAAAn+C,QAEAA,OAAA,EACA2gC,MAAA,WACA,UAAA7d,MAAA,oCAEAva,IAAA,WACA,UAAAua,MAAA,sCAMA9iB,OAAAm+C,EAAAn+C,OACA2gC,MAAAqd,GAAAn6B,KAAA,eAAAs6B,GACA51C,IAAAy1C,GAAAn6B,KAAA,aAAAs6B,IAiBA,SAAAK,GAAA7d,EAAAp4B,GACA,OAAAQ,MAAAyH,QAAAmwB,GACA4d,GAAA5d,QACGtxB,IAAAsxB,QAAAtxB,IAAA9G,EACHg2C,KAGAA,KAAA5d,EAAAp4B,KAoBA,SAAAk2C,GAAAC,EAAA58C,GACA,IACA6+B,EACAp4B,EAFAo2C,EAAA,EAIA,IAAA78C,EACA,SAGA48C,KAAA1+C,SACA0+C,EAAAF,GAAA,MAGA,QAAAngD,EAAA,EAAiBA,EAAAqgD,EAAA1+C,OAAqB3B,IACtCsiC,EAAA+d,EAAA/d,MAAAtiC,IACAkK,EAAAm2C,EAAAn2C,IAAAlK,IAEAyD,IACAyG,EAAAzG,GAGA68C,GAAAp2C,EAAAo4B,EAGA,OAAAge,EAAA78C,EA0BA,IAVA,IAOA88C,GAPAC,MAEAC,KAAA,iIACA,8KACA,2JACA,iJACAC,GAAAD,GAAA,GAEAE,IAAA,EAESC,GAAC,EAAMA,GAACH,GAAA9+C,OAAkBi/C,KAEnC,GAAAH,GAAaG,IAAC,KAAQpV,EAAAh9B,EAAQ,CAC9B+xC,GAAAE,GAAwBG,IACxB,MAKA,GAAAL,GAAA,CACA,QAAWM,GAAE,EAAMA,GAAEN,GAAA5+C,OAAsBk/C,KAC3CL,GAAAE,GAA0BG,KAAEN,GAAgBM,IAG5CF,GAAAJ,GAAA,KAAAG,GAAA,GAwBA,SAAAI,GAAA31C,GAGA,GAAAA,aAAA21C,GACA,OAAA31C,EAGA,iBAAAA,EACA4J,KAAAme,KAAA/nB,EACG,iBAAAA,EAEH4J,KAAA5G,QAAAhD,EACGwW,GAAAxW,KAGH,iBAAAA,EAAA+nB,OACAne,KAAAme,KAAA/nB,EAAA+nB,MAGI2X,GAAM91B,KAAA5J,IAGV4J,KAAA5G,UACA4G,KAAA5G,QAAA2yC,GAAAC,gBAAAhsC,KAAAme,OAAA,IAUA4tB,GAAAz1C,UAAA6nB,KAAA,EAQA4tB,GAAAz1C,UAAA8C,QAAA,GAWA2yC,GAAAz1C,UAAA8lB,OAAA,KAeA2vB,GAAAE,YAAA,mIAQAF,GAAAC,iBACAE,EAAA,iCACAC,EAAA,8DACAC,EAAA,8HACAC,EAAA,qHACAC,EAAA,qEAIA,QAAAC,GAAA,EAAoBA,GAAAR,GAAAE,WAAAr/C,OAAuC2/C,KAC3DR,MAAAE,WAAAM,QAEAR,GAAAz1C,UAAAy1C,GAAAE,WAAAM,QAYA,SAAAC,GAAAp2C,GACA,YAAA6F,IAAA7F,GAAA,OAAAA,GAAA,mBAAAA,EAAA+V,KAYA,SAAAsgC,GAAAr2C,GACAo2C,GAAAp2C,IACAA,EAAA+V,KAAA,cAAAjO,MAsBA,IAAAwuC,GAAA,SAAAt0B,GAiBA,OAhBA,+EAAAhgB,OAAA,SAAA+vB,EAAA+N,EAAAjrC,GAKA,OAJAmtB,EAAA8d,KACA/N,EAAA+N,GAAA9d,EAAA8d,IAGA/N,IAEAwkB,KAAAv0B,EAAAu0B,MAAAh3C,MAAAW,UAAAT,IAAAW,KAAA4hB,EAAAu0B,KAAA,SAAAC,GACA,OACAh1C,UAAAg1C,EAAAh1C,UACAi1C,QAAAD,EAAAC,QACAnjB,KAAAkjB,EAAAljB,KACArxB,GAAAu0C,EAAAv0C,SAgEAy0C,GA5CA,SAAAC,GACA,IAAAC,EAAAD,EAAAtR,GAAA,SACAwR,EAAAt3C,MAAAW,UAAAT,IAAAW,KAAAw2C,EAAA,SAAA1O,GACA,OAAAA,EAAAlmB,QAWA,OATAziB,MAAAW,UAAAT,IAAAW,KAAAw2C,EAAA,SAAAE,GACA,IAAA3vB,EAAAmvB,GAAAQ,EAAA90B,OAMA,OAJA80B,EAAAC,MACA5vB,EAAA4vB,IAAAD,EAAAC,KAGA5vB,IAEArlB,OAAAvC,MAAAW,UAAAL,OAAAO,KAAAu2C,EAAAK,aAAA,SAAAh1B,GACA,WAAA60B,EAAA1zC,QAAA6e,KACGviB,IAAA62C,MA4BHI,GAbA,SAAAvvB,EAAAwvB,GAUA,OATAxvB,EAAAxkB,QAAA,SAAAqf,GACA,IAAAi1B,EAAAN,EAAAO,mBAAAl1B,UAEAA,EAAA+0B,KAAA/0B,EAAAu0B,MACAv0B,EAAAu0B,KAAA5zC,QAAA,SAAA6zC,GACA,OAAAS,EAAAE,OAAAX,OAIAG,EAAAK,cASAI,GAAA,mBAWIC,GAEJ,SAAAC,GAuCA,SAAAC,EAAAlO,EAAAzhC,GACA,IAAAypB,EA2BA,OAzBAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACA4tC,QAAAnmB,EAAAomB,eAAApmB,EAAAqmB,gBAAA,EAEArmB,EAAAsmB,WAAAtmB,EAAA6b,SAAA0K,aAEAvmB,EAAA0P,QAAA1P,EAAA6b,SAAAnM,SAKA1P,EAAA+c,WAAAxN,GAAA,OACAsB,UAAAkV,GAAA,aAEAS,KAAA,aAEAxmB,EAAAymB,QAAAlX,GAAA,KACAsB,UAAAkV,GAAA,gCACAn1C,GAAAovB,EAAA3a,KAAA/K,aAAA,sBAEA01B,GAAAhQ,EAAAymB,QAAAzmB,EAAA0mB,eAEA1mB,EAAAgc,IAAAzL,YAAAvQ,EAAAymB,SAEAzmB,EAAAgc,IAAAzL,YAAAvQ,EAAA+c,YAEA/c,EAlEEyL,EAAcya,EAAAD,GA4EhB,IAAA1mB,EAAA2mB,EAAAr3C,UAoaA,OAlaA0wB,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAAt4B,KAAA4lC,gBACAwI,UAAA,IAEAC,mBAAAruC,KAAA3H,KAAA,eACAi2C,cAAA,OACAC,aAAAvuC,KAAAwuC,QACAP,KAAA,YAIAjnB,EAAAI,QAAA,WACApnB,KAAAwkC,WAAA,KACAxkC,KAAAkuC,QAAA,KACAluC,KAAAyuC,oBAAA,KAEAf,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAUAgnB,EAAA4e,cAAA,WACA,OAAA4H,GAAA,eAAAE,EAAAp3C,UAAAsvC,cAAApvC,KAAAwJ,OAUAgnB,EAAAwnB,MAAA,WACA,OAAAxuC,KAAAgkC,SAAAhkC,KAAAsjC,SAAAkL,OAAA,iBAWAxnB,EAAAmnB,YAAA,WACA,IAAAO,EAAA1uC,KAAAsjC,SAAA6K,aAAAnuC,KAAAgkC,SAAA,2BAMA,OAJAhkC,KAAA+tC,cACAW,GAAA,IAAA1uC,KAAAgkC,SAAA,wFAGA0K,GAUA1nB,EAAAjJ,KAAA,WACA,IAAA/d,KAAA4tC,QAAA,CACA,IAAAnO,EAAAz/B,KAAAy/B,SAQAz/B,KAAAokB,QAAA,mBACApkB,KAAA4tC,SAAA,GAGA5tC,KAAAsjC,SAAAqL,aAAA3uC,KAAA6tC,iBAAA7tC,KAAA8tC,iBACA9tC,KAAA4uC,OAKA5uC,KAAA6uC,aAAApP,EAAAqP,SAEA9uC,KAAAsjC,SAAAyL,aAAA/uC,KAAA6uC,aACApP,EAAAuP,QAGAhvC,KAAAiB,GAAA,UAAAjB,KAAAonC,eAEApnC,KAAAivC,aAAAxP,EAAAyP,WACAzP,EAAAyP,UAAA,GACAlvC,KAAAimC,OACAjmC,KAAAmvC,oBACAnvC,KAAA8M,KAAA0qB,aAAA,uBAQAx3B,KAAAokB,QAAA,aACApkB,KAAA6tC,gBAAA,IAcA7mB,EAAAooB,OAAA,SAAAh5C,GAKA,MAJA,kBAAAA,GACA4J,KAAA5J,EAAA,kBAGA4J,KAAA4tC,SAWA5mB,EAAA1M,MAAA,WACA,GAAAta,KAAA4tC,QAAA,CAIA,IAAAnO,EAAAz/B,KAAAy/B,SAQAz/B,KAAAokB,QAAA,oBACApkB,KAAA4tC,SAAA,EAEA5tC,KAAA6uC,aAAA7uC,KAAAsjC,SAAAyL,aACAtP,EAAA0D,OAGAnjC,KAAAknB,IAAA,UAAAlnB,KAAAonC,eAEApnC,KAAAivC,cACAxP,EAAAyP,UAAA,GAGAlvC,KAAAkmC,OACAlmC,KAAA8M,KAAA0qB,aAAA,sBAQAx3B,KAAAokB,QAAA,cACApkB,KAAAqvC,mBAEArvC,KAAAsjC,SAAAgM,WACAtvC,KAAAonB,YAcAJ,EAAA+mB,UAAA,SAAA33C,GACA,qBAAAA,EAAA,CACA,IAAA23C,EAAA/tC,KAAAuvC,aAAAn5C,EACAkkB,EAAAta,KAAA0kC,SAAA,eAEA,GAAAqJ,IAAAzzB,EAAA,CAGA,IAAAk1B,EAAAxvC,KAAAwkC,WACAxkC,KAAAwkC,WAAAxkC,KAAAyjC,IACAnpB,EAAAta,KAAA2kC,SAAA,eACA8K,YAAA,uBAEAzvC,KAAAwkC,WAAAgL,EACAxvC,KAAAiB,GAAAqZ,EAAA,QAAAta,KAAAsa,QAIAyzB,GAAAzzB,IACAta,KAAAknB,IAAA5M,EAAA,QAAAta,KAAAsa,OACAta,KAAAi7B,YAAA3gB,GACAA,EAAA8M,WAIA,OAAApnB,KAAAuvC,YAQAvoB,EAAA4nB,KAAA,WACA5uC,KAAA0vC,SAAA1vC,KAAAm3B,YAcAnQ,EAAA0oB,SAAA,SAAAvY,GACA,IAAAoN,EAAAvkC,KAAAukC,YACAoL,EAAApL,EAAA5K,WACAiW,EAAArL,EAAAsL,YAQA7vC,KAAAokB,QAAA,mBACApkB,KAAA8tC,gBAAA,EAGA6B,EAAA1U,YAAAsJ,GACAvkC,KAAA8vC,QACAzU,GAAAkJ,EAAApN,GAQAn3B,KAAAokB,QAAA,aAEAwrB,EACAD,EAAA5X,aAAAwM,EAAAqL,GAEAD,EAAA3X,YAAAuM,GAIA,IAAAwL,EAAA/vC,KAAA0kC,SAAA,eAEAqL,GACAJ,EAAA3X,YAAA+X,EAAAtM,MAWAzc,EAAA8oB,MAAA,WAOA9vC,KAAAokB,QAAA,oBACA4W,GAAAh7B,KAAAukC,aAQAvkC,KAAAokB,QAAA,eAmBA4C,EAAAmQ,QAAA,SAAA/gC,GAKA,YAJA,IAAAA,IACA4J,KAAAgwC,SAAA55C,GAGA4J,KAAAgwC,UASAhpB,EAAAmoB,kBAAA,WACA,IAAAc,EAAmBxZ,EAAAh9B,EAAQy2C,cAC3BC,EAAAnwC,KAAAojC,QAAAK,IACAzjC,KAAAyuC,oBAAA,MAEA0B,EAAA9X,SAAA4X,IAAAE,IAAAF,KACAjwC,KAAAyuC,oBAAAwB,EACAjwC,KAAAw5B,UAUAxS,EAAAqoB,iBAAA,WACArvC,KAAAyuC,sBACAzuC,KAAAyuC,oBAAAjV,QACAx5B,KAAAyuC,oBAAA,OAUAznB,EAAAogB,cAAA,SAAAtnC,GAIA,GAFAA,EAAAu9B,kBAEQ+S,EAAA32C,EAAO42C,WAAAvwC,EAAA,WAAAE,KAAA+tC,YAGf,OAFAjuC,EAAAmC,sBACAjC,KAAAsa,QAKA,GAAS81B,EAAA32C,EAAO42C,WAAAvwC,EAAA,OAAhB,CAQA,IAJA,IAEAwwC,EAFAC,EAAAvwC,KAAAwwC,gBACAP,EAAAjwC,KAAAyjC,IAAAz2B,cAAA,UAGA/hB,EAAA,EAAmBA,EAAAslD,EAAA3jD,OAAyB3B,IAC5C,GAAAglD,IAAAM,EAAAtlD,GAAA,CACAqlD,EAAArlD,EACA,MAIQwrC,EAAAh9B,EAAQy2C,gBAAAlwC,KAAAyjC,MAChB6M,EAAA,GAGAxwC,EAAA6B,UAAA,IAAA2uC,GACAC,IAAA3jD,OAAA,GAAA4sC,QACA15B,EAAAmC,kBACKnC,EAAA6B,UAAA2uC,IAAAC,EAAA3jD,OAAA,IACL2jD,EAAA,GAAA/W,QACA15B,EAAAmC,oBAUA+kB,EAAAwpB,cAAA,WACA,IAAAC,EAAAzwC,KAAAyjC,IAAAiN,iBAAA,KACA,OAAA/6C,MAAAW,UAAAL,OAAAO,KAAAi6C,EAAA,SAAApvC,GACA,OAAAA,aAA+BmzB,EAAA/6B,EAAQk3C,mBAAAtvC,aAAuCmzB,EAAA/6B,EAAQm3C,kBAAAvvC,EAAAwvC,aAAA,UAAAxvC,aAAqEmzB,EAAA/6B,EAAQq3C,kBAAAzvC,aAAsCmzB,EAAA/6B,EAAQs3C,mBAAA1vC,aAAuCmzB,EAAA/6B,EAAQu3C,qBAAA3vC,aAAyCmzB,EAAA/6B,EAAQw3C,qBAAA5vC,EAAAwvC,aAAA,aAAAxvC,aAA2EmzB,EAAA/6B,EAAQy3C,mBAAA7vC,aAAuCmzB,EAAA/6B,EAAQ03C,mBAAA9vC,aAAuCmzB,EAAA/6B,EAAQ23C,kBAAA/vC,EAAAwvC,aAAA,kBAAAxvC,EAAAU,aAAA,aAAAV,EAAAwvC,aAAA,sBAIlelD,EAjfA,CAkfE1K,IASFwK,GAAWn3C,UAAAgtC,UACXyL,aAAA,EACAO,WAAA,GAEArM,GAAS0F,kBAAA,cAAkC8E,IAS3C,IAAA4D,GAEA,SAAAC,GAWA,SAAAD,EAAA94B,GACA,IAAAkP,OAEA,IAAAlP,IACAA,OAGAkP,EAAA6pB,EAAA96C,KAAAwJ,aACAuxC,WAQAx7C,OAAAkN,eAA0B6wB,EAAuBA,EAAsBrM,IAAA,UACvEvkB,IAAA,WACA,OAAAlD,KAAAuxC,QAAA3kD,UAIA,QAAA3B,EAAA,EAAmBA,EAAAstB,EAAA3rB,OAAmB3B,IACtCw8B,EAAA+pB,SAAAj5B,EAAAttB,IAGA,OAAAw8B,EApCEyL,EAAcme,EAAAC,GAgDhB,IAAAtqB,EAAAqqB,EAAA/6C,UAsGA,OApGA0wB,EAAAwqB,SAAA,SAAAp5B,GACA,IAAAtiB,EAAAkK,KAAAuxC,QAAA3kD,OAEA,GAAAkJ,KAAAkK,MACAjK,OAAAkN,eAAAjD,KAAAlK,GACAoN,IAAA,WACA,OAAAlD,KAAAuxC,QAAAz7C,OAMA,IAAAkK,KAAAuxC,QAAAh4C,QAAA6e,KACApY,KAAAuxC,QAAA5lD,KAAAysB,GAUApY,KAAAokB,SACAhM,QACAljB,KAAA,WACA0L,OAAAZ,SAcAgnB,EAAAyqB,YAAA,SAAAC,GAGA,IAFA,IAAAt5B,EAEAntB,EAAA,EAAAme,EAAApJ,KAAApT,OAAoC3B,EAAAme,EAAOne,IAC3C,GAAA+U,KAAA/U,KAAAymD,EAAA,EACAt5B,EAAApY,KAAA/U,IAEAi8B,KACA9O,EAAA8O,MAGAlnB,KAAAuxC,QAAAloC,OAAApe,EAAA,GACA,MAIAmtB,GAaApY,KAAAokB,SACAhM,QACAljB,KAAA,cACA0L,OAAAZ,QAaAgnB,EAAA2qB,aAAA,SAAAt5C,GAGA,IAFA,IAAAnN,EAAA,KAEAD,EAAA,EAAAme,EAAApJ,KAAApT,OAAoC3B,EAAAme,EAAOne,IAAA,CAC3C,IAAAmtB,EAAApY,KAAA/U,GAEA,GAAAmtB,EAAA/f,OAAA,CACAnN,EAAAktB,EACA,OAIA,OAAAltB,GAGAmmD,EAvJA,CAwJC1Q,IAsBD,QAASiR,MANTP,GAAA/6C,UAAAsqC,gBACAiR,OAAA,SACAC,SAAA,WACAC,YAAA,eAGcV,GAAA/6C,UAAAsqC,eACdyQ,GAAA/6C,UAAA,KAA6Bs7C,IAAK,KAgBlC,IAAAI,GAAA,SAAA98B,EAAAkD,GACA,QAAAntB,EAAA,EAAiBA,EAAAiqB,EAAAtoB,OAAiB3B,IAClC8K,OAAAC,KAAAkf,EAAAjqB,IAAA2B,QAAAwrB,EAAA/f,KAAA6c,EAAAjqB,GAAAoN,KAKA6c,EAAAjqB,GAAAgnD,SAAA,IAWAC,GAEA,SAAAC,GASA,SAAAD,EAAA35B,GACA,IAAAkP,OAEA,IAAAlP,IACAA,MAKA,QAAAttB,EAAAstB,EAAA3rB,OAAA,EAAmC3B,GAAA,EAAQA,IAC3C,GAAAstB,EAAAttB,GAAAgnD,QAAA,CACAD,GAAAz5B,IAAAttB,IACA,MAMA,OAFAw8B,EAAA0qB,EAAA37C,KAAAwJ,KAAAuY,IAAAvY,MACAoyC,WAAA,EACA3qB,EA1BEyL,EAAcgf,EAAAC,GAsChB,IAAAnrB,EAAAkrB,EAAA57C,UAgDA,OA9CA0wB,EAAAwqB,SAAA,SAAAp5B,GACA,IAAA8P,EAAAloB,KAEAoY,EAAA65B,SACAD,GAAAhyC,KAAAoY,GAGA+5B,EAAA77C,UAAAk7C,SAAAh7C,KAAAwJ,KAAAoY,GAGAA,EAAA/M,mBAIA+M,EAAAi6B,eAAA,WAIAnqB,EAAAkqB,YAIAlqB,EAAAkqB,WAAA,EACAJ,GAAA9pB,EAAA9P,GACA8P,EAAAkqB,WAAA,EAEAlqB,EAAA9D,QAAA,YAQAhM,EAAA/M,iBAAA,gBAAA+M,EAAAi6B,kBAGArrB,EAAAyqB,YAAA,SAAAC,GACAS,EAAA77C,UAAAm7C,YAAAj7C,KAAAwJ,KAAA0xC,GAEAA,EAAApV,qBAAAoV,EAAAW,iBACAX,EAAApV,oBAAA,gBAAAoV,EAAAW,gBACAX,EAAAW,eAAA,OAIAH,EAvFA,CAwFCb,IAcDiB,GAAA,SAAAp9B,EAAAkD,GACA,QAAAntB,EAAA,EAAiBA,EAAAiqB,EAAAtoB,OAAiB3B,IAClC8K,OAAAC,KAAAkf,EAAAjqB,IAAA2B,QAAAwrB,EAAA/f,KAAA6c,EAAAjqB,GAAAoN,KAKA6c,EAAAjqB,GAAAsnD,UAAA,IAWAC,GAEA,SAAAL,GASA,SAAAK,EAAAj6B,GACA,IAAAkP,OAEA,IAAAlP,IACAA,MAKA,QAAAttB,EAAAstB,EAAA3rB,OAAA,EAAmC3B,GAAA,EAAQA,IAC3C,GAAAstB,EAAAttB,GAAAsnD,SAAA,CACAD,GAAA/5B,IAAAttB,IACA,MAuBA,OAnBAw8B,EAAA0qB,EAAA37C,KAAAwJ,KAAAuY,IAAAvY,MACAoyC,WAAA,EAMAr8C,OAAAkN,eAA0B6wB,EAAuBA,EAAsBrM,IAAA,iBACvEvkB,IAAA,WACA,QAAAiuB,EAAA,EAAwBA,EAAAnxB,KAAApT,OAAkBukC,IAC1C,GAAAnxB,KAAAmxB,GAAAohB,SACA,OAAAphB,EAIA,UAEAhZ,IAAA,eAEAsP,EA3CEyL,EAAcsf,EAAAL,GAuDhB,IAAAnrB,EAAAwrB,EAAAl8C,UA6CA,OA3CA0wB,EAAAwqB,SAAA,SAAAp5B,GACA,IAAA8P,EAAAloB,KAEAoY,EAAAm6B,UACAD,GAAAtyC,KAAAoY,GAGA+5B,EAAA77C,UAAAk7C,SAAAh7C,KAAAwJ,KAAAoY,GAGAA,EAAA/M,mBAIA+M,EAAAq6B,gBAAA,WACAvqB,EAAAkqB,YAIAlqB,EAAAkqB,WAAA,EACAE,GAAApqB,EAAA9P,GACA8P,EAAAkqB,WAAA,EAEAlqB,EAAA9D,QAAA,YAQAhM,EAAA/M,iBAAA,iBAAA+M,EAAAq6B,mBAGAzrB,EAAAyqB,YAAA,SAAAC,GACAS,EAAA77C,UAAAm7C,YAAAj7C,KAAAwJ,KAAA0xC,GAEAA,EAAApV,qBAAAoV,EAAAe,kBACAf,EAAApV,oBAAA,iBAAAoV,EAAAe,iBACAf,EAAAe,gBAAA,OAIAD,EArGA,CAsGCnB,IASDqB,GAEA,SAAAP,GAGA,SAAAO,IACA,OAAAP,EAAA15C,MAAAuH,KAAA+P,YAAA/P,KAHEkzB,EAAcwf,EAAAP,GAMhB,IAAAnrB,EAAA0rB,EAAAp8C,UAuDA,OA7CA0wB,EAAAwqB,SAAA,SAAAp5B,GACA,IAAAqP,EAAAznB,KAEAmyC,EAAA77C,UAAAk7C,SAAAh7C,KAAAwJ,KAAAoY,GAEApY,KAAA2yC,eACA3yC,KAAA2yC,aAAA,WACA,OAAAlrB,EAAAsZ,aAAA,YAIA/gC,KAAA4yC,gCACA5yC,KAAA6yC,+BAAA,WACA,OAAAprB,EAAArD,QAAA,4BASAhM,EAAA/M,iBAAA,aAAArL,KAAA2yC,eAGA,KAFA,uBAEAp5C,QAAA6e,EAAA06B,OACA16B,EAAA/M,iBAAA,aAAArL,KAAA6yC,iCAIA7rB,EAAAyqB,YAAA,SAAAC,GACAS,EAAA77C,UAAAm7C,YAAAj7C,KAAAwJ,KAAA0xC,GAGAA,EAAApV,sBACAt8B,KAAA2yC,cACAjB,EAAApV,oBAAA,aAAAt8B,KAAA2yC,cAGA3yC,KAAA+yC,yBACArB,EAAApV,oBAAA,aAAAt8B,KAAA6yC,kCAKAH,EA9DA,CA+DCrB,IASD2B,GAEA,WAOA,SAAAA,EAAAC,QACA,IAAAA,IACAA,MAGAjzC,KAAAkzC,kBAQAn9C,OAAAkN,eAAAjD,KAAA,UACAkD,IAAA,WACA,OAAAlD,KAAAkzC,eAAAtmD,UAIA,QAAA3B,EAAA,EAAA2B,EAAAqmD,EAAArmD,OAAkD3B,EAAA2B,EAAY3B,IAC9D+U,KAAAmzC,iBAAAF,EAAAhoD,IAaA,IAAA+7B,EAAAgsB,EAAA18C,UAuEA,OArEA0wB,EAAAmsB,iBAAA,SAAAC,GACA,IAAAt9C,EAAAkK,KAAAkzC,eAAAtmD,OAEA,GAAAkJ,KAAAkK,MACAjK,OAAAkN,eAAAjD,KAAAlK,GACAoN,IAAA,WACA,OAAAlD,KAAAkzC,eAAAp9C,OAMA,IAAAkK,KAAAkzC,eAAA35C,QAAA65C,IACApzC,KAAAkzC,eAAAvnD,KAAAynD,IAiBApsB,EAAAqsB,wBAAA,SAAAj7B,GAGA,IAFA,IAAAk7B,EAEAroD,EAAA,EAAA2B,EAAAoT,KAAAkzC,eAAAtmD,OAAwD3B,EAAA2B,EAAY3B,IACpE,GAAAmtB,IAAApY,KAAAkzC,eAAAjoD,GAAAmtB,MAAA,CACAk7B,EAAAtzC,KAAAkzC,eAAAjoD,GACA,MAIA,OAAAqoD,GAYAtsB,EAAAusB,oBAAA,SAAAH,GACA,QAAAnoD,EAAA,EAAA2B,EAAAoT,KAAAkzC,eAAAtmD,OAAwD3B,EAAA2B,EAAY3B,IACpE,GAAAmoD,IAAApzC,KAAAkzC,eAAAjoD,GAAA,CACA+U,KAAAkzC,eAAAjoD,GAAAmtB,OAAA,mBAAApY,KAAAkzC,eAAAjoD,GAAAmtB,MAAA8O,KACAlnB,KAAAkzC,eAAAjoD,GAAAmtB,MAAA8O,MAGA,mBAAAlnB,KAAAkzC,eAAAjoD,GAAAi8B,KACAlnB,KAAAkzC,eAAAjoD,GAAAi8B,MAGAlnB,KAAAkzC,eAAA7pC,OAAApe,EAAA,GACA,QAKA+nD,EA/GA,GA6IAQ,GAEA,WAOA,SAAAA,EAAA7G,GACA6G,EAAAl9C,UAAAm9C,SAAAj9C,KAAAwJ,KAAA2sC,GAQA52C,OAAAkN,eAAAjD,KAAA,UACAkD,IAAA,WACA,OAAAlD,KAAA0zC,WAeA,IAAA1sB,EAAAwsB,EAAAl9C,UAqDA,OAnDA0wB,EAAAysB,SAAA,SAAA9G,GACA,IAAAgH,EAAA3zC,KAAApT,QAAA,EACA3B,EAAA,EACAme,EAAAujC,EAAA//C,OACAoT,KAAA4zC,MAAAjH,EACA3sC,KAAA0zC,QAAA/G,EAAA//C,OAEA,IAAAinD,EAAA,SAAA/9C,GACA,GAAAA,KAAAkK,MACAjK,OAAAkN,eAAAjD,KAAA,GAAAlK,GACAoN,IAAA,WACA,OAAAlD,KAAA4zC,MAAA99C,OAMA,GAAA69C,EAAAvqC,EAGA,IAFAne,EAAA0oD,EAEY1oD,EAAAme,EAAOne,IACnB4oD,EAAAr9C,KAAAwJ,KAAA/U,IAeA+7B,EAAA8sB,WAAA,SAAAz7C,GAGA,IAFA,IAAAnN,EAAA,KAEAD,EAAA,EAAAme,EAAApJ,KAAApT,OAAoC3B,EAAAme,EAAOne,IAAA,CAC3C,IAAA2hD,EAAA5sC,KAAA/U,GAEA,GAAA2hD,EAAAv0C,OAAA,CACAnN,EAAA0hD,EACA,OAIA,OAAA1hD,GAGAsoD,EAtFA,GAoGAO,IACAC,YAAA,cACAC,SAAA,WACAC,KAAA,OACAC,KAAA,OACAC,UAAA,YACAC,WAAA,cAUAC,IACAN,YAAA,cACAO,aAAA,eACAL,KAAA,OACAM,YAAA,YACAC,YAAA,cACAJ,WAAA,cAUAK,IACAN,UAAA,YACAH,SAAA,WACAM,aAAA,eACAI,SAAA,WACAC,SAAA,YAUAC,IACApY,SAAA,WACAqY,OAAA,SACAC,QAAA,WAcAC,GAEA,SAAA1D,GAuBA,SAAA0D,EAAAh3C,GACA,IAAAypB,OAEA,IAAAzpB,IACAA,MAGAypB,EAAA6pB,EAAA96C,KAAAwJ,YACA,IAAAi1C,GACA58C,GAAA2F,EAAA3F,IAAA,aAAAujC,KACAkX,KAAA90C,EAAA80C,MAAA,GACAtE,MAAAxwC,EAAAwwC,OAAA,GACAlgD,SAAA0P,EAAA1P,UAAA,IAuCA4mD,EAAA,SAAAh/C,GACAH,OAAAkN,eAA4B6wB,EAAuBA,EAAsBrM,IAAAvxB,GACzEgN,IAAA,WACA,OAAA+xC,EAAA/+C,IAEAiiB,IAAA,gBAIA,QAAAjiB,KAAA++C,EACAC,EAAAh/C,GAGA,OAAAuxB,EAGA,OAzFEyL,EAAc8hB,EAAA1D,GAyFhB0D,EA1FA,CA2FCrU,IA0CGwU,GAAQ,SAAAhnC,GACZ,IAAAtU,GAAA,gEAEAJ,EAAUg9B,EAAAh9B,EAAQ29B,cAAA,KAClB39B,EAAA0G,KAAAgO,EAIA,IACAinC,EADAC,EAAA,KAAA57C,EAAA67C,MAAA,UAAA77C,EAAA87C,SAGAF,KACAD,EAAU3e,EAAAh9B,EAAQ29B,cAAA,QAClBoe,UAAA,YAAArnC,EAAA,SACA1U,EAAA27C,EAAAtd,WAEAsd,EAAA5d,aAAA,4CACIf,EAAAh9B,EAAQmiB,KAAAoc,YAAAod,IAQZ,IAFA,IAAAK,KAEAxqD,EAAA,EAAiBA,EAAA4O,EAAAjN,OAAkB3B,IACnCwqD,EAAA57C,EAAA5O,IAAAwO,EAAAI,EAAA5O,IAqBA,MAhBA,UAAAwqD,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAA14C,QAAA,YAGA,WAAA64C,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAA14C,QAAA,aAGA64C,EAAAF,WACAE,EAAAF,SAAuB/gB,EAAA/6B,EAAQmE,SAAA23C,UAG/BF,GACI5e,EAAAh9B,EAAQmiB,KAAAqf,YAAAma,GAGZK,GAeIC,GAAc,SAAAvnC,GAElB,IAAAA,EAAAxX,MAAA,iBAEA,IAAAy+C,EAAc3e,EAAAh9B,EAAQ29B,cAAA,OACtBge,EAAAI,UAAA,YAAArnC,EAAA,UACAA,EAAAinC,EAAAtd,WAAA33B,KAGA,OAAAgO,GAeAwnC,GAAA,SAAA59C,GACA,oBAAAA,EAAA,CACA,IACA69C,EADA,0EACAvwC,KAAAtN,GAEA,GAAA69C,EACA,OAAAA,EAAA1xC,MAAAslB,cAIA,UAaIqsB,GAAa,SAAA1nC,GACjB,IAAA2nC,EAAethB,EAAA/6B,EAAQmE,SACvBm4C,EAAgBZ,GAAQhnC,GAMxB,OAJA,MAAA4nC,EAAAR,SAAAO,EAAAP,SAAAQ,EAAAR,UAGAQ,EAAAT,OAAAQ,EAAAP,SAAAO,EAAAR,MAIAU,GAAAjgD,OAAA0I,QACAw3C,SAAYd,GACZe,eAAkBR,GAClBC,oBACAQ,cAAiBN,KAebO,GAAS,SAAAC,EAAAj+B,GACb,IAAAk+B,EAAA,IAAmB9hB,EAAA/6B,EAAQ88C,OAAApsB,OAAeqK,EAAA/6B,EAAU+6B,EAAA/6B,EAAQ+8C,MAAQhiB,EAAA/6B,EAAQ88C,OAAAE,iBAC5EC,KAEAJ,EAAAK,MAAA,SAAA/J,GACAx0B,EAAAm1B,OAAAX,IAGA0J,EAAAM,eAAA,SAAAhoC,GACA8nC,EAAA/qD,KAAAijB,IAGA0nC,EAAAO,QAAA,WACAz+B,EAAAgM,SACAlvB,KAAA,aACA0L,OAAAwX,KAIAk+B,EAAA3sD,MAAA0sD,GAEAK,EAAA9pD,OAAA,IACQ4nC,EAAA/6B,EAAQkY,SAAY6iB,EAAA/6B,EAAQkY,QAAAmlC,gBAC9BtiB,EAAA/6B,EAAQkY,QAAAmlC,eAAA,iCAAA1+B,EAAA+0B,KAGduJ,EAAA39C,QAAA,SAAA6V,GACA,OAAa6lB,EAAG7lB,WAGR4lB,EAAA/6B,EAAQkY,SAAY6iB,EAAA/6B,EAAQkY,QAAAolC,UAC9BviB,EAAA/6B,EAAQkY,QAAAolC,YAIdT,EAAAjyB,SAeI2yB,GAAS,SAAA7J,EAAA/0B,GACb,IAAA5R,GACA+U,IAAA4xB,GAEA8J,EAAoBpB,GAAa1I,GAEjC8J,IACAzwC,EAAA2W,KAAA85B,GAGEC,IAAG1wC,EAAAiK,GAAAzQ,KAAA,SAAA1G,EAAAqiB,EAAAw7B,GACL,GAAA79C,EACA,OAAam7B,EAAG7lB,MAAAtV,EAAAqiB,GAMhB,GAHAvD,EAAAg/B,SAAA,EAGuB,mBAAR5iB,EAAA/6B,EAAQ88C,QACvB,GAAAn+B,EAAAi/B,MAAA,CAGA,IAAAC,EAEAC,EAAA,WACU9iB,EAAG7lB,MAAA,oDAAAwJ,EAAA+0B,KACb/0B,EAAAi/B,MAAAnwB,IAAA,cAAAowB,IAGAA,EAAA,WAEA,OADAl/B,EAAAi/B,MAAAnwB,IAAA,aAAAqwB,GACiBnB,GAASe,EAAA/+B,IAG1BA,EAAAi/B,MAAA1Y,IAAA,cAAA2Y,GACAl/B,EAAAi/B,MAAA1Y,IAAA,aAAA4Y,SAGMnB,GAASe,EAAA/+B,OAYXo/B,GAEJ,SAAAC,GAqCA,SAAAC,EAAA15C,GACA,IAAAypB,EAMA,QAJA,IAAAzpB,IACAA,OAGAA,EAAA+uC,KACA,UAAAr9B,MAAA,4BAGA,IAAAioC,EAAA3U,GAAAhlC,GACA80C,KAAA4B,GAAA12C,EAAA80C,OAAA,YACAxkD,SAAA0P,EAAA1P,UAAA0P,EAAA45C,SAAA,KAEA9iC,EAAA+/B,GAAA8C,EAAA7iC,OAAA,WACA+iC,EAAAF,EAAA79C,QAEA,aAAA69C,EAAA7E,MAAA,aAAA6E,EAAA7E,OACAh+B,EAAA,WAGA2S,EAAAgwB,EAAAjhD,KAAAwJ,KAAA23C,IAAA33C,MACAq3C,MAAAM,EAAA5K,KACAtlB,EAAAmsB,SACAnsB,EAAAqwB,eACA,IAAAnL,EAAA,IAAA6G,GAAA/rB,EAAAmsB,OACAmE,EAAA,IAAAvE,GAAA/rB,EAAAqwB,aACAE,GAAA,EACAC,EAAAxnC,GAAiCqjB,EAAuBA,EAAsBrM,IAAA,WAK9EznB,KAAA+3C,WAAA/3C,KAAA+3C,WAEAC,IACAh4C,KAAAokB,QAAA,aACA4zB,GAAA,KAkJA,MA9IA,aAAAljC,GACA2S,EAAA4vB,MAAAlnC,MAAA,WACAsX,EAAA4vB,MAAAp2C,GAAA,aAAAg3C,KACO,GAGPliD,OAAA8f,iBAA4Bie,EAAuBA,EAAsBrM,KAUzE3tB,SACAoJ,IAAA,WACA,OAAA20C,GAEA1/B,IAAA,cAYArD,MACA5R,IAAA,WACA,OAAA4R,GAEAqD,IAAA,SAAA+/B,GACA,IAAAhwB,EAAAloB,KAEA60C,GAAAqD,KAMA,cAFApjC,EAAAojC,GAGAl4C,KAAAq3C,MAAAlnC,MAAA,WACA+X,EAAAmvB,MAAAp2C,GAAA,aAAAg3C,KACa,GAEbj4C,KAAAq3C,MAAAnwB,IAAA,aAAA+wB,GAaAj4C,KAAAokB,QAAA,iBAUAuoB,MACAzpC,IAAA,WACA,OAAAlD,KAAAo3C,QAIAzK,EAHA,MAKAx0B,IAAA,cASA4/B,YACA70C,IAAA,WACA,IAAAlD,KAAAo3C,QACA,YAIA,OAAAp3C,KAAA2sC,KAAA//C,OACA,OAAAmrD,EAMA,IAHA,IAAAI,EAAAn4C,KAAAq3C,MAAAe,cACAr9B,KAEA9vB,EAAA,EAAAme,EAAApJ,KAAA2sC,KAAA//C,OAA+C3B,EAAAme,EAAOne,IAAA,CACtD,IAAA2hD,EAAA5sC,KAAA2sC,KAAA1hD,GAEA2hD,EAAAh1C,WAAAugD,GAAAvL,EAAAC,SAAAsL,EACAp9B,EAAApvB,KAAAihD,GACaA,EAAAh1C,YAAAg1C,EAAAC,SAAAD,EAAAh1C,WAAAugD,GAAAvL,EAAAh1C,UAAA,IAAAugD,GACbp9B,EAAApvB,KAAAihD,GAMA,GAFAoL,GAAA,EAEAj9B,EAAAnuB,SAAAoT,KAAA83C,YAAAlrD,OACAorD,GAAA,OAEA,QAAA7mB,EAAA,EAA4BA,EAAApW,EAAAnuB,OAAoBukC,KAChD,IAAAnxB,KAAA83C,YAAAv+C,QAAAwhB,EAAAoW,MACA6mB,GAAA,GAOA,OAFAh4C,KAAA83C,YAAA/8B,EACAg9B,EAAAtE,SAAAzzC,KAAA83C,aACAC,GAGA5/B,IAAA,gBAIAw/B,EAAAxK,KACA1lB,EAAA0lB,IAAAwK,EAAAxK,IACM6J,GAASW,EAAAxK,IAAerZ,EAAuBA,EAAsBrM,MAE3EA,EAAA2vB,SAAA,EAGA3vB,EA5NEyL,EAAcwkB,EAAAD,GAsOhB,IAAAzwB,EAAA0wB,EAAAphD,UAoDA,OAlDA0wB,EAAAumB,OAAA,SAAA8K,GACA,IAAAzL,EAAAyL,EAEA,GAAQ7jB,EAAA/6B,EAAQ+8C,SAAA6B,aAAmC7jB,EAAA/6B,EAAQ+8C,MAAA8B,QAAA,CAG3D,QAAApiB,KAFA0W,EAAA,IAAgBpY,EAAA/6B,EAAQ+8C,MAAA8B,OAAAD,EAAAzgD,UAAAygD,EAAAxL,QAAAwL,EAAA3uB,MAExB2uB,EACAniB,KAAA0W,IACAA,EAAA1W,GAAAmiB,EAAAniB,IAKA0W,EAAAv0C,GAAAggD,EAAAhgD,GACAu0C,EAAA2L,aAAAF,EAKA,IAFA,IAAA9/B,EAAAvY,KAAAq3C,MAAAjK,aAEAniD,EAAA,EAAmBA,EAAAstB,EAAA3rB,OAAmB3B,IACtCstB,EAAAttB,KAAA+U,MACAuY,EAAAttB,GAAAutD,UAAA5L,GAIA5sC,KAAA4zC,MAAAjoD,KAAAihD,GACA5sC,KAAA2sC,KAAA8G,SAAAzzC,KAAA4zC,QAUA5sB,EAAAwxB,UAAA,SAAAC,GAGA,IAFA,IAAAxtD,EAAA+U,KAAA4zC,MAAAhnD,OAEA3B,KAAA,CACA,IAAA2hD,EAAA5sC,KAAA4zC,MAAA3oD,GAEA,GAAA2hD,IAAA6L,GAAA7L,EAAA2L,cAAA3L,EAAA2L,eAAAE,EAAA,CACAz4C,KAAA4zC,MAAAvqC,OAAApe,EAAA,GACA+U,KAAA2sC,KAAA8G,SAAAzzC,KAAA4zC,OACA,SAKA8D,EA3RA,CA4RC1C,IAMDwC,GAASlhD,UAAAsqC,gBACT8X,UAAA,aAWA,IAAAC,GAEA,SAAAlB,GAyBA,SAAAkB,EAAA36C,GACA,IAAAypB,OAEA,IAAAzpB,IACAA,MAGA,IAAA25C,EAAA3U,GAAAhlC,GACA80C,KAAAwB,GAAAt2C,EAAA80C,OAAA,KAEArrB,EAAAgwB,EAAAjhD,KAAAwJ,KAAA23C,IAAA33C,KACA,IAAAiyC,GAAA,EA4CA,OAjCAl8C,OAAAkN,eAA0B6wB,EAAuBA,EAAsBrM,IAAA,WACvEvkB,IAAA,WACA,OAAA+uC,GAEA95B,IAAA,SAAAygC,GAEA,kBAAAA,OAAA3G,IAIAA,EAAA2G,EAYA54C,KAAAokB,QAAA,qBAMAuzB,EAAA1F,UACAxqB,EAAAwqB,QAAA0F,EAAA1F,SAGAxqB,EAAA2vB,SAAA,EACA3vB,EAGA,OAlFEyL,EAAcylB,EAAAlB,GAkFhBkB,EAnFA,CAoFC3D,IASD6D,GAEA,SAAApB,GAwBA,SAAAoB,EAAA76C,GACA,IAAAypB,OAEA,IAAAzpB,IACAA,MAGA,IAAA25C,EAAA3U,GAAAhlC,GACA80C,KAAAiB,GAAA/1C,EAAA80C,OAAA,KAEArrB,EAAAgwB,EAAAjhD,KAAAwJ,KAAA23C,IAAA33C,KACA,IAAAuyC,GAAA,EA2CA,OAhCAx8C,OAAAkN,eAA0B6wB,EAAuBA,EAAsBrM,IAAA,YACvEvkB,IAAA,WACA,OAAAqvC,GAEAp6B,IAAA,SAAA2gC,GAEA,kBAAAA,OAAAvG,IAIAA,EAAAuG,EAYA94C,KAAAokB,QAAA,sBAMAuzB,EAAApF,WACA9qB,EAAA8qB,SAAAoF,EAAApF,UAGA9qB,EAGA,OAhFEyL,EAAc2lB,EAAApB,GAgFhBoB,EAjFA,CAkFC7D,IAQD+D,GAAA,EAEAC,GAAA,EASAC,GAEA,SAAA3H,GAqCA,SAAA2H,EAAAj7C,GACA,IAAAypB,EAOAhK,OALA,IAAAzf,IACAA,MAGAypB,EAAA6pB,EAAA96C,KAAAwJ,YAEA,IAAAoY,EAAA,IAAoBo/B,GAASx5C,GA8C7B,OA7CAypB,EAAAqrB,KAAA16B,EAAA06B,KACArrB,EAAA0lB,IAAA/0B,EAAA+0B,IACA1lB,EAAAmwB,QAAAx/B,EAAA9pB,SACAm5B,EAAA+mB,MAAAp2B,EAAAo2B,MACA/mB,EAAA3tB,QAAAse,EAAAte,QACA/D,OAAA8f,iBAA4Bie,EAAuBA,EAAsBrM,KAOzEhK,YACAva,IAAA,WACA,OAAAua,IAWArF,OACAlV,IAAA,WACA,OAAAkV,MAIAqF,EAAAs7B,GAMA3gC,EAAA/M,iBAAA,wBACAoS,EAAAu7B,GAEAvxB,EAAArD,SACAlvB,KAAA,OACA0L,OAAgBkzB,EAAuBA,EAAsBrM,QAG7DA,EAGA,OA9FEyL,EAAc+lB,EAAA3H,GA8FhB2H,EA/FA,CAgGCtY,IAEDsY,GAAA3iD,UAAAsqC,gBACAsY,KAAA,QAEAD,GAAAF,QACAE,GAAAE,QAlHA,EAmHAF,GAAAD,UACAC,GAAAG,MAlHA,EAyHA,IAAAC,IACArhC,OACAshC,UAAApH,GACAqH,WAAAZ,GACAa,YAAA,SAEAzhC,OACAuhC,UAAA9G,GACA+G,WAAAV,GACAW,YAAA,SAEA9vB,MACA4vB,UAAA5G,GACA6G,WAAgB/B,GAChBgC,YAAA,SAGAzjD,OAAAC,KAAAqjD,IAAAtgD,QAAA,SAAA7D,GACAmkD,GAAAnkD,GAAAukD,WAAAvkD,EAAA,SACAmkD,GAAAnkD,GAAAwkD,YAAAxkD,EAAA,YAEA,IAAAykD,IACAC,YACAN,UAAA5G,GACA6G,WAAgB/B,GAChBgC,YAAA,aACAC,WAAA,mBACAC,YAAA,qBAEAG,cACAP,UAAAtG,GACAuG,WAAAN,GACAO,YAAA,qBACAC,WAAA,qBACAC,YAAA,wBAGAI,GAAA9W,GAAAqW,GAAAM,IACAA,GAAAI,MAAAhkD,OAAAC,KAAA2jD,IACAN,GAAAU,MAAAhkD,OAAAC,KAAAqjD,IACAS,GAAAC,SAAA7hD,OAAAyhD,GAAAI,OAAA7hD,OAAAmhD,GAAAU,OAsEA,IAAIC,GAEJ,SAAAtM,GAYA,SAAApI,EAAAtnC,EAAAmS,GACA,IAAAsX,EAwEA,YAtEA,IAAAzpB,IACAA,WAGA,IAAAmS,IACAA,EAAA,cAKAnS,EAAA8lC,qBAAA,GACArc,EAAAimB,EAAAl3C,KAAAwJ,KAAA,KAAAhC,EAAAmS,IAAAnQ,MAGAi6C,aAAA,EAEAxyB,EAAAxmB,GAAA,qBACAjB,KAAAi6C,aAAA,IAGAxyB,EAAAxmB,GAAA,uBACAjB,KAAAi6C,aAAA,IAGAH,GAAAC,MAAAhhD,QAAA,SAAApL,GACA,IAAAkM,EAAAigD,GAAAnsD,GAEAqQ,KAAAnE,EAAA4/C,cACAhyB,EAAA5tB,EAAA6/C,aAAA17C,EAAAnE,EAAA4/C,eAIAhyB,EAAAyyB,wBACAzyB,EAAA0yB,mBAIA1yB,EAAA2yB,0BACA3yB,EAAA4yB,uBAGA,wBAAAthD,QAAA,SAAAqf,IACA,IAAApa,EAAA,SAAAoa,EAAA,YACAqP,EAAA,iBAAArP,EAAA,iBAIA,IAAApa,EAAAs8C,iBAAA,IAAAt8C,EAAAu8C,iBACA9yB,EAAA+yB,0BAAA,GACK,IAAAx8C,EAAAs8C,iBAAA,IAAAt8C,EAAAu8C,mBACL9yB,EAAA+yB,0BAAA,GAGA/yB,EAAA+yB,0BACA/yB,EAAAgzB,oBAGAhzB,EAAAizB,sBAAA,IAAAZ,GAAApwB,KAAA4vB,UAEA7xB,EAAAkzB,qBAGA38C,EAAA48C,wBACAnzB,EAAA6f,gBAGA7f,EAAAlU,cACAkU,EAAA+b,MAAA/b,EAAAlU,YAAA5lB,MAAA,gBAGA85B,EApFEyL,EAAcoS,EAAAoI,GA+FhB,IAAA1mB,EAAAse,EAAAhvC,UAw0BA,OAt0BA0wB,EAAA6zB,iBAAA,SAAA1N,GACA,IAAAjlB,EAAAloB,KAEAA,KAAA6lC,UAGA7lC,KAAA2+B,IAAA,mBACA,OAAAzW,EAAAxV,WAAA,WACA,OAAAwV,EAAA2yB,iBAAA1N,IACS,KAaTntC,KAAAokB,SACA+oB,MACAj4C,KAAA,eAaA8xB,EAAAmzB,iBAAA,WACAn6C,KAAAiB,GAAA,iBAAAjB,KAAA86C,kBACA96C,KAAA+6C,gBAAA,EAEA/6C,KAAA2+B,IAAA,QAAA3+B,KAAAg7C,gBAQAh0B,EAAAi0B,kBAAA,WACAj7C,KAAA+6C,gBAAA,EACA/6C,KAAAk7C,uBACAl7C,KAAAknB,IAAA,iBAAAlnB,KAAA86C,mBAiBA9zB,EAAAg0B,cAAA,SAAAl7C,GACAE,KAAAk7C,uBACAl7C,KAAAm7C,iBAAAn7C,KAAAma,YAAA1J,GAAAzQ,KAAA,WAEA,IAAAo7C,EAAAp7C,KAAAqrC,kBAEArrC,KAAAq7C,mBAAAD,GAOAp7C,KAAAokB,QAAA,YAGApkB,KAAAq7C,iBAAAD,EAEA,IAAAA,GACAp7C,KAAAk7C,yBAEK,MAaLl0B,EAAA8zB,iBAAA,SAAAh7C,GACAE,KAAAs7C,UAAAt7C,KAAAtR,YAUAs4B,EAAAskB,SAAA,WACA,OAAAF,GAAA,MAYApkB,EAAAqkB,gBAAA,WACA,OAAAA,GAAArrC,KAAAsrC,WAAAtrC,KAAAs7C,YAUAt0B,EAAAk0B,qBAAA,WACAl7C,KAAAoa,cAAApa,KAAAm7C,mBASAn0B,EAAAqzB,oBAAA,WACAr6C,KAAAu7C,mBAAA,EACAv7C,KAAAiB,GAAA,OAAAjB,KAAAw7C,kBACAx7C,KAAAiB,GAAA,QAAAjB,KAAAy7C,0BAQAz0B,EAAA00B,qBAAA,WACA17C,KAAAu7C,mBAAA,EACAv7C,KAAAy7C,0BACAz7C,KAAAknB,IAAA,OAAAlnB,KAAAw7C,kBACAx7C,KAAAknB,IAAA,QAAAlnB,KAAAy7C,0BAWAz0B,EAAAw0B,iBAAA,WACAx7C,KAAA27C,qBACA37C,KAAAy7C,0BAGAz7C,KAAA27C,oBAAA37C,KAAAma,YAAA,WAOAna,KAAAokB,SACAlvB,KAAA,aACA0L,OAAAZ,KACA47C,mBAAA,KAEK,MAUL50B,EAAAy0B,wBAAA,WACAz7C,KAAAoa,cAAApa,KAAA27C,qBAGA37C,KAAAokB,SACAlvB,KAAA,aACA0L,OAAAZ,KACA47C,mBAAA,KAWA50B,EAAAI,QAAA,WAEApnB,KAAA67C,YAAAxC,GAAAU,OAEA/5C,KAAA+6C,gBACA/6C,KAAAi7C,oBAGAj7C,KAAAu7C,mBACAv7C,KAAA07C,uBAGAhO,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAcAgnB,EAAA60B,YAAA,SAAAllC,GACA,IAAAkT,EAAA7pB,MAEA2W,KAAAze,OAAAye,IAEA5d,QAAA,SAAA7D,GAIA,IAHA,IAAAggB,EAAA2U,EAAA30B,EAAA,gBACAjK,EAAAiqB,EAAAtoB,OAEA3B,KAAA,CACA,IAAAmtB,EAAAlD,EAAAjqB,GAEA,SAAAiK,GACA20B,EAAAiyB,sBAAA1jC,GAGAlD,EAAAu8B,YAAAr5B,OAUA4O,EAAA+0B,sBAAA,WAIA,IAHA,IAAA7mC,EAAAlV,KAAA06C,0BACAzvD,EAAAiqB,EAAAtoB,OAEA3B,KAAA,CACA,IAAAmtB,EAAAlD,EAAAjqB,GACA+U,KAAA87C,sBAAA1jC,KAUA4O,EAAAg1B,MAAA,aAYAh1B,EAAApY,MAAA,SAAAtV,GAMA,YALA2C,IAAA3C,IACA0G,KAAAi8C,OAAA,IAAAlQ,GAAAzyC,GACA0G,KAAAokB,QAAA,UAGApkB,KAAAi8C,QAcAj1B,EAAAk1B,OAAA,WACA,OAAAl8C,KAAAi6C,YACA7O,GAAA,KAGAA,MAUApkB,EAAAm1B,eAAA,WAEAn8C,KAAAu7C,mBAOAv7C,KAAAokB,SACAlvB,KAAA,aACA0L,OAAAZ,KACA47C,mBAAA,KAgBA50B,EAAA2zB,mBAAA,WACA,IAAAnS,EAAAxoC,KAsBAq5C,GAAAU,MAAAhhD,QAAA,SAAApL,GACA,IAAAkM,EAAAw/C,GAAA1rD,GAEAyuD,EAAA,WACA5T,EAAApkB,QAAAz2B,EAAA,gBAGA4qB,EAAAiwB,EAAA3uC,EAAA4/C,cAEAlhC,EAAAlN,iBAAA,cAAA+wC,GACA7jC,EAAAlN,iBAAA,WAAA+wC,GAEA5T,EAAAvnC,GAAA,qBACAsX,EAAA+jB,oBAAA,cAAA8f,GACA7jC,EAAA+jB,oBAAA,WAAA8f,QAYAp1B,EAAAq1B,iBAAA,WACA,IAAAC,EAAAt8C,KAEA,IAAQw0B,EAAA/6B,EAAQ88C,OAOhB,GAAQ9f,EAAAh9B,EAAQmiB,KAAAyc,SAAAr4B,KAAA8M,MAAA,CAIhB,IAAA9M,KAAAsjC,SAAA,WAAAtN,GAA8CumB,EAAA9iD,IAAG1D,OAAAC,KAAiBumD,EAAA9iD,GAAG7M,OAAA,EAErE,YADAoT,KAAAokB,QAAA,eAMA,IAAAo4B,EAAmB/lB,EAAAh9B,EAAQ29B,cAAA,UAC3BolB,EAAArP,IAAAntC,KAAAsjC,SAAA,4DAEAkZ,EAAA9+B,OAAA,WAOA4+B,EAAAl4B,QAAA,gBAGAo4B,EAAA7+B,QAAA,WAOA2+B,EAAAl4B,QAAA,eAGApkB,KAAAiB,GAAA,qBACAu7C,EAAA9+B,OAAA,KACA8+B,EAAA7+B,QAAA,OAIM6W,EAAA/6B,EAAQ88C,QAAA,EACdv2C,KAAA8M,KAAA6sB,WAAA3B,YAAAwkB,QAEAx8C,KAAAmQ,MAAAnQ,KAAAq8C,mBASAr1B,EAAAyzB,kBAAA,WACA,IAAAgC,EAAAz8C,KAEAuY,EAAAvY,KAAAotC,aACAsP,EAAA18C,KAAA28C,mBAEAC,EAAA,SAAA1+C,GACA,OAAAqa,EAAAi5B,SAAAtzC,EAAAka,QAGAykC,EAAA,SAAA3+C,GACA,OAAAqa,EAAAk5B,YAAAvzC,EAAAka,QAGAskC,EAAAz7C,GAAA,WAAA27C,GACAF,EAAAz7C,GAAA,cAAA47C,GACA78C,KAAAq8C,mBAEA,IAAAS,EAAA,WACA,OAAAL,EAAAr4B,QAAA,oBAGA24B,EAAA,WACAD,IAEA,QAAA7xD,EAAA,EAAqBA,EAAAstB,EAAA3rB,OAAmB3B,IAAA,CACxC,IAAAmtB,EAAAG,EAAAttB,GACAmtB,EAAAkkB,oBAAA,YAAAwgB,GAEA,YAAA1kC,EAAAtD,MACAsD,EAAA/M,iBAAA,YAAAyxC,KAKAC,IACAxkC,EAAAlN,iBAAA,SAAA0xC,GACAxkC,EAAAlN,iBAAA,WAAA0xC,GACAxkC,EAAAlN,iBAAA,cAAA0xC,GACA/8C,KAAAiB,GAAA,qBACAy7C,EAAAx1B,IAAA,WAAA01B,GACAF,EAAAx1B,IAAA,cAAA21B,GACAtkC,EAAA+jB,oBAAA,SAAAygB,GACAxkC,EAAA+jB,oBAAA,WAAAygB,GACAxkC,EAAA+jB,oBAAA,cAAAygB,GAEA,QAAA9xD,EAAA,EAAqBA,EAAAstB,EAAA3rB,OAAmB3B,IAAA,CACxCstB,EAAAttB,GACAqxC,oBAAA,YAAAwgB,OAqBA91B,EAAAg2B,aAAA,SAAAlK,EAAAtE,EAAAlgD,GACA,IAAAwkD,EACA,UAAApjC,MAAA,mDAGA,OApqBA,SAAAkK,EAAAk5B,EAAAtE,EAAAlgD,EAAA0P,QACA,IAAAA,IACAA,MAGA,IAAAua,EAAAqB,EAAAwzB,aACApvC,EAAA80C,OAEAtE,IACAxwC,EAAAwwC,SAGAlgD,IACA0P,EAAA1P,YAGA0P,EAAA+uC,KAAAnzB,EACA,IAAAxB,EAAA,IAAA0hC,GAAApwB,KAAA6vB,WAAAv7C,GAEA,OADAua,EAAAi5B,SAAAp5B,GACAA,EAipBA6kC,CAAAj9C,KAAA8yC,EAAAtE,EAAAlgD,IAyBA04B,EAAAk2B,sBAAA,SAAAl/C,GACA,IAAAoa,EAAA4qB,GAAAhlC,GACA+uC,KAAA/sC,OAEA,WAAA25C,GAAAE,aAAAN,WAAAnhC,IAwBA4O,EAAAsmB,mBAAA,SAAAtvC,EAAAm/C,GACA,IAAAC,EAAAp9C,UAEA,IAAAhC,IACAA,MAGA,IAAAq/C,EAAAr9C,KAAAk9C,sBAAAl/C,GAmBA,OAjBA,IAAAm/C,IAAA,IAAAA,IAEM1oB,EAAGv7B,KAAA,oKACTikD,GAAA,GAIAn9C,KAAAs9C,qBAAAnK,iBAAAkK,GACAr9C,KAAA28C,mBAAAnL,SAAA6L,EAAAjlC,QAEA,IAAA+kC,GAEAn9C,KAAAmQ,MAAA,WACA,OAAAitC,EAAA1C,sBAAAlJ,SAAA6L,EAAAjlC,SAIAilC,GAUAr2B,EAAA80B,sBAAA,SAAA1jC,GACA,IAAAg7B,EAAApzC,KAAAs9C,qBAAAjK,wBAAAj7B,GAEApY,KAAAs9C,qBAAA/J,oBAAAH,GACApzC,KAAA28C,mBAAAlL,YAAAr5B,GACApY,KAAA06C,sBAAAjJ,YAAAr5B,IAeA4O,EAAAu2B,wBAAA,WACA,UASAv2B,EAAAw2B,UAAA,aAQAx2B,EAAAy2B,YAAA,aAQAz2B,EAAA02B,eAAA,aAWA12B,EAAA22B,0BAAA,aAWA32B,EAAA42B,0BAAA,aAmBA52B,EAAA62B,YAAA,WACA,UAcAvY,EAAAuY,YAAA,WACA,UAaAvY,EAAAwY,cAAA,SAAAC,EAAA//C,GACA,OAAAsnC,EAAAuY,YAAAE,EAAA7oD,OAgBAowC,EAAAG,OAAA,SAAArqC,GACA,OAAAA,EAAA9E,qBAAAgvC,GAAAlqC,aAAAkqC,GAAAlqC,IAAAkqC,GAaAA,EAAA0Y,aAAA,SAAArwD,EAAAo/C,GAKA,GAJAzH,EAAA2Y,SACA3Y,EAAA2Y,YAGA3Y,EAAAG,OAAAsH,GACA,UAAAr9B,MAAA,QAAA/hB,EAAA,mBAGA,IAAA23C,EAAAuY,YACA,UAAAnuC,MAAA,uDAGA,IAAA41B,EAAAwY,cACA,UAAApuC,MAAA,yDAWA,OARA/hB,EAAAm1C,GAAAn1C,GACA23C,EAAA2Y,OAAAtwD,GAAAo/C,EAEA,SAAAp/C,GAEA23C,EAAA4Y,kBAAAvyD,KAAAgC,GAGAo/C,GAaAzH,EAAA6Y,QAAA,SAAAxwD,GACA,GAAAA,EAMA,OAFAA,EAAAm1C,GAAAn1C,GAEA23C,EAAA2Y,QAAA3Y,EAAA2Y,OAAAtwD,GACA23C,EAAA2Y,OAAAtwD,GAGQ6mC,EAAA/6B,GAAY+6B,EAAA/6B,EAAQolC,SAAYrK,EAAA/6B,EAAQolC,QAAAlxC,IAC1C8mC,EAAGv7B,KAAA,OAAAvL,EAAA,6GACI6mC,EAAA/6B,EAAQolC,QAAAlxC,SAFrB,GAMA23C,EAx6BA,CAy6BErC,IAqCF6W,GAAAC,MAAAhhD,QAAA,SAAApL,GACA,IAAAkM,EAAAigD,GAAAnsD,GAEEqsD,GAAI1jD,UAAAuD,EAAA4/C,YAAA,WAEN,OADAz5C,KAAAnG,EAAA6/C,aAAA15C,KAAAnG,EAAA6/C,cAAA,IAAA7/C,EAAAy/C,UACAt5C,KAAAnG,EAAA6/C,gBAkCAM,GAAI1jD,UAAA8nD,uBAAA,EAQJpE,GAAI1jD,UAAA+nD,qBAAA,EASJrE,GAAI1jD,UAAAgoD,0BAAA,EAWJtE,GAAI1jD,UAAAioD,sBAAA,EAUJvE,GAAI1jD,UAAA4jD,wBAAA,EAYJF,GAAI1jD,UAAAkoD,mBAAA,EAUJxE,GAAI1jD,UAAA8jD,0BAAA,EASJJ,GAAI1jD,UAAAkkD,0BAAA,EAcJR,GAAIyE,mBAAA,SAAAC,GAUJA,EAAAC,sBAAA,SAAA59C,EAAAjL,GACA,IAAAumC,EAAAqiB,EAAAE,eAEAviB,IACAA,EAAAqiB,EAAAE,wBAGA3iD,IAAAnG,IAEAA,EAAAumC,EAAAzvC,QAGAyvC,EAAAhzB,OAAAvT,EAAA,EAAAiL,IAcA29C,EAAAb,YAAA,SAAA3oD,GAIA,IAHA,IACA2pD,EADAxiB,EAAAqiB,EAAAE,mBAGA3zD,EAAA,EAAmBA,EAAAoxC,EAAAzvC,OAAqB3B,IAGxC,GAFA4zD,EAAAxiB,EAAApxC,GAAA4yD,YAAA3oD,GAGA,OAAA2pD,EAIA,UAmBAH,EAAAI,oBAAA,SAAA33C,EAAAnJ,GAIA,IAHA,IAAAq+B,EAAAqiB,EAAAE,mBAGA3zD,EAAA,EAAmBA,EAAAoxC,EAAAzvC,OAAqB3B,IAGxC,GAFAoxC,EAAApxC,GAAA8zD,gBAAA53C,EAAAnJ,GAGA,OAAAq+B,EAAApxC,GAIA,aAgBAyzD,EAAAZ,cAAA,SAAAC,EAAA//C,GACA,IAAAghD,EAAAN,EAAAI,oBAAAf,EAAA//C,GAEA,OAAAghD,EACAA,EAAAD,gBAAAhB,EAAA//C,GAGA,KAQA,iCAeAjF,QAAA,SAAA8xC,GACA,IAAAoU,EAAAj/C,KAAA6qC,GAEA,mBAAAoU,IAIAj/C,KAAA6qC,GAAA,WACA,OAAA7qC,KAAAk/C,gBAAAl/C,KAAAk/C,eAAArU,GACA7qC,KAAAk/C,eAAArU,GAAApyC,MAAAuH,KAAAk/C,eAAAnvC,WAGAkvC,EAAAxmD,MAAAuH,KAAA+P,cAEG2uC,EAAApoD,WAUHooD,EAAApoD,UAAA6oD,UAAA,SAAAh4C,GACA,IAAA63C,EAAAN,EAAAI,oBAAA33C,EAAAnH,KAAAsjC,UAEA0b,IAGAN,EAAAU,oBACAJ,EAAAN,EAAAU,oBAEQ3qB,EAAG7lB,MAAA,oDAKX5O,KAAAq/C,uBACAr/C,KAAAknB,IAAA,UAAAlnB,KAAAq/C,sBAEAL,IAAAN,EAAAU,sBACAp/C,KAAAs/C,eAAAn4C,GAGAnH,KAAAk/C,eAAAF,EAAAO,aAAAp4C,EAAAnH,UAAAsjC,UACAtjC,KAAA2+B,IAAA,UAAA3+B,KAAAq/C,uBASAX,EAAApoD,UAAA+oD,qBAAA,WAIAr/C,KAAAs/C,iBACAt/C,KAAA67C,aAAA,kBACA77C,KAAAs/C,eAAA,MAIAt/C,KAAA+7C,wBAEA/7C,KAAAk/C,iBACAl/C,KAAAk/C,eAAA93B,SACApnB,KAAAk/C,eAAA93B,UAGApnB,KAAAk/C,eAAA,QAOAjc,GAAS0F,kBAAA,OAA2BqR,IACpCA,GAAIgE,aAAA,OAAsBhE,IAO1BA,GAAIkE,qBAMJ,IAAAsB,MACAC,MACAC,MAsDA,SAAAP,GAAA1f,EAAA0N,EAAA3nC,GACAi6B,EAAA/sB,WAAA,WACA,OA8MA,SAAAitC,EAAAxS,EAAAyS,EAAAp6C,EAAAi6B,EAAAtX,EAAA03B,QACA,IAAA1S,IACAA,WAGA,IAAAyS,IACAA,WAGA,IAAAz3B,IACAA,WAGA,IAAA03B,IACAA,GAAA,GAGA,IAAAC,EAAAF,EACAG,EAAAD,EAAA,GACAE,EAAAF,EAAAvpD,MAAA,GAGA,oBAAAwpD,EACAJ,EAAAxS,EAAAqS,GAAAO,GAAAv6C,EAAAi6B,EAAAtX,EAAA03B,QAEG,GAAAE,EAAA,CACH,IAAAE,EAxDA,SAAAxgB,EAAAsgB,GACA,IAAAG,EAAAT,GAAAhgB,EAAApnC,MACA4nD,EAAA,KAEA,QAAAhkD,IAAAikD,GAAA,OAAAA,EAGA,OAFAD,EAAAF,EAAAtgB,GACAggB,GAAAhgB,EAAApnC,QAAA0nD,EAAAE,IACAA,EAGA,QAAAh1D,EAAA,EAAiBA,EAAAi1D,EAAAtzD,OAAgB3B,IAAA,CACjC,IAAAk1D,EAAAD,EAAAj1D,GACAm1D,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAC,IAAAL,IAIAE,EAAAI,GAGA,OAAAJ,IACAA,EAAAF,EAAAtgB,GACAygB,EAAAv0D,MAAAo0D,EAAAE,KAGA,OAAAA,EA6BAK,CAAA7gB,EAAAsgB,GAEA,IAAAE,EAAAd,UAEA,OADAh3B,EAAAx8B,KAAAs0D,GACAN,EAAAxS,EAAA6S,EAAAx6C,EAAAi6B,EAAAtX,EAAA03B,GAGAI,EAAAd,UAAiBrpB,MAASqX,GAAA,SAAA7zC,EAAAinD,GAG1B,GAAAjnD,EACA,OAAAqmD,EAAAxS,EAAA6S,EAAAx6C,EAAAi6B,EAAAtX,EAAA03B,GAIA13B,EAAAx8B,KAAAs0D,GAGAN,EAAAY,EAAApT,EAAAj4C,OAAAqrD,EAAArrD,KAAA8qD,EAAAR,GAAAe,EAAArrD,MAAAsQ,EAAAi6B,EAAAtX,EAAA03B,UAEGG,EAAApzD,OACH+yD,EAAAxS,EAAA6S,EAAAx6C,EAAAi6B,EAAAtX,EAAA03B,GACGA,EACHr6C,EAAA2nC,EAAAhlB,GAEAw3B,EAAAxS,EAAAqS,GAAA,KAAAh6C,EAAAi6B,EAAAtX,GAAA,GAjQAw3B,CAAAxS,EAAAqS,GAAArS,EAAAj4C,MAAAsQ,EAAAi6B,IACG,GAoFH,SAAA+gB,GAAAZ,EAAA7S,EAAAhwB,EAAA0jC,QACA,IAAAA,IACAA,EAAA,MAGA,IAAAC,EAAA,OAAA5d,GAAA/lB,GACA4jC,EAAAf,EAAAxnD,OAAAwoD,GAAAF,GAAAD,GACAI,EAAAF,IAAAjB,GAGAtiB,EAAAyjB,EAAA,KAAA9T,EAAAhwB,GAAA4jC,GAEA,OAmDA,SAAAT,EAAAnjC,EAAA3mB,EAAAyqD,GACA,QAAA51D,EAAAi1D,EAAAtzD,OAAA,EAA8B3B,GAAA,EAAQA,IAAA,CACtC,IAAAg1D,EAAAC,EAAAj1D,GAEAg1D,EAAAljC,IACAkjC,EAAAljC,GAAA8jC,EAAAzqD,IAzDA0qD,CAAAlB,EAAA7iC,EAAAqgB,EAAAyjB,GACAzjB,EAQA,IAAA2jB,IACAzV,SAAA,EACA8M,YAAA,EACA1pD,SAAA,EACAsyD,SAAA,EACA9E,OAAA,EACApN,OAAA,GAQAmS,IACA9E,eAAA,GAQA+E,IACA/d,KAAA,EACA6L,MAAA,GAGA,SAAA4R,GAAA7jC,GACA,gBAAA3mB,EAAA6pD,GAEA,OAAA7pD,IAAAspD,GACAA,GAGAO,EAAAljC,GACAkjC,EAAAljC,GAAA3mB,GAGAA,GA6HA,IAAA+qD,IACAC,KAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,mBACAC,IAAA,aACAhhC,IAAA,YACAihC,IAAA,YACAC,KAAA,wBACAC,IAAA,aACAC,KAAA,aACAC,IAAA,YACAC,IAAA,YACAC,IAAA,gBACAC,KAAA,cAYAC,GAAA,SAAAhV,QACA,IAAAA,IACAA,EAAA,IAGA,IAAAiV,EAAAzM,GAAAxI,GAEA,OADAgU,GAAAiB,EAAA54B,gBACA,IA0GA,SAAA64B,GAAAlV,GACA,IAAAmV,EAAAH,GAAAhV,OAMA,OAJAA,EAAAj4C,MAAAotD,IACAnV,EAAAj4C,KAAAotD,GAGAnV,EAUA,IAAAoV,GAEA,SAAA7U,GAeA,SAAA6U,EAAA9iB,EAAAzhC,EAAAmS,GACA,IAAAsX,EAGA6b,EAAAN,IACAhM,UAAA,GACKh5B,GAIL,GAHAypB,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAA6D,EAAAnzB,IAAAnQ,KAGAhC,EAAA0nC,cAAA3P,SAAA,IAAA/3B,EAAA0nC,cAAA3P,QAAAnpC,OAqBA6yC,EAAA0N,IAAAnvC,EAAA0nC,cAAA3P,cApBA,QAAA9qC,EAAA,EAAA2b,EAAA5I,EAAA0nC,cAAA8c,UAA0Dv3D,EAAA2b,EAAAha,OAAc3B,IAAA,CACxE,IAAAw3D,EAAA3f,GAAAl8B,EAAA3b,IACA8hD,EAAmBiN,GAAImE,QAAAsE,GAQvB,GALAA,IACA1V,EAAiB9J,GAAS+B,aAAAyd,IAI1B1V,KAAA2V,cAAA,CACAjjB,EAAAkjB,UAAAF,GACA,OAWA,OAAAh7B,EAGA,OAnDEyL,EAAcqvB,EAAA7U,GAmDhB6U,EApDA,CAqDEtf,IAEFA,GAAS0F,kBAAA,cAAA4Z,IAST,IAAIK,GAEJ,SAAAlV,GAYA,SAAAmV,EAAApjB,EAAAzhC,GACA,IAAAypB,EAQA,OANAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAsnC,gBAEA7f,EAAA2N,SAEA3N,EApBEyL,EAAc2vB,EAAAnV,GAuChB,IAAA1mB,EAAA67B,EAAAvsD,UA6LA,OA3LA0wB,EAAAgQ,SAAA,SAAArqC,EAAAkN,EAAAguB,QACA,IAAAl7B,IACAA,EAAA,YAGA,IAAAkN,IACAA,WAGA,IAAAguB,IACAA,MAGAhuB,EAAYi8B,IACZ0f,UAAA,gEACAld,UAAAt4B,KAAA4lC,gBACAwI,SAAA,GACKv0C,GAEL,WAAAlN,GACM8nC,EAAG7lB,MAAA,yDAAAjiB,EAAA,4CAITk7B,EAAiBiO,IACjBmY,KAAA,UACKpmB,GACL7nB,KAAA8iD,UAAAjpD,EAAAu0C,SAEA,IAAAthC,EAAA4gC,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAArT,EAAAkN,EAAAguB,GAGA,OADA7nB,KAAA+iD,oBAAAj2C,GACAA,GAGAka,EAAAI,QAAA,WAEApnB,KAAAgjD,eAAA,KAEAtV,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAaAgnB,EAAA+7B,oBAAA,SAAAj2C,GAaA,OAZA9M,KAAAgjD,eAAAhsB,GAAA,QACAsB,UAAA,qBAGA2qB,YAAA,WAGAn2C,GACAA,EAAAkrB,YAAAh4B,KAAAgjD,gBAGAhjD,KAAAyvC,YAAAzvC,KAAAkjD,aAAAp2C,GACA9M,KAAAgjD,gBAgBAh8B,EAAAyoB,YAAA,SAAA/lB,EAAA5c,GAKA,QAJA,IAAAA,IACAA,EAAA9M,KAAA8M,WAGA7Q,IAAAytB,EACA,OAAA1pB,KAAAkjD,cAAA,YAGA,IAAAC,EAAAnjD,KAAAgkC,SAAAta,GACA1pB,KAAAkjD,aAAAx5B,EACA+N,GAAAz3B,KAAAgjD,eAAAG,GAEAnjD,KAAAojD,gBAEAt2C,EAAA0qB,aAAA,QAAA2rB,IAWAn8B,EAAA4e,cAAA,WACA,gCAAA8H,EAAAp3C,UAAAsvC,cAAApvC,KAAAwJ,OAOAgnB,EAAAoO,OAAA,WACAp1B,KAAAqjD,WACArjD,KAAAqjD,UAAA,EACArjD,KAAA04B,YAAA,gBACA14B,KAAAyjC,IAAAjM,aAAA,8BAEA,IAAAx3B,KAAA8iD,WACA9iD,KAAAyjC,IAAAjM,aAAA,WAAAx3B,KAAA8iD,WAGA9iD,KAAAiB,IAAA,eAAAjB,KAAAsjD,aACAtjD,KAAAiB,GAAA,UAAAjB,KAAAonC,iBAQApgB,EAAAmO,QAAA,WACAn1B,KAAAqjD,UAAA,EACArjD,KAAAu4B,SAAA,gBACAv4B,KAAAyjC,IAAAjM,aAAA,6BAEA,IAAAx3B,KAAA8iD,WACA9iD,KAAAyjC,IAAAvK,gBAAA,YAGAl5B,KAAAknB,KAAA,eAAAlnB,KAAAsjD,aACAtjD,KAAAknB,IAAA,UAAAlnB,KAAAonC,gBAeApgB,EAAAs8B,YAAA,SAAAxjD,KAcAknB,EAAAogB,cAAA,SAAAtnC,GAIQswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,UAA+BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,UACrDA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAokB,QAAA,UAGAspB,EAAAp3C,UAAA8wC,cAAA5wC,KAAAwJ,KAAAF,IAIA+iD,EArOA,CAsOE5f,IAEFA,GAAS0F,kBAAA,qBAAyCia,IAQlD,IAAAW,GAEA,SAAAC,GAYA,SAAAD,EAAA9jB,EAAAzhC,GACA,IAAAypB,EAOA,OALAA,EAAA+7B,EAAAhtD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAyjD,SAEAhkB,EAAAx+B,GAAA,eAAAwP,GAAmCqjB,EAAuBA,EAAsBrM,MAAAg8B,SAChFh8B,EAnBEyL,EAAcqwB,EAAAC,GA0BhB,IAAAx8B,EAAAu8B,EAAAjtD,UA0FA,OAxFA0wB,EAAAI,QAAA,WACApnB,KAAAy/B,SAAAvY,IAAA,eAAAlnB,KAAAyjD,QAEAD,EAAAltD,UAAA8wB,QAAA5wB,KAAAwJ,OAUAgnB,EAAAgQ,SAAA,WAMA,OALAA,GAAA,OACAsB,UAAA,aAEA8V,UAAA,KAcApnB,EAAAy8B,OAAA,SAAA3jD,GACA,IAAAqO,EAAAnO,KAAAy/B,SAAAikB,SACA1jD,KAAA2jD,OAAAx1C,GAGAA,EACAnO,KAAAimC,OAEAjmC,KAAAkmC,QAWAlf,EAAA28B,OAAA,SAAAx1C,GACA,IAAAy1C,EAAA,GAGAz1C,IACAy1C,EAAA,QAAAz1C,EAAA,MAGAnO,KAAAyjC,IAAA3D,MAAA8jB,mBAeA58B,EAAAs8B,YAAA,SAAAxjD,GAEAE,KAAAojC,QAAA8L,aAIAlvC,KAAAojC,QAAA2J,MAAA,GAAAvT,QAEAx5B,KAAAojC,QAAA0L,SACArC,GAAAzsC,KAAAojC,QAAAD,QAEAnjC,KAAAojC,QAAA4L,UAIAuU,EArHA,CAsHEX,IAEF3f,GAAS0F,kBAAA,cAAA4a,IAET,IAEAM,IACAC,UAAA,YACAC,UAAA,aACAC,MAAA,QACAC,mBAAA,6CACAC,eAAA,2BACAC,sBAAA,aACAC,kBAAA,QACAC,OAAA,mCACA7H,OAAA,8BACA8H,UAAA,0DAeA,SAAAC,GAAAC,EAAAC,GACA,IAAAC,EAEA,OAAAF,EAAA53D,OAEA83D,EAAAF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACG,QAAAA,EAAA53D,OAIH,UAAA8iB,MAAA,gCAAA80C,EAAA,gDAFAE,EAAAF,EAAAjuD,MAAA,GAKA,cAAAmyB,SAAAg8B,EAAAnuD,MAAA,aAAAmyB,SAAAg8B,EAAAnuD,MAAA,aAAAmyB,SAAAg8B,EAAAnuD,MAAA,aAAAkuD,EAAA,IAkBA,SAAAE,GAAA73C,EAAAgzB,EAAAiH,GACA,IACAj6B,EAAAgzB,SAAAiH,EACG,MAAA7oC,GAEH,QAUA,IAAI0mD,GAEJ,SAAAlX,GAeA,SAAAmX,EAAAplB,EAAAzhC,EAAAmS,GACA,IAAAsX,EAEAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,EAAAmS,IAAAnQ,KACA,IAAA8kD,EAAAr0C,GAAoCqjB,EAAuBA,EAAsBrM,MAAAq1B,eA4BjF,OA3BArd,EAAAx+B,GAAA,YAAAwP,GAAgCqjB,EAAuBA,EAAsBrM,MAAAs9B,gBAC7EtlB,EAAAx+B,GAAA,kBAAA6jD,GACArlB,EAAAx+B,GAAA,iBAAAwP,GAAqCqjB,EAAuBA,EAAsBrM,MAAAu9B,iBAKlFvlB,EAAAtvB,MAAAM,GAAsBqjB,EAAuBA,EAAsBrM,IAAA,WACnE,GAAAgY,EAAA4X,OAAA5X,EAAA4X,MAAAmD,yBACAx6C,KAAAkmC,WADA,CAKAzG,EAAAx+B,GAAA,mBAAA6jD,GACArlB,EAAAx+B,GAAA,eAAA6jD,GACMtwB,EAAA/6B,EAAQ4R,iBAAA,oBAAAy5C,GACdrlB,EAAAx+B,GAAA,qBACA,OAAeuzB,EAAA/6B,EAAQ6iC,oBAAA,oBAAAwoB,KAIvB,IAFA,IAAAvsC,EAAAvY,KAAAsjC,SAAAoC,cAAAntB,WAEAttB,EAAA,EAAqBA,EAAAstB,EAAA3rB,OAAmB3B,IACxC+U,KAAAojC,QAAAkK,mBAAA/0B,EAAAttB,IAAA,GAGA+U,KAAAglD,qBAEAv9B,EA9CEyL,EAAc2xB,EAAAnX,GA2DhB,IAAA1mB,EAAA69B,EAAAvuD,UAoOA,OAlOA0wB,EAAAg+B,eAAA,WAWA,IAVA,IAMAC,EACAC,EACAC,EARAC,GACAnR,SAAA,EACAG,UAAA,GAEAiR,EAAArlD,KAAAojC,QAAAgK,aACAkY,EAAAtlD,KAAAojC,QAAAmiB,OAAAC,iBAKAv6D,EAAA,EAAmBA,EAAAo6D,EAAAz4D,OAAsB3B,IAAA,CACzC,IAAAmtB,EAAAitC,EAAAp6D,GAEAq6D,KAAArT,SAAAqT,EAAAh3D,UAAAg3D,EAAAh3D,WAAA8pB,EAAA9pB,UAAA8pB,EAAA06B,QAAAsS,EAEAhtC,EAAA06B,OAAAwS,EAAAxS,KACAqS,EAAA/sC,EACS+sC,IACTA,EAAA/sC,GAGOktC,MAAArT,SACPkT,EAAA,KACAF,EAAA,KACAC,EAAA,MACO9sC,EAAAte,UACP,iBAAAse,EAAA06B,MAAAmS,EAES7sC,EAAA06B,QAAAsS,IAAAF,IACTA,EAAA9sC,GAFA6sC,EAAA7sC,GAWA+sC,EACAA,EAAArwC,KAAA,UACKowC,EACLA,EAAApwC,KAAA,UACKmwC,IACLA,EAAAnwC,KAAA,YAaAkS,EAAA+9B,cAAA,WACA/kD,KAAAojC,QAAAiU,OAAAr3C,KAAAojC,QAAAiU,MAAAmD,yBACAx6C,KAAAkmC,OAEAlmC,KAAAimC,QAWAjf,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,2BAEA2qB,YAAA,MACAwC,cAAA,UAQAz+B,EAAA0+B,aAAA,WACuB,mBAARlxB,EAAA/6B,EAAQ88C,QACjB/hB,EAAA/6B,EAAQ88C,OAAAoP,YAAoBnxB,EAAA/6B,KAAQuG,KAAAyjC,MAY1Czc,EAAA81B,cAAA,WACA,IAAAvkC,EAAAvY,KAAAojC,QAAAgK,aACAptC,KAAA0lD,eAQA,IAJA,IAAAE,EAAA,KACAC,EAAA,KACA56D,EAAAstB,EAAA3rB,OAEA3B,KAAA,CACA,IAAAmtB,EAAAG,EAAAttB,GAEA,YAAAmtB,EAAAtD,OACA,iBAAAsD,EAAA06B,KACA8S,EAAAxtC,EAEAytC,EAAAztC,GAKAytC,GACA,QAAA7lD,KAAA+B,aAAA,cACA/B,KAAAw3B,aAAA,mBAGAx3B,KAAA8lD,eAAAD,IACKD,IACL,cAAA5lD,KAAA+B,aAAA,cACA/B,KAAAw3B,aAAA,yBAGAx3B,KAAA8lD,eAAAF,KAWA5+B,EAAA8+B,eAAA,SAAA1tC,GACA,GAAuB,mBAARoc,EAAA/6B,EAAQ88C,QAAAn+B,EAAA2/B,WAAvB,CAMA,IAFA,IAAApL,KAEAxb,EAAA,EAAoBA,EAAA/Y,EAAA2/B,WAAAnrD,OAA8BukC,IAClDwb,EAAAhhD,KAAAysB,EAAA2/B,WAAA5mB,IAKA,GAFIqD,EAAA/6B,EAAQ88C,OAAAoP,YAAoBnxB,EAAA/6B,EAAQkzC,EAAA3sC,KAAAyjC,KAExCzjC,KAAAojC,QAAA2iB,kBAOA,IAHA,IAAAC,EAAAhmD,KAAAojC,QAAA2iB,kBAAAE,YACAh7D,EAAA0hD,EAAA//C,OAEA3B,KAAA,CACA,IAAA2hD,EAAAD,EAAA1hD,GAEA,GAAA2hD,EAAA,CAIA,IAAAsZ,EAAAtZ,EAAAuZ,aAsCA,GApCAH,EAAAxB,QACA0B,EAAApuB,WAAAgI,MAAA0kB,MAAAwB,EAAAxB,OAGAwB,EAAAI,aACAzB,GAAAuB,EAAApuB,WAAA,QAAAysB,GAAAyB,EAAAxB,OAAA,OAAAwB,EAAAI,cAGAJ,EAAAK,kBACAH,EAAApuB,WAAAgI,MAAAumB,gBAAAL,EAAAK,iBAGAL,EAAAM,mBACA3B,GAAAuB,EAAApuB,WAAA,kBAAAysB,GAAAyB,EAAAK,iBAAA,OAAAL,EAAAM,oBAGAN,EAAAO,cACAP,EAAAQ,cACA7B,GAAAuB,EAAA,kBAAA3B,GAAAyB,EAAAO,YAAAP,EAAAQ,gBAEAN,EAAApmB,MAAAumB,gBAAAL,EAAAO,aAIAP,EAAAS,YACA,eAAAT,EAAAS,UACAP,EAAApuB,WAAAgI,MAAA4mB,WAAA,uDACS,WAAAV,EAAAS,UACTP,EAAApuB,WAAAgI,MAAA4mB,WAAA,2CACS,cAAAV,EAAAS,UACTP,EAAApuB,WAAAgI,MAAA4mB,WAAA,wDACS,YAAAV,EAAAS,YACTP,EAAApuB,WAAAgI,MAAA4mB,WAAA,2DAIAV,EAAAW,aAAA,IAAAX,EAAAW,YAAA,CACA,IAAAC,EAAuBpyB,EAAA/6B,EAAQ+uB,WAAA09B,EAAApmB,MAAA8mB,UAC/BV,EAAApmB,MAAA8mB,WAAAZ,EAAAW,YAAA,KACAT,EAAApmB,MAAAx1C,OAAA,OACA47D,EAAApmB,MAAAxyB,IAAA,OACA44C,EAAApmB,MAAA+mB,OAAA,MAGAb,EAAAc,YAAA,YAAAd,EAAAc,aACA,eAAAd,EAAAc,WACAZ,EAAApuB,WAAAgI,MAAAinB,YAAA,aAEAb,EAAApuB,WAAAgI,MAAAgnB,WAAAjD,GAAAmC,EAAAc,iBAMAjC,EAhSA,CAiSE5hB,IAEFA,GAAS0F,kBAAA,mBAAuCic,IAQhD,IAAAoC,GAEA,SAAAtZ,GAGA,SAAAsZ,IACA,OAAAtZ,EAAAj1C,MAAAuH,KAAA+P,YAAA/P,KA4BA,OA/BEkzB,EAAc8zB,EAAAtZ,GAMhBsZ,EAAA1wD,UAQA0gC,SAAA,WACA,IAAAiwB,EAAAjnD,KAAAojC,QAAA6jB,UACAC,EAAAlnD,KAAAgkC,SAAAijB,EAAA,+BACAxX,EAAAzY,GAAA,QACAsB,UAAA,mBACAkd,UAAAx1C,KAAAgkC,SAAA,mBAAmCkjB,MAGnCp6C,EAAA4gC,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,sBACA6uB,IAAA,QAIA,OADAr6C,EAAAkrB,YAAAyX,GACA3iC,GAGAk6C,EAhCA,CAiCE/jB,IAEFA,GAAS0F,kBAAA,iBAAAqe,IAQT,IAAII,GAEJ,SAAA5D,GAGA,SAAA6D,IACA,OAAA7D,EAAA/qD,MAAAuH,KAAA+P,YAAA/P,KAHEkzB,EAAcm0B,EAAA7D,GAMhB,IAAAx8B,EAAAqgC,EAAA/wD,UAqHA,OAnGA0wB,EAAAgQ,SAAA,SAAArqC,EAAAkN,EAAAguB,QACA,IAAAhuB,IACAA,WAGA,IAAAguB,IACAA,MAIAhuB,EAAYi8B,IACZ0f,UAAA,gEACAld,UAAAt4B,KAAA4lC,iBACK/rC,GAELguB,EAAiBiO,IAEjB5gC,KAAA,UACK2yB,GACL,IAAA/a,EAAam2B,GAAS3sC,UAAA0gC,SAAAxgC,KAAAwJ,KAVtB,SAUsBnG,EAAAguB,GAEtB,OADA7nB,KAAA+iD,oBAAAj2C,GACAA,GAoBAka,EAAA2d,SAAA,SAAAtjC,EAAArD,QACA,IAAAA,IACAA,MAGA,IAAAs6B,EAAAt4B,KAAAuT,YAAA5lB,KAGA,OAFI8mC,EAAGv7B,KAAA,+DAAAo/B,EAAA,yDAEI2K,GAAS3sC,UAAAquC,SAAAnuC,KAAAwJ,KAAAqB,EAAArD,IAQpBgpB,EAAAoO,OAAA,WACAouB,EAAAltD,UAAA8+B,OAAA5+B,KAAAwJ,MAEAA,KAAAyjC,IAAAvK,gBAAA,aAQAlS,EAAAmO,QAAA,WACAquB,EAAAltD,UAAA6+B,QAAA3+B,KAAAwJ,MAEAA,KAAAyjC,IAAAjM,aAAA,wBAaAxQ,EAAAogB,cAAA,SAAAtnC,GAMQswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,UAA+BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,SACrDA,EAAAu9B,kBAKAmmB,EAAAltD,UAAA8wC,cAAA5wC,KAAAwJ,KAAAF,IAGAunD,EA5HA,CA6HEzE,IAEF3f,GAAS0F,kBAAA,SAA6Bye,IAStC,IAAAE,GAEA,SAAAC,GAGA,SAAAD,EAAA7nB,EAAAzhC,GACA,IAAAypB,EAOA,OALAA,EAAA8/B,EAAA/wD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACAwnD,YAAA,EAEA//B,EAAAxmB,GAAA,YAAAwmB,EAAAggC,iBAEAhgC,EAVEyL,EAAco0B,EAAAC,GAoBhB,IAAAvgC,EAAAsgC,EAAAhxD,UAwDA,OAtDA0wB,EAAA4e,cAAA,WACA,6BAeA5e,EAAAs8B,YAAA,SAAAxjD,GACA,IAAA4nD,EAAA1nD,KAAAojC,QAAAD,OAEA,GAAAnjC,KAAAwnD,YAAA1nD,EAAA29B,SAAA39B,EAAA69B,QAGA,OAFA8O,GAAAib,QACA1nD,KAAAojC,QAAA2J,MAAA,GAAAvT,QAIA,IAAAjrB,EAAAvO,KAAAojC,QAAAsB,SAAA,cACAijB,EAAAp5C,KAAAm2B,SAAA,cAEA,GAAAijB,EAAA,CAKA,IAAAC,EAAA,WACA,OAAAD,EAAAnuB,SAGAgT,GAAAkb,GACAA,EAAAv7C,KAAAy7C,EAAA,cAEA5nD,KAAA0S,WAAAk1C,EAAA,QAXA5nD,KAAAojC,QAAA2J,MAAA,GAAAvT,SAeAxS,EAAAogB,cAAA,SAAAtnC,GACAE,KAAAwnD,YAAA,EAEAD,EAAAjxD,UAAA8wC,cAAA5wC,KAAAwJ,KAAAF,IAGAknB,EAAAygC,gBAAA,SAAA3nD,GACAE,KAAAwnD,YAAA,GAGAF,EA7EA,CA8EEF,IASFE,GAAAhxD,UAAA4sD,aAAA,aACAjgB,GAAS0F,kBAAA,gBAAA2e,IAST,IAAAO,GAEA,SAAAN,GAYA,SAAAM,EAAApoB,EAAAzhC,GACA,IAAAypB,EAMA,OAJAA,EAAA8/B,EAAA/wD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAyvC,YAAAzxC,KAAAyxC,aAAAhoB,EAAAuc,SAAA,UAEAvc,EAlBEyL,EAAc20B,EAAAN,GA4BhB,IAAAvgC,EAAA6gC,EAAAvxD,UAqCA,OAnCA0wB,EAAA4e,cAAA,WACA,0BAAA2hB,EAAAjxD,UAAAsvC,cAAApvC,KAAAwJ,OAiBAgnB,EAAAs8B,YAAA,SAAAxjD,GAWAE,KAAAokB,SACAlvB,KAAA,QACAupC,SAAA,KAIAopB,EAlEA,CAmEET,IAEFnkB,GAAS0F,kBAAA,cAAAkf,IAQT,IAAIC,GAEJ,SAAAP,GAYA,SAAAQ,EAAAtoB,EAAAzhC,GACA,IAAAypB,EAkBA,YAhBA,IAAAzpB,IACAA,MAGAypB,EAAA8/B,EAAA/wD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,KAEAhC,EAAAgqD,YAAA/rD,IAAA+B,EAAAgqD,QAAAhqD,EAAAgqD,OAEAvgC,EAAAxmB,GAAAw+B,EAAA,OAAAhY,EAAAwgC,YAEAxgC,EAAAxmB,GAAAw+B,EAAA,QAAAhY,EAAAygC,aAEAlqD,EAAAgqD,QACAvgC,EAAAxmB,GAAAw+B,EAAA,QAAAhY,EAAA0gC,aAGA1gC,EA9BEyL,EAAc60B,EAAAR,GAwChB,IAAAvgC,EAAA+gC,EAAAzxD,UAiGA,OA/FA0wB,EAAA4e,cAAA,WACA,0BAAA2hB,EAAAjxD,UAAAsvC,cAAApvC,KAAAwJ,OAeAgnB,EAAAs8B,YAAA,SAAAxjD,GACAE,KAAAojC,QAAA0L,SACA9uC,KAAAojC,QAAAD,OAEAnjC,KAAAojC,QAAA4L,SAcAhoB,EAAAohC,aAAA,SAAAtoD,GACAE,KAAA04B,YAAA,aAEA14B,KAAAojC,QAAA0L,SACA9uC,KAAAkoD,YAAApoD,GAEAE,KAAAioD,WAAAnoD,IAaAknB,EAAAihC,WAAA,SAAAnoD,GACAE,KAAA04B,YAAA,aACA14B,KAAA04B,YAAA,cACA14B,KAAAu4B,SAAA,eAEAv4B,KAAAyvC,YAAA,UAYAzoB,EAAAkhC,YAAA,SAAApoD,GACAE,KAAA04B,YAAA,eACA14B,KAAAu4B,SAAA,cAEAv4B,KAAAyvC,YAAA,SAYAzoB,EAAAmhC,YAAA,SAAAroD,GACAE,KAAA04B,YAAA,eACA14B,KAAAu4B,SAAA,aAEAv4B,KAAAyvC,YAAA,UAEAzvC,KAAA2+B,IAAA3+B,KAAAojC,QAAA,SAAApjC,KAAAooD,eAGAL,EA1IA,CA2IEX,IASFU,GAAUxxD,UAAA4sD,aAAA,OACVjgB,GAAS0F,kBAAA,aAAiCmf,IAsB1C,IAAAO,GAAA,SAAAr/D,EAAAs/D,GACAt/D,IAAA,IAAAA,EACA,IAAAumC,EAAAn9B,KAAA+mB,MAAAnwB,EAAA,IACAsc,EAAAlT,KAAA+mB,MAAAnwB,EAAA,OACAqR,EAAAjI,KAAA+mB,MAAAnwB,EAAA,MACAu/D,EAAAn2D,KAAA+mB,MAAAmvC,EAAA,OACAE,EAAAp2D,KAAA+mB,MAAAmvC,EAAA,MAeA,OAbA96B,MAAAxkC,QAAA2P,OAGA0B,EAAAiL,EAAAiqB,EAAA,MAIAl1B,IAAA,GAAAmuD,EAAA,EAAAnuD,EAAA,SAGAiL,IAAAjL,GAAAkuD,GAAA,KAAAjjD,EAAA,OAAAA,KAAA,MAEAiqB,IAAA,OAAAA,MAKA93B,GAAA4wD,GAwCA,SAAAI,GAAAz/D,EAAAs/D,GAKA,YAJA,IAAAA,IACAA,EAAAt/D,GAGAyO,GAAAzO,EAAAs/D,GASA,IAAII,GAEJ,SAAAhb,GAYA,SAAAib,EAAAlpB,EAAAzhC,GACA,IAAAypB,EAOA,OALAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACA4oD,uBAAAxoB,GAAA3vB,GAAiDqjB,EAAuBA,EAAsBrM,MAAAohC,eAAA,IAE9FphC,EAAAxmB,GAAAw+B,EAAA,aAAAhY,EAAAmhC,wBAEAnhC,EAnBEyL,EAAcy1B,EAAAjb,GA6BhB,IAAA1mB,EAAA2hC,EAAAryD,UAsGA,OApGA0wB,EAAAgQ,SAAA,WACA,IAAAsB,EAAAt4B,KAAA4lC,gBAEA94B,EAAA4gC,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,YAAA,gCACAkd,UAAA,sDAAAx1C,KAAAgkC,SAAAhkC,KAAA8oD,YAAA,aAgBA,OAbA9oD,KAAAwkC,WAAAxN,GAAA,QACAsB,YAAA,aAGA2qB,YAAA,MAKAhV,KAAA,iBAEAjuC,KAAA+oD,kBACAj8C,EAAAkrB,YAAAh4B,KAAAwkC,YACA13B,GAGAka,EAAAI,QAAA,WACApnB,KAAAwkC,WAAA,KACAxkC,KAAAgpD,UAAA,KAEAtb,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAUAgnB,EAAA+hC,gBAAA,WACA,GAAA/oD,KAAAwkC,WAAA,CAIA,KAAAxkC,KAAAwkC,WAAA1M,YACA93B,KAAAwkC,WAAAvJ,YAAAj7B,KAAAwkC,WAAA1M,YAGA93B,KAAAgpD,UAAqBvyB,EAAAh9B,EAAQ0hC,eAAAn7B,KAAAipD,gBAAAjpD,KAAAkpD,YAAA,IAC7BlpD,KAAAwkC,WAAAxM,YAAAh4B,KAAAgpD,aAeAhiC,EAAAkiC,YAAA,SAAAC,GACA,OAAAV,GAAAU,IAaAniC,EAAAoiC,qBAAA,SAAAD,GACA,IAAAE,EAAArpD,KAAAkpD,YAAAC,GAEAE,IAAArpD,KAAAipD,iBAIAjpD,KAAAipD,eAAAI,EACArpD,KAAAuoC,sBAAAvoC,KAAA+oD,mBAaA/hC,EAAA6hC,cAAA,SAAA/oD,KAEA6oD,EApIA,CAqIE1lB,IASFylB,GAAWpyD,UAAAwyD,WAAA,OAUXJ,GAAWpyD,UAAA4sD,aAAA,OACXjgB,GAAS0F,kBAAA,cAAkC+f,IAQ3C,IAAAY,GAEA,SAAAC,GAYA,SAAAD,EAAA7pB,EAAAzhC,GACA,IAAAypB,EAMA,OAJAA,EAAA8hC,EAAA/yD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAiB,GAAAw+B,EAAA,QAAAhY,EAAA0gC,aAEA1gC,EAlBEyL,EAAco2B,EAAAC,GA4BhB,IAAAviC,EAAAsiC,EAAAhzD,UAwCA,OAtCA0wB,EAAA4e,cAAA,WACA,0BAYA5e,EAAA6hC,cAAA,SAAA/oD,GAEA,IAAAqpD,EAAAnpD,KAAAojC,QAAAomB,YAAAxpD,KAAAojC,QAAAqmB,WAAArR,YAAAp4C,KAAAojC,QAAAgV,cACAp4C,KAAAopD,qBAAAD,IAcAniC,EAAAmhC,YAAA,SAAAroD,GACAE,KAAAojC,QAAA10C,YAIAsR,KAAAopD,qBAAAppD,KAAAojC,QAAA10C,aAGA46D,EArEA,CAsEEZ,IASFY,GAAAhzD,UAAAwyD,WAAA,eAUAQ,GAAAhzD,UAAA4sD,aAAA,eACAjgB,GAAS0F,kBAAA,qBAAA2gB,IAQT,IAAAI,GAEA,SAAAH,GAYA,SAAAG,EAAAjqB,EAAAzhC,GACA,IAAAypB,EAkBA,OAhBAA,EAAA8hC,EAAA/yD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAIAiB,GAAAw+B,EAAA,iBAAAhY,EAAAohC,eAKAphC,EAAAxmB,GAAAw+B,EAAA,YAAAhY,EAAAohC,eAKAphC,EAAAxmB,GAAAw+B,EAAA,iBAAAhY,EAAAmhC,wBAEAnhC,EA9BEyL,EAAcw2B,EAAAH,GAwChB,IAAAviC,EAAA0iC,EAAApzD,UA2BA,OAzBA0wB,EAAA4e,cAAA,WACA,sBAeA5e,EAAA6hC,cAAA,SAAA/oD,GACA,IAAApR,EAAAsR,KAAAojC,QAAA10C,WAEAsR,KAAAs7C,YAAA5sD,IACAsR,KAAAs7C,UAAA5sD,EACAsR,KAAAopD,qBAAA16D,KAIAg7D,EApEA,CAqEEhB,IASFgB,GAAApzD,UAAAwyD,WAAA,WAUAY,GAAApzD,UAAA4sD,aAAA,WACAjgB,GAAS0F,kBAAA,kBAAA+gB,IAST,IAAAC,GAEA,SAAAjc,GAGA,SAAAic,IACA,OAAAjc,EAAAj1C,MAAAuH,KAAA+P,YAAA/P,KAuBA,OA1BEkzB,EAAcy2B,EAAAjc,GAMhBic,EAAArzD,UAQA0gC,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,oCACAkd,UAAA,8BAKAlH,eAAA,KAIAqb,EA3BA,CA4BE1mB,IAEFA,GAAS0F,kBAAA,cAAAghB,IAQT,IAAAC,GAEA,SAAAL,GAYA,SAAAK,EAAAnqB,EAAAzhC,GACA,IAAAypB,EAQA,OANAA,EAAA8hC,EAAA/yD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAiB,GAAAw+B,EAAA,iBAAAhY,EAAAmhC,wBAEAnhC,EAAAxmB,GAAAw+B,EAAA,QAAAhY,EAAA0gC,aAEA1gC,EApBEyL,EAAc02B,EAAAL,GA8BhB,IAAAviC,EAAA4iC,EAAAtzD,UAiEA,OA/DA0wB,EAAA4e,cAAA,WACA,4BAUA5e,EAAAgQ,SAAA,WACA,IAAAlqB,EAAAy8C,EAAAjzD,UAAA0gC,SAAAxgC,KAAAwJ,MAKA,OAHA8M,EAAAirB,aAAAf,GAAA,WACAsX,eAAA,GACK,KAAAtuC,KAAAwkC,YACL13B,GAaAka,EAAA6hC,cAAA,SAAA/oD,GACA,iBAAAE,KAAAojC,QAAA10C,aAMAsR,KAAAojC,QAAAymB,qBACA7pD,KAAAopD,qBAAAppD,KAAAojC,QAAAymB,wBAEA7pD,KAAAopD,qBAAAppD,KAAAojC,QAAA0mB,mBAeA9iC,EAAAmhC,YAAA,SAAAroD,GACAE,KAAAojC,QAAA10C,YAIAsR,KAAAopD,qBAAA,IAGAQ,EAhGA,CAiGElB,IASFkB,GAAAtzD,UAAAwyD,WAAA,iBAUAc,GAAAtzD,UAAA4sD,aAAA,iBACAjgB,GAAS0F,kBAAA,uBAAAihB,IAQT,IAAAG,GAEA,SAAArc,GAYA,SAAAqc,EAAAtqB,EAAAzhC,GACA,IAAAypB,EAQA,OANAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAgqD,gBAEAviC,EAAAxmB,GAAAwmB,EAAAgY,SAAA,iBAAAhY,EAAAuiC,eAEAviC,EApBEyL,EAAc62B,EAAArc,GA8BhB,IAAA1mB,EAAA+iC,EAAAzzD,UAyCA,OAvCA0wB,EAAAgQ,SAAA,WACA,IAAAlqB,EAAA4gC,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,iCAUA,OAPAt4B,KAAAwkC,WAAAxN,GAAA,OACAsB,UAAA,mBACAkd,UAAA,kCAAAx1C,KAAAgkC,SAAA,0BAAAhkC,KAAAgkC,SAAA,UAEAif,YAAA,QAEAn2C,EAAAkrB,YAAAh4B,KAAAwkC,YACA13B,GAGAka,EAAAI,QAAA,WACApnB,KAAAwkC,WAAA,KAEAkJ,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAaAgnB,EAAAgjC,cAAA,SAAAlqD,GACAE,KAAAy/B,SAAA/wC,aAAAiK,IACAqH,KAAAimC,OAEAjmC,KAAAkmC,QAIA6jB,EAxEA,CAyEE9mB,IAEFA,GAAS0F,kBAAA,cAAAohB,IAQT,IAAAE,GAEA,SAAA1C,GAYA,SAAA0C,EAAAxqB,EAAAzhC,GACA,IAAAypB,EAUA,OARAA,EAAA8/B,EAAA/wD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAkqD,uBAEAziC,EAAA2b,QAAA+mB,aACA1iC,EAAAxmB,GAAAwmB,EAAA2b,QAAA+mB,YAAA,iBAAA1iC,EAAAyiC,sBAGAziC,EAtBEyL,EAAc+2B,EAAA1C,GAgChB,IAAAvgC,EAAAijC,EAAA3zD,UA2DA,OAzDA0wB,EAAAgQ,SAAA,WACA,IAAAlqB,EAAAy6C,EAAAjxD,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,UACAs4B,UAAA,yCAUA,OAPAt4B,KAAAoqD,QAAApzB,GAAA,QACAsB,UAAA,wBACAkd,UAAAx1C,KAAAgkC,SAAA,UAEAsK,cAAA,SAEAxhC,EAAAkrB,YAAAh4B,KAAAoqD,SACAt9C,GAQAka,EAAAkjC,qBAAA,SAAAhsD,IAEA8B,KAAAojC,QAAA+mB,aAAAnqD,KAAAojC,QAAA+mB,YAAAE,cACArqD,KAAAw3B,aAAA,oBACAx3B,KAAAu4B,SAAA,oBACAv4B,KAAAyvC,YAAA,0CAEAzvC,KAAAw3B,aAAA,oBACAx3B,KAAA04B,YAAA,oBACA14B,KAAAyvC,YAAA,yCAUAzoB,EAAAs8B,YAAA,WACAtjD,KAAAojC,QAAA+mB,YAAAG,kBAOAtjC,EAAAI,QAAA,WACApnB,KAAAojC,QAAA+mB,aACAnqD,KAAAknB,IAAAlnB,KAAAojC,QAAA+mB,YAAA,iBAAAnqD,KAAAkqD,sBAGAlqD,KAAAoqD,QAAA,KAEA7C,EAAAjxD,UAAA8wB,QAAA5wB,KAAAwJ,OAGAiqD,EA5FA,CA6FE7C,IAEF6C,GAAA3zD,UAAA4sD,aAAA,uCACAjgB,GAAS0F,kBAAA,aAAAshB,IAST,IAAIM,GAEJ,SAAA7c,GAYA,SAAA8c,EAAA/qB,EAAAzhC,GACA,IAAAypB,EAUA,OARAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAyqD,IAAAhjC,EAAAid,SAAAjd,EAAA6b,SAAAonB,SAEAjjC,EAAAkjC,WAAAljC,EAAA6b,SAAAqnB,UAEAljC,EAAA2N,SAEA3N,EAtBEyL,EAAcs3B,EAAA9c,GAgChB,IAAA1mB,EAAAwjC,EAAAl0D,UAiUA,OA/TA0wB,EAAAirB,QAAA,WACA,OAAAjyC,KAAAqjD,UAOAr8B,EAAAoO,OAAA,WACAp1B,KAAAiyC,YAIAjyC,KAAAiB,GAAA,YAAAjB,KAAAynD,iBACAznD,KAAAiB,GAAA,aAAAjB,KAAAynD,iBACAznD,KAAAiB,GAAA,UAAAjB,KAAAonC,eACApnC,KAAAiB,GAAA,QAAAjB,KAAAsjD,aACAtjD,KAAAiB,GAAAjB,KAAAojC,QAAA,kBAAApjC,KAAAyjD,QAEAzjD,KAAA4qD,aACA5qD,KAAAiB,GAAAjB,KAAAojC,QAAApjC,KAAA4qD,YAAA5qD,KAAAyjD,QAGAzjD,KAAA04B,YAAA,YACA14B,KAAAw3B,aAAA,cACAx3B,KAAAqjD,UAAA,IAOAr8B,EAAAmO,QAAA,WACA,GAAAn1B,KAAAiyC,UAAA,CAIA,IAAAvU,EAAA19B,KAAAyqD,IAAAhnB,IAAAjF,cACAx+B,KAAAknB,IAAA,YAAAlnB,KAAAynD,iBACAznD,KAAAknB,IAAA,aAAAlnB,KAAAynD,iBACAznD,KAAAknB,IAAA,UAAAlnB,KAAAonC,eACApnC,KAAAknB,IAAA,QAAAlnB,KAAAsjD,aACAtjD,KAAAknB,IAAAlnB,KAAAojC,QAAA,kBAAApjC,KAAAyjD,QACAzjD,KAAAknB,IAAAwW,EAAA,YAAA19B,KAAA6qD,iBACA7qD,KAAAknB,IAAAwW,EAAA,UAAA19B,KAAA8qD,eACA9qD,KAAAknB,IAAAwW,EAAA,YAAA19B,KAAA6qD,iBACA7qD,KAAAknB,IAAAwW,EAAA,WAAA19B,KAAA8qD,eACA9qD,KAAAk5B,gBAAA,YACAl5B,KAAAu4B,SAAA,YAEAv4B,KAAA4qD,aACA5qD,KAAAknB,IAAAlnB,KAAAojC,QAAApjC,KAAA4qD,YAAA5qD,KAAAyjD,QAGAzjD,KAAAqjD,UAAA,IAmBAr8B,EAAAgQ,SAAA,SAAA9hC,EAAA2E,EAAAguB,GAqBA,YApBA,IAAAhuB,IACAA,WAGA,IAAAguB,IACAA,MAIAhuB,EAAAy+B,UAAAz+B,EAAAy+B,UAAA,cACAz+B,EAAYi8B,IACZsY,SAAA,GACKv0C,GACLguB,EAAiBiO,IACjBmY,KAAA,SACA8c,gBAAA,EACAC,gBAAA,EACAC,gBAAA,IACA7c,SAAA,GACKvmB,GACL6lB,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA9K,EAAA2E,EAAAguB,IAcAb,EAAAygC,gBAAA,SAAA3nD,GACA,IAAA49B,EAAA19B,KAAAyqD,IAAAhnB,IAAAjF,cAEA,cAAA1+B,EAAA5K,MACA4K,EAAAmC,iBAOA,eAAAnC,EAAA5K,MAAAi1C,IACArqC,EAAAmC,iBAGAs3B,KACAv5B,KAAAu4B,SAAA,eAQAv4B,KAAAokB,QAAA,gBACApkB,KAAAiB,GAAAy8B,EAAA,YAAA19B,KAAA6qD,iBACA7qD,KAAAiB,GAAAy8B,EAAA,UAAA19B,KAAA8qD,eACA9qD,KAAAiB,GAAAy8B,EAAA,YAAA19B,KAAA6qD,iBACA7qD,KAAAiB,GAAAy8B,EAAA,WAAA19B,KAAA8qD,eACA9qD,KAAA6qD,gBAAA/qD,IAiBAknB,EAAA6jC,gBAAA,SAAA/qD,KAaAknB,EAAA8jC,cAAA,WACA,IAAAptB,EAAA19B,KAAAyqD,IAAAhnB,IAAAjF,cACA9E,KACA15B,KAAA04B,YAAA,eAQA14B,KAAAokB,QAAA,kBACApkB,KAAAknB,IAAAwW,EAAA,YAAA19B,KAAA6qD,iBACA7qD,KAAAknB,IAAAwW,EAAA,UAAA19B,KAAA8qD,eACA9qD,KAAAknB,IAAAwW,EAAA,YAAA19B,KAAA6qD,iBACA7qD,KAAAknB,IAAAwW,EAAA,WAAA19B,KAAA8qD,eACA9qD,KAAAyjD,UAWAz8B,EAAAy8B,OAAA,WAIA,GAAAzjD,KAAAyjC,IAAA,CAQA,IAAAynB,EAAAlrD,KAAAmrD,aACAV,EAAAzqD,KAAAyqD,IAEA,GAAAA,EAAA,EAKA,iBAAAS,WAAA,GAAAA,IAAAvyD,OACAuyD,EAAA,GAIA,IAAAE,GAAA,IAAAF,GAAAj9C,QAAA,OACA6xB,EAAA2qB,EAAA39C,KAAAgzB,MAQA,OANA9/B,KAAA2qD,WACA7qB,EAAAx1C,OAAA8gE,EAEAtrB,EAAAz1C,MAAA+gE,EAGAF,KAeAlkC,EAAAqkC,kBAAA,SAAAvrD,GACA,IAAAkM,EAAAquB,GAAAr6B,KAAAyjC,IAAA3jC,GAEA,OAAAE,KAAA2qD,WACA3+C,EAAAO,EAGAP,EAAAxO,GAcAwpB,EAAAogB,cAAA,SAAAtnC,GAEQswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,SAA8BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,SACpDA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAsrD,YACelb,EAAA32C,EAAO42C,WAAAvwC,EAAA,UAA+BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,OAC5DA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAurD,eAGA7d,EAAAp3C,UAAA8wC,cAAA5wC,KAAAwJ,KAAAF,IAYAknB,EAAAs8B,YAAA,SAAAxjD,GACAA,EAAAu9B,kBACAv9B,EAAAmC,kBAeA+kB,EAAA2jC,SAAA,SAAAa,GACA,QAAAvvD,IAAAuvD,EACA,OAAAxrD,KAAAyrD,YAAA,EAGAzrD,KAAAyrD,YAAAD,EAEAxrD,KAAAyrD,UACAzrD,KAAAu4B,SAAA,uBAEAv4B,KAAAu4B,SAAA,0BAIAiyB,EAlWA,CAmWEvnB,IAEFA,GAAS0F,kBAAA,SAA6B4hB,IAQtC,IAAAmB,GAEA,SAAAhe,GAYA,SAAAge,EAAAjsB,EAAAzhC,GACA,IAAAypB,EAOA,OALAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACA2rD,YAEAlkC,EAAAxmB,GAAAw+B,EAAA,WAAAhY,EAAAg8B,QAEAh8B,EAnBEyL,EAAcw4B,EAAAhe,GA6BhB,IAAA1mB,EAAA0kC,EAAAp1D,UAwEA,OAtEA0wB,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,oBACAkd,UAAA,wCAAAx1C,KAAAgkC,SAAA,0FAIAhd,EAAAI,QAAA,WACApnB,KAAA2rD,SAAA,KAEAje,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAYAgnB,EAAAy8B,OAAA,SAAA3jD,GACA,IAAAqqD,EAAAnqD,KAAAojC,QAAA+mB,YACA7e,EAAAtrC,KAAAojC,QAAAkI,WACA58C,EAAAy7D,KAAAyB,SAAAzB,EAAA0B,cAAA7rD,KAAAojC,QAAA10C,WACAo9D,EAAA9rD,KAAAojC,QAAA0oB,cACA5xD,EAAA8F,KAAA2rD,SACAI,EAAA/rD,KAAAw7B,EAAA,uCAEAwwB,EAAA,SAAA7C,EAAAh0D,EAAA82D,GAEA,IAAAC,EAAA/C,EAAAh0D,GAAA,EAOA,OANA+2D,EAAA,KAAAA,GAAA,IAAAA,GAEAD,IACAC,IAAAj+C,QAAA,IAGAi+C,EAAA,KAIAlsD,KAAAyjC,IAAA3D,MAAAz1C,MAAA2hE,EAAAF,EAAAp9D,GAEA+oC,GAAAs0B,EAAAC,EAAAF,EAAAp9D,GAAA,IAEA,QAAAzD,EAAA,EAAmBA,EAAAqgD,EAAA1+C,OAAqB3B,IAAA,CACxC,IAAAsiC,EAAA+d,EAAA/d,MAAAtiC,GACAkK,EAAAm2C,EAAAn2C,IAAAlK,GACAkhE,EAAAjyD,EAAAjP,GAEAkhE,IACAA,EAAAnsD,KAAAyjC,IAAAzL,YAAAhB,MACA98B,EAAAjP,GAAAkhE,GAIAA,EAAArsB,MAAAzyB,KAAA2+C,EAAAz+B,EAAAu+B,GACAK,EAAArsB,MAAAz1C,MAAA2hE,EAAA72D,EAAAo4B,EAAAu+B,GAIA,QAAA36B,EAAAj3B,EAAAtN,OAAkCukC,EAAAma,EAAA1+C,OAAsBukC,IACxDnxB,KAAAyjC,IAAAxI,YAAA/gC,EAAAi3B,EAAA,IAGAj3B,EAAAtN,OAAA0+C,EAAA1+C,QAGA8+D,EAtGA,CAuGEzoB,IAEFA,GAAS0F,kBAAA,kBAAA+iB,IAQT,IAAAU,GAEA,SAAA1e,GAGA,SAAA0e,IACA,OAAA1e,EAAAj1C,MAAAuH,KAAA+P,YAAA/P,KAHEkzB,EAAck5B,EAAA1e,GAMhB,IAAA1mB,EAAAolC,EAAA91D,UAuHA,OA/GA0wB,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,qBAEAgW,cAAA,UAeAtnB,EAAAy8B,OAAA,SAAA4I,EAAAC,EAAAn1B,GACA,IAAAo1B,EAAAp/C,GAAAnN,KAAAyjC,KACA+oB,EAAAr/C,GAAAnN,KAAAojC,QAAAt2B,MACA2/C,EAAAJ,EAAAhiE,MAAAiiE,EAGA,GAAAE,GAAAD,EAAA,CAQA,IAAAG,EAAAL,EAAAh/C,KAAAm/C,EAAAn/C,KAAAo/C,EAKAE,EAAAN,EAAAhiE,MAAAoiE,GAAAD,EAAAI,MAAAP,EAAAO,OAGAC,EAAAN,EAAAliE,MAAA,EAGAqiE,EAAAG,EACAA,KAAAH,EACKC,EAAAE,IACLA,EAAAF,GAMAE,EAAA,EACAA,EAAA,EACKA,EAAAN,EAAAliE,QACLwiE,EAAAN,EAAAliE,OAGA2V,KAAAyjC,IAAA3D,MAAA8sB,MAAA,IAAAC,EAAA,KACAp1B,GAAAz3B,KAAAyjC,IAAAtM,KAqBAnQ,EAAA8lC,WAAA,SAAAT,EAAAC,EAAAnD,EAAA56C,GACA,IAAAkZ,EAAAznB,KAGAA,KAAA+sD,QACA/sD,KAAA0oC,qBAAA1oC,KAAA+sD,QAGA/sD,KAAA+sD,OAAA/sD,KAAAuoC,sBAAA,WACA,IAAApR,EAEAzoC,EAAA+4B,EAAA2b,QAAA10C,WAEA,GAAA+4B,EAAA2b,QAAA+mB,aAAA1iC,EAAA2b,QAAA+mB,YAAAyB,SAAA,CACA,IAAAoB,EAAAvlC,EAAA2b,QAAA+mB,YAAA6C,aAEAC,EAAAD,EAAAV,EAAAU,EACA71B,GAAA81B,EAAA,UAAAxE,GAAAwE,EAAAD,QAEA71B,EAAAsxB,GAAAU,EAAAz6D,GAGA+4B,EAAAg8B,OAAA4I,EAAAC,EAAAn1B,GAEA5oB,GACAA,OAKA69C,EA9HA,CA+HEnpB,IAEFA,GAAS0F,kBAAA,cAAAyjB,IAST,IAAAc,GAEA,SAAAxf,GAGA,SAAAwf,IACA,OAAAxf,EAAAj1C,MAAAuH,KAAA+P,YAAA/P,KAHEkzB,EAAcg6B,EAAAxf,GAMhB,IAAA1mB,EAAAkmC,EAAA52D,UAuCA,OA/BA0wB,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,qCAEAgW,cAAA,UAgBAtnB,EAAAy8B,OAAA,SAAA4I,EAAAC,GACA,IAAAa,EAAAntD,KAAA0kC,SAAA,eAEA,GAAAyoB,EAAA,CAIA,IAAAhE,EAAAnpD,KAAAojC,QAAAomB,YAAAxpD,KAAAojC,QAAAqmB,WAAArR,YAAAp4C,KAAAojC,QAAAgV,cACA+U,EAAAL,WAAAT,EAAAC,EAAAnD,KAGA+D,EA9CA,CA+CEjqB,IASFiqB,GAAA52D,UAAAgtC,UACAppC,aAGAwvC,IAAAE,IACAsjB,GAAA52D,UAAAgtC,SAAAppC,SAAAvO,KAAA,eAGAs3C,GAAS0F,kBAAA,kBAAAukB,IAWT,IAAAE,GAEA,SAAA1f,GAYA,SAAA0f,EAAA3tB,EAAAzhC,GACA,IAAAypB,EAIA,OAFAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACAyjD,OAAArjB,GAAA3vB,GAAiCqjB,EAAuBA,EAAsBrM,MAAAg8B,QAAA,IAC9Eh8B,EAhBEyL,EAAck6B,EAAA1f,GA0BhB,IAAA1mB,EAAAomC,EAAA92D,UA6BA,OA3BA0wB,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,uBAgBAtR,EAAAy8B,OAAA,SAAA4I,EAAAC,GACA,IAAApkC,EAAAloB,KAEAmpD,EAAAmD,EAAAtsD,KAAAojC,QAAA10C,WACAsR,KAAA0kC,SAAA,eAAAooB,WAAAT,EAAAC,EAAAnD,EAAA,WACAjhC,EAAAub,IAAA3D,MAAAzyB,KAAAg/C,EAAAhiE,MAAAiiE,EAAA,QAIAc,EAxDA,CAyDEnqB,IASFmqB,GAAA92D,UAAAgtC,UACAppC,UAAA,gBAEA+oC,GAAS0F,kBAAA,mBAAAykB,IAET,IAYIC,GAEJ,SAAAC,GAYA,SAAAC,EAAA9tB,EAAAzhC,GACA,IAAAypB,EAMA,OAJAA,EAAA6lC,EAAA92D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAwtD,oBAEA/lC,EAlBEyL,EAAcq6B,EAAAD,GA2BhB,IAAAtmC,EAAAumC,EAAAj3D,UAwYA,OAtYA0wB,EAAAwmC,kBAAA,WACAxtD,KAAAyjD,OAAArjB,GAAA3vB,GAAAzQ,UAAAyjD,QAzCA,IA0CAzjD,KAAAiB,GAAAjB,KAAAojC,QAAA,aAAApjC,KAAAyjD,QACAzjD,KAAAiB,GAAAjB,KAAAojC,QAAA,QAAApjC,KAAAmoD,aACAnoD,KAAAiB,GAAAjB,KAAAojC,QAAA,iBAAApjC,KAAAyjD,QAEAzjD,KAAAojC,QAAA+mB,aACAnqD,KAAAiB,GAAAjB,KAAAojC,QAAA+mB,YAAA,iBAAAnqD,KAAAyjD,QAKAzjD,KAAAytD,eAAA,KACAztD,KAAAiB,GAAAjB,KAAAojC,SAAA,WAAApjC,KAAA0tD,iBACA1tD,KAAAiB,GAAAjB,KAAAojC,SAAA,2BAAApjC,KAAA2tD,kBAGA,WAAoBl3B,EAAAh9B,GAAQ,oBAAyBg9B,EAAAh9B,GACrDuG,KAAAiB,GAAcw1B,EAAAh9B,EAAQ,mBAAAuG,KAAA4tD,oBAItB5mC,EAAA4mC,kBAAA,SAAA1vD,GACQu4B,EAAAh9B,EAAQq7C,OAChB90C,KAAA2tD,iBAAAzvD,IAEA8B,KAAA0tD,kBAEA1tD,KAAAuoC,sBAAAvoC,KAAAyjD,UAIAz8B,EAAA0mC,gBAAA,WACA,IAAAxlC,EAAAloB,KAEAA,KAAAoa,cAAApa,KAAAytD,gBACAztD,KAAAytD,eAAAztD,KAAAma,YAAA,WACA+N,EAAAqgB,sBAAArgB,EAAAu7B,SA7EA,KAiFAz8B,EAAA2mC,iBAAA,SAAAzvD,GACA8B,KAAAojC,QAAA+mB,aAAAnqD,KAAAojC,QAAA+mB,YAAAyB,UAAA,UAAA1tD,EAAAhJ,MAIA8K,KAAAoa,cAAApa,KAAAytD,iBAUAzmC,EAAAgQ,SAAA,WACA,OAAAs2B,EAAAh3D,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,wBAEAiW,aAAAvuC,KAAAgkC,SAAA,mBAiBAhd,EAAA6mC,QAAA,SAAAzV,EAAA8T,GACA,IAAA/B,EAAAnqD,KAAAojC,QAAA+mB,YACAz7D,EAAAsR,KAAAojC,QAAA10C,WAEAy7D,KAAAyB,WACAl9D,EAAAsR,KAAAojC,QAAA+mB,YAAA2D,mBAIA9tD,KAAAyjC,IAAAjM,aAAA,qBAAA00B,GAAAj+C,QAAA,IAEAjO,KAAAyjC,IAAAjM,aAAA,iBAAAx3B,KAAAgkC,SAAA,qDAA4GykB,GAAArQ,EAAA1pD,GAAA+5D,GAAA/5D,MAAA,eAE5GsR,KAAAyqD,KACAzqD,KAAAyqD,IAAAhH,OAAAt2C,GAAAnN,KAAAyjC,KAAAyoB,IAgBAllC,EAAAy8B,OAAA,SAAA3jD,GAGA,UAAAE,KAAA8M,KAAAihD,aAAA,CAIA,IAAA7B,EAAAoB,EAAAh3D,UAAAmtD,OAAAjtD,KAAAwJ,MAGA,OADAA,KAAA6tD,QAAA7tD,KAAAguD,kBAAA9B,GACAA,IAaAllC,EAAAgnC,gBAAA,WACA,OAAAhuD,KAAAojC,QAAAomB,YAAAxpD,KAAAojC,QAAAqmB,WAAArR,YAAAp4C,KAAAojC,QAAAgV,eAaApxB,EAAAmhC,YAAA,SAAAroD,GACAE,KAAA6tD,QAAA7tD,KAAAojC,QAAA10C,WAAA,IAUAs4B,EAAAmkC,WAAA,WACA,IACAe,EADA9T,EAAAp4C,KAAAguD,kBAEA7D,EAAAnqD,KAAAojC,QAAA+mB,YAYA,OAVAA,KAAAyB,UACAM,GAAA9T,EAAA+R,EAAA8D,iBAAA9D,EAAA6C,aAEA7C,EAAAE,eACA6B,EAAA,IAGAA,EAAA9T,EAAAp4C,KAAAojC,QAAA10C,WAGAw9D,GAAA,IAAAA,GAAA,GAYAllC,EAAAygC,gBAAA,SAAA3nD,GACAw7B,GAAAx7B,KAKAA,EAAAu9B,kBACAr9B,KAAAojC,QAAAomB,WAAA,GACAxpD,KAAAkuD,iBAAAluD,KAAAojC,QAAA0L,SACA9uC,KAAAojC,QAAA4L,QAEAse,EAAAh3D,UAAAmxD,gBAAAjxD,KAAAwJ,KAAAF,KAYAknB,EAAA6jC,gBAAA,SAAA/qD,GACA,GAAAw7B,GAAAx7B,GAAA,CAIA,IAAAquD,EACAC,EAAApuD,KAAAqrD,kBAAAvrD,GACAqqD,EAAAnqD,KAAAojC,QAAA+mB,YAEA,GAAAA,KAAAyB,SAMK,CACL,IAAAqC,EAAA9D,EAAA8D,gBACApC,EAAA1B,EAAA2D,kBAgBA,IAfAK,EAAAF,EAAAG,EAAAjE,EAAA6C,eAEAnB,IACAsC,EAAAtC,GAKAsC,GAAAF,IACAE,EAAAF,EAAA,IAMAE,IAAAx1D,IACA,YAxBAw1D,EAAAC,EAAApuD,KAAAojC,QAAA10C,cAEAsR,KAAAojC,QAAA10C,aACAy/D,GAAA,IA0BAnuD,KAAAojC,QAAAgV,YAAA+V,KAGAnnC,EAAAoO,OAAA,WACAk4B,EAAAh3D,UAAA8+B,OAAA5+B,KAAAwJ,MAEA,IAAAquD,EAAAruD,KAAA0kC,SAAA,oBAEA2pB,GAIAA,EAAApoB,QAGAjf,EAAAmO,QAAA,WACAm4B,EAAAh3D,UAAA6+B,QAAA3+B,KAAAwJ,MAEA,IAAAquD,EAAAruD,KAAA0kC,SAAA,oBAEA2pB,GAIAA,EAAAnoB,QAYAlf,EAAA8jC,cAAA,SAAAhrD,GACAwtD,EAAAh3D,UAAAw0D,cAAAt0D,KAAAwJ,KAAAF,GAGAA,GACAA,EAAAu9B,kBAGAr9B,KAAAojC,QAAAomB,WAAA,GASAxpD,KAAAojC,QAAAhf,SACAlvB,KAAA,aACA0L,OAAAZ,KACA47C,mBAAA,IAGA57C,KAAAkuD,iBACAzhB,GAAAzsC,KAAAojC,QAAAD,SAQAnc,EAAAukC,YAAA,WACAvrD,KAAAojC,QAAAgV,YAAAp4C,KAAAojC,QAAAgV,cArWA,IA4WApxB,EAAAskC,SAAA,WACAtrD,KAAAojC,QAAAgV,YAAAp4C,KAAAojC,QAAAgV,cA7WA,IAyXApxB,EAAAsnC,aAAA,SAAAxuD,GACAE,KAAAojC,QAAA0L,SACA9uC,KAAAojC,QAAAD,OAEAnjC,KAAAojC,QAAA4L,SAqBAhoB,EAAAogB,cAAA,SAAAtnC,GACA,GAAQswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,UAA+BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,SACrDA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAsuD,aAAAxuD,QACK,GAAUswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,QACtBA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAojC,QAAAgV,YAAA,QACK,GAAUhI,EAAA32C,EAAO42C,WAAAvwC,EAAA,OACtBA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAojC,QAAAgV,YAAAp4C,KAAAojC,QAAA10C,iBACK,aAAAsT,KAAyBouC,IAAOtwC,IAAA,CACrCA,EAAAmC,iBACAnC,EAAAu9B,kBACA,IAAAkxB,EAAiE,IAAvCne,EAAA32C,EAAO+0D,MAAOpe,IAAOtwC,IAAWswC,EAAA32C,EAAO+0D,MAAA,QACjExuD,KAAAojC,QAAAgV,YAAAp4C,KAAAojC,QAAA10C,WAAA6/D,QACene,EAAA32C,EAAO42C,WAAAvwC,EAAA,SACtBA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAojC,QAAAgV,YAAAp4C,KAAAojC,QAAAgV,cAAAqW,KACere,EAAA32C,EAAO42C,WAAAvwC,EAAA,SACtBA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAojC,QAAAgV,YAAAp4C,KAAAojC,QAAAgV,cAAAqW,KAGAnB,EAAAh3D,UAAA8wC,cAAA5wC,KAAAwJ,KAAAF,IAIAytD,EApaA,CAqaEhD,IASF8C,GAAO/2D,UAAAgtC,UACPppC,UAAA,qCACAwwD,QAAA,mBAGAhhB,IAAAE,IACEyjB,GAAO/2D,UAAAgtC,SAAAppC,SAAAmP,OAAA,wBAGT45B,GAAS0F,kBAAA,UAA8B0kB,IASvC,IAAAqB,GAEA,SAAAhhB,GAYA,SAAAghB,EAAAjvB,EAAAzhC,GACA,IAAAypB,EAQA,OANAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACA6qD,gBAAAzqB,GAAA3vB,GAA0CqjB,EAAuBA,EAAsBrM,MAAAojC,iBAAA,IACvFpjC,EAAAknC,yBAAAvuB,GAAA3vB,GAAmDqjB,EAAuBA,EAAsBrM,MAAAmnC,iBAAA,IAEhGnnC,EAAA2N,SAEA3N,EApBEyL,EAAcw7B,EAAAhhB,GA8BhB,IAAA1mB,EAAA0nC,EAAAp4D,UAwKA,OAtKA0wB,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,sCAcAtR,EAAA6jC,gBAAA,SAAA/qD,GACA,IAAA+uD,EAAA7uD,KAAA0kC,SAAA,WAEA,GAAAmqB,EAAA,CACA,IAAAR,EAAAQ,EAAAnqB,SAAA,oBACAoqB,EAAAD,EAAA/hD,KACAu/C,EAAAl/C,GAAA2hD,GACAxC,EAAAjyB,GAAAy0B,EAAAhvD,GAAAtC,EAIA8uD,EAAA,EACAA,EAAA,EACOA,EAAA,IACPA,EAAA,GAGA+B,GACAA,EAAA5K,OAAA4I,EAAAC,KA0BAtlC,EAAA4nC,gBAAA,SAAA9uD,GACA,IAAA+uD,EAAA7uD,KAAA0kC,SAAA,WAEAmqB,GACAA,EAAAhE,gBAAA/qD,IAWAknB,EAAAirB,QAAA,WACA,OAAAjyC,KAAAqjD,UAOAr8B,EAAAmO,QAAA,WACAn1B,KAAA9F,WAAAnB,QAAA,SAAAsI,GACA,OAAAA,EAAA8zB,SAAA9zB,EAAA8zB,YAGAn1B,KAAAiyC,YAIAjyC,KAAAknB,KAAA,0BAAAlnB,KAAAynD,iBACAznD,KAAAknB,IAAAlnB,KAAAyjC,IAAA,YAAAzjC,KAAA6qD,iBACA7qD,KAAA8qD,gBACA9qD,KAAAu4B,SAAA,YACAv4B,KAAAqjD,UAAA,IAOAr8B,EAAAoO,OAAA,WACAp1B,KAAA9F,WAAAnB,QAAA,SAAAsI,GACA,OAAAA,EAAA+zB,QAAA/zB,EAAA+zB,WAGAp1B,KAAAiyC,YAIAjyC,KAAAiB,IAAA,0BAAAjB,KAAAynD,iBACAznD,KAAAiB,GAAAjB,KAAAyjC,IAAA,YAAAzjC,KAAA6qD,iBACA7qD,KAAA04B,YAAA,YACA14B,KAAAqjD,UAAA,IAaAr8B,EAAAygC,gBAAA,SAAA3nD,GACA,IAAA49B,EAAA19B,KAAAyjC,IAAAjF,cACAqwB,EAAA7uD,KAAA0kC,SAAA,WAEAmqB,GACAA,EAAApH,gBAAA3nD,GAGAE,KAAAiB,GAAAy8B,EAAA,YAAA19B,KAAA2uD,0BACA3uD,KAAAiB,GAAAy8B,EAAA,YAAA19B,KAAA2uD,0BACA3uD,KAAAiB,GAAAy8B,EAAA,UAAA19B,KAAA8qD,eACA9qD,KAAAiB,GAAAy8B,EAAA,WAAA19B,KAAA8qD,gBAaA9jC,EAAA8jC,cAAA,SAAAhrD,GACA,IAAA49B,EAAA19B,KAAAyjC,IAAAjF,cACAqwB,EAAA7uD,KAAA0kC,SAAA,WAEAmqB,GACAA,EAAA/D,cAAAhrD,GAGAE,KAAAknB,IAAAwW,EAAA,YAAA19B,KAAA2uD,0BACA3uD,KAAAknB,IAAAwW,EAAA,YAAA19B,KAAA2uD,0BACA3uD,KAAAknB,IAAAwW,EAAA,UAAA19B,KAAA8qD,eACA9qD,KAAAknB,IAAAwW,EAAA,WAAA19B,KAAA8qD,gBAGA4D,EAvMA,CAwMEzrB,IASFyrB,GAAAp4D,UAAAgtC,UACAppC,UAAA,YAEA+oC,GAAS0F,kBAAA,kBAAA+lB,IAQT,IAAIK,GAEJ,SAAAxH,GAYA,SAAAyH,EAAAvvB,EAAAzhC,GACA,IAAAypB,EAUA,OARAA,EAAA8/B,EAAA/wD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAiB,GAAAw+B,EAAA,mBAAAhY,EAAAwnC,yBAEgB,IAARx4B,EAAAh9B,EAAQgyC,GAAAyjB,oBAChBznC,EAAA0N,UAGA1N,EAtBEyL,EAAc87B,EAAAzH,GAgChB,IAAAvgC,EAAAgoC,EAAA14D,UA4CA,OA1CA0wB,EAAA4e,cAAA,WACA,gCAAA2hB,EAAAjxD,UAAAsvC,cAAApvC,KAAAwJ,OAaAgnB,EAAAioC,uBAAA,SAAAnvD,GACAE,KAAAojC,QAAA+rB,eACAnvD,KAAAyvC,YAAA,kBAEAzvC,KAAAyvC,YAAA,eAgBAzoB,EAAAs8B,YAAA,SAAAxjD,GACAE,KAAAojC,QAAA+rB,eAGAnvD,KAAAojC,QAAAgsB,iBAFApvD,KAAAojC,QAAAisB,qBAMAL,EA7EA,CA8EE5H,IASF2H,GAAgBz4D,UAAA4sD,aAAA,aAChBjgB,GAAS0F,kBAAA,mBAAuComB,IAchD,IAAAO,GAAA,SAAA11C,EAAA6lB,GAEAA,EAAA4X,QAAA5X,EAAA4X,MAAA+G,uBACAxkC,EAAA2e,SAAA,cAGA3e,EAAA3Y,GAAAw+B,EAAA,uBACAA,EAAA4X,MAAA+G,sBAGAxkC,EAAA8e,YAAA,cAFA9e,EAAA2e,SAAA,iBAaAg3B,GAEA,SAAA7hB,GAGA,SAAA6hB,IACA,OAAA7hB,EAAAj1C,MAAAuH,KAAA+P,YAAA/P,KAkBA,OArBEkzB,EAAcq8B,EAAA7hB,GAMhB6hB,EAAAj5D,UAQA0gC,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,mBACAkd,UAAA,4CAIA+Z,EAtBA,CAuBEtsB,IAEFA,GAAS0F,kBAAA,cAAA4mB,IAQT,IAAAC,GAEA,SAAAlC,GAYA,SAAAkC,EAAA/vB,EAAAzhC,GACA,IAAAypB,EAWA,OATAA,EAAA6lC,EAAA92D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAiB,GAAA,eAAAwmB,EAAAgoC,mBAEAhoC,EAAAxmB,GAAAw+B,EAAA,eAAAhY,EAAAioC,sBAEAjwB,EAAAtvB,MAAA,WACA,OAAAsX,EAAAioC,yBAEAjoC,EAvBEyL,EAAcs8B,EAAAlC,GAiChB,IAAAtmC,EAAAwoC,EAAAl5D,UAsIA,OApIA0wB,EAAAgQ,SAAA,WACA,OAAAs2B,EAAAh3D,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,kCAEAiW,aAAAvuC,KAAAgkC,SAAA,gBACAif,YAAA,YAaAj8B,EAAAygC,gBAAA,SAAA3nD,GACAw7B,GAAAx7B,IAIAwtD,EAAAh3D,UAAAmxD,gBAAAjxD,KAAAwJ,KAAAF,IAYAknB,EAAA6jC,gBAAA,SAAA/qD,GACAw7B,GAAAx7B,KAIAE,KAAA2vD,aACA3vD,KAAAojC,QAAA3zC,OAAAuQ,KAAAqrD,kBAAAvrD,MAOAknB,EAAA2oC,WAAA,WACA3vD,KAAAojC,QAAAwsB,SACA5vD,KAAAojC,QAAAwsB,OAAA,IAWA5oC,EAAAmkC,WAAA,WACA,OAAAnrD,KAAAojC,QAAAwsB,QACA,EAGA5vD,KAAAojC,QAAA3zC,UAOAu3B,EAAAukC,YAAA,WACAvrD,KAAA2vD,aACA3vD,KAAAojC,QAAA3zC,OAAAuQ,KAAAojC,QAAA3zC,SAAA,KAOAu3B,EAAAskC,SAAA,WACAtrD,KAAA2vD,aACA3vD,KAAAojC,QAAA3zC,OAAAuQ,KAAAojC,QAAA3zC,SAAA,KAYAu3B,EAAA0oC,qBAAA,SAAA5vD,GACA,IAAA+vD,EAAA7vD,KAAAojC,QAAAwsB,QAAA,EAAA5vD,KAAA8vD,sBACA9vD,KAAAyjC,IAAAjM,aAAA,gBAAAq4B,GACA7vD,KAAAyjC,IAAAjM,aAAA,iBAAAq4B,EAAA,MASA7oC,EAAA8oC,oBAAA,WACA,OAAA19D,KAAAgoC,MAAA,IAAAp6B,KAAAojC,QAAA3zC,WAYAu3B,EAAAyoC,kBAAA,WACA,IAAAvnC,EAAAloB,KAEA+vD,EAAA/vD,KAAAojC,QAAA3zC,SACAuQ,KAAA2+B,IAAA,4BACA,IAAAzW,EAAAkb,QAAA3zC,UACAy4B,EAAAkb,QAAA4sB,YAAAD,MAKAP,EAxKA,CAyKEjF,IASFiF,GAAAl5D,UAAAgtC,UACAppC,UAAA,eACAwwD,QAAA,eAQA8E,GAAAl5D,UAAAs0D,YAAA,eACA3nB,GAAS0F,kBAAA,YAAA6mB,IAQT,IAAAS,GAEA,SAAAviB,GAYA,SAAAuiB,EAAAxwB,EAAAzhC,GACA,IAAAypB,EAyCA,YAvCA,IAAAzpB,IACAA,MAGAA,EAAA2sD,SAAA3sD,EAAA2sD,WAAA,QAGA,IAAA3sD,EAAAkyD,WAAAl6B,GAAAh4B,EAAAkyD,cACAlyD,EAAAkyD,UAAAlyD,EAAAkyD,cACAlyD,EAAAkyD,UAAAvF,SAAA3sD,EAAA2sD,UAGAljC,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,KAEAsvD,GAAuBx7B,EAAuBA,EAAsBrM,IAAAgY,GACpEhY,EAAA0oC,yBAAA/vB,GAAA3vB,GAAmDqjB,EAAuBA,EAAsBrM,MAAAojC,iBAAA,IAEhGpjC,EAAAxmB,GAAA,YAAAwmB,EAAAggC,iBAEAhgC,EAAAxmB,GAAA,aAAAwmB,EAAAggC,iBAIAhgC,EAAAxmB,GAAAwmB,EAAAyoC,WAAA,mCACAzoC,EAAAyoC,UAAA33B,SAAA,qBAEA9Q,EAAA8Q,SAAA,qBAEA9Q,EAAArD,QAAA,kBAGAqD,EAAAxmB,GAAAwmB,EAAAyoC,WAAA,oCACAzoC,EAAAyoC,UAAAx3B,YAAA,qBAEAjR,EAAAiR,YAAA,qBAEAjR,EAAArD,QAAA,oBAGAqD,EArDEyL,EAAc+8B,EAAAviB,GA+DhB,IAAA1mB,EAAAipC,EAAA35D,UAgEA,OA9DA0wB,EAAAgQ,SAAA,WACA,IAAAo5B,EAAA,wBAMA,OAJApwD,KAAAsjC,SAAAqnB,WACAyF,EAAA,uBAGA1iB,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,kCAAA83B,KAcAppC,EAAAygC,gBAAA,SAAA3nD,GACA,IAAA49B,EAAA19B,KAAAyjC,IAAAjF,cACAx+B,KAAAiB,GAAAy8B,EAAA,YAAA19B,KAAAmwD,0BACAnwD,KAAAiB,GAAAy8B,EAAA,YAAA19B,KAAAmwD,0BACAnwD,KAAAiB,GAAAy8B,EAAA,UAAA19B,KAAA8qD,eACA9qD,KAAAiB,GAAAy8B,EAAA,WAAA19B,KAAA8qD,gBAaA9jC,EAAA8jC,cAAA,SAAAhrD,GACA,IAAA49B,EAAA19B,KAAAyjC,IAAAjF,cACAx+B,KAAAknB,IAAAwW,EAAA,YAAA19B,KAAAmwD,0BACAnwD,KAAAknB,IAAAwW,EAAA,YAAA19B,KAAAmwD,0BACAnwD,KAAAknB,IAAAwW,EAAA,UAAA19B,KAAA8qD,eACA9qD,KAAAknB,IAAAwW,EAAA,WAAA19B,KAAA8qD,gBAaA9jC,EAAA6jC,gBAAA,SAAA/qD,GACAE,KAAAkwD,UAAArF,gBAAA/qD,IAGAmwD,EAhIA,CAiIEhtB,IASFgtB,GAAA35D,UAAAgtC,UACAppC,UAAA,cAEA+oC,GAAS0F,kBAAA,gBAAAsnB,IAcT,IAAAI,GAAA,SAAAz2C,EAAA6lB,GAEAA,EAAA4X,QAAA5X,EAAA4X,MAAAgH,qBACAzkC,EAAA2e,SAAA,cAGA3e,EAAA3Y,GAAAw+B,EAAA,uBACAA,EAAA4X,MAAAgH,oBAGAzkC,EAAA8e,YAAA,cAFA9e,EAAA2e,SAAA,iBAaI+3B,GAEJ,SAAA/I,GAYA,SAAAgJ,EAAA9wB,EAAAzhC,GACA,IAAAypB,EAQA,OANAA,EAAA8/B,EAAA/wD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,KAEAqwD,GAAqBv8B,EAAuBA,EAAsBrM,IAAAgY,GAElEhY,EAAAxmB,GAAAw+B,GAAA,4BAAAhY,EAAAg8B,QAEAh8B,EApBEyL,EAAcq9B,EAAAhJ,GA8BhB,IAAAvgC,EAAAupC,EAAAj6D,UAuGA,OArGA0wB,EAAA4e,cAAA,WACA,0BAAA2hB,EAAAjxD,UAAAsvC,cAAApvC,KAAAwJ,OAeAgnB,EAAAs8B,YAAA,SAAAxjD,GACA,IAAA0wD,EAAAxwD,KAAAojC,QAAA3zC,SACAghE,EAAAzwD,KAAAojC,QAAA4sB,cAEA,OAAAQ,EAAA,CACA,IAAAE,EAAAD,EAAA,MAAAA,EACAzwD,KAAAojC,QAAA3zC,OAAAihE,GACA1wD,KAAAojC,QAAAwsB,OAAA,QAEA5vD,KAAAojC,QAAAwsB,OAAA5vD,KAAAojC,QAAAwsB,UAgBA5oC,EAAAy8B,OAAA,SAAA3jD,GACAE,KAAA2wD,cACA3wD,KAAA4wD,sBAeA5pC,EAAA2pC,YAAA,WACA,IAAAH,EAAAxwD,KAAAojC,QAAA3zC,SACA2kC,EAAA,EAIAsV,IAAA1pC,KAAAojC,QAAAiU,OAAAr3C,KAAAojC,QAAAiU,MAAA5T,KACAzjC,KAAAojC,QAAAwsB,MAAA5vD,KAAAojC,QAAAiU,MAAA5T,IAAAmsB,OAGA,IAAAY,GAAAxwD,KAAAojC,QAAAwsB,QACAx7B,EAAA,EACKo8B,EAAA,IACLp8B,EAAA,EACKo8B,EAAA,MACLp8B,EAAA,GAIA,QAAAnpC,EAAA,EAAmBA,EAAA,EAAOA,IAC1BytC,GAAA14B,KAAAyjC,IAAA,WAAAx4C,GAGAstC,GAAAv4B,KAAAyjC,IAAA,WAAArP,IAWApN,EAAA4pC,mBAAA,WACA,IACAlnC,EADA1pB,KAAAojC,QAAAwsB,SAAA,IAAA5vD,KAAAojC,QAAA3zC,SACA,gBAEAuQ,KAAAyvC,gBAAA/lB,GACA1pB,KAAAyvC,YAAA/lB,IAIA6mC,EAtIA,CAuIEnJ,IASFkJ,GAAUh6D,UAAA4sD,aAAA,OACVjgB,GAAS0F,kBAAA,aAAiC2nB,IAS1C,IAAAO,GAEA,SAAAnjB,GAYA,SAAAmjB,EAAApxB,EAAAzhC,GACA,IAAAypB,EA6BA,YA3BA,IAAAzpB,IACAA,WAGA,IAAAA,EAAA8yD,OACA9yD,EAAA8yD,OAAA9yD,EAAA8yD,OAEA9yD,EAAA8yD,QAAA,QAKA,IAAA9yD,EAAA+yD,eAAA/6B,GAAAh4B,EAAA+yD,kBACA/yD,EAAA+yD,cAAA/yD,EAAA+yD,kBACA/yD,EAAA+yD,cAAApG,UAAA3sD,EAAA8yD,SAGArpC,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAiB,GAAAw+B,GAAA,aAAAhY,EAAAupC,mBAIAvpC,EAAAxmB,GAAAwmB,EAAAspC,eAAA,gBAAAtpC,EAAAwpC,eAEAxpC,EAAAxmB,GAAAwmB,EAAAspC,eAAA,kBAAAtpC,EAAAypC,iBAEAzpC,EAzCEyL,EAAc29B,EAAAnjB,GAmDhB,IAAA1mB,EAAA6pC,EAAAv6D,UA0DA,OAxDA0wB,EAAAiqC,cAAA,WACAjxD,KAAAu4B,SAAA,sBAUAvR,EAAAkqC,gBAAA,WACAlxD,KAAA04B,YAAA,sBAWA1R,EAAAgqC,kBAAA,WAGAhxD,KAAA+wD,cAAA94B,SAAA,eAAAj4B,KAAAmxD,WAAAl5B,SAAA,eACAj4B,KAAAu4B,SAAA,cAKAv4B,KAAA+wD,cAAA94B,SAAA,gBAAAj4B,KAAAmxD,WAAAl5B,SAAA,eACAj4B,KAAAu4B,SAAA,yBAWAvR,EAAAgQ,SAAA,WACA,IAAAo5B,EAAA,8BAMA,OAJApwD,KAAAsjC,SAAAwtB,SACAV,EAAA,6BAGA1iB,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,gCAAA83B,KAIAS,EA9GA,CA+GE5tB,IASF4tB,GAAAv6D,UAAAgtC,UACAppC,UAAA,+BAEA+oC,GAAS0F,kBAAA,cAAAkoB,IAST,IAAIO,GAEJ,SAAA1jB,GAaA,SAAA2jB,EAAA5xB,EAAAzhC,GACA,IAAAypB,EAeA,OAbAA,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,KAEAhC,IACAypB,EAAA6pC,YAAAtzD,EAAAuzD,YAGA9pC,EAAA+pC,eAAA,EAEA/pC,EAAAxmB,GAAA,UAAAwmB,EAAA2f,eAGA3f,EAAAgqC,iBAAAhhD,GAAkCqjB,EAAuBA,EAAsBrM,MAAAiqC,YAC/EjqC,EAAAkqC,qBAAAlhD,GAAsCqjB,EAAuBA,EAAsBrM,MAAAmqC,gBACnFnqC,EA5BEyL,EAAcm+B,EAAA3jB,GAuChB,IAAA1mB,EAAAqqC,EAAA/6D,UAgPA,OA9OA0wB,EAAA6qC,wBAAA,SAAAz2D,GACAA,aAA+B6nC,KAI/BjjC,KAAAiB,GAAA7F,EAAA,OAAA4E,KAAAyxD,kBACAzxD,KAAAiB,GAAA7F,GAAA,eAAA4E,KAAA2xD,wBAWA3qC,EAAA8qC,2BAAA,SAAA12D,GACAA,aAA+B6nC,KAI/BjjC,KAAAknB,IAAA9rB,EAAA,OAAA4E,KAAAyxD,kBACAzxD,KAAAknB,IAAA9rB,GAAA,eAAA4E,KAAA2xD,wBAaA3qC,EAAAiU,YAAA,SAAA7/B,GACA,iBAAAA,IACAA,EAAA4E,KAAA0kC,SAAAtpC,IAGA4E,KAAA8xD,2BAAA12D,GAEAsyC,EAAAp3C,UAAA2kC,YAAAzkC,KAAAwJ,KAAA5E,IAWA4rB,EAAA+qC,QAAA,SAAA32D,GACA,IAAA42D,EAAAhyD,KAAA2kC,SAAAvpC,GAEA42D,GACAhyD,KAAA6xD,wBAAAG,IAWAhrC,EAAAgQ,SAAA,WACA,IAAAi7B,EAAAjyD,KAAAsjC,SAAA2uB,eAAA,KACAjyD,KAAAwkC,WAAAxN,GAAAi7B,GACA35B,UAAA,qBAEAt4B,KAAAwkC,WAAAhN,aAAA,eAEA,IAAA1qB,EAAA4gC,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAL,OAAAK,KAAAwkC,WACAlM,UAAA,aAUA,OAPAxrB,EAAAkrB,YAAAh4B,KAAAwkC,YAGAvjC,GAAA6L,EAAA,iBAAAhN,GACAA,EAAAmC,iBACAnC,EAAAy9B,6BAEAzwB,GAGAka,EAAAI,QAAA,WACApnB,KAAAwkC,WAAA,KACAxkC,KAAAyxD,iBAAA,KACAzxD,KAAA2xD,qBAAA,KAEAjkB,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAYAgnB,EAAA0qC,WAAA,SAAA5xD,GACA,IAAAm9B,EAAAn9B,EAAAm9B,eAA+CxG,EAAAh9B,EAAQy2C,cAEvD,IAAAlwC,KAAA9F,WAAAqrC,KAAA,SAAArN,GACA,OAAAA,EAAAprB,OAAAmwB,IACK,CACL,IAAAi1B,EAAAlyD,KAAAsxD,YAEAY,KAAAC,gBAAAl1B,IAAAi1B,EAAAplD,KAAAgrB,YACAo6B,EAAAE,kBAcAprC,EAAA4qC,eAAA,SAAA9xD,GAEA,GAAAE,KAAAsxD,YAAA,CACAtxD,KAAAsxD,YAAAc,gBACA,IAAAC,EAAAryD,KAAA9F,WAEA,IAAAvE,MAAAyH,QAAAi1D,GACA,OAGA,IAAAC,EAAAD,EAAAp8D,OAAA,SAAAmF,GACA,OAAAA,EAAA0R,OAAAhN,EAAAc,SACO,GAEP,IAAA0xD,EACA,OAKA,4BAAAA,EAAA3kE,QACAqS,KAAAsxD,YAAA93B,UAcAxS,EAAAogB,cAAA,SAAAtnC,GAEQswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,SAA8BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,SACpDA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAurD,gBACenb,EAAA32C,EAAO42C,WAAAvwC,EAAA,UAA+BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,SAC5DA,EAAAmC,iBACAnC,EAAAu9B,kBACAr9B,KAAAsrD,aAQAtkC,EAAAukC,YAAA,WACA,IAAAgH,EAAA,OAEAt2D,IAAA+D,KAAAwxD,gBACAe,EAAAvyD,KAAAwxD,cAAA,GAGAxxD,KAAAw5B,MAAA+4B,IAOAvrC,EAAAskC,SAAA,WACA,IAAAiH,EAAA,OAEAt2D,IAAA+D,KAAAwxD,gBACAe,EAAAvyD,KAAAwxD,cAAA,GAGAxxD,KAAAw5B,MAAA+4B,IAUAvrC,EAAAwS,MAAA,SAAA/e,QACA,IAAAA,IACAA,EAAA,GAGA,IAAAvgB,EAAA8F,KAAA9F,WAAA3D,QACA2D,EAAAtN,QAAAsN,EAAA,GAAAo+B,WAAA,iBAAAt2B,KAAA9H,EAAA,GAAAo+B,YAGAp+B,EAAAiD,QAGAjD,EAAAtN,OAAA,IACA6tB,EAAA,EACAA,EAAA,EACOA,GAAAvgB,EAAAtN,SACP6tB,EAAAvgB,EAAAtN,OAAA,GAGAoT,KAAAwxD,cAAA/2C,EACAvgB,EAAAugB,GAAAgpB,IAAAjK,UAIA63B,EAxRA,CAyREpuB,IAEFA,GAAS0F,kBAAA,OAA2ByoB,IAQpC,IAAIoB,GAEJ,SAAA9kB,GAYA,SAAA+kB,EAAAhzB,EAAAzhC,GACA,IAAAypB,OAEA,IAAAzpB,IACAA,OAGAypB,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACAsxD,YAAA,IAA4BlK,GAAM3nB,EAAAzhC,GAElCypB,EAAA6pC,YAAA7hB,YAAAhoB,EAAAy7B,cAEAz7B,EAAA6pC,YAAA7tB,IAAAjM,aAAA,wBAGA,IAAAk7B,EAAsBtL,GAAM9wD,UAAAsvC,gBAuB5B,OAtBAne,EAAA6pC,YAAA7tB,IAAAnL,UAAA7Q,EAAAme,gBAAA,IAAA8sB,EAEAjrC,EAAA6pC,YAAA54B,YAAA,eAEAjR,EAAAkd,SAAAld,EAAA6pC,aAEA7pC,EAAAg8B,SAEAh8B,EAAA47B,UAAA,EAEA57B,EAAAxmB,GAAAwmB,EAAA6pC,YAAA,MAAA7pC,EAAA67B,aAEA77B,EAAAxmB,GAAAwmB,EAAA6pC,YAAA,QAAA7pC,EAAA67B,aAEA77B,EAAAxmB,GAAAwmB,EAAA6pC,YAAA,UAAA7pC,EAAA2f,eAEA3f,EAAAxmB,GAAAwmB,EAAA6pC,YAAA,wBACA7pC,EAAAkrC,KAAA1sB,SAGAxe,EAAAxmB,GAAA,UAAAwmB,EAAAmrC,sBAEAnrC,EAjDEyL,EAAcu/B,EAAA/kB,GAwDhB,IAAA1mB,EAAAyrC,EAAAn8D,UAkUA,OAhUA0wB,EAAAy8B,OAAA,WACA,IAAAkP,EAAA3yD,KAAA6yD,aAEA7yD,KAAA2yD,OACA3yD,KAAA2yD,KAAAvrC,UACApnB,KAAAi7B,YAAAj7B,KAAA2yD,OAGA3yD,KAAA2yD,OACA3yD,KAAA2kC,SAAAguB,GAQA3yD,KAAAmyD,gBAAA,EACAnyD,KAAAsxD,YAAA7tB,IAAAjM,aAAA,yBAEAx3B,KAAA8yD,OAAA9yD,KAAA8yD,MAAAlmE,QAAAoT,KAAA+yD,eACA/yD,KAAAkmC,OAEAlmC,KAAAimC,QAWAjf,EAAA6rC,WAAA,WACA,IAAAF,EAAA,IAAmBvB,GAAIpxD,KAAAojC,SACvBmuB,WAAAvxD,OAaA,GAFAA,KAAA+yD,eAAA,EAEA/yD,KAAAsjC,SAAA7a,MAAA,CACA,IAAAuqC,EAAAh8B,GAAA,MACAsB,UAAA,iBACAkd,UAAA1S,GAAA9iC,KAAAsjC,SAAA7a,OACA2lB,UAAA,IAEApuC,KAAA+yD,gBAAA,EACA,IAAAE,EAAA,IAA+BhwB,GAASjjC,KAAAojC,SACxCt2B,GAAAkmD,IAEAL,EAAAZ,QAAAkB,GAKA,GAFAjzD,KAAA8yD,MAAA9yD,KAAAkzD,cAEAlzD,KAAA8yD,MAEA,QAAA7nE,EAAA,EAAqBA,EAAA+U,KAAA8yD,MAAAlmE,OAAuB3B,IAC5C0nE,EAAAZ,QAAA/xD,KAAA8yD,MAAA7nE,IAIA,OAAA0nE,GASA3rC,EAAAksC,YAAA,aASAlsC,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAAt4B,KAAAmzD,6BAWAnsC,EAAAmsC,qBAAA,WACA,IAAAC,EAAA,kBAUA,OARA,IAAApzD,KAAAsjC,SAAAwtB,OACAsC,GAAA,UAEAA,GAAA,SAKA,mBAAAA,EAAA,IADsBhM,GAAM9wD,UAAAsvC,gBAC5B,IAAA8H,EAAAp3C,UAAAsvC,cAAApvC,KAAAwJ,OAUAgnB,EAAA4e,cAAA,WACA,IAAAwtB,EAAA,kBAQA,OANA,IAAApzD,KAAAsjC,SAAAwtB,OACAsC,GAAA,UAEAA,GAAA,SAGA,mBAAAA,EAAA,IAAA1lB,EAAAp3C,UAAAsvC,cAAApvC,KAAAwJ,OAkBAgnB,EAAAyoB,YAAA,SAAA/lB,EAAA5c,GAKA,YAJA,IAAAA,IACAA,EAAA9M,KAAAsxD,YAAAxkD,MAGA9M,KAAAsxD,YAAA7hB,YAAA/lB,EAAA5c,IAeAka,EAAAs8B,YAAA,SAAAxjD,GACAE,KAAAmyD,eACAnyD,KAAAoyD,gBAEApyD,KAAAqzD,eAQArsC,EAAAwS,MAAA,WACAx5B,KAAAsxD,YAAA93B,SAOAxS,EAAAmgB,KAAA,WACAnnC,KAAAsxD,YAAAnqB,QAaAngB,EAAAogB,cAAA,SAAAtnC,GAEQswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,QAA6BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,QACnDE,KAAAmyD,gBACAnyD,KAAAoyD,gBAIWhiB,EAAA32C,EAAO42C,WAAAvwC,EAAA,SAClBA,EAAAmC,iBAEAjC,KAAAsxD,YAAA93B,WAGe4W,EAAA32C,EAAO42C,WAAAvwC,EAAA,OAA4BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,WACzDE,KAAAmyD,iBACAryD,EAAAmC,iBACAjC,KAAAqzD,iBAcArsC,EAAAssC,sBAAA,SAAAxzD,GACAE,KAAA4yD,qBAAA9yD,IAaAknB,EAAA4rC,qBAAA,SAAA9yD,IAEQswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,QAA6BswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,UACnDE,KAAAmyD,gBACAnyD,KAAAoyD,gBAIWhiB,EAAA32C,EAAO42C,WAAAvwC,EAAA,SAClBA,EAAAmC,iBAEAjC,KAAAsxD,YAAA93B,WASAxS,EAAAqsC,YAAA,WACA,GAAArzD,KAAAqjD,SAAA,CAOA,GANArjD,KAAAmyD,gBAAA,EACAnyD,KAAA2yD,KAAA1sB,OACAjmC,KAAA2yD,KAAAxsB,cACAnmC,KAAAsxD,YAAA7tB,IAAAjM,aAAA,wBAGAkS,IAAA9S,KAEA,OAGA52B,KAAA2yD,KAAAn5B,UAQAxS,EAAAorC,cAAA,WACApyD,KAAAqjD,WACArjD,KAAAmyD,gBAAA,EACAnyD,KAAA2yD,KAAAvsB,gBACApmC,KAAA2yD,KAAAzsB,OACAlmC,KAAAsxD,YAAA7tB,IAAAjM,aAAA,2BAQAxQ,EAAAmO,QAAA,WACAn1B,KAAAoyD,gBACApyD,KAAAqjD,UAAA,EACArjD,KAAAu4B,SAAA,gBACAv4B,KAAAsxD,YAAAn8B,WAOAnO,EAAAoO,OAAA,WACAp1B,KAAAqjD,UAAA,EACArjD,KAAA04B,YAAA,gBACA14B,KAAAsxD,YAAAl8B,UAGAq9B,EA3XA,CA4XExvB,IAEFA,GAAS0F,kBAAA,aAAiC6pB,IAQ1C,IAAAe,GAEA,SAAAC,GAYA,SAAAD,EAAA9zB,EAAAzhC,GACA,IAAAypB,EAEAlP,EAAAva,EAAAua,OAOA,IANAkP,EAAA+rC,EAAAh9D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEA8yD,MAAAlmE,QAAA,GACA66B,EAAAye,QAGA3tB,EACA,OAAaub,EAAsBrM,GAGnC,IAAAgsC,EAAAhjD,GAA6BqjB,EAAuBA,EAAsBrM,MAAAg8B,QAW1E,OAVAlrC,EAAAlN,iBAAA,cAAAooD,GACAl7C,EAAAlN,iBAAA,WAAAooD,GAEAhsC,EAAA2b,QAAAniC,GAAA,QAAAwyD,GAEAhsC,EAAA2b,QAAAniC,GAAA,qBACAsX,EAAA+jB,oBAAA,cAAAm3B,GACAl7C,EAAA+jB,oBAAA,WAAAm3B,KAGAhsC,EAGA,OAvCEyL,EAAcqgC,EAAAC,GAuChBD,EAxCA,CAyCEf,IAEFvvB,GAAS0F,kBAAA,cAAA4qB,IAaT,IAAAG,IAAA,wCAQIC,GAEJ,SAAAnQ,GAaA,SAAAoQ,EAAAn0B,EAAAzhC,GACA,IAAAypB,EAmBA,OAjBAA,EAAA+7B,EAAAhtD,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACA6zD,WAAA71D,EAAA61D,WACApsC,EAAAqsC,YAAA91D,EAAAu0C,WAAA,EACA9qB,EAAAssC,gBAAA/1D,EAAA+1D,gBAEAtsC,EAAA8qB,SAAA9qB,EAAAqsC,aAEArsC,EAAAosC,WACApsC,EAAAssC,gBACAtsC,EAAAgc,IAAAjM,aAAA,2BAEA/P,EAAAgc,IAAAjM,aAAA,wBAGA/P,EAAAgc,IAAAjM,aAAA,mBAGA/P,EAhCEyL,EAAc0gC,EAAApQ,GAmDhB,IAAAx8B,EAAA4sC,EAAAt9D,UAyEA,OAvEA0wB,EAAAgQ,SAAA,SAAA9hC,EAAA2E,EAAAsC,GAGA,OADA6D,KAAAojD,gBAAA,EACAI,EAAAltD,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,KAAmE81B,IACnEwC,UAAA,gBACAkd,UAAA,oCAAAx1C,KAAAgkC,SAAAhkC,KAAAsjC,SAAAkL,OAAA,UACAJ,UAAA,GACKv0C,GAAAsC,IAaL6qB,EAAAogB,cAAA,SAAAtnC,GACA4zD,GAAAnuB,KAAA,SAAArvC,GACA,OAAak6C,EAAA32C,EAAO42C,WAAAvwC,EAAA5J,MAGpBstD,EAAAltD,UAAA8wC,cAAA5wC,KAAAwJ,KAAAF,IAgBAknB,EAAAs8B,YAAA,SAAAxjD,GACAE,KAAAuyC,UAAA,IAUAvrB,EAAAurB,SAAA,SAAAyhB,GACAh0D,KAAA6zD,aACAG,GACAh0D,KAAAu4B,SAAA,gBACAv4B,KAAAyjC,IAAAjM,aAAA,uBAGAx3B,KAAAyvC,YAAA,cACAzvC,KAAA8zD,aAAA,IAEA9zD,KAAA04B,YAAA,gBACA14B,KAAAyjC,IAAAjM,aAAA,wBAEAx3B,KAAAyvC,YAAA,IACAzvC,KAAA8zD,aAAA,KAKAF,EA7HA,CA8HEhR,IAEF3f,GAAS0F,kBAAA,WAA+BgrB,IAQxC,IAAIM,GAEJ,SAAAC,GAYA,SAAAC,EAAA10B,EAAAzhC,GACA,IAAAypB,EAEArP,EAAApa,EAAAoa,MACAG,EAAAknB,EAAA2N,aAEApvC,EAAAwwC,MAAAp2B,EAAAo2B,OAAAp2B,EAAA9pB,UAAA,UACA0P,EAAAu0C,SAAA,YAAAn6B,EAAAtD,MACA2S,EAAAysC,EAAA19D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACAoY,QAGAqP,EAAA2sC,OAAAp2D,EAAAo2D,QAAAp2D,EAAA80C,MAAArrB,EAAArP,MAAA06B,OAAA78C,OAAAyJ,SAEA,IAiCAI,EAjCAu0D,EAAA,WACA,QAAAz/B,EAAA7kB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAAi/B,GAAAppB,EAAA,EAAyEA,EAAAopB,EAAappB,IACtFsE,EAAAtE,GAAAuE,UAAAvE,GAGAic,EAAA6sC,mBAAA77D,MAAqCq7B,EAAuBA,EAAsBrM,IAAA3X,IAGlFykD,EAAA,WACA,QAAAl/B,EAAAtlB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAA0/B,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3FxlB,EAAAwlB,GAAAvlB,UAAAulB,GAGA7N,EAAA+sC,6BAAA/7D,MAA+Cq7B,EAAuBA,EAAsBrM,IAAA3X,KAG5F2vB,EAAAx+B,IAAA,+BAAAozD,GACA97C,EAAAlN,iBAAA,SAAAgpD,GACA97C,EAAAlN,iBAAA,yBAAAkpD,GAEA9sC,EAAAxmB,GAAA,qBACAw+B,EAAAvY,KAAA,+BAAAmtC,GACA97C,EAAA+jB,oBAAA,SAAA+3B,GACA97C,EAAA+jB,oBAAA,yBAAAi4B,UASAt4D,IAAAsc,EAAAk8C,WAGAhtC,EAAAxmB,IAAA,0BACA,GAA2B,iBAARuzB,EAAA/6B,EAAQi7D,MAE3B,IACA50D,EAAA,IAAwB00B,EAAA/6B,EAAQi7D,MAAA,UACrB,MAAAp7D,IAIXwG,IACAA,EAAkB22B,EAAAh9B,EAAQk7D,YAAA,UAC1BC,UAAA,gBAGAr8C,EAAAuoB,cAAAhhC,KAOA,OAFA2nB,EAAA6sC,qBAEA7sC,EAjFEyL,EAAcihC,EAAAD,GAgGhB,IAAAltC,EAAAmtC,EAAA79D,UA2EA,OAzEA0wB,EAAAs8B,YAAA,SAAAxjD,GACA,IAAA+0D,EAAA70D,KAAAoY,MACAG,EAAAvY,KAAAojC,QAAAgK,aAIA,GAFA8mB,EAAA59D,UAAAgtD,YAAA9sD,KAAAwJ,KAAAF,GAEAyY,EAIA,QAAAttB,EAAA,EAAmBA,EAAAstB,EAAA3rB,OAAmB3B,IAAA,CACtC,IAAAmtB,EAAAG,EAAAttB,IAGA,IAAA+U,KAAAo0D,MAAA76D,QAAA6e,EAAA06B,QAMA16B,IAAAy8C,EACA,YAAAz8C,EAAAtD,OACAsD,EAAAtD,KAAA,WAIO,aAAAsD,EAAAtD,OACPsD,EAAAtD,KAAA,eAcAkS,EAAAstC,mBAAA,SAAAx0D,GACA,IAAAg1D,EAAA,YAAA90D,KAAAoY,MAAAtD,KAGAggD,IAAA90D,KAAA8zD,aACA9zD,KAAAuyC,SAAAuiB,IAIA9tC,EAAAwtC,6BAAA,SAAA10D,GACA,eAAAE,KAAAoY,MAAAtD,KAAA,CACA,IAAA0wC,EAAAxlD,KAAAojC,QAAAmiB,OAAAC,iBAEA,GAAAA,KAAAvT,SAAAuT,EAAAl3D,WAAA0R,KAAAoY,MAAA9pB,UAAAk3D,EAAA1S,OAAA9yC,KAAAoY,MAAA06B,KACA,OAGA9yC,KAAAojC,QAAAmiB,OAAAC,kBACAvT,SAAA,EACA3jD,SAAA0R,KAAAoY,MAAA9pB,SACAwkD,KAAA9yC,KAAAoY,MAAA06B,QAKA9rB,EAAAI,QAAA,WAEApnB,KAAAoY,MAAA,KAEA87C,EAAA59D,UAAA8wB,QAAA5wB,KAAAwJ,OAGAm0D,EA5KA,CA6KER,IAEF1wB,GAAS0F,kBAAA,oBAAwCsrB,IAQjD,IAAAc,GAEA,SAAAC,GAYA,SAAAD,EAAAt1B,EAAAzhC,GA4BA,OAzBAA,EAAAoa,OACAqnB,SAIAqT,KAAA90C,EAAA80C,KACAshB,MAAAp2D,EAAAo2D,MACAt6D,SAAA,EACAgb,KAAA,YAGA9W,EAAAo2D,QACAp2D,EAAAo2D,OAAAp2D,EAAA80C,OAGA90C,EAAAwwC,MACAxwC,EAAAoa,MAAAo2B,MAAAxwC,EAAAwwC,MAEAxwC,EAAAoa,MAAAo2B,MAAAxwC,EAAAo2D,MAAAx+D,KAAA,gBAIAoI,EAAA61D,YAAA,EAEA71D,EAAA+1D,iBAAA,EACAiB,EAAAx+D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,KAvCEkzB,EAAc6hC,EAAAC,GAiDhB,IAAAhuC,EAAA+tC,EAAAz+D,UA0CA,OAxCA0wB,EAAAstC,mBAAA,SAAAx0D,GAIA,IAHA,IAAAyY,EAAAvY,KAAAy/B,SAAA2N,aACA0nB,GAAA,EAEA7pE,EAAA,EAAAme,EAAAmP,EAAA3rB,OAAsC3B,EAAAme,EAAOne,IAAA,CAC7C,IAAAmtB,EAAAG,EAAAttB,GAEA,GAAA+U,KAAAsjC,SAAA8wB,MAAA76D,QAAA6e,EAAA06B,OAAA,eAAA16B,EAAAtD,KAAA,CACAggD,GAAA,EACA,OAMAA,IAAA90D,KAAA8zD,aACA9zD,KAAAuyC,SAAAuiB,IAIA9tC,EAAAwtC,6BAAA,SAAA10D,GAIA,IAHA,IAAAyY,EAAAvY,KAAAy/B,SAAA2N,aACA6nB,GAAA,EAEAhqE,EAAA,EAAAme,EAAAmP,EAAA3rB,OAAsC3B,EAAAme,EAAOne,IAAA,CAC7C,IAAAmtB,EAAAG,EAAAttB,GAEA,2CAAAsO,QAAA6e,EAAA06B,OAAA,eAAA16B,EAAAtD,KAAA,CACAmgD,GAAA,EACA,OAIAA,IACAj1D,KAAAojC,QAAAmiB,OAAAC,kBACAvT,SAAA,KAKA8iB,EA5FA,CA6FEd,IAEFhxB,GAAS0F,kBAAA,uBAAAosB,IAQT,IAAAG,GAEA,SAAAC,GAYA,SAAAD,EAAAz1B,EAAAzhC,GAMA,YALA,IAAAA,IACAA,MAGAA,EAAAua,OAAAknB,EAAA2N,aACA+nB,EAAA3+D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,KAkEA,OAnFEkzB,EAAcgiC,EAAAC,GA8BhBD,EAAA5+D,UAEA48D,YAAA,SAAAJ,EAAAsC,GAWA,IAAA5mB,OAVA,IAAAskB,IACAA,WAGA,IAAAsC,IACAA,EAAsBnB,IAOtBj0D,KAAAq1D,SACA7mB,EAAAxuC,KAAAq1D,OAAA,QAIAvC,EAAAnnE,KAAA,IAAAopE,GAAA/0D,KAAAojC,SACAgxB,MAAAp0D,KAAAs1D,OACAxiB,KAAA9yC,KAAAu1D,MACA/mB,WAEAxuC,KAAA+yD,gBAAA,EACA,IAAAx6C,EAAAvY,KAAAojC,QAAAgK,aAEAz3C,MAAAyH,QAAA4C,KAAAs1D,UACAt1D,KAAAs1D,QAAAt1D,KAAAu1D,QAGA,QAAAtqE,EAAA,EAAmBA,EAAAstB,EAAA3rB,OAAmB3B,IAAA,CACtC,IAAAmtB,EAAAG,EAAAttB,GAEA,GAAA+U,KAAAs1D,OAAA/7D,QAAA6e,EAAA06B,OAAA,GACA,IAAAr4B,EAAA,IAAA26C,EAAAp1D,KAAAojC,SACAhrB,QACAg8C,MAAAp0D,KAAAs1D,OACAxiB,KAAA9yC,KAAAu1D,MAEA1B,YAAA,EAEAE,iBAAA,IAEAt5C,EAAA8d,SAAA,OAAAngB,EAAA06B,KAAA,cACAggB,EAAAnnE,KAAA8uB,IAIA,OAAAq4C,GAGAoC,EApFA,CAqFC3B,IAEDtwB,GAAS0F,kBAAA,kBAAAusB,IAQT,IAAAM,GAEA,SAAAtB,GAYA,SAAAsB,EAAA/1B,EAAAzhC,GACA,IAAAypB,EAEArP,EAAApa,EAAAoa,MACAw0B,EAAA5uC,EAAA4uC,IACAwL,EAAA3Y,EAAA2Y,cAUA,OARAp6C,EAAA61D,YAAA,EACA71D,EAAA+1D,iBAAA,EACA/1D,EAAAwwC,MAAA5B,EAAAljB,KACA1rB,EAAAu0C,SAAA3F,EAAAh1C,WAAAwgD,KAAAxL,EAAAC,SACAplB,EAAAysC,EAAA19D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACAoY,QACAqP,EAAAmlB,MACAx0B,EAAA/M,iBAAA,YAAAoF,GAA6CqjB,EAAuBA,EAAsBrM,MAAAg8B,SAC1Fh8B,EA1BEyL,EAAcsiC,EAAAtB,GAyChB,IAAAltC,EAAAwuC,EAAAl/D,UAyBA,OAvBA0wB,EAAAs8B,YAAA,SAAAxjD,GACAo0D,EAAA59D,UAAAgtD,YAAA9sD,KAAAwJ,MAEAA,KAAAojC,QAAAgV,YAAAp4C,KAAA4sC,IAAAh1C,WACAoI,KAAAyjD,OAAAzjD,KAAA4sC,IAAAh1C,YAYAovB,EAAAy8B,OAAA,SAAA3jD,GACA,IAAA8sC,EAAA5sC,KAAA4sC,IACAwL,EAAAp4C,KAAAojC,QAAAgV,cAEAp4C,KAAAuyC,SAAA3F,EAAAh1C,WAAAwgD,KAAAxL,EAAAC,UAGA2oB,EAnEA,CAoEE7B,IAEF1wB,GAAS0F,kBAAA,wBAAA6sB,IAUT,IAAAC,GAEA,SAAAC,GAeA,SAAAD,EAAAh2B,EAAAzhC,EAAAmS,GACA,OAAAulD,EAAAl/D,KAAAwJ,KAAAy/B,EAAAzhC,EAAAmS,IAAAnQ,KAfEkzB,EAAcuiC,EAAAC,GAyBhB,IAAA1uC,EAAAyuC,EAAAn/D,UAsJA,OApJA0wB,EAAA4e,cAAA,WACA,6BAAA8vB,EAAAp/D,UAAAsvC,cAAApvC,KAAAwJ,OAGAgnB,EAAAmsC,qBAAA,WACA,6BAAAuC,EAAAp/D,UAAA68D,qBAAA38D,KAAAwJ,OAcAgnB,EAAAy8B,OAAA,SAAA3jD,GACAE,KAAA21D,UAAA71D,GAAA,aAAAA,EAAA5K,MAAA,gBAAA4K,EAAA5K,OACA8K,KAAA41D,SAAA51D,KAAA61D,qBAGAH,EAAAp/D,UAAAmtD,OAAAjtD,KAAAwJ,OAWAgnB,EAAA4uC,SAAA,SAAAx9C,GACA,GAAApY,KAAA21D,SAAAv9C,EAAA,CASA,GALApY,KAAA81D,iBACA91D,KAAA81D,eAAA91D,KAAAyjD,OAAAhzC,KAAAzQ,OAIAA,KAAA21D,OAAA,CACA,IAAAI,EAAA/1D,KAAAojC,QAAAka,qBAAAjK,wBAAArzC,KAAA21D,QAEAI,GACAA,EAAAz5B,oBAAA,OAAAt8B,KAAA81D,gBAGA91D,KAAA21D,OAAA,KAKA,GAFA31D,KAAA21D,OAAAv9C,EAEApY,KAAA21D,OAAA,CACA31D,KAAA21D,OAAA7gD,KAAA,SAEA,IAAAkhD,EAAAh2D,KAAAojC,QAAAka,qBAAAjK,wBAAArzC,KAAA21D,QAEAK,GACAA,EAAA3qD,iBAAA,OAAArL,KAAA81D,mBAYA9uC,EAAA6uC,kBAAA,WAGA,IAFA,IAAAt9C,EAAAvY,KAAAojC,QAAAgK,iBAEAniD,EAAAstB,EAAA3rB,OAAA,EAAmC3B,GAAA,EAAQA,IAAA,CAE3C,IAAAmtB,EAAAG,EAAAttB,GAEA,GAAAmtB,EAAA06B,OAAA9yC,KAAAu1D,MACA,OAAAn9C,IAaA4O,EAAAivC,eAAA,WACA,OAAAj2D,KAAA21D,QAAA31D,KAAA21D,OAAAnnB,MACAxuC,KAAA21D,OAAAnnB,MAGAxuC,KAAAgkC,SAAAlB,GAAA9iC,KAAAu1D,SAUAvuC,EAAA6rC,WAAA,WAEA,OADA7yD,KAAAsjC,SAAA7a,MAAAzoB,KAAAi2D,iBACAP,EAAAp/D,UAAAu8D,WAAAr8D,KAAAwJ,OAUAgnB,EAAAksC,YAAA,WACA,IAAAJ,KAEA,IAAA9yD,KAAA21D,OACA,OAAA7C,EAGA,IAAAnmB,EAAA3sC,KAAA21D,OAAAhpB,KAEA,IAAAA,EACA,OAAAmmB,EAGA,QAAA7nE,EAAA,EAAAme,EAAAujC,EAAA//C,OAAoC3B,EAAAme,EAAOne,IAAA,CAC3C,IAAA2hD,EAAAD,EAAA1hD,GACAirE,EAAA,IAAAV,GAAAx1D,KAAAojC,SACAhrB,MAAApY,KAAA21D,OACA/oB,QAEAkmB,EAAAnnE,KAAAuqE,GAGA,OAAApD,GAGA2C,EAhLA,CAiLCP,IASDO,GAAAn/D,UAAAi/D,MAAA,WAQAE,GAAAn/D,UAAA4sD,aAAA,WACAjgB,GAAS0F,kBAAA,iBAAA8sB,IAQT,IAAAU,GAEA,SAAAT,GAeA,SAAAS,EAAA12B,EAAAzhC,EAAAmS,GACA,IAAAsX,EAEAA,EAAAiuC,EAAAl/D,KAAAwJ,KAAAy/B,EAAAzhC,EAAAmS,IAAAnQ,KACA,IAAAuY,EAAAknB,EAAA2N,aACAinB,EAAA5jD,GAA6BqjB,EAAuBA,EAAsBrM,MAAA6sC,oBAO1E,OANA/7C,EAAAlN,iBAAA,SAAAgpD,GAEA5sC,EAAAxmB,GAAA,qBACAsX,EAAA+jB,oBAAA,SAAA+3B,KAGA5sC,EA1BEyL,EAAcijC,EAAAT,GAsChB,IAAA1uC,EAAAmvC,EAAA7/D,UAsCA,OApCA0wB,EAAAstC,mBAAA,SAAAx0D,GAIA,IAHA,IAAAyY,EAAAvY,KAAAy/B,SAAA2N,aACA3Q,GAAA,EAEAxxC,EAAA,EAAAme,EAAAmP,EAAA3rB,OAAsC3B,EAAAme,EAAOne,IAAA,CAC7C,IAAAmtB,EAAAG,EAAAttB,GAEA,GAAAmtB,EAAA06B,OAAA9yC,KAAAu1D,OAAA,YAAAn9C,EAAAtD,KAAA,CACA2nB,GAAA,EACA,OAKAA,EACAz8B,KAAAm1B,UAEAn1B,KAAAo1B,UAWApO,EAAA4e,cAAA,WACA,iCAAA8vB,EAAAp/D,UAAAsvC,cAAApvC,KAAAwJ,OAGAgnB,EAAAmsC,qBAAA,WACA,iCAAAuC,EAAAp/D,UAAA68D,qBAAA38D,KAAAwJ,OAGAm2D,EA7EA,CA8ECjB,IASDiB,GAAA7/D,UAAAi/D,MAAA,eAQAY,GAAA7/D,UAAA4sD,aAAA,eACAjgB,GAAS0F,kBAAA,qBAAAwtB,IAQT,IAAAC,GAEA,SAAAV,GAeA,SAAAU,EAAA32B,EAAAzhC,EAAAmS,GACA,OAAAulD,EAAAl/D,KAAAwJ,KAAAy/B,EAAAzhC,EAAAmS,IAAAnQ,KAfEkzB,EAAckjC,EAAAV,GAyBhB,IAAA1uC,EAAAovC,EAAA9/D,UAUA,OARA0wB,EAAA4e,cAAA,WACA,8BAAA8vB,EAAAp/D,UAAAsvC,cAAApvC,KAAAwJ,OAGAgnB,EAAAmsC,qBAAA,WACA,8BAAAuC,EAAAp/D,UAAA68D,qBAAA38D,KAAAwJ,OAGAo2D,EApCA,CAqCClB,IASDkB,GAAA9/D,UAAAi/D,MAAA,YAQAa,GAAA9/D,UAAA4sD,aAAA,YACAjgB,GAAS0F,kBAAA,kBAAAytB,IAQT,IAAAC,GAEA,SAAArB,GAYA,SAAAqB,EAAA52B,EAAAzhC,GACA,IAAAypB,EAmBA,OAjBAzpB,EAAAoa,OACAqnB,SACAqT,KAAA90C,EAAA80C,KACAtE,MAAAxwC,EAAA80C,KAAA,YACA+gB,YAAA,EACA/5D,SAAA,EACAgb,KAAA,YAGA9W,EAAA61D,YAAA,EACA71D,EAAArQ,KAAA,2BACA85B,EAAAutC,EAAAx+D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAu4B,SAAA,0BAEA9Q,EAAAgoB,YAAA,WAAAzxC,EAAA80C,KAAA,oBAEArrB,EAqBA,OApDEyL,EAAcmjC,EAAArB,GA8ChBqB,EAAA//D,UAEAgtD,YAAA,SAAAxjD,GACAE,KAAAy/B,SAAAiF,SAAA,qBAAA3mB,QAGAs4C,EArDA,CAsDEpC,IAEFhxB,GAAS0F,kBAAA,0BAAA0tB,IAQT,IAAAC,GAEA,SAAAZ,GAeA,SAAAY,EAAA72B,EAAAzhC,EAAAmS,GACA,OAAAulD,EAAAl/D,KAAAwJ,KAAAy/B,EAAAzhC,EAAAmS,IAAAnQ,KAfEkzB,EAAcojC,EAAAZ,GAyBhB,IAAA1uC,EAAAsvC,EAAAhgE,UA8BA,OA5BA0wB,EAAA4e,cAAA,WACA,6BAAA8vB,EAAAp/D,UAAAsvC,cAAApvC,KAAAwJ,OAGAgnB,EAAAmsC,qBAAA,WACA,6BAAAuC,EAAAp/D,UAAA68D,qBAAA38D,KAAAwJ,OAUAgnB,EAAAksC,YAAA,WACA,IAAAJ,KASA,OAPA9yD,KAAAy/B,SAAA4X,OAAAr3C,KAAAy/B,SAAA4X,MAAAmD,2BAAAx6C,KAAAy/B,SAAAiF,SAAA,uBACAouB,EAAAnnE,KAAA,IAAA0qE,GAAAr2D,KAAAojC,SACA0P,KAAA9yC,KAAAu1D,SAEAv1D,KAAA+yD,gBAAA,GAGA2C,EAAAp/D,UAAA48D,YAAA18D,KAAAwJ,KAAA8yD,IAGAwD,EAxDA,CAyDCpB,IASDoB,GAAAhgE,UAAAi/D,MAAA,WAQAe,GAAAhgE,UAAA4sD,aAAA,WACAjgB,GAAS0F,kBAAA,iBAAA2tB,IAST,IAAAC,GAEA,SAAAvB,GAGA,SAAAuB,IACA,OAAAvB,EAAAv8D,MAAAuH,KAAA+P,YAAA/P,KAqBA,OAxBEkzB,EAAcqjC,EAAAvB,GAMhBuB,EAAAjgE,UAEA0gC,SAAA,SAAA9hC,EAAA2E,EAAAsC,GACA,IAAAq5C,EAAA,oCAAAx1C,KAAAgkC,SAAAhkC,KAAAsjC,SAAAkL,OAYA,MAVA,aAAAxuC,KAAAsjC,SAAAlrB,MAAA06B,OACA0C,GAAA,oHAAAx1C,KAAAgkC,SAAA,+BAGAwR,GAAA,UAEAwf,EAAA1+D,UAAA0gC,SAAAxgC,KAAAwJ,KAAA9K,EAAoE4gC,IACpE0f,aACK37C,GAAAsC,IAKLo6D,EAzBA,CA0BEtC,IAEFhxB,GAAS0F,kBAAA,mBAAA4tB,IAQT,IAAAC,GAEA,SAAAd,GAGA,SAAAc,EAAA/2B,EAAAzhC,GACA,IAAAypB,EAiBA,YAfA,IAAAzpB,IACAA,OAGAypB,EAAAiuC,EAAAl/D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAGAq1D,OAAA,aAEA,8BAAA97D,QAAAkuB,EAAA2b,QAAAqzB,YAAA,IACAhvC,EAAA4tC,OAAA,YAGA5tC,EAAA6pC,YAAA7hB,YAAA3M,GAAArb,EAAA4tC,SAEA5tC,EApBEyL,EAAcsjC,EAAAd,GA8BhB,IAAA1uC,EAAAwvC,EAAAlgE,UA+BA,OA7BA0wB,EAAA4e,cAAA,WACA,8BAAA8vB,EAAAp/D,UAAAsvC,cAAApvC,KAAAwJ,OAGAgnB,EAAAmsC,qBAAA,WACA,8BAAAuC,EAAAp/D,UAAA68D,qBAAA38D,KAAAwJ,OAUAgnB,EAAAksC,YAAA,WACA,IAAAJ,KAUA,OARA9yD,KAAAy/B,SAAA4X,OAAAr3C,KAAAy/B,SAAA4X,MAAAmD,2BAAAx6C,KAAAy/B,SAAAiF,SAAA,uBACAouB,EAAAnnE,KAAA,IAAA0qE,GAAAr2D,KAAAojC,SACA0P,KAAA9yC,KAAAq1D,UAEAr1D,KAAA+yD,gBAAA,GAGAD,EAAA4C,EAAAp/D,UAAA48D,YAAA18D,KAAAwJ,KAAA8yD,EAAAyD,KAIAC,EA9DA,CA+DCtB,IASDsB,GAAAlgE,UAAAg/D,QAAA,wBASAkB,GAAAlgE,UAAA4sD,aAAA,YACAjgB,GAAS0F,kBAAA,iBAAA6tB,IAQT,IAAAE,GAEA,SAAAxC,GAYA,SAAAwC,EAAAj3B,EAAAzhC,GACA,IAAAypB,EAEArP,EAAApa,EAAAoa,MACAG,EAAAknB,EAAAk3B,cAEA34D,EAAAwwC,MAAAp2B,EAAAo2B,OAAAp2B,EAAA9pB,UAAA,UACA0P,EAAAu0C,SAAAn6B,EAAA65B,SACAxqB,EAAAysC,EAAA19D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACAoY,QAEAqP,EAAA8Q,SAAA,OAAAngB,EAAA06B,KAAA,cAEA,IAAAuhB,EAAA,WACA,QAAAz/B,EAAA7kB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAAi/B,GAAAppB,EAAA,EAAyEA,EAAAopB,EAAappB,IACtFsE,EAAAtE,GAAAuE,UAAAvE,GAGAic,EAAA6sC,mBAAA77D,MAAqCq7B,EAAuBA,EAAsBrM,IAAA3X,IASlF,OANAyI,EAAAlN,iBAAA,SAAAgpD,GAEA5sC,EAAAxmB,GAAA,qBACAsX,EAAA+jB,oBAAA,SAAA+3B,KAGA5sC,EAtCEyL,EAAcwjC,EAAAxC,GAyChB,IAAAltC,EAAA0vC,EAAApgE,UAsDA,OApDA0wB,EAAAgQ,SAAA,SAAA9hC,EAAA2E,EAAAsC,GACA,IAAAq5C,EAAA,oCAAAx1C,KAAAgkC,SAAAhkC,KAAAsjC,SAAAkL,OAYA,MAVA,cAAAxuC,KAAAsjC,SAAAlrB,MAAA06B,OACA0C,GAAA,oHAAAx1C,KAAAgkC,SAAA,mCAGAwR,GAAA,UAEA0e,EAAA59D,UAAA0gC,SAAAxgC,KAAAwJ,KAAA9K,EAA2D4gC,IAC3D0f,aACK37C,GAAAsC,IAiBL6qB,EAAAs8B,YAAA,SAAAxjD,GACA,IAAAyY,EAAAvY,KAAAojC,QAAAuzB,cAEAzC,EAAA59D,UAAAgtD,YAAA9sD,KAAAwJ,KAAAF,GAEA,QAAA7U,EAAA,EAAmBA,EAAAstB,EAAA3rB,OAAmB3B,IAAA,CACtC,IAAAmtB,EAAAG,EAAAttB,GACAmtB,EAAA65B,QAAA75B,IAAApY,KAAAoY,QAaA4O,EAAAstC,mBAAA,SAAAx0D,GACAE,KAAAuyC,SAAAvyC,KAAAoY,MAAA65B,UAGAykB,EAhGA,CAiGE/C,IAEF1wB,GAAS0F,kBAAA,qBAAA+tB,IAQT,IAAAE,GAEA,SAAAzB,GAYA,SAAAyB,EAAAn3B,EAAAzhC,GAMA,YALA,IAAAA,IACAA,MAGAA,EAAAua,OAAAknB,EAAAk3B,cACAxB,EAAA3+D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,KAjBEkzB,EAAc0jC,EAAAzB,GA2BhB,IAAAnuC,EAAA4vC,EAAAtgE,UA2CA,OAzCA0wB,EAAA4e,cAAA,WACA,0BAAAuvB,EAAA7+D,UAAAsvC,cAAApvC,KAAAwJ,OAGAgnB,EAAAmsC,qBAAA,WACA,0BAAAgC,EAAA7+D,UAAA68D,qBAAA38D,KAAAwJ,OAaAgnB,EAAAksC,YAAA,SAAAJ,QACA,IAAAA,IACAA,MAIA9yD,KAAA+yD,eAAA,EAGA,IAFA,IAAAx6C,EAAAvY,KAAAojC,QAAAuzB,cAEA1rE,EAAA,EAAmBA,EAAAstB,EAAA3rB,OAAmB3B,IAAA,CACtC,IAAAmtB,EAAAG,EAAAttB,GACA6nE,EAAAnnE,KAAA,IAAA+qE,GAAA12D,KAAAojC,SACAhrB,QAEAy7C,YAAA,EAEAE,iBAAA,KAIA,OAAAjB,GAGA8D,EAvEA,CAwECrD,IASDqD,GAAAtgE,UAAA4sD,aAAA,cACAjgB,GAAS0F,kBAAA,mBAAAiuB,IAQT,IAAAC,GAEA,SAAA3C,GAYA,SAAA2C,EAAAp3B,EAAAzhC,GACA,IAAAypB,EAEA+mB,EAAAxwC,EAAAxO,KACAA,EAAAg5B,WAAAgmB,EAAA,IAYA,OAVAxwC,EAAAwwC,QACAxwC,EAAAu0C,SAAA,IAAA/iD,EACAwO,EAAA61D,YAAA,EACA71D,EAAA+1D,iBAAA,GACAtsC,EAAAysC,EAAA19D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACAwuC,QACA/mB,EAAAj4B,OAEAi4B,EAAAxmB,GAAAw+B,EAAA,aAAAhY,EAAAg8B,QAEAh8B,EA3BEyL,EAAc2jC,EAAA3C,GA0ChB,IAAAltC,EAAA6vC,EAAAvgE,UAqBA,OAnBA0wB,EAAAs8B,YAAA,SAAAxjD,GACAo0D,EAAA59D,UAAAgtD,YAAA9sD,KAAAwJ,MAEAA,KAAAy/B,SAAAq3B,aAAA92D,KAAAxQ,OAYAw3B,EAAAy8B,OAAA,SAAA3jD,GACAE,KAAAuyC,SAAAvyC,KAAAy/B,SAAAq3B,iBAAA92D,KAAAxQ,OAGAqnE,EAhEA,CAiEElD,IASFkD,GAAAvgE,UAAA27D,cAAA,SACAhvB,GAAS0F,kBAAA,uBAAAkuB,IAQT,IAAAE,GAEA,SAAAvD,GAYA,SAAAuD,EAAAt3B,EAAAzhC,GACA,IAAAypB,EAYA,OAVAA,EAAA+rC,EAAAh9D,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAg3D,mBAEAvvC,EAAAwvC,cAEAxvC,EAAAxmB,GAAAw+B,EAAA,YAAAhY,EAAAuvC,kBAEAvvC,EAAAxmB,GAAAw+B,EAAA,aAAAhY,EAAAwvC,aAEAxvC,EAxBEyL,EAAc6jC,EAAAvD,GAkChB,IAAAxsC,EAAA+vC,EAAAzgE,UAqJA,OAnJA0wB,EAAAgQ,SAAA,WACA,IAAAlqB,EAAA0mD,EAAAl9D,UAAA0gC,SAAAxgC,KAAAwJ,MAOA,OALAA,KAAAk3D,SAAAlgC,GAAA,OACAsB,UAAA,0BACAkd,UAAA,OAEA1oC,EAAAkrB,YAAAh4B,KAAAk3D,UACApqD,GAGAka,EAAAI,QAAA,WACApnB,KAAAk3D,SAAA,KAEA1D,EAAAl9D,UAAA8wB,QAAA5wB,KAAAwJ,OAUAgnB,EAAA4e,cAAA,WACA,2BAAA4tB,EAAAl9D,UAAAsvC,cAAApvC,KAAAwJ,OAGAgnB,EAAAmsC,qBAAA,WACA,2BAAAK,EAAAl9D,UAAA68D,qBAAA38D,KAAAwJ,OAUAgnB,EAAA6rC,WAAA,WACA,IAAAF,EAAA,IAAmBvB,GAAIpxD,KAAAy/B,UACvB03B,EAAAn3D,KAAAo3D,gBAEA,GAAAD,EACA,QAAAlsE,EAAAksE,EAAAvqE,OAAA,EAAoC3B,GAAA,EAAQA,IAC5C0nE,EAAAhuB,SAAA,IAAAkyB,GAAA72D,KAAAy/B,UACAjwC,KAAA2nE,EAAAlsE,GAAA,OAKA,OAAA0nE,GAOA3rC,EAAA0oC,qBAAA,WAEA1vD,KAAA8M,KAAA0qB,aAAA,gBAAAx3B,KAAAy/B,SAAAq3B,iBAeA9vC,EAAAs8B,YAAA,SAAAxjD,GAOA,IALA,IAAAu3D,EAAAr3D,KAAAy/B,SAAAq3B,eACAK,EAAAn3D,KAAAo3D,gBAEAE,EAAAH,EAAA,GAEAlsE,EAAA,EAAmBA,EAAAksE,EAAAvqE,OAAkB3B,IACrC,GAAAksE,EAAAlsE,GAAAosE,EAAA,CACAC,EAAAH,EAAAlsE,GACA,MAIA+U,KAAAy/B,SAAAq3B,aAAAQ,IAUAtwC,EAAAowC,cAAA,WACA,OAAAp3D,KAAAsjC,SAAA8zB,eAAAp3D,KAAAsjC,SAAAoC,eAAA1lC,KAAAsjC,SAAAoC,cAAA0xB,eAWApwC,EAAAuwC,sBAAA,WACA,OAAAv3D,KAAAy/B,SAAA4X,OAAAr3C,KAAAy/B,SAAA4X,MAAAkH,sBAAAv+C,KAAAo3D,iBAAAp3D,KAAAo3D,gBAAAxqE,OAAA,GAYAo6B,EAAAgwC,iBAAA,SAAAl3D,GACAE,KAAAu3D,wBACAv3D,KAAA04B,YAAA,cAEA14B,KAAAu4B,SAAA,eAaAvR,EAAAiwC,YAAA,SAAAn3D,GACAE,KAAAu3D,0BACAv3D,KAAAk3D,SAAA1hB,UAAAx1C,KAAAy/B,SAAAq3B,eAAA,MAIAC,EAxLA,CAyLEvE,IASFuE,GAAAzgE,UAAA4sD,aAAA,gBACAjgB,GAAS0F,kBAAA,yBAAAouB,IAST,IAAAS,GAEA,SAAA9pB,GAGA,SAAA8pB,IACA,OAAA9pB,EAAAj1C,MAAAuH,KAAA+P,YAAA/P,KAHEkzB,EAAcskC,EAAA9pB,GAMhB,IAAA1mB,EAAAwwC,EAAAlhE,UAyBA,OAjBA0wB,EAAA4e,cAAA,WACA,oBAAA8H,EAAAp3C,UAAAsvC,cAAApvC,KAAAwJ,OAUAgnB,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAAt4B,KAAA4lC,mBAIA4xB,EAhCA,CAiCEv0B,IAEFA,GAAS0F,kBAAA,SAAA6uB,IAQT,IAAAC,GAEA,SAAAC,GAGA,SAAAD,IACA,OAAAC,EAAAj/D,MAAAuH,KAAA+P,YAAA/P,KAHEkzB,EAAcukC,EAAAC,GAMhB,IAAA1wC,EAAAywC,EAAAnhE,UA8BA,OAtBA0wB,EAAA4e,cAAA,WACA,mCAAA8xB,EAAAphE,UAAAsvC,cAAApvC,KAAAwJ,OAUAgnB,EAAAgQ,SAAA,WACA,IAAAlqB,EAAA4qD,EAAAphE,UAAA0gC,SAAAxgC,KAAAwJ,MACAs4B,UAAAt4B,KAAA4lC,kBAMA,OADA94B,EAAA0oC,UAAA,IACA1oC,GAGA2qD,EArCA,CAsCCD,IAEDv0B,GAAS0F,kBAAA,sBAAA8uB,IAQT,IAAAE,GAEA,SAAAjqB,GAGA,SAAAiqB,IACA,OAAAjqB,EAAAj1C,MAAAuH,KAAA+P,YAAA/P,KAkBA,OArBEkzB,EAAcykC,EAAAjqB,GAMhBiqB,EAAArhE,UAQA0gC,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,OACAs4B,UAAA,kBACA6uB,IAAA,SAIAwQ,EAtBA,CAuBE10B,IASF00B,GAAArhE,UAAAgtC,UACAppC,UAAA,kSAEA+oC,GAAS0F,kBAAA,aAAAgvB,IAST,IAAAC,GAEA,SAAAC,GAYA,SAAAD,EAAAn4B,EAAAzhC,GACA,IAAAypB,EAMA,OAJAA,EAAAowC,EAAArhE,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MAEAiB,GAAAw+B,EAAA,QAAAhY,EAAA1J,MAEA0J,EAlBEyL,EAAc0kC,EAAAC,GA8BhB,IAAA7wC,EAAA4wC,EAAAthE,UAkBA,OAhBA0wB,EAAA4e,cAAA,WACA,2BAAAiyB,EAAAvhE,UAAAsvC,cAAApvC,KAAAwJ,OAUAgnB,EAAAmQ,QAAA,WACA,IAAAvoB,EAAA5O,KAAAy/B,SAAA7wB,QACA,OAAAA,EAAA5O,KAAAgkC,SAAAp1B,EAAAxV,SAAA,IAGAw+D,EAjDA,CAkDEnqB,IAQFmqB,GAAAthE,UAAAgtC,SAAAN,GAA+CyK,GAAWn3C,UAAAgtC,UAC1DyL,aAAA,EACAJ,YAAA,EACAW,WAAA,EACAtB,aAAA,IAEA/K,GAAS0F,kBAAA,eAAAivB,IAET,IACAE,IAAA,gBACAC,IAAA,eACAC,IAAA,eACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,cACAC,IAAA,gBACAC,IAAA,iBACAC,IAAA,cACAC,IAAA,0BACAC,IAAA,mBAYAC,IACApS,iBACAx5C,SAAA,yBACAxU,GAAA,+BACAm2C,MAAA,QACAxwC,SAAA85D,GAAAM,GAAAD,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAEA1R,mBACAz5C,SAAA,2BACAxU,GAAA,iCACAm2C,MAAA,eACAxwC,SAAAs6D,GAAAC,GAAAC,KAEAhU,OACA33C,SAAA,yBACAxU,GAAA,+BACAm2C,MAAA,QACAxwC,SAAAo6D,GAAAN,GAAAK,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAEAvR,WACA55C,SAAA,2BACAxU,GAAA,KACAm2C,MAAA,kBACAxwC,UAAA,iHAEA8oD,YACAj6C,SAAA,4BACAxU,GAAA,0BACAm2C,MAAA,cACAxwC,UAAA,uPAEA2oD,aACA95C,SAAA,6BACAxU,GAAA,wBACAm2C,MAAA,YACAxwC,UAAA,8IACAlE,QAAA,EACAw8C,OAAA,SAAA/gD,GACA,eAAAA,EAAA,KAAAmjE,OAAAnjE,KAGA6wD,aACAv5C,SAAA,6BACAxU,GAAA,iCACAm2C,MAAA,eACAxwC,SAAAs6D,GAAAC,KAGAhS,aACA15C,SAAA,6BACAxU,GAAA,2BACAm2C,MAAA,SAGAgY,eACA35C,SAAA,+BACAxU,GAAA,6BACAm2C,MAAA,eACAxwC,SAAAw6D,GAAAD,GAAAD,MAqBA,SAAAK,GAAAviE,EAAAkgD,GAKA,GAJAA,IACAlgD,EAAAkgD,EAAAlgD,IAGAA,GAAA,SAAAA,EACA,OAAAA,EAxBAqiE,GAAAlS,YAAAvoD,QAAAy6D,GAAApS,gBAAAroD,QAqFA,IAAI46D,GAEJ,SAAAf,GAYA,SAAAgB,EAAAp5B,EAAAzhC,GACA,IAAAypB,EA2CA,OAzCAzpB,EAAAsxC,WAAA,GACA7nB,EAAAowC,EAAArhE,KAAAwJ,KAAAy/B,EAAAzhC,IAAAgC,MACA88C,cAAArsC,GAA+BqjB,EAAuBA,EAAsBrM,MAAAq1B,eAE5Er1B,EAAAmnB,OAEAnnB,EAAAomB,eAAApmB,EAAAqmB,gBAAA,EACArmB,EAAAqxC,UAAA9hC,GAAA,KACAsB,UAAA,mBACAb,YAAAhQ,EAAAuc,SAAA,2BAGAvc,EAAA3a,KAAAkrB,YAAAvQ,EAAAqxC,WAEArxC,EAAAsxC,mBAGA98D,IAAA+B,EAAAg7D,2BACAvxC,EAAA6b,SAAA01B,yBAAAvxC,EAAA6b,SAAAoC,cAAAszB,0BAGAvxC,EAAAxmB,GAAAwmB,EAAA+T,EAAA,uCACA/T,EAAAwxC,eAEAxxC,EAAAnN,UAGAmN,EAAAxmB,GAAAwmB,EAAA+T,EAAA,0CACA/T,EAAAsxC,cAEAtxC,EAAAq1B,kBAGAjnB,GAAA4iC,GAAA,SAAA9tE,GACA88B,EAAAxmB,GAAAwmB,EAAA+T,EAAA7wC,EAAAkiB,UAAA,SAAA4a,EAAAq1B,iBAGAr1B,EAAA6b,SAAA01B,0BACAvxC,EAAAyxC,kBAGAzxC,EAvDEyL,EAAc2lC,EAAAhB,GA0DhB,IAAA7wC,EAAA6xC,EAAAviE,UA2QA,OAzQA0wB,EAAAI,QAAA,WACApnB,KAAA84D,UAAA,KAEAjB,EAAAvhE,UAAA8wB,QAAA5wB,KAAAwJ,OAeAgnB,EAAAmyC,gBAAA,SAAAjjE,EAAAkjE,EAAAlkE,GACA,IAAAgzB,EAAAloB,UAEA,IAAAo5D,IACAA,EAAA,SAGA,IAAAlkE,IACAA,EAAA,SAGA,IAAAvK,EAAA8tE,GAAAviE,GACAmC,EAAA1N,EAAA0N,GAAAuE,QAAA,KAAAoD,KAAAujC,KACA81B,GAAAD,EAAA/gE,GAAAzC,KAAA,KAAA8B,OACA,WAAAxC,EAAA,QAAAmD,EAAA,uBAAAnD,EAAA,qBAAA8K,KAAAgkC,SAAAr5C,EAAA6jD,OAAA,KAAAt5C,EAAA,gCAAAmkE,EAAA,MAAAnhE,OAAAvN,EAAAqT,QAAAnI,IAAA,SAAAu9B,GACA,IAAAkmC,EAAAjhE,EAAA,IAAA+6B,EAAA,GAAAx2B,QAAA,WACA,sBAAA08D,EAAA,YAAAlmC,EAAA,4BAAAimC,EAAA,IAAAC,EAAA,KAAApxC,EAAA8b,SAAA5Q,EAAA,iBAAAx9B,KAAA,OACKsC,OAAA,aAAAtC,KAAA,KAYLoxB,EAAAuyC,iBAAA,WACA,IAAAH,EAAA,wBAAAp5D,KAAAujC,IACA,0EAAA61B,EAAA,KAAAp5D,KAAAgkC,SAAA,oBAAAhkC,KAAAm5D,gBAAA,QAAAC,GAAA,8CAAAp5D,KAAAm5D,gBAAA,cAAAC,GAAA,yBAAAxjE,KAAA,KAYAoxB,EAAAwyC,iBAAA,WACA,IAAAJ,EAAA,uBAAAp5D,KAAAujC,IACA,0EAAA61B,EAAA,KAAAp5D,KAAAgkC,SAAA,0BAAAhkC,KAAAm5D,gBAAA,kBAAAC,GAAA,4CAAAp5D,KAAAm5D,gBAAA,oBAAAC,GAAA,yBAAAxjE,KAAA,KAYAoxB,EAAAyyC,kBAAA,WACA,IAAAL,EAAA,mBAAAp5D,KAAAujC,IACA,8EAAA61B,EAAA,KAAAp5D,KAAAgkC,SAAA,sBAAAhkC,KAAAm5D,gBAAA,cAAAC,GAAA,gDAAAp5D,KAAAm5D,gBAAA,gBAAAC,GAAA,yBAAAxjE,KAAA,KAYAoxB,EAAA0yC,gBAAA,WACA,OAAA1iC,GAAA,OACAsB,UAAA,4BACAkd,WAAAx1C,KAAAu5D,mBAAAv5D,KAAAw5D,mBAAAx5D,KAAAy5D,qBAAA7jE,KAAA,OAaAoxB,EAAA2yC,cAAA,WACA,OAAA3iC,GAAA,OACAsB,UAAA,0BACAkd,WAAA,wDAAAx1C,KAAAm5D,gBAAA,+FAAAn5D,KAAAm5D,gBAAA,8FAAAn5D,KAAAm5D,gBAAA,yCAAAvjE,KAAA,OAaAoxB,EAAA4yC,kBAAA,WACA,IAAAC,EAAA75D,KAAAgkC,SAAA,8CACA,OAAAhN,GAAA,OACAsB,UAAA,8BACAkd,WAAA,2DAAAqkB,EAAA,KAAA75D,KAAAgkC,SAAA,4CAAA61B,EAAA,uEAAA75D,KAAAgkC,SAAA,qBAAApuC,KAAA,OAIAoxB,EAAAmQ,QAAA,WACA,OAAAn3B,KAAA05D,kBAAA15D,KAAA25D,gBAAA35D,KAAA45D,sBAGA5yC,EAAAwnB,MAAA,WACA,OAAAxuC,KAAAgkC,SAAA,4BAGAhd,EAAAmnB,YAAA,WACA,OAAAnuC,KAAAgkC,SAAA,yEAGAhd,EAAA4e,cAAA,WACA,OAAAiyB,EAAAvhE,UAAAsvC,cAAApvC,KAAAwJ,MAAA,4BAUAgnB,EAAAi/B,UAAA,WACA,IAn2gBA3vC,EAAAhI,EAAAwrD,EAm2gBAjwC,EAAA7pB,KAEA,OAr2gBAsW,EAq2gBAmiD,GAr2gBAnqD,EAq2gBA,SAAAyrD,EAAApvE,EAAAuL,GACA,IAnQA4W,EAAAwpC,EAmQAlgD,GAnQA0W,EAmQA+c,EAAA2R,EAAA7wC,EAAAkiB,UAnQAypC,EAmQA3rD,EAAA2rD,OAjQAqiB,GADA7rD,EAAA9O,QAAA8O,EAAA9O,QAAAg8D,eAAA5jE,MACAkgD,IAuQA,YAJAr6C,IAAA7F,IACA2jE,EAAA7jE,GAAAE,GAGA2jE,QA32gBA,KADAD,QAEAA,EAAA,GAGA9jE,GAAAsgB,GAAAle,OAAA,SAAA2hE,EAAA7jE,GACA,OAAAoY,EAAAyrD,EAAAzjD,EAAApgB,OACG4jE,IAg3gBH9yC,EAAAizC,UAAA,SAAAC,GACA,IAAA1xB,EAAAxoC,KAEA61B,GAAA4iC,GAAA,SAAA9tE,EAAAuL,IAlQA,SAAA4W,EAAA1W,EAAAkgD,GACA,GAAAlgD,EAIA,QAAAnL,EAAA,EAAiBA,EAAA6hB,EAAA9O,QAAApR,OAAuB3B,IACxC,GAAA0tE,GAAA7rD,EAAA9O,QAAA/S,GAAAmL,MAAAkgD,KAAAlgD,EAAA,CACA0W,EAAAktD,cAAA/uE,EACA,OA2PAkvE,CAAA3xB,EAAAhN,EAAA7wC,EAAAkiB,UAAAqtD,EAAAhkE,GAAAvL,EAAA2rD,WAQAtvB,EAAA+xC,YAAA,WACA,IAAAzc,EAAAt8C,KAEA61B,GAAA4iC,GAAA,SAAA9tE,GACA,IAAAmL,EAAAnL,EAAA+f,eAAA,WAAA/f,EAAAmP,QAAA,EACAwiD,EAAA9gB,EAAA7wC,EAAAkiB,UAAAmtD,cAAAlkE,KAQAkxB,EAAAkyC,gBAAA,WACA,IAAAgB,EAEA,IACAA,EAAArjE,KAAAlN,MAA0B6qC,EAAA/6B,EAAQ2gE,aAAAC,QAlblC,4BAmbK,MAAA/gE,GACCm7B,EAAGv7B,KAAAI,GAGT4gE,GACAl6D,KAAAi6D,UAAAC,IAQAlzC,EAAAiyC,aAAA,WACA,GAAAj5D,KAAAsjC,SAAA01B,yBAAA,CAIA,IAAAkB,EAAAl6D,KAAAimD,YAEA,IACAlwD,OAAAC,KAAAkkE,GAAAttE,OACQ4nC,EAAA/6B,EAAQ2gE,aAAAE,QAzchB,0BAycgBzjE,KAAAC,UAAAojE,IAER1lC,EAAA/6B,EAAQ2gE,aAAAG,WA3chB,2BA6cK,MAAAjhE,GACCm7B,EAAGv7B,KAAAI,MAQT0tB,EAAA81B,cAAA,WACA,IAAA0d,EAAAx6D,KAAAojC,QAAAsB,SAAA,oBAEA81B,GACAA,EAAA1d,iBAUA91B,EAAAqoB,iBAAA,WACArvC,KAAAyuC,oBAAA,KACA,IAAAlgC,EAAAvO,KAAAojC,QAAAq3B,WACAC,EAAAnsD,KAAAosD,eACAC,EAAArsD,KAAAssD,eAEAH,EACAA,EAAAlhC,QACKohC,GACLA,EAAAphC,SAIAq/B,EAtUA,CAuUEprB,IAEFxK,GAAS0F,kBAAA,oBAAwCiwB,IAmBjD,IAAIkC,GAEJ,SAAAptB,GAgBA,SAAAqtB,EAAAt7B,EAAAzhC,GACA,IAAAypB,EAEAuzC,EAAAh9D,EAAAi9D,gBAA8DzmC,EAAA/6B,EAAQwhE,eAEtE,OAAAj9D,EAAAi9D,iBACAD,GAAA,GAIA,IAAA13B,EAAAN,IACAhM,UAAAgkC,EACAl3B,qBAAA,GACK9lC,GAoCL,OAnCAypB,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAA6D,IAAAtjC,MACAi7D,eAAAj9D,EAAAi9D,gBAAqDzmC,EAAA/6B,EAAQwhE,eAC7DxzC,EAAAyzC,cAAA,KACAzzC,EAAA0zC,gBAAA,KACA1zC,EAAA2zC,kBAA8B96B,GAAQ,WACtC7Y,EAAA4zC,iBACK,OAAcvnC,EAAuBA,EAAsBrM,KAEhEuzC,GACAvzC,EAAA0zC,gBAAA,IAAA1zC,EAAAwzC,eAAAxzC,EAAA2zC,mBAEA3zC,EAAA0zC,gBAAAG,QAAA77B,EAAA3yB,QAEA2a,EAAAyzC,cAAA,WACA,GAAAzzC,EAAAgc,KAAAhc,EAAAgc,IAAA83B,cAAA,CAIA,IAAAH,EAAA3zC,EAAA2zC,kBAEAI,EAAA/zC,EAAA+zC,gBAAA,WACAt0C,GAAAlnB,KAAA,SAAAo7D,GACAl0C,GAAAlnB,KAAA,SAAAw7D,GACAA,EAAA,MAKAv6D,GAAAwmB,EAAAgc,IAAA83B,cAAA,SAAAC,GACAv6D,GAAAwmB,EAAAgc,IAAA83B,cAAA,SAAAH,KAGA3zC,EAAAkX,IAAA,OAAAlX,EAAAyzC,gBAGAzzC,EAhEEyL,EAAc6nC,EAAArtB,GAmEhB,IAAA1mB,EAAA+zC,EAAAzkE,UA8DA,OA5DA0wB,EAAAgQ,SAAA,WACA,OAAA0W,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,UACAs4B,UAAA,qBACA8V,UAAA,IAEAE,cAAA,UAUAtnB,EAAAq0C,cAAA,WASAr7D,KAAAojC,SAAApjC,KAAAojC,QAAAhf,SAIApkB,KAAAojC,QAAAhf,QAAA,iBAGA4C,EAAAI,QAAA,WACApnB,KAAAo7D,mBACAp7D,KAAAo7D,kBAAA16B,SAGA1gC,KAAAm7D,kBACAn7D,KAAAojC,QAAAt2B,MACA9M,KAAAm7D,gBAAAM,UAAAz7D,KAAAojC,QAAAt2B,MAGA9M,KAAAm7D,gBAAAO,cAGA17D,KAAAk7D,eACAl7D,KAAAknB,IAAA,OAAAlnB,KAAAk7D,eAGAl7D,KAAAyjC,KAAAzjC,KAAAyjC,IAAA83B,eAAAv7D,KAAAw7D,iBACAx7D,KAAAw7D,gBAAAhlE,KAAAwJ,KAAAyjC,IAAA83B,eAGAv7D,KAAAi7D,eAAA,KACAj7D,KAAA27D,eAAA,KACA37D,KAAAo7D,kBAAA,KACAp7D,KAAAk7D,cAAA,KAEAxtB,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAGA+6D,EAlIA,CAmIE93B,IAEFA,GAAS0F,kBAAA,gBAAoCmyB,IAI7C,IAAIc,GAEJ,SAAAluB,GAGA,SAAAmuB,EAAAp8B,EAAAzhC,GACA,IAAAypB,EAGA6b,EAAAN,IACAhM,UAAA,GACKh5B,GAcL,OAbAypB,EAAAimB,EAAAl3C,KAAAwJ,KAAAy/B,EAAA6D,IAAAtjC,MAEA87D,SAEAr0C,EAAAxmB,GAAAwmB,EAAA2b,QAAA,iBAAA3b,EAAAs0C,sBAKA1xB,IAAA,WAAkC5T,EAAAh9B,GAAQ,oBAAyBg9B,EAAAh9B,GACnEguB,EAAAxmB,GAAew1B,EAAAh9B,EAAQ,mBAAAguB,EAAAu0C,wBAGvBv0C,EAtBEyL,EAAc2oC,EAAAnuB,GAyBhB,IAAA1mB,EAAA60C,EAAAvlE,UA2QA,OAzQA0wB,EAAAg1C,uBAAA,WACAh8D,KAAAojC,QAAA10C,aAAAiK,MAIQ89B,EAAAh9B,EAAQq7C,OAChB90C,KAAAi8D,eAEAj8D,KAAAk8D,kBAIAl1C,EAAAm1C,UAAA,WAEA,IAAAn8D,KAAAo8D,gBACA,SAGA,IAAAtO,EAAA9tD,KAAA8tD,kBACA1V,EAAAp4C,KAAAojC,QAAAgV,cACAikB,EAAAr8D,KAAAs8D,mBAQA,OAAAxO,IAAAn1D,KAAAm1D,GAHA,EAAAuO,EAAA,MAGAjkB,GAKApxB,EAAAu1C,WAAA,WACAv8D,KAAAw8D,aAAAx8D,KAAAw8D,aACA,IAAAxb,EAAAhhD,KAAAojC,QAAA4d,WAEA,GAAAA,KAAAp0D,OAAA,CAIA,IAAA6vE,EAAAz8D,KAAA6rD,cAIA4Q,IAAAz8D,KAAA08D,eACA18D,KAAA08D,eACA18D,KAAAs8D,mBAAAlqE,KAAAuqE,IAAAF,EAAAz8D,KAAA08D,eAGA18D,KAAAw8D,aAAA,EACAx8D,KAAA08D,aAAAD,EACAz8D,KAAAokB,QAAA,sBAGApkB,KAAAw8D,aAAAx8D,KAAA48D,cAAA,IAEA58D,KAAAm8D,cAAAn8D,KAAA68D,mBACA78D,KAAA88D,gBAAA98D,KAAAm8D,YACAn8D,KAAAokB,QAAA,qBASA4C,EAAA+0C,qBAAA,WACA/7D,KAAAojC,QAAA10C,aAAAiK,IACAqH,KAAAk8D,gBAEAl8D,KAAAi8D,gBAQAj1C,EAAAk1C,cAAA,WACA,IAAAh0C,EAAAloB,KAEAA,KAAA+8D,eAIA/8D,KAAAg9D,kBAAAh9D,KAAAma,YAAAna,KAAAu8D,WAAA,IACAv8D,KAAAu8D,aACAv8D,KAAAiB,GAAAjB,KAAAojC,QAAA,OAAApjC,KAAAu8D,YACAv8D,KAAAiB,GAAAjB,KAAAojC,QAAA,QAAApjC,KAAAu8D,YACAv8D,KAAA2+B,IAAA3+B,KAAAojC,QAAA,OAAApjC,KAAAioD,YAGAjoD,KAAAo8D,kBACAp8D,KAAAi9D,iBAAA,WACA/0C,EAAAk0C,iBAAA,EACAl0C,EAAA+0C,iBAAA,MAGAj9D,KAAA2+B,IAAA3+B,KAAAojC,QAAA,aAAApjC,KAAAi9D,qBAIAj2C,EAAAihC,WAAA,WACAjoD,KAAA2+B,IAAA3+B,KAAAojC,QAAA,aAAApjC,KAAAsqD,iBAQAtjC,EAAA80C,OAAA,WACA97D,KAAAw8D,aAAA,EACAx8D,KAAA08D,aAAA,KACA18D,KAAA88D,gBAAA,KACA98D,KAAAo8D,iBAAA,EACAp8D,KAAAoa,cAAApa,KAAAg9D,mBACAh9D,KAAAg9D,kBAAA,KACAh9D,KAAAs8D,mBAAA,GACAt8D,KAAAknB,IAAAlnB,KAAAojC,QAAA,OAAApjC,KAAAu8D,YACAv8D,KAAAknB,IAAAlnB,KAAAojC,QAAA,QAAApjC,KAAAu8D,YACAv8D,KAAAknB,IAAAlnB,KAAAojC,QAAA,OAAApjC,KAAAioD,YACAjoD,KAAAknB,IAAAlnB,KAAAojC,QAAA,aAAApjC,KAAAsqD,gBAEAtqD,KAAAi9D,mBACAj9D,KAAAknB,IAAAlnB,KAAAojC,QAAA,aAAApjC,KAAAi9D,kBACAj9D,KAAAi9D,iBAAA,OAQAj2C,EAAAi1C,aAAA,WACAj8D,KAAA+8D,cAIA/8D,KAAA87D,UAQA90C,EAAA6kC,YAAA,WAKA,IAJA,IAAA7K,EAAAhhD,KAAAojC,QAAA4d,WACAkc,KACAjyE,EAAA+1D,IAAAp0D,OAAA,EAEA3B,KACAiyE,EAAAvxE,KAAAq1D,EAAA7rD,IAAAlK,IAKA,OAAAiyE,EAAAtwE,OAAAswE,EAAAC,OAAAD,EAAAtwE,OAAA,GAAA+L,KAQAquB,EAAAinC,cAAA,WAKA,IAJA,IAAAjN,EAAAhhD,KAAAojC,QAAA4d,WACAoc,KACAnyE,EAAA+1D,IAAAp0D,OAAA,EAEA3B,KACAmyE,EAAAzxE,KAAAq1D,EAAAzzB,MAAAtiC,IAKA,OAAAmyE,EAAAxwE,OAAAwwE,EAAAD,OAAA,MAOAn2C,EAAAgmC,WAAA,WACA,IAAAc,EAAA9tD,KAAA8tD,kBAEA,OAAAA,IAAAn1D,IACAA,IAGAm1D,EAAA9tD,KAAAiuD,iBAQAjnC,EAAA4kC,OAAA,WACA,OAAA5rD,KAAA+8D,cAQA/1C,EAAAqjC,WAAA,WACA,OAAArqD,KAAA68D,kBAOA71C,EAAA8mC,gBAAA,WACA,OAAA9tD,KAAA48D,cAAA58D,KAAA6rD,eAOA7kC,EAAA41C,YAAA,WACA,OAAA58D,KAAAw8D,cAQAx1C,EAAA61C,eAAA,WACA,OAAA78D,KAAA88D,iBAGA91C,EAAA+1C,WAAA,WACA,uBAAA/8D,KAAAg9D,mBAOAh2C,EAAAsjC,eAAA,WACAtqD,KAAAqqD,eAIArqD,KAAAojC,QAAAgV,YAAAp4C,KAAA8tD,mBAEA9tD,KAAAojC,QAAA0L,UACA9uC,KAAAojC,QAAAD,SAIAnc,EAAAI,QAAA,WACApnB,KAAAi8D,eAEAvuB,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAGA67D,EArSA,CAsSE54B,IAEFA,GAAS0F,kBAAA,cAAkCizB,IAgB3C,IAAAyB,GAAA,SAAAtwB,GACA,IAAAjgC,EAAAigC,EAAAjgC,KAEA,GAAAA,EAAA+jC,aAAA,OAEA,OADA9D,EAAA8N,iBAAA/tC,EAAAqgC,MACA,EAgBA,IAAApX,EAAAgX,EAAAtR,GAAA,UACA6hC,KACAnwB,EAAA,GAEA,IAAApX,EAAAnpC,OACA,SAIA,QAAA3B,EAAA,EAAiBA,EAAA8qC,EAAAnpC,OAAoB3B,IAAA,CACrC,IAAAkjB,EAAA4nB,EAAA9qC,GAAAkiD,IAEAh/B,IAAA,IAAAmvD,EAAA/jE,QAAA4U,IACAmvD,EAAA3xE,KAAAwiB,GAKA,QAAAmvD,EAAA1wE,SAMA,IAAA0wE,EAAA1wE,SACAugD,EAAAmwB,EAAA,IAGAvwB,EAAA8N,iBAAA1N,IACA,IAQAowB,GAAAxnE,OAAAkN,kBAA0D,aAC1DC,IAAA,WACA,OAAAlD,KAAAw9D,WAAA,GAAAhoB,WAEAr9B,IAAA,SAAA5iB,GAEA,IAAAkoE,EAAgBhnC,EAAAh9B,EAAQ29B,cAAAp3B,KAAA2c,SAAA6M,eAExBi0C,EAAAjoB,UAAAjgD,EAKA,IAHA,IAAAmoE,EAAkBjnC,EAAAh9B,EAAQkkE,yBAG1BF,EAAAG,WAAAhxE,QACA8wE,EAAA1lC,YAAAylC,EAAAG,WAAA,IASA,OALA59D,KAAA43B,UAAA,GAGIpD,EAAA/6B,EAAQokE,QAAAvnE,UAAA0hC,YAAAxhC,KAAAwJ,KAAA09D,GAEZ19D,KAAAw1C,aAQAsoB,GAAA,SAAAC,EAAA7nC,GAGA,IAFA,IAAA1H,KAEAvjC,EAAA,EAAiBA,EAAA8yE,EAAAnxE,WACjB4hC,EAAAz4B,OAAAioE,yBAAAD,EAAA9yE,GAAAirC,KAEA1H,EAAArW,KAAAqW,EAAAtrB,KAHsCjY,KAUtC,OAFAujC,EAAApY,YAAA,EACAoY,EAAAxZ,cAAA,EACAwZ,GA0BAyvC,GAAA,SAAAlxB,GACA,IAAAjgC,EAAAigC,EAAAjgC,KAEA,IAAAA,EAAAoxD,kBAAA,CAIA,IAAAnhC,KACAohC,EA/B0B,SAAApxB,GAC1B,OAAA+wB,IAAA/wB,EAAAjgC,KAAmC0nB,EAAA/6B,EAAQ2kE,iBAAA9nE,UAA6Bk+B,EAAA/6B,EAAQokE,QAAAvnE,UAAAinE,IAAA,aA8BxDc,CAAsBtxB,GAE9CuxB,EAAA,SAAAC,GACA,kBACA,QAAA3pC,EAAA7kB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAAi/B,GAAAppB,EAAA,EAAyEA,EAAAopB,EAAappB,IACtFsE,EAAAtE,GAAAuE,UAAAvE,GAGA,IAAAgzD,EAAAD,EAAA9lE,MAAAqU,EAAAgD,GAEA,OADAutD,GAAAtwB,GACAyxB,KAIA,6CAAAzlE,QAAA,SAAA8gC,GACA/sB,EAAA+sB,KAKAkD,EAAAlD,GAAA/sB,EAAA+sB,GAGA/sB,EAAA+sB,GAAAykC,EAAAvhC,EAAAlD,OAEA9jC,OAAAkN,eAAA6J,EAAA,YAAAk2B,GAAAm7B,GACAhmD,IAAAmmD,EAAAH,EAAAhmD,QAGArL,EAAAoxD,kBAAA,WACApxD,EAAAoxD,kBAAA,KACAnoE,OAAAC,KAAA+mC,GAAAhkC,QAAA,SAAA8gC,GACA/sB,EAAA+sB,GAAAkD,EAAAlD,KAEA9jC,OAAAkN,eAAA6J,EAAA,YAAAqxD,IAIApxB,EAAApO,IAAA,YAAA7xB,EAAAoxD,qBAQAO,GAAA1oE,OAAAkN,kBAAoD,OACpDC,IAAA,WACA,OAAAlD,KAAA6wC,aAAA,OACa6E,GAAelhB,EAAA/6B,EAAQokE,QAAAvnE,UAAAyL,aAAAvL,KAAAwJ,KAAA,QAGpC,IAEAmY,IAAA,SAAA5iB,GAEA,OADIi/B,EAAA/6B,EAAQokE,QAAAvnE,UAAAkhC,aAAAhhC,KAAAwJ,KAAA,MAAAzK,GACZA,KAwBAmpE,GAAA,SAAA3xB,GACA,GAAAA,EAAAyR,kBAAA,CAIA,IAAA1xC,EAAAigC,EAAAjgC,KAEA,IAAAA,EAAA6xD,gBAAA,CAIA,IAAAC,EA/BoB,SAAA7xB,GACpB,OAAA+wB,IAAA/wB,EAAAjgC,KAAmC0nB,EAAA/6B,EAAQ2kE,iBAAA9nE,UAAAmoE,IAAA,OA8BrBI,CAAgB9xB,GACtC+xB,EAAAhyD,EAAA0qB,aACAunC,EAAAjyD,EAAAosC,KACAnjD,OAAAkN,eAAA6J,EAAA,MAAAk2B,GAAA47B,GACAzmD,IAAA,SAAA5iB,GACA,IAAAipE,EAAAI,EAAAzmD,IAAA3hB,KAAAsW,EAAAvX,GAGA,OADAw3C,EAAA8N,iBAAA/tC,EAAAqgC,KACAqxB,MAIA1xD,EAAA0qB,aAAA,SAAA/jB,EAAAle,GACA,IAAAipE,EAAAM,EAAAtoE,KAAAsW,EAAA2G,EAAAle,GAMA,MAJA,OAAAyM,KAAAyR,IACAs5B,EAAA8N,iBAAA/tC,EAAAqgC,KAGAqxB,GAGA1xD,EAAAosC,KAAA,WACA,IAAAslB,EAAAO,EAAAvoE,KAAAsW,GAUA,OALAuwD,GAAAtwB,KACAA,EAAA8N,iBAAA,IACAojB,GAAAlxB,IAGAyxB,GAGA1xD,EAAAkyD,WACAjyB,EAAA8N,iBAAA/tC,EAAAkyD,YACG3B,GAAAtwB,IACHkxB,GAAAlxB,GAGAjgC,EAAA6xD,gBAAA,WACA7xD,EAAA6xD,gBAAA,KACA7xD,EAAAosC,KAAA6lB,EACAjyD,EAAA0qB,aAAAsnC,EACA/oE,OAAAkN,eAAA6J,EAAA,MAAA8xD,GAEA9xD,EAAAoxD,mBACApxD,EAAAoxD,wBAKA,SAAAe,KACA,IAAAp1E,EAAAkqC,GAAA,uJAMA,OAJAkrC,GAAA,WACA,OAAAp1E,GAGAA,EASA,IAAIq1E,GAEJ,SAAAxgB,GAYA,SAAAygB,EAAAnhE,EAAAmS,GACA,IAAAsX,EAEAA,EAAAi3B,EAAAloD,KAAAwJ,KAAAhC,EAAAmS,IAAAnQ,KACA,IAAAmH,EAAAnJ,EAAAmJ,OACAi4D,GAAA,EAgBA,GAXAj4D,IAAAsgB,EAAAgc,IAAAu7B,aAAA73D,EAAAgmC,KAAAnvC,EAAArR,KAAA,IAAAqR,EAAArR,IAAA0yE,mBACA53C,EAAA03B,UAAAh4C,GAEAsgB,EAAA63C,gBAAA73C,EAAAgc,KAIAzlC,EAAAuhE,iBACA93C,EAAA+3C,0BAGA/3C,EAAAgc,IAAAg8B,gBAAA,CAKA,IAJA,IAAAC,EAAAj4C,EAAAgc,IAAAm6B,WACA+B,EAAAD,EAAA9yE,OACAgzE,KAEAD,KAAA,CACA,IAAAvkC,EAAAskC,EAAAC,GAGA,UAFAvkC,EAAAze,SAAA6M,gBAGA/B,EAAA+yB,0BAQA/yB,EAAA61B,qBAAAnK,iBAAA/X,GAEA3T,EAAAk1B,mBAAAnL,SAAApW,EAAAhjB,OAEAqP,EAAA2lB,aAAAoE,SAAApW,EAAAhjB,OAEAgnD,GAAA33C,EAAAgc,IAAAoN,aAAA,iBAAgFgF,GAAaza,EAAA+R,OAC7FiyB,GAAA,IAVAQ,EAAAj0E,KAAAyvC,IAgBA,QAAAnwC,EAAA,EAAqBA,EAAA20E,EAAAhzE,OAAwB3B,IAC7Cw8B,EAAAgc,IAAAxI,YAAA2kC,EAAA30E,IA2BA,OAvBAw8B,EAAAo4C,qBAEAp4C,EAAA+yB,0BAAA4kB,GACM3qC,EAAGv7B,KAAMq+B,IAAI0nC,OAInBx3C,EAAAq4C,2CAMAt1B,IAAAhB,IAAAQ,MAAA,IAAAhsC,EAAA48C,wBACAnzB,EAAAs4C,aAAA,GAKAt4C,EAAAu4C,yBAEAv4C,EAAAse,eAEAte,EA3FEyL,EAAcisC,EAAAzgB,GAkGhB,IAAA13B,EAAAm4C,EAAA7oE,UA6wBA,OA3wBA0wB,EAAAI,QAAA,WACApnB,KAAAyjC,KAAAzjC,KAAAyjC,IAAAk7B,iBACA3+D,KAAAyjC,IAAAk7B,kBAGAQ,EAAAc,oBAAAjgE,KAAAyjC,KACAzjC,KAAAsjC,SAAA,KAEAob,EAAApoD,UAAA8wB,QAAA5wB,KAAAwJ,OAQAgnB,EAAAw4C,wBAAA,WACAd,GAAA1+D,OAYAgnB,EAAA84C,wCAAA,WACA,IACAI,EADA9yB,EAAAptC,KAAAotC,aAGA+yB,EAAA,WACAD,KAEA,QAAAj1E,EAAA,EAAqBA,EAAAmiD,EAAAxgD,OAAuB3B,IAAA,CAC5C,IAAAmtB,EAAAg1B,EAAAniD,GAEA,aAAAmtB,EAAA06B,MACAotB,EAAAv0E,MACAysB,QACAgoD,WAAAhoD,EAAAtD,SAQAqrD,IACA/yB,EAAA/hC,iBAAA,SAAA80D,GACAngE,KAAAiB,GAAA,qBACA,OAAAmsC,EAAA9Q,oBAAA,SAAA6jC,KAGA,IAAAE,EAAA,SAAAA,IACA,QAAAp1E,EAAA,EAAqBA,EAAAi1E,EAAAtzE,OAA6C3B,IAAA,CAClE,IAAAq1E,EAAAJ,EAAAj1E,GAEA,aAAAq1E,EAAAloD,MAAAtD,MAAAwrD,EAAAloD,MAAAtD,OAAAwrD,EAAAF,aACAE,EAAAloD,MAAAtD,KAAAwrD,EAAAF,YAKAhzB,EAAA9Q,oBAAA,SAAA+jC,IAKArgE,KAAAiB,GAAA,mCACAmsC,EAAA9Q,oBAAA,SAAA6jC,GAEA/yB,EAAA9Q,oBAAA,SAAA+jC,GACAjzB,EAAA/hC,iBAAA,SAAAg1D,KAGArgE,KAAAiB,GAAA,iCAEAmsC,EAAA9Q,oBAAA,SAAA6jC,GACA/yB,EAAA/hC,iBAAA,SAAA80D,GAEA/yB,EAAA9Q,oBAAA,SAAA+jC,MAcAr5C,EAAAu5C,gBAAA,SAAArrE,EAAAsrE,GACA,IAAAt4C,EAAAloB,KAGA,GAAAwgE,IAAAxgE,KAAA,iBAAA9K,EAAA,WAIA,IAAAurE,EAAAvrE,EAAAs0B,cAEAxpB,KAAAygE,EAAA,qBACA1qE,OAAAC,KAAAgK,KAAAygE,EAAA,qBAAA1nE,QAAA,SAAA2nE,GACAx4C,EAAApb,KAAA2zD,EAAA,UAEAnkC,oBAAAokC,EAAAx4C,EAAAu4C,EAAA,oBAAAC,MAIA1gE,KAAA,iBAAA9K,EAAA,WAAAsrE,EACAxgE,KAAAygE,EAAA,yBACAzgE,KAAA2gE,0BAAAF,KAUAz5C,EAAA22B,0BAAA,SAAA6iB,GACAxgE,KAAAugE,gBAAA,QAAAC,IAUAx5C,EAAA42B,0BAAA,SAAA4iB,GACAxgE,KAAAugE,gBAAA,QAAAC,IAWAx5C,EAAA25C,0BAAA,SAAAhzE,GACA,IAAAk8B,EAAA7pB,KAEAnG,EAAAw/C,GAAA1rD,GACAizE,EAAA5gE,KAAA8M,KAAAjT,EAAA4/C,YACAonB,EAAA7gE,KAAAnG,EAAA4/C,cAEA,GAAAz5C,KAAA,iBAAAnG,EAAA2/C,YAAA,WAAAonB,KAAAv1D,iBAAA,CAIA,IAAA0b,GACA8qB,OAAA,SAAA3zC,GACA2iE,EAAAz8C,SACAlvB,KAAA,SACA0L,OAAAigE,EACA/+D,cAAA++D,EACA7jC,WAAA6jC,KAGA/uB,SAAA,SAAA5zC,GACA2iE,EAAArvB,SAAAtzC,EAAAka,QAEA25B,YAAA,SAAA7zC,GACA2iE,EAAApvB,YAAAvzC,EAAAka,SAIA0oD,EAAA,WAGA,IAFA,IAAAC,KAEA91E,EAAA,EAAqBA,EAAA41E,EAAAj0E,OAAuB3B,IAAA,CAG5C,IAFA,IAAA+1E,GAAA,EAEAp6D,EAAA,EAAuBA,EAAAg6D,EAAAh0E,OAAqBga,IAC5C,GAAAg6D,EAAAh6D,KAAAi6D,EAAA51E,GAAA,CACA+1E,GAAA,EACA,MAIAA,GACAD,EAAAp1E,KAAAk1E,EAAA51E,IAIA,KAAA81E,EAAAn0E,QACAi0E,EAAApvB,YAAAsvB,EAAA5jE,UAIA6C,KAAAnG,EAAA4/C,WAAA,cAAA1yB,EACAhxB,OAAAC,KAAA+wB,GAAAhuB,QAAA,SAAA2nE,GACA,IAAAz5C,EAAAF,EAAA25C,GACAE,EAAAv1D,iBAAAq1D,EAAAz5C,GAEA4C,EAAA5oB,GAAA,mBAAA/C,GACA,OAAA0iE,EAAAtkC,oBAAAokC,EAAAz5C,OAIAjnB,KAAAiB,GAAA,YAAA6/D,GACA9gE,KAAAiB,GAAA,mBAAA/C,GACA,OAAA2rB,EAAA3C,IAAA,YAAA45C,OAWA95C,EAAA64C,mBAAA,WACA,IAAAr3B,EAAAxoC,KAEAq5C,GAAAU,MAAAhhD,QAAA,SAAApL,GACA66C,EAAAm4B,0BAAAhzE,MAWAq5B,EAAAgQ,SAAA,WACA,IAAAlqB,EAAA9M,KAAAsjC,SAAA32C,IAKA,IAAAmgB,IAAA9M,KAAAsjC,SAAA29B,iBAAAjhE,KAAAkhE,wBAAA,CAEA,GAAAp0D,EAAA,CACA,IAAA7O,EAAA6O,EAAA0wD,WAAA,GAEA1wD,EAAA6sB,YACA7sB,EAAA6sB,WAAA5B,aAAA95B,EAAA6O,GAGAqyD,EAAAc,oBAAAnzD,GACAA,EAAA7O,MACO,CACP6O,EAAa2pB,EAAAh9B,EAAQ29B,cAAA,SAErB,IACAvP,EAAAmb,MADAhjC,KAAAsjC,SAAA32C,KAAAwsC,GAAAn5B,KAAAsjC,SAAA32C,MAGA69C,KAAA,IAAAxqC,KAAAsjC,SAAAsX,+BACA/yB,EAAAqnB,SAGAlW,GAAAlsB,EAA0BgpB,GAAMjO,GAChCxvB,GAAA2H,KAAAsjC,SAAA69B,OACAhgE,MAAA,cAIA2L,EAAAs0D,SAAAphE,KAAAsjC,SAAA89B,cAGA,IAAAphE,KAAAsjC,SAAA+9B,SACA7pC,GAAA1qB,EAAA,UAAA9M,KAAAsjC,SAAA+9B,SAQA,IAFA,IAAAC,GAAA,yCAEAr2E,EAAA,EAAmBA,EAAAq2E,EAAA10E,OAA0B3B,IAAA,CAC7C,IAAA68B,EAAAw5C,EAAAr2E,GACAmL,EAAA4J,KAAAsjC,SAAAxb,QAEA,IAAA1xB,IACAA,EACAohC,GAAA1qB,EAAAgb,KAEAoR,GAAApsB,EAAAgb,GAGAhb,EAAAgb,GAAA1xB,GAIA,OAAA0W,GAiBAka,EAAAs4C,gBAAA,SAAAxyD,GACA,OAAAA,EAAAy0D,cAAA,IAAAz0D,EAAAy0D,aAAA,CAMA,OAAAz0D,EAAA2Q,WAAA,CAWA,IAAA+jD,GAAA,EAEAC,EAAA,WACAD,GAAA,GAGAxhE,KAAAiB,GAAA,YAAAwgE,GAEA,IAAAC,EAAA,WAGAF,GACAxhE,KAAAokB,QAAA,cAcA,OAVApkB,KAAAiB,GAAA,iBAAAygE,QACA1hE,KAAAmQ,MAAA,WACAnQ,KAAAknB,IAAA,YAAAu6C,GACAzhE,KAAAknB,IAAA,iBAAAw6C,GAEAF,GAEAxhE,KAAAokB,QAAA,eAUA,IAAAu9C,GAAA,aAEAA,EAAAh2E,KAAA,kBAEAmhB,EAAA2Q,YAAA,GACAkkD,EAAAh2E,KAAA,cAIAmhB,EAAA2Q,YAAA,GACAkkD,EAAAh2E,KAAA,WAIAmhB,EAAA2Q,YAAA,GACAkkD,EAAAh2E,KAAA,kBAIAqU,KAAAmQ,MAAA,WACAwxD,EAAA5oE,QAAA,SAAA7D,GACA8K,KAAAokB,QAAAlvB,IACO8K,UAWPgnB,EAAAm1B,eAAA,SAAAnzD,GACA,IACAgX,KAAAyjC,IAAA2U,YAAApvD,EACK,MAAAkV,GACCu2B,EAAGv2B,EAAA,oCAWT8oB,EAAAt4B,SAAA,WACA,IAAA4tD,EAAAt8C,KAMA,GAAAA,KAAAyjC,IAAA/0C,WAAAiK,KAAAixC,IAAAO,IAAA,IAAAnqC,KAAAyjC,IAAA2U,YAAA,CAeA,OADAp4C,KAAAiB,GAAA,aAXA,SAAA2gE,IACAtlB,EAAA7Y,IAAA2U,YAAA,IAEAkE,EAAA7Y,IAAA/0C,WAAAiK,KACA2jD,EAAAl4B,QAAA,kBAGAk4B,EAAAp1B,IAAA,aAAA06C,MAKAC,IAGA,OAAA7hE,KAAAyjC,IAAA/0C,UAAAmzE,KAUA76C,EAAA38B,MAAA,WACA,OAAA2V,KAAAyjC,IAAAlJ,aAUAvT,EAAA18B,OAAA,WACA,OAAA0V,KAAAyjC,IAAAhJ,cAcAzT,EAAAg5C,uBAAA,WACA,IAAAvjB,EAAAz8C,KAEA,kCAAAA,KAAAyjC,IAAA,CAIA,IAAAq+B,EAAA,WACA9hE,KAAAokB,QAAA,oBACA+qC,cAAA,KAIA4S,EAAA,WACA,2BAAA/hE,KAAAyjC,KAAA,uBAAAzjC,KAAAyjC,IAAAu+B,yBACAhiE,KAAA2+B,IAAA,sBAAAmjC,GACA9hE,KAAAokB,QAAA,oBACA+qC,cAAA,MAKAnvD,KAAAiB,GAAA,wBAAA8gE,GACA/hE,KAAAiB,GAAA,qBACAw7C,EAAAv1B,IAAA,wBAAA66C,GAEAtlB,EAAAv1B,IAAA,sBAAA46C,OAYA96C,EAAAi7C,mBAAA,WACA,sBAAAjiE,KAAAyjC,IAAAy+B,sBAAA,CACA,IAAAt0D,EAAsB4mB,EAAA/6B,EAAQkU,WAAc6mB,EAAA/6B,EAAQkU,UAAAC,WAAA,GAEpD,aAAA5L,KAAA4L,KAAA,uBAAA5L,KAAA4L,GACA,SAIA,UAOAoZ,EAAAm7C,gBAAA,WACA,IAAApqD,EAAA/X,KAAAyjC,IAEA1rB,EAAA+2B,QAAA/2B,EAAAwpD,cAAAxpD,EAAAqqD,eAGApiE,KAAAyjC,IAAAN,OAGAnjC,KAAA0S,WAAA,WACAqF,EAAAi3B,QACAj3B,EAAAmqD,yBACO,IAEPnqD,EAAAmqD,yBAQAl7C,EAAAq7C,eAAA,WACAriE,KAAAyjC,IAAA6+B,wBAiBAt7C,EAAAmmB,IAAA,SAAAoT,GACA,QAAAtkD,IAAAskD,EACA,OAAAvgD,KAAAyjC,IAAA0J,IAIAntC,KAAA2jD,OAAApD,IAQAv5B,EAAAg1B,MAAA,WACAmjB,EAAAoD,kBAAAviE,KAAAyjC,MAYAzc,EAAAg4C,WAAA,WACA,OAAAh/D,KAAAs/C,eACAt/C,KAAAs/C,eAAAnS,IAGAntC,KAAAyjC,IAAAu7B,YAUAh4C,EAAA+4C,YAAA,SAAAvkE,GACAwE,KAAAyjC,IAAAyL,WAAA1zC,GAmBAwrB,EAAAg2B,aAAA,SAAAlK,EAAAtE,EAAAlgD,GACA,OAAA0R,KAAAw6C,yBAIAx6C,KAAAyjC,IAAAuZ,aAAAlK,EAAAtE,EAAAlgD,GAHAowD,EAAApoD,UAAA0mD,aAAAxmD,KAAAwJ,KAAA8yC,EAAAtE,EAAAlgD,IAmCA04B,EAAAk2B,sBAAA,SAAAl/C,GACA,IAAAgC,KAAAw6C,yBACA,OAAAkE,EAAApoD,UAAA4mD,sBAAA1mD,KAAAwJ,KAAAhC,GAGA,IAAAq/C,EAA2B5mB,EAAAh9B,EAAQ29B,cAAA,SA0BnC,OAxBAp5B,EAAA80C,OACAuK,EAAAvK,KAAA90C,EAAA80C,MAGA90C,EAAAwwC,QACA6O,EAAA7O,MAAAxwC,EAAAwwC,QAGAxwC,EAAA1P,UAAA0P,EAAA45C,WACAyF,EAAAzF,QAAA55C,EAAA1P,UAAA0P,EAAA45C,SAGA55C,EAAAlE,UACAujD,EAAAvjD,QAAAkE,EAAAlE,SAGAkE,EAAA3F,KACAglD,EAAAhlD,GAAA2F,EAAA3F,IAGA2F,EAAAmvC,MACAkQ,EAAAlQ,IAAAnvC,EAAAmvC,KAGAkQ,GAgBAr2B,EAAAsmB,mBAAA,SAAAtvC,EAAAm/C,GACA,IAAAE,EAAAqB,EAAApoD,UAAAg3C,mBAAA92C,KAAAwJ,KAAAhC,EAAAm/C,GAMA,OAJAn9C,KAAAw6C,0BACAx6C,KAAA8M,KAAAkrB,YAAAqlB,GAGAA,GAUAr2B,EAAA80B,sBAAA,SAAA1jC,GAGA,GAFAsmC,EAAApoD,UAAAwlD,sBAAAtlD,KAAAwJ,KAAAoY,GAEApY,KAAAw6C,yBAIA,IAHA,IAAAjiC,EAAAvY,KAAAy7B,GAAA,SACAxwC,EAAAstB,EAAA3rB,OAEA3B,KACAmtB,IAAAG,EAAAttB,IAAAmtB,IAAAG,EAAAttB,GAAAmtB,OACApY,KAAA8M,KAAAmuB,YAAA1iB,EAAAttB,KAgBA+7B,EAAAu2B,wBAAA,WACA,sBAAAv9C,KAAA8M,KAAAywC,wBACA,OAAAv9C,KAAA8M,KAAAywC,0BAGA,IAAAilB,KAaA,YAXA,IAAAxiE,KAAA8M,KAAA21D,8BAAA,IAAAziE,KAAA8M,KAAA41D,0BACAF,EAAAG,mBAAA3iE,KAAA8M,KAAA21D,wBACAD,EAAAI,iBAAA5iE,KAAA8M,KAAA41D,yBAGQluC,EAAA/6B,EAAQqU,aAA+B,mBAAR0mB,EAAA/6B,EAAQqU,YAAAC,IAC/Cy0D,EAAAj0E,aAA0CimC,EAAA/6B,EAAQqU,YAAAC,MACnCymB,EAAA/6B,EAAQqU,aAAgB0mB,EAAA/6B,EAAQqU,YAAA+0D,QAAsC,iBAARruC,EAAA/6B,EAAQqU,YAAA+0D,OAAAC,kBACrFN,EAAAj0E,aAA0CimC,EAAA/6B,EAAQxQ,KAAA8kB,MAAcymB,EAAA/6B,EAAQqU,YAAA+0D,OAAAC,iBAGxEN,GAGArD,EAh3BA,CAi3BEnlB,IAIF,GAAAxjB,KAAA,CAQE0oC,GAAK6D,SAAYtsC,EAAAh9B,EAAQ29B,cAAA,SAC3B,IAAM4rC,GAAQvsC,EAAAh9B,EAAQ29B,cAAA,SACpB4rC,GAAKlwB,KAAA,WACLkwB,GAAKprB,QAAA,KACLorB,GAAKx0B,MAAA,UACL0wB,GAAK6D,SAAA/qC,YAAsBgrC,IAW7B9D,GAAKxc,YAAA,WAEL,IACIwc,GAAK6D,SAAAtzE,OAAA,GACN,MAAAyO,GACH,SAGA,SAAYghE,GAAK6D,WAAa7D,GAAK6D,SAAAllB,cAWnCqhB,GAAKrhB,YAAA,SAAA3oD,GACL,OAASgqE,GAAK6D,SAAAllB,YAAA3oD,IAadgqE,GAAKphB,cAAA,SAAAC,EAAA//C,GACL,OAASkhE,GAAKrhB,YAAAE,EAAA7oD,OAadgqE,GAAK+D,iBAAA,WAEL,IACA,IAAAxzE,EAAiByvE,GAAK6D,SAAAtzE,OAEtB,OADIyvE,GAAK6D,SAAAtzE,SAAA,KACTA,IAAsByvE,GAAK6D,SAAAtzE,OACxB,MAAAyO,GACH,WAcAghE,GAAKgE,cAAA,WACL,IACA,IAAAtT,EAAgBsP,GAAK6D,SAAAnT,MAWrB,OARIsP,GAAK6D,SAAAnT,SAEDsP,GAAK6D,SAAAnT,MACbp4B,GAAmB0nC,GAAK6D,SAAA,iBAExB7pC,GAAsBgmC,GAAK6D,SAAA,SAG3BnT,IAAqBsP,GAAK6D,SAAAnT,MACvB,MAAA1xD,GACH,WAYAghE,GAAKiE,uBAAA,WAGL,GAAAv5B,IAAAO,IAAAC,GAAA,GACA,SAIA,IACA,IAAA0sB,EAAuBoI,GAAK6D,SAAAjM,aAE5B,OADIoI,GAAK6D,SAAAjM,eAAA,KACTA,IAA4BoI,GAAK6D,SAAAjM,aAC9B,MAAA54D,GACH,WAaAghE,GAAKkE,sBAAA,WAGL,IACA,IAAAC,EAAA,aAEAttE,OAAAkN,eAA0BwzB,EAAAh9B,EAAQ29B,cAAA,gBAClCl0B,IAAAmgE,EACAlrD,IAAAkrD,IAEAttE,OAAAkN,eAA0BwzB,EAAAh9B,EAAQ29B,cAAA,gBAClCl0B,IAAAmgE,EACAlrD,IAAAkrD,IAEAttE,OAAAkN,eAA0BwzB,EAAAh9B,EAAQ29B,cAAA,sBAClCl0B,IAAAmgE,EACAlrD,IAAAkrD,IAEAttE,OAAAkN,eAA0BwzB,EAAAh9B,EAAQ29B,cAAA,sBAClCl0B,IAAAmgE,EACAlrD,IAAAkrD,IAEG,MAAAnlE,GACH,SAGA,UAWAghE,GAAKoE,yBAAA,WACL,OAAA/4B,IAAAb,IAAAS,IAWA+0B,GAAKqE,0BAAA,WACL,SAAYrE,GAAK6D,WAAa7D,GAAK6D,SAAAS,cAWnCtE,GAAKuE,0BAAA,WACL,SAAYvE,GAAK6D,WAAa7D,GAAK6D,SAAApM,cAUnCuI,GAAKpgC,QAAA,gQAQLogC,GAAK5oE,UAAA8nD,sBAAmC8gB,GAAK+D,mBAQ7C/D,GAAK5oE,UAAA+nD,oBAAiC6gB,GAAKgE,gBAW3ChE,GAAK5oE,UAAAioD,qBAAkC2gB,GAAKiE,yBAQ5CjE,GAAK5oE,UAAAkoD,kBAA+B0gB,GAAKkE,wBAUzClE,GAAK5oE,UAAA4qE,yBAAAx3B,GAWLw1B,GAAK5oE,UAAAgoD,0BAAA,EASL4gB,GAAK5oE,UAAA4jD,wBAAA,EAQLglB,GAAK5oE,UAAA8jD,0BAAA,EAQL8kB,GAAK5oE,UAAAkkD,yBAAsC0kB,GAAKoE,2BAQhDpE,GAAK5oE,UAAAotE,0BAAuCxE,GAAKqE,4BAQjDrE,GAAK5oE,UAAAqtE,0BAAuCzE,GAAKuE,4BAEjD,IAAA5lB,GAAkBqhB,GAAK6D,UAAa7D,GAAK6D,SAAAxvD,YAAAjd,UAAAunD,YACzC+lB,GAAA,4CA6rBA,SAAAC,KACA,IAAAh6E,EAAAkqC,GAAA,+KAMA,OAJA8vC,GAAA,WACA,OAAAh6E,GAGAA,EAlsBAq1E,GAAK4E,iBAAA,WAGLj6B,IAAA,IAAAI,KAAAE,KACI+0B,GAAK6D,SAAAxvD,YAAAjd,UAAAunD,YAAA,SAAA3oD,GACT,OAAAA,GAAA0uE,GAAA5hE,KAAA9M,GACA,QAGA2oD,GAAArnD,KAAAwJ,KAAA9K,MAKAgqE,GAAK6E,mBAAA,WACL,IAAAC,EAAU9E,GAAK6D,SAAAxvD,YAAAjd,UAAAunD,YAEf,OADEqhB,GAAK6D,SAAAxvD,YAAAjd,UAAAunD,eACPmmB,GAIA9E,GAAK4E,mBAEL5E,GAAKe,oBAAA,SAAAnzD,GACL,GAAAA,EAAA,CASA,IALAA,EAAA6sB,YACA7sB,EAAA6sB,WAAAsB,YAAAnuB,GAIAA,EAAA2yD,iBACA3yD,EAAAmuB,YAAAnuB,EAAAgrB,YAKAhrB,EAAAosB,gBAAA,OAGA,mBAAApsB,EAAAosC,MAEA,WACA,IACApsC,EAAAosC,OACO,MAAAh7C,KAHP,KASAghE,GAAKqD,kBAAA,SAAAz1D,GACL,GAAAA,EAAA,CAOA,IAHA,IAAAipB,EAAAjpB,EAAA4jC,iBAAA,UACAzlD,EAAA8qC,EAAAnpC,OAEA3B,KACA6hB,EAAAmuB,YAAAlF,EAAA9qC,IAKA6hB,EAAAosB,gBAAA,OAEA,mBAAApsB,EAAAosC,MAEA,WACA,IACApsC,EAAAosC,OACO,MAAAh7C,KAHP,MA2BA,QAeA,eAaA,WAaA,WAgBA,OAcA,eAAAnF,QAAA,SAAAm9B,GACEgpC,GAAK5oE,UAAA4/B,GAAA,WACP,OAAAl2B,KAAAyjC,IAAAvN,IAAAl2B,KAAAyjC,IAAAoN,aAAA3a,OAmBA,QAYA,eAYA,WAeA,OAaA,eAAAn9B,QAAA,SAAAm9B,GACEgpC,GAAK5oE,UAAA,MAAAwsC,GAAA5M,IAAA,SAAA3gC,GACPyK,KAAAyjC,IAAAvN,GAAA3gC,EAEAA,EACAyK,KAAAyjC,IAAAjM,aAAAtB,KAEAl2B,KAAAyjC,IAAAvK,gBAAAhD,OAoBA,SAWA,cAYA,WAYA,SAYA,SAkBA,UAaA,QAaA,UAYA,WAaA,QAcA,eAiBA,sBAYA,SAgBA,eAkBA,aAYA,aAYA,eAAAn9B,QAAA,SAAAm9B,GACEgpC,GAAK5oE,UAAA4/B,GAAA,WACP,OAAAl2B,KAAAyjC,IAAAvN,OAmBA,SAWA,MAYA,SAkBA,UAcA,eAiBA,uBAAAn9B,QAAA,SAAAm9B,GACEgpC,GAAK5oE,UAAA,MAAAwsC,GAAA5M,IAAA,SAAA3gC,GACPyK,KAAAyjC,IAAAvN,GAAA3gC,MAcA,QAQA,OAQA,QAAAwD,QAAA,SAAAm9B,GACEgpC,GAAK5oE,UAAA4/B,GAAA,WACP,OAAAl2B,KAAAyjC,IAAAvN,QAGA8jB,GAAIyE,mBAAoBygB,IAWxBA,GAAK9f,uBAWL8f,GAAK9f,oBAAAvB,YAAA,SAAA3oD,GAEL,IACA,OAAWgqE,GAAK6D,SAAAllB,YAAA3oD,GACb,MAAAgJ,GACH,WAiBAghE,GAAK9f,oBAAAL,gBAAA,SAAA53C,EAAAnJ,GAEL,GAAAmJ,EAAAjS,KACA,OAAWgqE,GAAK9f,oBAAAvB,YAAA12C,EAAAjS,MACb,GAAAiS,EAAAgmC,IAAA,CACH,IAAAiV,EAAAzM,GAAAxuC,EAAAgmC,KACA,OAAW+xB,GAAK9f,oBAAAvB,YAAA,SAAAuE,GAGhB,UAgBA8c,GAAK9f,oBAAAG,aAAA,SAAAp4C,EAAA4lC,EAAA/uC,GACL+uC,EAAA4W,OAAAx8C,EAAAgmC,MAOA+xB,GAAK9f,oBAAAh4B,QAAA,aAGL83C,GAAKvgB,sBAAuBugB,GAAK9f,qBACjCpF,GAAIgE,aAAA,QAAuBkhB,IAa3B,IAAA+E,IAgBA,WAgBA,QAgBA,UAgBA,UAgBA,UAgBA,iBAgBA,aAgBA,aAgBA,SAgBA,eAgBA,mBAIAC,IACAC,QAAA,UACAC,eAAA,iBACAC,QAAA,UACAC,OAAA,UAEAC,IAAA,0DACAC,MAQAD,GAAAxrE,QAAA,SAAA8gC,GACA,IAAAtkC,EAAA,MAAAskC,EAAA71B,OAAA,QAAA61B,EAAAlS,UAAA,GAAAkS,EACA2qC,GAAA3qC,GAAA,cAAAtkC,IAEA,IAAAkvE,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,KACAC,OAAA,KACAC,KAAArsE,KAaIssE,GAEJ,SAAAv3B,GAeA,SAAA1E,EAAAr8C,EAAAqR,EAAAmS,GACA,IAAAsX,EAqBA,GAlBA96B,EAAA0L,GAAA1L,EAAA0L,IAAA2F,EAAA3F,IAAA,aAAAujC,MAMA59B,EAAc83B,GAAMkT,EAAAk8B,eAAAv4E,GAAAqR,IAGpB6lC,cAAA,EAEA7lC,EAAAg5B,UAAA,EAEAh5B,EAAAokC,SAAA,EAGApkC,EAAA8lC,qBAAA,GAEA9lC,EAAA1P,SACA,sBAAA3B,EAAAw4E,QAAA,CACA,IAAAA,EAAAx4E,EAAAw4E,QAAA,UAEAA,KAAApjE,eACA/D,EAAA1P,SAAA62E,EAAApjE,aAAA,cAKA,IAFA,IAAAm2B,EAAAvrC,EAEAurC,GAAA,IAAAA,EAAAvB,UAAA,CACA,GAAAwC,GAAAjB,GAAAxtB,eAAA,SACA1M,EAAA1P,SAAA4pC,EAAAn2B,aAAA,QACA,MAGAm2B,IAAAyB,WAyBA,IAnBAlS,EAAAimB,EAAAl3C,KAAAwJ,KAAA,KAAAhC,EAAAmS,IAAAnQ,MAEAolE,+BAAA30D,GAAgDqjB,EAAuBA,EAAsBrM,MAAA49C,2BAC7F59C,EAAA69C,yBAAA70D,GAA0CqjB,EAAuBA,EAAsBrM,MAAA89C,oBAEvF99C,EAAA0M,IAAAwB,EAAAlO,EAAA8b,KAEA9b,EAAA+9C,mBAAA,EAGA/9C,EAAAg+C,oBAEAh+C,EAAAoe,UAAA,EAEApe,EAAAwyB,aAAA,EAEAxyB,EAAAi+C,aAAA,GAGAj+C,EAAA6b,WAAA7b,EAAA6b,SAAAkf,YAAA/6B,EAAA6b,SAAAkf,UAAA51D,OACA,UAAA8iB,MAAA,2HAWA,GAPA+X,EAAA96B,MAEA86B,EAAAk+C,cAAAh5E,GAAAwsC,GAAAxsC,GAEA86B,EAAAn5B,SAAAm5B,EAAA6b,SAAAh1C,UAGA0P,EAAAkmC,UAAA,CAEA,IAAA0hC,KACA7vE,OAAAshC,oBAAAr5B,EAAAkmC,WAAAnrC,QAAA,SAAA8sE,GACAD,EAAAC,EAAAr8C,eAAAxrB,EAAAkmC,UAAA2hC,KAEAp+C,EAAAq+C,WAAAF,OAEAn+C,EAAAq+C,WAAA98B,EAAA1yC,UAAAgtC,SAAAY,UAGAzc,EAAAs+C,cAGAt+C,EAAAu+C,QAAAhoE,EAAA0lD,QAAA,GAEAj8B,EAAAw+C,YAAAjoE,EAAAkxC,SAIAviD,EAAAuiD,UAAA,EACAviD,EAAAusC,gBAAA,YACAzR,EAAAy+C,cAAA,EACAz+C,EAAA0+C,kBACA1+C,EAAA2+C,wBAEAz5E,EAAAkkD,aAAA,YACAppB,EAAA4+C,UAAA,GAIA5+C,EAAA4+C,SAAA5+C,EAAA6b,SAAA+iC,UAIAroE,EAAAsoE,SACAvwE,OAAAC,KAAAgI,EAAAsoE,SAAAvtE,QAAA,SAAA8sE,GACA,sBAAAp+C,EAAAo+C,GACA,UAAAn2D,MAAA,WAAAm2D,EAAA,sBAYAp+C,EAAA8+C,YAAA,EACA9+C,EAAAgc,IAAAhc,EAAAuP,WAEAoL,GAAYtO,EAAuBA,EAAsBrM,KACzD4a,YAAA,QAGA5a,EAAA++C,QACA/+C,EAAAxmB,GAAA,cAAAwmB,EAAAg/C,gBAOA,IAAAC,EAAA1jC,GAAAvb,EAAA6b,UAEAtlC,EAAAsoE,SACAvwE,OAAAC,KAAAgI,EAAAsoE,SAAAvtE,QAAA,SAAA8sE,GACAp+C,EAAAo+C,GAAA7nE,EAAAsoE,QAAAT,MAIAp+C,EAAA6b,SAAAoC,cAAAghC,EACAj/C,EAAAk/C,eAEAl/C,EAAAoc,eAGApc,EAAAw/B,QAAA,UAAAt6D,EAAAgwB,SAAA6M,eAIA/B,EAAAynB,WACAznB,EAAA8Q,SAAA,wBAEA9Q,EAAA8Q,SAAA,yBAIA9Q,EAAAgc,IAAAjM,aAAA,iBAEA/P,EAAAw/B,UACAx/B,EAAAgc,IAAAjM,aAAA,aAAA/P,EAAAuc,SAAA,iBAEAvc,EAAAgc,IAAAjM,aAAA,aAAA/P,EAAAuc,SAAA,iBAGAvc,EAAAw/B,WACAx/B,EAAA8Q,SAAA,aAGA9Q,EAAAm/C,qBACAn/C,EAAA8Q,SAAA,eAOAiS,IACA/iB,EAAA8Q,SAAA,qBAIAmR,IACAjiB,EAAA8Q,SAAA,oBAIAyQ,EAAAC,QAAAxhB,EAAA8b,KAAgCzP,EAAuBA,EAAsBrM,IAE7E,IAAAo/C,EAAuB5zC,EAAOl8B,MAAA,QAoB9B,OAlBA0wB,EAAA8Q,SAAA,QAAAsuC,GAIAp/C,EAAAq/C,YAAA,GAEAr/C,EAAAsgB,qBAEAtgB,EAAAkX,IAAA,OAAAlX,EAAAs/C,wBAEAt/C,EAAAxmB,GAAA,aAAAwmB,EAAAu/C,mBAEAv/C,EAAAxmB,GAAA,UAAAwmB,EAAA2f,eAEA3f,EAAAw/C,YAAAx/C,EAAA6b,SAAA2jC,aAEAx/C,EAAAy/C,WAAAz/C,EAAA6b,SAAA4jC,YAEAz/C,EAvOEyL,EAAc8V,EAAA0E,GAmPhB,IAAA1mB,EAAAgiB,EAAA1yC,UAi6HA,OA/5HA0wB,EAAAI,QAAA,WACA,IAAAc,EAAAloB,KAQAA,KAAAokB,QAAA,WAEApkB,KAAAknB,IAAA,WAEAA,GAAQuP,EAAAh9B,EAAQgyC,GAAA07B,iBAAAnnE,KAAAolE,gCAChBl+C,GAAQuP,EAAAh9B,EAAQ,UAAAuG,KAAAslE,0BAEhBtlE,KAAAonE,UAAApnE,KAAAonE,SAAAztC,aACA35B,KAAAonE,SAAAztC,WAAAsB,YAAAj7B,KAAAonE,UACApnE,KAAAonE,SAAA,MAIAp+B,EAAAC,QAAAjpC,KAAAujC,KAAA,KAEAvjC,KAAArT,KAAAqT,KAAArT,IAAA8yC,SACAz/B,KAAArT,IAAA8yC,OAAA,MAGAz/B,KAAAyjC,KAAAzjC,KAAAyjC,IAAAhE,SACAz/B,KAAAyjC,IAAAhE,OAAA,MAGAz/B,KAAAq3C,QACAr3C,KAAAq3C,MAAAjwB,UACApnB,KAAAwlE,mBAAA,EACAxlE,KAAAgmE,QAAA,IAGAhmE,KAAAqnE,kBACArnE,KAAAqnE,gBAAA,MAGArnE,KAAArT,MACAqT,KAAArT,IAAA,MAz1VA8yD,GA41VAz/C,KA51VA3H,MAAA,KAg2VAyhD,GAAAC,MAAAhhD,QAAA,SAAA8sE,GACA,IAAAhsE,EAAAigD,GAAA+rB,GAEA3wD,EAAAgT,EAAAruB,EAAA4/C,cAIAvkC,KAAAgS,KACAhS,EAAAgS,QAIAwmB,EAAAp3C,UAAA8wB,QAAA5wB,KAAAwJ,OAUAgnB,EAAAgQ,SAAA,WACA,IACAlqB,EADAngB,EAAAqT,KAAArT,IAEAs0E,EAAAjhE,KAAAqnE,gBAAA16E,EAAAgtC,YAAAhtC,EAAAgtC,WAAAkX,cAAAlkD,EAAAgtC,WAAAkX,aAAA,mBACAy2B,EAAA,aAAAtnE,KAAArT,IAAAsqC,QAAAzN,cAEAy3C,EACAn0D,EAAA9M,KAAAyjC,IAAA92C,EAAAgtC,WACK2tC,IACLx6D,EAAA9M,KAAAyjC,IAAAiK,EAAAp3C,UAAA0gC,SAAAxgC,KAAAwJ,KAAA,QAKA,IAAA7D,EAAAg9B,GAAAxsC,GAEA,GAAA26E,EAAA,CAIA,IAHAx6D,EAAA9M,KAAAyjC,IAAA92C,EACAA,EAAAqT,KAAArT,IAAuB8pC,EAAAh9B,EAAQ29B,cAAA,SAE/BtqB,EAAA5S,SAAAtN,QACAD,EAAAqrC,YAAAlrB,EAAAgrB,YAGAG,GAAAnrB,EAAA,aACAyrB,GAAAzrB,EAAA,YAGAA,EAAAkrB,YAAArrC,GACAs0E,EAAAjhE,KAAAqnE,gBAAAv6D,EAKA/W,OAAAC,KAAA8W,GAAA/T,QAAA,SAAA8gC,GACAltC,EAAAktC,GAAA/sB,EAAA+sB,KAqDA,GAhDAltC,EAAA6qC,aAAA,iBACAr7B,EAAAorE,SAAA,KAKAl9B,KACA19C,EAAA6qC,aAAA,sBACAr7B,EAAA8xC,KAAA,eAIAthD,EAAAusC,gBAAA,SACAvsC,EAAAusC,gBAAA,UAEA,UAAA/8B,UACAA,EAAA9R,MAGA,WAAA8R,UACAA,EAAA7R,OAGAyL,OAAAshC,oBAAAl7B,GAAApD,QAAA,SAAA+uB,GAIAw/C,GAAA,UAAAx/C,GACAhb,EAAA0qB,aAAA1P,EAAA3rB,EAAA2rB,IAGAw/C,GACA36E,EAAA6qC,aAAA1P,EAAA3rB,EAAA2rB,MAMAn7B,EAAAy0E,SAAAz0E,EAAA0L,GACA1L,EAAA0L,IAAA,aACA1L,EAAA2rC,UAAA,WAEA3rC,EAAA8yC,OAAA3yB,EAAA2yB,OAAAz/B,KAEAA,KAAAu4B,SAAA,eAIgB,IAAR/D,EAAA/6B,EAAQ+tE,yBAAA,CAChBxnE,KAAAonE,SAAsBvnC,GAAkB,yBACxC,IAAA4nC,EAAAjsC,GAAA,wBACAksC,EAAAlsC,GAAA,QACAksC,EAAA3vC,aAAA/3B,KAAAonE,SAAAK,IAAA53B,YAAA63B,EAAA5vC,YAGA93B,KAAA2nE,OAAA,EACA3nE,KAAAwmE,QAAA,EAEAxmE,KAAA3V,MAAA2V,KAAAsjC,SAAAj5C,OACA2V,KAAA1V,OAAA0V,KAAAsjC,SAAAh5C,QACA0V,KAAA4uC,KAAA5uC,KAAAsjC,SAAAsL,MACA5uC,KAAA4nE,MAAA5nE,KAAAsjC,SAAAskC,OACA5nE,KAAA6nE,YAAA7nE,KAAAsjC,SAAAukC,aAKA,IAFA,IAAAC,EAAAn7E,EAAAwyC,qBAAA,KAEAl0C,EAAA,EAAmBA,EAAA68E,EAAAl7E,OAAkB3B,IAAA,CACrC,IAAA88E,EAAAD,EAAArtD,KAAAxvB,GACAstC,GAAAwvC,EAAA,cACAA,EAAAvwC,aAAA,mBAsBA,OAjBA7qC,EAAA0yE,kBAAA1yE,EAAA40E,aAEA50E,EAAAgtC,aAAAsnC,GACAt0E,EAAAgtC,WAAA5B,aAAAjrB,EAAAngB,GAQAkrC,GAAAlrC,EAAAmgB,GACA9M,KAAA0jC,UAAAnlC,QAAA5R,GAGAqT,KAAAyjC,IAAAjM,aAAA,OAAAx3B,KAAAy2D,WACAz2D,KAAAyjC,IAAA32B,EACAA,GAcAka,EAAA38B,MAAA,SAAA+L,GACA,OAAA4J,KAAAumC,UAAA,QAAAnwC,IAcA4wB,EAAA18B,OAAA,SAAA8L,GACA,OAAA4J,KAAAumC,UAAA,SAAAnwC,IAkBA4wB,EAAAuf,UAAA,SAAAyhC,EAAA5xE,GACA,IAAA6xE,EAAAD,EAAA,IAEA,QAAA/rE,IAAA7F,EACA,OAAA4J,KAAAioE,IAAA,EAGA,QAAA7xE,EAIA,OAFA4J,KAAAioE,QAAAhsE,OACA+D,KAAAymE,iBAIA,IAAAyB,EAAA1/C,WAAApyB,GAEAo3B,MAAA06C,GACMzzC,EAAG7lB,MAAA,mBAAAxY,EAAA,sBAAA4xE,IAIThoE,KAAAioE,GAAAC,EACAloE,KAAAymE,mBAkBAz/C,EAAA4gD,MAAA,SAAApc,GACA,QAAAvvD,IAAAuvD,EACA,QAAAxrD,KAAAwmE,OAp1jBA,IAAA5lE,EAAA4a,EAu1jBAxb,KAAAwmE,SAAAhb,EAEArqB,GAAAnhC,OACAA,KAAAknB,IAAA,cAAAlnB,KAAAymE,gBAGAjb,GACAxrD,KAAAu4B,SAAA,aACAv4B,KAAA4uC,MAAA,GA91jBAzN,GADAvgC,EAg2jBA,WACAZ,KAAAiB,GAAA,cAAAjB,KAAAymE,kBA/1jBAjrD,KAEA5a,EAAA0hC,mBACA1hC,EAAA0hC,qBAGA1hC,EAAA0hC,iBAAA32C,KAAA6vB,KA41jBAxb,KAAA04B,YAAA,aAGA14B,KAAAymE,kBAkBAz/C,EAAA4nB,KAAA,SAAA4c,GACA,QAAAvvD,IAAAuvD,EACA,QAAAxrD,KAAA2nE,MAGA3nE,KAAA2nE,QAAAnc,EAEAA,GACAxrD,KAAAu4B,SAAA,YACAv4B,KAAA4nE,OAAA,IAEA5nE,KAAA04B,YAAA,aAyBA1R,EAAA6gD,YAAA,SAAAM,GACA,QAAAlsE,IAAAksE,EACA,OAAAnoE,KAAAooE,aAIA,iBAAApmE,KAAAmmE,GACA,UAAAz4D,MAAA,kGAGA1P,KAAAooE,aAAAD,EAGAnoE,KAAA4nE,OAAA,GACA5nE,KAAAymE,kBAUAz/C,EAAAy/C,eAAA,WACA,IAAgB,IAARjyC,EAAA/6B,EAAQ+tE,yBAAhB,CAoBA,IAAAn9E,EACAC,EAEA+9E,EAcAC,QAZArsE,IAAA+D,KAAAooE,cAAA,SAAApoE,KAAAooE,aAEApoE,KAAAooE,aACKpoE,KAAAuoE,aAAA,EAELvoE,KAAAuoE,aAAA,IAAAvoE,KAAAwoE,cAGA,QAIAzxE,MAAA,KACA0xE,EAAAH,EAAA,GAAAA,EAAA,GAIAj+E,OAFA4R,IAAA+D,KAAA0oE,OAEA1oE,KAAA0oE,YACKzsE,IAAA+D,KAAA2oE,QAEL3oE,KAAA2oE,QAAAF,EAGAzoE,KAAAuoE,cAAA,IAKAj+E,OAFA2R,IAAA+D,KAAA2oE,QAEA3oE,KAAA2oE,QAGAt+E,EAAAo+E,EAKAJ,EADA,aAAArmE,KAAAhC,KAAA3H,MACA,cAAA2H,KAAA3H,KAEA2H,KAAA3H,KAAA,cAIA2H,KAAAu4B,SAAA8vC,GACAtoC,GAAA//B,KAAAonE,SAAA,YAAAiB,EAAA,sBAA6Dh+E,EAAA,wBAAiCC,EAAA,0BAA4C+9E,EAAA,sCAAsC,IAAAI,EAAA,yBApEhL,CACA,IAAAG,EAAA,iBAAA5oE,KAAA0oE,OAAA1oE,KAAA0oE,OAAA1oE,KAAAsjC,SAAAj5C,MAEAw+E,EAAA,iBAAA7oE,KAAA2oE,QAAA3oE,KAAA2oE,QAAA3oE,KAAAsjC,SAAAh5C,OAEAw+E,EAAA9oE,KAAAq3C,OAAAr3C,KAAAq3C,MAAAvqC,KAEAg8D,IACAF,GAAA,IACAE,EAAAz+E,MAAAu+E,GAGAC,GAAA,IACAC,EAAAx+E,OAAAu+E,MAuEA7hD,EAAA27B,UAAA,SAAAF,EAAAt7C,GACA,IAAA0iB,EAAA7pB,KAGAA,KAAAq3C,OACAr3C,KAAA+oE,cAGA,IAAAC,EAAAlmC,GAAA2f,GACAwmB,EAAAxmB,EAAAz+C,OAAA,GAAAwlB,cAAAi5B,EAAAlsD,MAAA,GAEA,UAAAyyE,GAAAhpE,KAAArT,MACMqtD,GAAImE,QAAA,SAAA8hB,oBAAAjgE,KAAArT,KACVqT,KAAArT,IAAA8yC,OAAA,KACAz/B,KAAArT,IAAA,MAGAqT,KAAAkpE,UAAAF,EAEAhpE,KAAA6lC,UAAA,EAGA,IAEAsjC,GACAhiE,SACAk/D,SAJA,iBAAArmE,KAAAqmE,YAAArmE,KAAAqmE,WAKAzrB,uBAAA56C,KAAAsjC,SAAAsX,uBACAwmB,SAAAphE,KAAA3H,KACA8oE,OAAAnhE,KAAA3H,KAAA,IAAA4wE,EAAA,OACAxrB,YAAAz9C,KAAAsjC,SAAAma,YACA4jB,QAAArhE,KAAAsjC,SAAA+9B,QACA+H,KAAAppE,KAAAsjC,SAAA8lC,KACAxZ,MAAA5vD,KAAAsjC,SAAAssB,MACAlM,OAAA1jD,KAAA0jD,SACAp1D,SAAA0R,KAAA1R,WACA2yE,eAAAjhE,KAAAqnE,kBAAA,EACAgC,SAAArpE,KAAAsjC,SAAA,UACAgmC,oBAAAtpE,KAAAsjC,SAAAimC,sBACAhK,gBAAAv/D,KAAAsjC,SAAAi8B,iBAEAzlB,GAAAC,MAAAhhD,QAAA,SAAA8sE,GACA,IAAAhsE,EAAAigD,GAAA+rB,GACAsD,EAAAtvE,EAAA4/C,YAAA5vB,EAAAhwB,EAAA6/C,eAEI5jB,GAAMqzC,EAAAnpE,KAAAsjC,SAAA0lC,IACNlzC,GAAMqzC,EAAAnpE,KAAAsjC,SAAA2lC,IACNnzC,GAAMqzC,EAAAnpE,KAAAsjC,SAAAmf,EAAAj5B,gBAEVxpB,KAAArT,MACAw8E,EAAAx8E,IAAAqT,KAAArT,KAGAwa,KAAAgmC,MAAAntC,KAAAulD,OAAApY,KAAAntC,KAAAulD,OAAAnN,YAAA,IACA+wB,EAAAvxE,UAAAoI,KAAAulD,OAAAnN,aAIA,IAAAoxB,EAAoBxvB,GAAImE,QAAAsE,GAExB,IAAA+mB,EACA,UAAA95D,MAAA,kBAAAs5D,EAAA,cAAAA,EAAA,wDAGAhpE,KAAAq3C,MAAA,IAAAmyB,EAAAL,GAEAnpE,KAAAq3C,MAAAlnC,MAAAM,GAAAzQ,UAAAypE,mBAAA,GACA38B,GAAA9sC,KAAA0pE,oBAAA1pE,KAAAq3C,OAEA4sB,GAAAlrE,QAAA,SAAA+G,GACA+pB,EAAA5oB,GAAA4oB,EAAAwtB,MAAAv3C,EAAA+pB,EAAA,aAAAiZ,GAAAhjC,GAAA,QAEA/J,OAAAC,KAAAkuE,IAAAnrE,QAAA,SAAA+G,GACA+pB,EAAA5oB,GAAA4oB,EAAAwtB,MAAAv3C,EAAA,SAAA6pE,GACA,IAAA9/C,EAAAwtB,MAAAyf,gBAAAjtC,EAAAwtB,MAAAuyB,UACA//C,EAAA47C,iBAAA95E,MACA6vB,SAAAqO,EAAA,aAAAq6C,GAAApkE,GAAA,KAAA2Q,KAAAoZ,GACA/pB,MAAA6pE,IAMA9/C,EAAA,aAAAq6C,GAAApkE,GAAA,KAAA6pE,OAGA3pE,KAAAiB,GAAAjB,KAAAq3C,MAAA,YAAAr3C,KAAA6pE,sBACA7pE,KAAAiB,GAAAjB,KAAAq3C,MAAA,YAAAr3C,KAAA8pE,sBACA9pE,KAAAiB,GAAAjB,KAAAq3C,MAAA,UAAAr3C,KAAA+pE,oBACA/pE,KAAAiB,GAAAjB,KAAAq3C,MAAA,QAAAr3C,KAAAgqE,kBACAhqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,UAAAr3C,KAAAiqE,oBACAjqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,OAAAr3C,KAAAkqE,iBACAlqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,YAAAr3C,KAAAmqE,sBACAnqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,QAAAr3C,KAAAoqE,kBACApqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,iBAAAr3C,KAAAqqE,2BACArqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,mBAAAr3C,KAAAsqE,6BACAtqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,QAAAr3C,KAAAuqE,kBACAvqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,iBAAAr3C,KAAAymE,gBACAzmE,KAAAiB,GAAAjB,KAAAq3C,MAAA,eAAAr3C,KAAAwqE,yBACAxqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,WAAAr3C,KAAAyqE,qBACAzqE,KAAAiB,GAAAjB,KAAAq3C,MAAA,aAAAr3C,KAAA0qE,uBACA1qE,KAAA2qE,oBAAA3qE,KAAA4qE,SAAA,aAEA5qE,KAAAkvC,aAAAlvC,KAAA2qE,uBACA3qE,KAAA6qE,4BAKA7qE,KAAAq3C,MAAAvqC,KAAA6sB,aAAA35B,KAAA8M,MAAA,UAAAk8D,GAAAhpE,KAAArT,KACAkrC,GAAA73B,KAAAq3C,MAAAvqC,KAAA9M,KAAA8M,MAIA9M,KAAArT,MACAqT,KAAArT,IAAA8yC,OAAA,KACAz/B,KAAArT,IAAA,OAUAq6B,EAAA+hD,YAAA,WACA,IAAAvgC,EAAAxoC,KAGA85C,GAAAC,MAAAhhD,QAAA,SAAA8sE,GACA,IAAAhsE,EAAAigD,GAAA+rB,GACAr9B,EAAA3uC,EAAA6/C,aAAAlR,EAAA3uC,EAAA4/C,gBAEAz5C,KAAA0pE,gBAAA58B,GAAA9sC,KAAAq3C,OACAr3C,KAAA6lC,UAAA,EACA7lC,KAAAq3C,MAAAjwB,UACApnB,KAAAq3C,OAAA,EAEAr3C,KAAAwlE,oBACAxlE,KAAAgmE,QAAA,GACAhmE,KAAAokB,QAAA,iBAGApkB,KAAAwlE,mBAAA,GAeAx+C,EAAA+lB,KAAA,SAAA+9B,GAKA,YAJA7uE,IAAA6uE,GACMr2C,EAAGv7B,KAAMq+B,IAAIssC,OAGnB7jE,KAAAq3C,OAyBArwB,EAAA6jD,0BAAA,WAEA7qE,KAAA+qE,+BAKA/qE,KAAAiB,GAAAjB,KAAAq3C,MAAA,YAAAr3C,KAAAgrE,kBACAhrE,KAAAiB,GAAAjB,KAAAq3C,MAAA,WAAAr3C,KAAAirE,wBAIAjrE,KAAAiB,GAAAjB,KAAAq3C,MAAA,aAAAr3C,KAAAkrE,uBACAlrE,KAAAiB,GAAAjB,KAAAq3C,MAAA,YAAAr3C,KAAAmrE,sBACAnrE,KAAAiB,GAAAjB,KAAAq3C,MAAA,WAAAr3C,KAAAorE,qBAGAprE,KAAAiB,GAAAjB,KAAAq3C,MAAA,MAAAr3C,KAAAqrE,iBAUArkD,EAAA+jD,6BAAA,WAGA/qE,KAAAknB,IAAAlnB,KAAAq3C,MAAA,MAAAr3C,KAAAqrE,gBACArrE,KAAAknB,IAAAlnB,KAAAq3C,MAAA,aAAAr3C,KAAAkrE,uBACAlrE,KAAAknB,IAAAlnB,KAAAq3C,MAAA,YAAAr3C,KAAAmrE,sBACAnrE,KAAAknB,IAAAlnB,KAAAq3C,MAAA,WAAAr3C,KAAAorE,qBACAprE,KAAAknB,IAAAlnB,KAAAq3C,MAAA,YAAAr3C,KAAAgrE,kBACAhrE,KAAAknB,IAAAlnB,KAAAq3C,MAAA,WAAAr3C,KAAAirE,yBASAjkD,EAAAyiD,iBAAA,WACAzpE,KAAA+lC,eAEA/lC,KAAAulD,OAAA91D,QACAuQ,KAAAsrE,UAAA,YAAAtrE,KAAAulD,OAAA91D,QAIAuQ,KAAAwqE,0BAEAxqE,KAAAqqE,6BAcArjD,EAAA6iD,qBAAA,WAEA7pE,KAAA04B,YAAA,aACA14B,KAAA04B,YAAA,eAEA14B,KAAA4O,MAAA,MAEA5O,KAAAqqE,4BAIArqE,KAAA8uC,UAWA9uC,KAAAurE,YAAA,GACAvrE,KAAAokB,QAAA,eALApkB,KAAAokB,QAAA,aACApkB,KAAAokB,QAAA,cASApkB,KAAAwrE,gBAAAxrE,KAAAqmE,aAUAr/C,EAAAwkD,gBAAA,SAAAt2E,GACA,IAAAonD,EAAAt8C,KAEA,GAAAA,KAAAq3C,OAAA,iBAAAniD,EAAA,CAIA,IAqBAu2E,EArBA7b,EAAA,WACA,IAAA8b,EAAApvB,EAAAsT,QAEAtT,EAAAsT,OAAA,GAEA,IAAA+b,EAAA,WACArvB,EAAAsT,MAAA8b,IAIApvB,EAAA8pB,qBAAAz6E,KAAAggF,GAEA,IAAAC,EAAAtvB,EAAAnZ,OAEA,GAAAqJ,GAAAo/B,GAIA,OAAAA,EAAAv/D,MAAAs/D,IAkBA,GAZA,QAAAz2E,IAAA,IAAA8K,KAAA4vD,QAGApjB,GAFAi/B,EAAAzrE,KAAAmjC,UAGAsoC,IAAAp/D,MAAAujD,IAGA6b,EADK,UAAAv2E,IAAA,IAAA8K,KAAA4vD,QACLA,IAEA5vD,KAAAmjC,OAGAqJ,GAAAi/B,GAIA,OAAAA,EAAAt/D,KAAA,WACAmwC,EAAAl4B,SACAlvB,KAAA,mBACAmxE,SAAAnxE,MAEKmX,MAAA,SAAAnO,GACLo+C,EAAAl4B,SACAlvB,KAAA,mBACAmxE,SAAAnxE,QAiBA8xB,EAAA6kD,oBAAA,SAAA9tB,QACA,IAAAA,IACAA,EAAA,IAGA,IAAA5Q,EAAA4Q,EACA7oD,EAAA,GAEA,iBAAAi4C,IACAA,EAAA4Q,EAAA5Q,IACAj4C,EAAA6oD,EAAA7oD,MAKA8K,KAAAulD,OAAAp+C,OAAAnH,KAAAulD,OAAAp+C,WACAnH,KAAAulD,OAAAxvB,QAAA/1B,KAAAulD,OAAAxvB,YAEAoX,IAAAj4C,IACAA,EAl/WA,SAAAuqC,EAAA0N,GACA,IAAAA,EACA,SAIA,GAAA1N,EAAA8lB,OAAAp+C,OAAAgmC,SAAA1N,EAAA8lB,OAAAp+C,OAAAjS,KACA,OAAAuqC,EAAA8lB,OAAAp+C,OAAAjS,KAIA,IAAA42E,EAAArsC,EAAA8lB,OAAAxvB,QAAA9/B,OAAA,SAAAs5B,GACA,OAAAA,EAAA4d,UAGA,GAAA2+B,EAAAl/E,OACA,OAAAk/E,EAAA,GAAA52E,KAMA,IAFA,IAAA6gC,EAAA0J,EAAAhE,GAAA,UAEAxwC,EAAA,EAAiBA,EAAA8qC,EAAAnpC,OAAoB3B,IAAA,CACrC,IAAAskC,EAAAwG,EAAA9qC,GAEA,GAAAskC,EAAAr6B,MAAAq6B,EAAA4d,KAAA5d,EAAA4d,QACA,OAAA5d,EAAAr6B,KAKA,OAAAitD,GAAAhV,GAm9WA4+B,CAAA/rE,KAAAmtC,IAIAntC,KAAAulD,OAAAp+C,OAAA67B,MAAwC+a,GACxC5Q,MACAj4C,SASA,IAPA,IAAA42E,EAAA9rE,KAAAulD,OAAAxvB,QAAA9/B,OAAA,SAAAs5B,GACA,OAAAA,EAAA4d,KAAA5d,EAAA4d,UAEA6+B,KACAC,EAAAjsE,KAAAy7B,GAAA,UACAywC,KAEAjhF,EAAA,EAAmBA,EAAAghF,EAAAr/E,OAAsB3B,IAAA,CACzC,IAAAkhF,EAAAhzC,GAAA8yC,EAAAhhF,IACA+gF,EAAArgF,KAAAwgF,GAEAA,EAAAh/B,KAAAg/B,EAAAh/B,SACA++B,EAAAvgF,KAAAwgF,EAAAh/B,KAMA++B,EAAAt/E,SAAAk/E,EAAAl/E,OACAoT,KAAAulD,OAAAxvB,QAAAi2C,EAEKF,EAAAl/E,SACLoT,KAAAulD,OAAAxvB,SAAA/1B,KAAAulD,OAAAp+C,SAIAnH,KAAAulD,OAAApY,OAwCAnmB,EAAA8iD,qBAAA,SAAAhqE,GACA,IAAA28C,EAAAz8C,KAIA,IAAAA,KAAAkmE,aAAA,CACA,IAAAkG,EAAA,SAAAj/B,GACA,OAAAsP,EAAAovB,oBAAA1+B,IAGAk/B,EAAArsE,KAAAssE,gBAAAn/B,IACAo/B,EAAAzsE,EAAAqtC,IAiBA,GAfAk/B,IAAA,SAAArqE,KAAAqqE,IAAA,SAAArqE,KAAAuqE,MAGAvsE,KAAAwsE,aAAAxsE,KAAAwsE,YAAAz/B,OAAAw/B,GAAAvsE,KAAAwsE,YAAA/sC,SAAA4sC,KACAD,EAAA,cAMAA,EAAAG,IAKAzsE,EAAAqtC,IAAA,CAaAntC,KAAAq3C,MAAA1Y,KAAA,yBAZA,SAAA8tC,EAAAvuE,GACA,iBAAAA,EAAAhJ,KAAA,CACA,IAAAw3E,EAAAjwB,EAAAkwB,QAAA,cAEAlwB,EAAA+vB,YAAAz/B,KAAA2/B,EAEAjwB,EAAAovB,oBAAAa,GAGAjwB,EAAApF,MAAAnwB,KAAA,yBAAAulD,MAOAzsE,KAAAwsE,aACA/sC,OAAAz/B,KAAAssE,gBAAAn/B,IACAJ,KAAAjtC,EAAAqtC,KAEAntC,KAAAokB,SACA+oB,IAAArtC,EAAAqtC,IACAj4C,KAAA,eAiBA8xB,EAAAukD,WAAA,SAAA1sD,GACA,QAAA5iB,IAAA4iB,EAEA,OAAA7e,KAAAi6C,YAGAp7B,IAAA7e,KAAAi6C,cAIAj6C,KAAAi6C,YAAAp7B,EAEA7e,KAAAi6C,aACAj6C,KAAAu4B,SAAA,mBACAv4B,KAAAokB,QAAA,cAEApkB,KAAA04B,YAAA,qBAaA1R,EAAAkjD,gBAAA,WACAlqE,KAAA04B,YAAA,aACA14B,KAAA04B,YAAA,cACA14B,KAAAu4B,SAAA,eAEAv4B,KAAAurE,YAAA,GASAvrE,KAAAokB,QAAA,SAeA4C,EAAA0jD,sBAAA,WACA1qE,KAAAq3C,MAAAyf,eAAA,OAAA92D,KAAAulD,OAAAqnB,mBACA5sE,KAAAylE,iBAAA1sE,QAAA,SAAA8zE,GACA,OAAAA,EAAArxD,SAAAqxD,EAAA/sE,SAEAE,KAAAylE,qBAGAzlE,KAAAulD,OAAAqnB,iBAAA5sE,KAAAq3C,MAAAyf,eAQA92D,KAAAokB,QAAA,eAWA4C,EAAA+iD,mBAAA,WACA,IAAA3sB,EAAAp9C,KAEAA,KAAAu4B,SAAA,eAQAv4B,KAAAokB,QAAA,WAGA,IAAA0oD,EAAA9sE,KAAAo4C,cAUAp4C,KAAAiB,GAAA,aARA,SAAA8rE,IACAD,IAAA1vB,EAAAhF,gBACAgF,EAAA1kB,YAAA,eAEA0kB,EAAAl2B,IAAA,aAAA6lD,OAgBA/lD,EAAAgmD,mBAAA,WACAhtE,KAAA04B,YAAA,eAQA14B,KAAAokB,QAAA,YAWA4C,EAAAimD,0BAAA,WACAjtE,KAAA04B,YAAA,eASA14B,KAAAokB,QAAA,mBAWA4C,EAAAkmD,mBAAA,WACAltE,KAAA04B,YAAA,eAQA14B,KAAAokB,QAAA,YAWA4C,EAAAijD,mBAAA,WACAjqE,KAAAu4B,SAAA,eAQAv4B,KAAAokB,QAAA,YAWA4C,EAAAmmD,kBAAA,WACAntE,KAAA04B,YAAA,eACA14B,KAAA04B,YAAA,aAQA14B,KAAAokB,QAAA,WAaA4C,EAAAmjD,qBAAA,WAGAnqE,KAAAsjC,SAAA8pC,YACM34C,EAAGv7B,KAAA,0EACT8G,KAAAo4C,YAAAp4C,KAAAsjC,SAAA8pC,YAGAptE,KAAAu4B,SAAA,mBAWAv4B,KAAAokB,QAAA,cAWA4C,EAAAojD,iBAAA,WACApqE,KAAA04B,YAAA,eACA14B,KAAAu4B,SAAA,cAQAv4B,KAAAokB,QAAA,UAWA4C,EAAAgjD,iBAAA,WACAhqE,KAAAu4B,SAAA,aAEAv4B,KAAAsjC,SAAA8lC,MACAppE,KAAAo4C,YAAA,GACAp4C,KAAAmjC,QACKnjC,KAAA8uC,UACL9uC,KAAAgvC,QAUAhvC,KAAAokB,QAAA,UAUA4C,EAAAqjD,0BAAA,WACArqE,KAAAtR,SAAAsR,KAAA4qE,SAAA,cAaA5jD,EAAAgkD,iBAAA,SAAAlrE,GACAw7B,GAAAx7B,IAMAE,KAAAimE,YAIAjmE,KAAA8uC,SACArC,GAAAzsC,KAAAmjC,QAEAnjC,KAAAgvC,UAcAhoB,EAAAikD,uBAAA,SAAAnrE,GACAE,KAAAimE,YAMAtwE,MAAAW,UAAAivC,KAAA/uC,KAAAwJ,KAAAy7B,GAAA,gDAAA3uB,GACA,OAAAA,EAAAurB,SAAAv4B,EAAAc,gBAWA3E,IAAA+D,KAAAsjC,eAAArnC,IAAA+D,KAAAsjC,SAAA+pC,kBAAApxE,IAAA+D,KAAAsjC,SAAA+pC,YAAAC,cAAA,IAAAttE,KAAAsjC,SAAA+pC,YAAAC,mBACArxE,IAAA+D,KAAAsjC,eAAArnC,IAAA+D,KAAAsjC,SAAA+pC,aAAA,mBAAArtE,KAAAsjC,SAAA+pC,YAAAC,YACAttE,KAAAsjC,SAAA+pC,YAAAC,YAAA92E,KAAAwJ,KAAAF,GACSE,KAAAmvD,eACTnvD,KAAAovD,iBAEApvD,KAAAqvD,uBAcAroC,EAAAqkD,eAAA,WACArrE,KAAA8mE,YAAA9mE,KAAA8mE,eAUA9/C,EAAAkkD,sBAAA,WACAlrE,KAAAutE,cAAAvtE,KAAA8mE,cAUA9/C,EAAAmkD,qBAAA,WACAnrE,KAAAutE,eACAvtE,KAAA+nC,sBAeA/gB,EAAAokD,oBAAA,SAAAtrE,GAEAA,EAAAmC,kBAWA+kB,EAAAggD,kBAAA,WACAhnE,KAAA+nC,sBAOA/gB,EAAAwmD,uBAAA,WACAxtE,KAAAmvD,eACAnvD,KAAAu4B,SAAA,kBAEAv4B,KAAA04B,YAAA,mBAQA1R,EAAAq+C,0BAAA,SAAAnnE,GACA,IAAAuvE,EAAAhiC,GACA3+B,EAAA9M,KAAA8M,KACA4gE,EAAej3C,EAAAh9B,EAAQg0E,EAAAE,qBAAA7gE,GAEvB4gE,GAAA5gE,EAAAvG,QACAmnE,EAAA5gE,EAAAvG,QAAA,IAAAknE,EAAAG,aACKF,GAAA5gE,EAAA+gE,oBACLH,EAAA5gE,EAAA+gE,kBAAA,IAAAJ,EAAAG,aAGA5tE,KAAAmvD,aAAAue,IAEA,IAAA1tE,KAAAmvD,gBACAjoC,GAAUuP,EAAAh9B,EAAQg0E,EAAAtG,iBAAAnnE,KAAAolE,gCAGlBx5B,IAKA5rC,KAAAokB,QAAA,qBAkBA4C,EAAAsjD,4BAAA,SAAAxqE,EAAAjW,GACAA,GACAmW,KAAAmvD,aAAAtlE,EAAAslE,cAUAnvD,KAAAokB,QAAA,qBAUA4C,EAAAujD,iBAAA,WACA,IAAA37D,EAAA5O,KAAAq3C,MAAAzoC,QACA5O,KAAA4O,UAWAoY,EAAAyjD,oBAAA,WACA,IAAA5gF,EAAA,KAEAkmB,UAAAnjB,OAAA,IACA/C,EAAAkmB,UAAA,IAUA/P,KAAAokB,QAAA,WAAAv6B,IAUAm9B,EAAAyiC,SAAA,WACA,OAAAzpD,KAAAulD,QAYAv+B,EAAA++C,YAAA,WACA/lE,KAAAulD,QAKAnN,YAAA,EACA01B,kBAAA9tE,KAAAsjC,SAAAwqC,kBACAp/E,SAAAmzE,IACApR,WAAA,EACAmc,iBAAA5sE,KAAA+tE,sBACA3hD,MAAA,KACA+gB,IAAA,GACAhmC,UACA4uB,WACAtmC,OAAA,IAgBAu3B,EAAAskD,UAAA,SAAAvuD,EAAA0jC,GAEAzgD,KAAAmQ,MAAA,WACA,GAAA4M,KAAAkkC,GACA,OAj+YA,SAAArB,EAAA7S,EAAAhwB,EAAA0jC,GACA,OAAA1T,EAAAhwB,GAAA6iC,EAAAxnD,OAAAwoD,GAAA7jC,GAAA0jC,IAg+YAutB,CAAAhuE,KAAA2mE,YAAA3mE,KAAAq3C,MAAAt6B,EAAA0jC,GACO,GAAA1jC,KAAAmkC,GACP,OAAAV,GAAAxgD,KAAA2mE,YAAA3mE,KAAAq3C,MAAAt6B,EAAA0jC,GAGA,IACAzgD,KAAAq3C,OACAr3C,KAAAq3C,MAAAt6B,GAAA0jC,GAEO,MAAAviD,GAEP,MADQu2B,EAAGv2B,GACXA,KAEK,IAeL8oB,EAAA4jD,SAAA,SAAA7tD,GACA,GAAA/c,KAAAq3C,OAAAr3C,KAAAq3C,MAAAxR,SAAA,CAIA,GAAA9oB,KAAAgkC,GACA,OA1hZA,SAAYnB,EAAA7S,EAAAhwB,GACZ,OAAA6iC,EAAAquB,YAAArtB,GAAA7jC,GAAAgwB,EAAAhwB,MAyhZamxD,CAAGluE,KAAA2mE,YAAA3mE,KAAAq3C,MAAAt6B,GACX,GAAAA,KAAAmkC,GACL,OAAAV,GAAAxgD,KAAA2mE,YAAA3mE,KAAAq3C,MAAAt6B,GAMA,IACA,OAAA/c,KAAAq3C,MAAAt6B,KACK,MAAA7e,GAEL,QAAAjC,IAAA+D,KAAAq3C,MAAAt6B,GAEA,MADQ0X,EAAG,aAAA1X,EAAA,2BAAA/c,KAAAkpE,UAAA,wBAAAhrE,GACXA,EAIA,iBAAAA,EAAAvQ,KAGA,MAFQ8mC,EAAG,aAAA1X,EAAA,mBAAA/c,KAAAkpE,UAAA,gCAAAhrE,GACX8B,KAAAq3C,MAAAxR,UAAA,EACA3nC,EAKA,MADMu2B,EAAGv2B,GACTA,KAeA8oB,EAAAmc,KAAA,WACA,IAAAgrC,EAAAnuE,KAEAouE,EAAApuE,KAAAsjC,SAAA+qC,SAAgD75C,EAAA/6B,EAAQ40E,QAExD,OAAAD,EACA,IAAAA,EAAA,SAAAluE,GACAiuE,EAAAG,MAAApuE,KAIAF,KAAAsuE,SAaAtnD,EAAAsnD,MAAA,SAAA9yD,GACA,IAAA+yD,EAAAvuE,UAEA,IAAAwb,IACAA,EAAAixB,IAGAzsC,KAAAmmE,eAAAx6E,KAAA6vB,GACA,IAAAgzD,EAAA9uE,SAAAM,KAAAkmE,eAAAlmE,KAAAmtC,OAAAntC,KAAAg/D,eASA,GAPAh/D,KAAAyuE,cACAzuE,KAAAknB,KAAA,qBAAAlnB,KAAAyuE,aACAzuE,KAAAyuE,YAAA,OAKAzuE,KAAA6lC,WAAA2oC,EAYA,OAXAxuE,KAAAyuE,YAAA,SAAAvwE,GACAqwE,EAAAD,SAGAtuE,KAAA2+B,KAAA,qBAAA3+B,KAAAyuE,kBAGAD,IAAAjkC,KAAAb,IACA1pC,KAAAk5C,QAOA,IAAA19C,EAAAwE,KAAA4qE,SAAA,QAEA,OAAApvE,EACAwE,KAAA0uE,0BAEA1uE,KAAA2uE,kBAAAnzE,IAUAwrB,EAAA0nD,wBAAA,WACA,IAAArgE,EAAArO,KAAAomE,qBAAA7vE,MAAA,GACAyJ,KAAAomE,wBACA/3D,EAAAtV,QAAA,SAAA61E,GACAA,OAcA5nD,EAAA2nD,kBAAA,SAAAnzE,GACA,IAAA2rB,EAAAnnB,KAAAmmE,eAAA5vE,MAAA,GACAyJ,KAAAmmE,kBAEAnmE,KAAAomE,wBACAj/C,EAAApuB,QAAA,SAAAwV,GACAA,EAAA/S,MAWAwrB,EAAAgoB,MAAA,WACAhvC,KAAAsrE,UAAA,UAWAtkD,EAAA8nB,OAAA,WAEA,WAAA9uC,KAAA4qE,SAAA,WAYA5jD,EAAAk1B,OAAA,WACA,OAAAl8C,KAAA4qE,SAAA,WAAAx/B,GAAA,MAeApkB,EAAAwiC,UAAA,SAAAqlB,GACA,YAAAA,EACA,OAAA7uE,KAAAumE,WAGAvmE,KAAAumE,aAAAsI,EAEAA,EACA7uE,KAAAu4B,SAAA,iBAEAv4B,KAAA04B,YAAA,kBAcA1R,EAAAoxB,YAAA,SAAApvD,GACA,gBAAAA,GACAA,EAAA,IACAA,EAAA,QAGAgX,KAAAsrE,UAAA,iBAAAtiF,KAUAgX,KAAAulD,OAAAnN,YAAAp4C,KAAA4qE,SAAA,kBACA5qE,KAAAulD,OAAAnN,cAoBApxB,EAAAt4B,SAAA,SAAA1F,GACA,QAAAiT,IAAAjT,EAEA,YAAAiT,IAAA+D,KAAAulD,OAAA72D,SAAAsR,KAAAulD,OAAA72D,SAAAmzE,KAGA74E,EAAAw/B,WAAAx/B,IAEA,IACAA,EAAA2P,KAGA3P,IAAAgX,KAAAulD,OAAA72D,WAEAsR,KAAAulD,OAAA72D,SAAA1F,EAEAA,IAAA2P,KACAqH,KAAAu4B,SAAA,YAEAv4B,KAAAsjC,SAAAwrC,QAAA9uE,KAAAojC,QAAA+mB,aACAnqD,KAAAu4B,SAAA,gBAGAv4B,KAAA04B,YAAA,YACA14B,KAAA04B,YAAA,eAGAlL,MAAAxkC,IAQAgX,KAAAokB,QAAA,oBAaA4C,EAAA8iC,cAAA,WACA,OAAA9pD,KAAAtR,WAAAsR,KAAAo4C,eAWApxB,EAAA6iC,qBAAA,WACA,OAAAz3D,KAAA+mB,MAAAnZ,KAAAtR,YAAA0D,KAAA+mB,MAAAnZ,KAAAo4C,gBAgBApxB,EAAAskB,SAAA,WACA,IAAAA,EAAAtrC,KAAA4qE,SAAA,YAMA,OAJAt/B,KAAA1+C,SACA0+C,EAAAF,GAAA,MAGAE,GAYAtkB,EAAAqkB,gBAAA,WACA,OAAAA,GAAArrC,KAAAsrC,WAAAtrC,KAAAtR,aAWAs4B,EAAA8kC,YAAA,WACA,IAAAxgB,EAAAtrC,KAAAsrC,WACA58C,EAAAsR,KAAAtR,WACAyG,EAAAm2C,EAAAn2C,IAAAm2C,EAAA1+C,OAAA,GAMA,OAJAuI,EAAAzG,IACAyG,EAAAzG,GAGAyG,GAgBA6xB,EAAAv3B,OAAA,SAAAs/E,GACA,IAAAve,EAEA,YAAAv0D,IAAA8yE,GAEAve,EAAAp+D,KAAAwf,IAAA,EAAAxf,KAAAwG,IAAA,EAAA4vB,WAAAumD,KACA/uE,KAAAulD,OAAA91D,OAAA+gE,EACAxwD,KAAAsrE,UAAA,YAAA9a,QAEAA,EAAA,GACAxwD,KAAAgwD,YAAAQ,MAOAA,EAAAhoC,WAAAxoB,KAAA4qE,SAAA,WACAp9C,MAAAgjC,GAAA,EAAAA,IAeAxpC,EAAA4oC,MAAA,SAAAof,GACA,QAAA/yE,IAAA+yE,EAKA,OAAAhvE,KAAA4qE,SAAA,aAJA5qE,KAAAsrE,UAAA,WAAA0D,IAkCAhoD,EAAAioD,aAAA,SAAAC,GACA,YAAAjzE,IAAAizE,EACAlvE,KAAAsrE,UAAA,kBAAA4D,GAGAlvE,KAAA4qE,SAAA,qBAkBA5jD,EAAAgpC,YAAA,SAAA+e,GACA,QAAA9yE,IAAA8yE,GAAA,IAAAA,EAKA,OAAA/uE,KAAAulD,OAAAkL,WAJAzwD,KAAAulD,OAAAkL,WAAAse,GAeA/nD,EAAAi7C,mBAAA,WACA,OAAAjiE,KAAA4qE,SAAA,2BAmBA5jD,EAAAmoC,aAAA,SAAAggB,GACA,QAAAlzE,IAAAkzE,EAGA,OAFAnvE,KAAAovE,gBAAAD,OACAnvE,KAAAwtE,yBAIA,GAAA5hC,GAAA,CACA,IAAA6hC,EAAAhiC,GACA3+B,EAAA9M,KAAA8M,KACA4gE,EAAiBj3C,EAAAh9B,EAAQg0E,EAAAE,qBAAA7gE,EAQzB,OANA4gE,GAAA5gE,EAAAvG,QACAmnE,EAAA5gE,EAAAvG,QAAA,IAAAknE,EAAAG,aACOF,GAAA5gE,EAAA+gE,oBACPH,EAAA5gE,EAAA+gE,kBAAA,IAAAJ,EAAAG,aAGAF,EAGA,QAAA1tE,KAAAovE,eAeApoD,EAAAqoC,kBAAA,WACA,IAAAoe,EAAAhiC,GACAzrC,KAAAmvD,cAAA,GAEAse,EAAApe,mBAQApuD,GAASw1B,EAAAh9B,EAAQg0E,EAAAtG,iBAAAnnE,KAAAolE,gCACjBplE,KAAAyjC,IAAAgqC,EAAApe,sBACKrvD,KAAAq3C,MAAA4qB,qBAGLjiE,KAAAsrE,UAAA,oBAIAtrE,KAAAqvE,kBAMArvE,KAAAokB,QAAA,sBAUA4C,EAAAooC,eAAA,WACA,IAAAqe,EAAAhiC,GACAzrC,KAAAmvD,cAAA,GAEAse,EAAApe,kBACM54B,EAAAh9B,EAAQg0E,EAAAre,kBACTpvD,KAAAq3C,MAAA4qB,qBACLjiE,KAAAsrE,UAAA,mBAEAtrE,KAAAsvE,iBAMAtvE,KAAAokB,QAAA,sBAWA4C,EAAAqoD,gBAAA,WACArvE,KAAAuvE,cAAA,EAEAvvE,KAAAwvE,gBAA2B/4C,EAAAh9B,EAAQyT,gBAAA4yB,MAAA2vC,SAEnCxuE,GAAOw1B,EAAAh9B,EAAQ,UAAAuG,KAAAslE,0BAEX7uC,EAAAh9B,EAAQyT,gBAAA4yB,MAAA2vC,SAAA,SAEZl3C,GAAa9B,EAAAh9B,EAAQmiB,KAAA,mBAMrB5b,KAAAokB,QAAA,oBAWA4C,EAAAu+C,mBAAA,SAAAzlE,GACQswC,EAAA32C,EAAO42C,WAAAvwC,EAAA,UACf,IAAAE,KAAAmvD,eACAnvD,KAAAovD,iBAEApvD,KAAAsvE,mBAWAtoD,EAAAsoD,eAAA,WACAtvE,KAAAuvE,cAAA,EACAroD,GAAQuP,EAAAh9B,EAAQ,UAAAuG,KAAAslE,0BAEZ7uC,EAAAh9B,EAAQyT,gBAAA4yB,MAAA2vC,SAAAzvE,KAAAwvE,gBAEZ92C,GAAgBjC,EAAAh9B,EAAQmiB,KAAA,mBAQxB5b,KAAAokB,QAAA,mBAeA4C,EAAAogB,cAAA,SAAAtnC,GACA,IAAAutE,EAAArtE,KAAAsjC,SAAA+pC,YAEA,GAAAA,KAAAqC,QAAA,CAMA,IAAA5iE,EACAmqB,EAeA,GAhBAnqB,EAgBA9M,KAAAyjC,IAAAjF,cAAA0R,cARA,WAPAjZ,EAAAnqB,EAAAmqB,QAAAzN,gBAQA,KAHA,uDAGAjwB,QAAAuT,EAAA5X,OAGA,KATA,YASAqE,QAAA09B,GAQA,mBAAAo2C,EAAAqC,QACArC,EAAAqC,QAAAl5E,KAAAwJ,KAAAF,GAEAE,KAAA2vE,cAAA7vE,KAgBAknB,EAAA2oD,cAAA,SAAA7vE,GACA,IAAA4vE,EAAA1vE,KAAAsjC,SAAA+pC,YAAArtE,KAAAsjC,SAAA+pC,YAAAqC,WAEAE,EAAAF,EAAAG,cACAA,OAAA,IAAAD,EAAA,SAAAE,GACA,OAAa1/B,EAAA32C,EAAO42C,WAAAy/B,EAAA,MACfF,EACLG,EAAAL,EAAAM,QACAA,OAAA,IAAAD,EAAA,SAAAD,GACA,OAAa1/B,EAAA32C,EAAO42C,WAAAy/B,EAAA,MACfC,EACLE,EAAAP,EAAAQ,aACAA,OAAA,IAAAD,EAAA,SAAAH,GACA,OAAa1/B,EAAA32C,EAAO42C,WAAAy/B,EAAA,MAAkC1/B,EAAA32C,EAAO42C,WAAAy/B,EAAA,UACxDG,EAEL,GAAAJ,EAAAr5E,KAAAwJ,KAAAF,GAAA,CACAA,EAAAmC,iBACAnC,EAAAu9B,kBACA,IAAA8yC,EAAqBltC,GAAS+B,aAAA,qBAEZ,IAARvO,EAAAh9B,EAAQgyC,GAAAyjB,oBAClBihB,EAAA75E,UAAAgtD,YAAA9sD,KAAAwJ,WAEK,GAAAgwE,EAAAx5E,KAAAwJ,KAAAF,GAAA,CACLA,EAAAmC,iBACAnC,EAAAu9B,kBACuB4F,GAAS+B,aAAA,cAChC1uC,UAAAgtD,YAAA9sD,KAAAwJ,WACK,GAAAkwE,EAAA15E,KAAAwJ,KAAAF,GAAA,CACLA,EAAAmC,iBACAnC,EAAAu9B,kBACuB4F,GAAS+B,aAAA,cAChC1uC,UAAAgtD,YAAA9sD,KAAAwJ,QAgBAgnB,EAAA62B,YAAA,SAAA3oD,GAGA,IAFA,IAAA2pD,EAEA5zD,EAAA,EAAA2b,EAAA5G,KAAAsjC,SAAAkf,UAAgDv3D,EAAA2b,EAAAha,OAAc3B,IAAA,CAC9D,IAAAw3D,EAAA77C,EAAA3b,GACA8hD,EAAiBiN,GAAImE,QAAAsE,GAQrB,GALA1V,IACAA,EAAe9J,GAAS+B,aAAAyd,IAIxB1V,GAMA,GAAAA,EAAA2V,gBACA7D,EAAA9R,EAAA8Q,YAAA3oD,IAGA,OAAA2pD,OATQpqB,EAAG7lB,MAAA,QAAA6zC,EAAA,qEAcX,UAeAz7B,EAAAopD,aAAA,SAAAr6C,GACA,IAsCAznB,EAtCA+hE,EAAArwE,KAIAswE,EAAAtwE,KAAAsjC,SAAAkf,UAAA3sD,IAAA,SAAA4sD,GACA,OAAAA,EAAwBzI,GAAImE,QAAAsE,MACvBxsD,OAAA,SAAA2zB,GACL,IAAA64B,EAAA74B,EAAA,GACAmjB,EAAAnjB,EAAA,GAGA,OAAAmjB,EAEAA,EAAA2V,eAGMjuB,EAAG7lB,MAAA,QAAA6zC,EAAA,sEACT,KAKA8tB,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAA1P,EAUA,OATAwP,EAAAjrC,KAAA,SAAAorC,GACA,OAAAF,EAAAlrC,KAAA,SAAAqrC,GAGA,GAFA5P,EAAA0P,EAAAC,EAAAC,GAGA,aAIA5P,GAWA6P,EAAA,SAAA3mD,EAAA/iB,GACA,IAAAs7C,EAAAv4B,EAAA,GAGA,GAFAA,EAAA,GAEA4zB,cAAA32C,EAAAkpE,EAAA/sC,SAAAmf,EAAAj5B,gBACA,OACAriB,SACA4lC,KAAA0V,IAeA,OARAziD,KAAAsjC,SAAAwtC,YAEAP,EAAAx6C,EAAAu6C,GAtBAhiE,EAsBAuiE,EArBA,SAAAp3E,EAAAC,GACA,OAAA4U,EAAA5U,EAAAD,MAuBA82E,EAAAD,EAAAv6C,EAAA86C,MAGA,GAmBA7pD,EAAAmmB,IAAA,SAAAhmC,GACA,IAAA4pE,EAAA/wE,KAGA,YAAAmH,EACA,OAAAnH,KAAAulD,OAAApY,KAAA,GAKA,IAAApX,EAjmaA,SAAAi7C,EAAA7jC,GAEA,GAAAx3C,MAAAyH,QAAA+vC,GAAA,CACA,IAAA8jC,KACA9jC,EAAAp0C,QAAA,SAAAm4E,GACAA,EAAAF,EAAAE,GAEAv7E,MAAAyH,QAAA8zE,GACAD,IAAA/4E,OAAAg5E,GACOtkE,GAAAskE,IACPD,EAAAtlF,KAAAulF,KAGA/jC,EAAA8jC,OAGA9jC,EAFG,iBAAAA,KAAAz1C,QAEH2qD,IACAlV,SAEGvgC,GAAAugC,IAAA,iBAAAA,oBAAAz1C,QAEH2qD,GAAAlV,OAMA,OAAAA,EAskaA6jC,CAAA7pE,GAIA4uB,EAAAnpC,QAWAoT,KAAAkmE,cAAA,EACAlmE,KAAAulD,OAAAxvB,UACA/1B,KAAA6rE,oBAAA91C,EAAA,IAEAopB,GAAAn/C,KAAA+1B,EAAA,YAAAo7C,EAAAjxB,GAQA,IAl+aAN,EAAA7S,EAo+aA,GATAgkC,EAAApK,YAAAzmB,EAGA6wB,EAAAxrB,OAAAxvB,UAEAg7C,EAAAlF,oBAAAsF,GAEAJ,EAAAK,KAAAD,GAGA,OAAAp7C,EAAAnpC,OAAA,EACAmkF,EAAA5jC,IAAApX,EAAAx/B,MAAA,KAGAw6E,EAAA7K,cAAA,EAEA6K,EAAAr+D,WAAA,WACA1S,KAAA4O,OACAuP,KAAA,EACA/kB,QAAA4G,KAAAgkC,SAAAhkC,KAAAsjC,SAAA+tC,wBAES,QAITN,EAAAhrC,gBAp/aA6Z,EAy/aAM,EAz/aAnT,EAy/aAgkC,EAAA15B,MAx/aAuI,EAAA7mD,QAAA,SAAAknD,GACA,OAAAA,EAAAqxB,SAAArxB,EAAAqxB,QAAAvkC,QA08aA/sC,KAAA0S,WAAA,WACA1S,KAAA4O,OACAuP,KAAA,EACA/kB,QAAA4G,KAAAgkC,SAAAhkC,KAAAsjC,SAAA+tC,wBAEO,IA0DPrqD,EAAAoqD,KAAA,SAAAjqE,GACA,IA5knBAoqE,EAAAC,EA4knBAC,EAAAzxE,KAEA0xE,EAAA1xE,KAAAowE,cAAAjpE,IAEA,OAAAuqE,IAhlnBAH,EAolnBAG,EAAA3kC,KAplnBAykC,EAolnBAxxE,KAAAkpE,UAnlnBApmC,GAAAyuC,KAAAzuC,GAAA0uC,IAolnBAxxE,KAAAkmE,cAAA,EAEAlmE,KAAA2iD,UAAA+uB,EAAA3kC,KAAA2kC,EAAAvqE,QACAnH,KAAAq3C,MAAAlnC,MAAA,WACAshE,EAAAvL,cAAA,KAEA,IAKAlmE,KAAAmQ,MAAA,WAKAnQ,KAAAq3C,MAAA9jC,YAAAjd,UAAAoU,eAAA,aACA1K,KAAAsrE,UAAA,YAAAnkE,GAEAnH,KAAAsrE,UAAA,MAAAnkE,EAAAgmC,KAGAntC,KAAAkmE,cAAA,IACK,IACL,KAOAl/C,EAAAkyB,KAAA,WACAl5C,KAAAsrE,UAAA,SASAtkD,EAAAg1B,MAAA,WACA,IAAA21B,EAAA3xE,KAEAouE,EAAApuE,KAAAsjC,SAAA+qC,SAAgD75C,EAAA/6B,EAAQ40E,QAExDruE,KAAA8uC,WAAAs/B,EACApuE,KAAA4xE,WAGAnlC,GADAzsC,KAAAmjC,OACAh3B,KAAA,WACA,OAAAwlE,EAAAC,eAKA5qD,EAAA4qD,SAAA,WACA5xE,KAAAq3C,OACAr3C,KAAAq3C,MAAAwE,YAAA,QAGA77C,KAAA+lE,cACA/lE,KAAA0jD,OAAA,IACA1jD,KAAA2iD,UAAA3iD,KAAAsjC,SAAAkf,UAAA,SACAxiD,KAAAsrE,UAAA,SACAtrE,KAAA6xE,qBAEA1wC,GAAAnhC,OACAA,KAAAokB,QAAA,gBASA4C,EAAA6qD,mBAAA,WACA7xE,KAAA8xE,oBACA9xE,KAAA+xE,qBACA/xE,KAAAgyE,mBAOAhrD,EAAA8qD,kBAAA,WACA9xE,KAAAo4C,YAAA,GACA,IAAA65B,EAAAjyE,KAAAy6D,WACAyX,EAAAD,EAAAC,gBACAroB,EAAAooB,EAAApoB,qBAEAqoB,GACAA,EAAArpB,gBAGAgB,GACAA,EAAAhB,iBAQA7hC,EAAA+qD,mBAAA,WACA/xE,KAAA82D,aAAA92D,KAAA+tE,uBACA/tE,KAAA0qE,yBAOA1jD,EAAAgrD,gBAAA,WACAhyE,KAAAvQ,OAAA,GACAuQ,KAAAokB,QAAA,iBAUA4C,EAAAmrD,eAAA,WACA,IAAAhrE,EAAAnH,KAAAssE,gBACAv2C,KAMA,OAJA,IAAAhgC,OAAAC,KAAAmR,GAAAva,QACAmpC,EAAApqC,KAAAwb,GAGAnH,KAAAulD,OAAAxvB,YAUA/O,EAAAslD,cAAA,WACA,OAAAtsE,KAAAulD,OAAAp+C,YAWA6f,EAAAg4C,WAAA,WACA,OAAAh/D,KAAAssE,iBAAAtsE,KAAAssE,gBAAAn/B,KAAA,IAYAnmB,EAAAorD,YAAA,WACA,OAAApyE,KAAAssE,iBAAAtsE,KAAAssE,gBAAAp3E,MAAA,IAcA8xB,EAAAq6C,QAAA,SAAAjrE,GACA,YAAA6F,IAAA7F,GACA4J,KAAAsrE,UAAA,aAAAl1E,QACA4J,KAAAsjC,SAAA+9B,QAAAjrE,IAIA4J,KAAA4qE,SAAA,YAoBA5jD,EAAAq/C,SAAA,SAAAjwE,GAEA,QAAA6F,IAAA7F,EACA,OAAA4J,KAAAsjC,SAAA+iC,WAAA,EAGA,IAAAgM,EAEA,iBAAAj8E,GAAA,mBAAA4L,KAAA5L,IACA4J,KAAAsjC,SAAA+iC,SAAAjwE,EACA4J,KAAAwrE,gBAAAp1E,GACAi8E,GAAA,GAKAryE,KAAAsjC,SAAA+iC,WAHKjwE,EAMLi8E,OAAA,IAAAA,EAAAryE,KAAAsjC,SAAA+iC,SAAAgM,EAKAryE,KAAAq3C,OACAr3C,KAAAsrE,UAAA,cAAA+G,IAqBArrD,EAAAy2B,YAAA,SAAArnD,GACA,YAAA6F,IAAA7F,GACA4J,KAAAsrE,UAAA,iBAAAl1E,GACA4J,KAAAsjC,SAAAma,YAAArnD,EACA4J,MAGAA,KAAA4qE,SAAA,gBAcA5jD,EAAAoiD,KAAA,SAAAhzE,GACA,YAAA6F,IAAA7F,GACA4J,KAAAsrE,UAAA,UAAAl1E,QACA4J,KAAAsjC,SAAA8lC,KAAAhzE,IAIA4J,KAAA4qE,SAAA,SAeA5jD,EAAA08B,OAAA,SAAAvW,GACA,QAAAlxC,IAAAkxC,EACA,OAAAntC,KAAAgmE,QAKA74B,IACAA,EAAA,IAGAA,IAAAntC,KAAAgmE,UAKAhmE,KAAAgmE,QAAA74B,EAEAntC,KAAAsrE,UAAA,YAAAn+B,GACAntC,KAAAwlE,mBAAA,EASAxlE,KAAAokB,QAAA,kBAgBA4C,EAAAwjD,wBAAA,WACA,KAAAxqE,KAAAgmE,SAAAhmE,KAAAsjC,SAAAimC,wBAAAvpE,KAAAq3C,OAAAr3C,KAAAq3C,MAAAqM,OAAA,CACA,IAAA4uB,EAAAtyE,KAAAq3C,MAAAqM,UAAA,GAEA4uB,IAAAtyE,KAAAgmE,UACAhmE,KAAAgmE,QAAAsM,EACAtyE,KAAAwlE,mBAAA,EAEAxlE,KAAAokB,QAAA,mBAkBA4C,EAAAkoB,SAAA,SAAAsc,GACA,QAAAvvD,IAAAuvD,EACA,QAAAxrD,KAAAimE,UAGAza,MAEAxrD,KAAAimE,YAAAza,IAIAxrD,KAAAimE,UAAAza,EAEAxrD,KAAA2qE,uBACA3qE,KAAAsrE,UAAA,cAAA9f,GAGAxrD,KAAAimE,WACAjmE,KAAA04B,YAAA,yBACA14B,KAAAu4B,SAAA,wBAMAv4B,KAAAokB,QAAA,mBAEApkB,KAAA2qE,uBACA3qE,KAAA6qE,8BAGA7qE,KAAA04B,YAAA,wBACA14B,KAAAu4B,SAAA,yBAMAv4B,KAAAokB,QAAA,oBAEApkB,KAAA2qE,uBACA3qE,KAAA+qE,kCAuBA/jD,EAAA2jD,oBAAA,SAAAnf,GACA,QAAAvvD,IAAAuvD,EACA,QAAAxrD,KAAAuyE,qBAGA/mB,MAEAxrD,KAAAuyE,uBAAA/mB,IAIAxrD,KAAAuyE,qBAAA/mB,EAEAxrD,KAAAuyE,sBACAvyE,KAAAu4B,SAAA,6BAQAv4B,KAAAokB,QAAA,yBAEApkB,KAAA04B,YAAA,6BAQA14B,KAAAokB,QAAA,0BAiBA4C,EAAApY,MAAA,SAAAtV,GACA,YAAA2C,IAAA3C,EACA0G,KAAAi8C,QAAA,KAIA,OAAA3iD,GACA0G,KAAAi8C,OAAA3iD,EACA0G,KAAA04B,YAAA,kBAEA14B,KAAAwyE,cACAxyE,KAAAwyE,aAAAl4D,WAMAta,KAAAi8C,OAAA,IAAAlQ,GAAAzyC,GAEA0G,KAAAu4B,SAAA,aAGI9D,EAAG7lB,MAAA,SAAA5O,KAAAi8C,OAAA99B,KAAA,IAAA4tB,GAAAE,WAAAjsC,KAAAi8C,OAAA99B,MAAA,IAAAne,KAAAi8C,OAAA7iD,QAAA4G,KAAAi8C,aAMPj8C,KAAAokB,QAAA,WAWA4C,EAAA+gB,mBAAA,SAAAjoC,GACAE,KAAAyyE,eAAA,GAiBAzrD,EAAA8/C,WAAA,SAAAtb,GACA,QAAAvvD,IAAAuvD,EACA,OAAAxrD,KAAA0lE,YAKA,IAFAla,SAEAxrD,KAAA0lE,YAAA,CAMA,GAFA1lE,KAAA0lE,YAAAla,EAEAxrD,KAAA0lE,YAUA,OATA1lE,KAAAyyE,eAAA,EACAzyE,KAAA04B,YAAA,qBACA14B,KAAAu4B,SAAA,wBAMAv4B,KAAAokB,QAAA,cAYApkB,KAAAq3C,OACAr3C,KAAAq3C,MAAA1Y,IAAA,qBAAAzgC,GACAA,EAAAm/B,kBACAn/B,EAAA+D,mBAIAjC,KAAAyyE,eAAA,EACAzyE,KAAA04B,YAAA,mBACA14B,KAAAu4B,SAAA,qBAMAv4B,KAAAokB,QAAA,kBASA4C,EAAA+/C,uBAAA,WACA,IAAA2L,EACAC,EACAC,EACAC,EAAApiE,GAAAzQ,UAAA+nC,oBA+BA/nC,KAAAiB,GAAA,YAnBA,WACA4xE,IAIA7yE,KAAAoa,cAAAs4D,GAIAA,EAAA1yE,KAAAma,YAAA04D,EAAA,OAWA7yE,KAAAiB,GAAA,YA9BA,SAAA/C,GAGAA,EAAA40E,UAAAH,GAAAz0E,EAAA60E,UAAAH,IACAD,EAAAz0E,EAAA40E,QACAF,EAAA10E,EAAA60E,QACAF,OAyBA7yE,KAAAiB,GAAA,UATA,SAAAnB,GACA+yE,IAEA7yE,KAAAoa,cAAAs4D,KAOA,IAsBA5E,EAtBArT,EAAAz6D,KAAA0kC,SAAA,eAGA+1B,GAAA/wB,IAAAE,KACA6wB,EAAAx5D,GAAA,sBAAAnB,GACAE,KAAAy/B,SAAA8lB,OAAAuoB,kBAAA9tE,KAAAy/B,SAAA6D,SAAAwqC,kBACA9tE,KAAAy/B,SAAA6D,SAAAwqC,kBAAA,IAEArT,EAAAx5D,GAAA,sBAAAnB,GACAE,KAAAy/B,SAAA6D,SAAAwqC,kBAAA9tE,KAAAy/B,SAAA8lB,OAAAuoB,qBAMA9tE,KAAAiB,GAAA,UAAA4xE,GACA7yE,KAAAiB,GAAA,QAAA4xE,GAOA7yE,KAAAma,YAAA,WAEA,GAAAna,KAAAyyE,cAAA,CAKAzyE,KAAAyyE,eAAA,EAEAzyE,KAAA8mE,YAAA,GAEA9mE,KAAAka,aAAA4zD,GACA,IAAAzzD,EAAAra,KAAAsjC,SAAAwqC,kBAEAzzD,GAAA,IAMAyzD,EAAA9tE,KAAA0S,WAAA,WAIA1S,KAAAyyE,eACAzyE,KAAA8mE,YAAA,IAEOzsD,MACF,MAiBL2M,EAAA8vC,aAAA,SAAAtnE,GACA,QAAAyM,IAAAzM,EAOA,OAAAwQ,KAAAq3C,OAAAr3C,KAAAq3C,MAAAkH,qBACAv+C,KAAAulD,OAAAqnB,kBAAA5sE,KAAA4qE,SAAA,gBAGA,EARA5qE,KAAAsrE,UAAA,kBAAA97E,IA2BAw3B,EAAA+mD,oBAAA,SAAAv+E,GACA,YAAAyM,IAAAzM,EACAwQ,KAAAsrE,UAAA,yBAAA97E,GAGAwQ,KAAAq3C,OAAAr3C,KAAAq3C,MAAAkH,qBACAv+C,KAAA4qE,SAAA,uBAGA,GAcA5jD,EAAAigC,QAAA,SAAAuE,GACA,QAAAvvD,IAAAuvD,EAKA,QAAAxrD,KAAAgzE,SAJAhzE,KAAAgzE,WAAAxnB,GA6BAxkC,EAAAg2B,aAAA,SAAAlK,EAAAtE,EAAAlgD,GACA,GAAA0R,KAAAq3C,MACA,OAAAr3C,KAAAq3C,MAAA2F,aAAAlK,EAAAtE,EAAAlgD,IAwBA04B,EAAAsmB,mBAAA,SAAAtvC,EAAAm/C,GACA,GAAAn9C,KAAAq3C,MACA,OAAAr3C,KAAAq3C,MAAA/J,mBAAAtvC,EAAAm/C,IAeAn2B,EAAA80B,sBAAA,SAAAx+C,QACA,IAAAA,IACAA,MAGA,IACA8a,EADA9a,EACA8a,MAQA,GANAA,IACAA,EAAA9a,GAKA0C,KAAAq3C,MACA,OAAAr3C,KAAAq3C,MAAAyE,sBAAA1jC,IAeA4O,EAAAu2B,wBAAA,WACA,OAAAv9C,KAAA4qE,SAAA,4BAUA5jD,EAAAuhD,WAAA,WACA,OAAAvoE,KAAAq3C,OAAAr3C,KAAAq3C,MAAAkxB,YAAAvoE,KAAAq3C,MAAAkxB,cAAA,GAUAvhD,EAAAwhD,YAAA,WACA,OAAAxoE,KAAAq3C,OAAAr3C,KAAAq3C,MAAAmxB,aAAAxoE,KAAAq3C,MAAAmxB,eAAA,GAgBAxhD,EAAA14B,SAAA,SAAA6vB,GACA,QAAAliB,IAAAkiB,EACA,OAAAne,KAAAy2D,UAGAz2D,KAAAy2D,UAAA7oE,OAAAuwB,GAAAqL,eAYAxC,EAAAkd,UAAA,WACA,OAAAlB,GAAAgG,EAAA1yC,UAAAgtC,SAAAY,UAAAlkC,KAAA8lE,aAWA9+C,EAAAisD,OAAA,WACA,IAAAj1E,EAAAglC,GAAAhjC,KAAAsjC,UACA/qB,EAAAva,EAAAua,OACAva,EAAAua,UAEA,QAAAttB,EAAA,EAAmBA,EAAAstB,EAAA3rB,OAAmB3B,IAAA,CACtC,IAAAmtB,EAAAG,EAAAttB,IAEAmtB,EAAA4qB,GAAA5qB,IACAqnB,YAAAxjC,EACA+B,EAAAua,OAAAttB,GAAAmtB,EAGA,OAAApa,GAoBAgpB,EAAAksD,YAAA,SAAA/7C,EAAAn5B,GACA,IAAAm1E,EAAAnzE,MAEAhC,SACAm5B,WAAA,GACA,IAAAi8C,EAAA,IAAoB3lC,GAAWztC,KAAAhC,GAM/B,OALAgC,KAAA2kC,SAAAyuC,GACAA,EAAAnyE,GAAA,qBACAkyE,EAAAl4C,YAAAm4C,KAEAA,EAAAr1D,OACAq1D,GASApsD,EAAAqsD,yBAAA,WACA,GAAArzE,KAAAknE,aAOA,IAHA,IAAAoM,EAAAtzE,KAAAszE,oBACArsC,EAAAjnC,KAAAinC,eAEAh8C,EAAA,EAAmBA,EAAAs5E,GAAA33E,OAA6B3B,IAAA,CAChD,IAAAsoF,EAAAhP,GAAAt5E,GAGA,GAAAg8C,GAFAjnC,KAAAwzE,aAAAD,GAEA,CAEA,GAAAD,IAAAC,EACA,OAIAD,GACAtzE,KAAA04B,YAAA8rC,GAAA8O,IAGAtzE,KAAAu4B,SAAAisC,GAAA+O,IACAvzE,KAAAyzE,YAAAF,EACA,SAWAvsD,EAAA0sD,yBAAA,WACA,IAAAp7C,EAAAt4B,KAAA2zE,yBACA3zE,KAAAyzE,YAAA,GAEAn7C,GACAt4B,KAAA04B,YAAAJ,IAyCAtR,EAAAigD,YAAA,SAAA2M,GAEA,YAAA33E,IAAA23E,EACa99C,GAAM91B,KAAAwzE,eAGnBxzE,KAAAyzE,YAAA,GACAzzE,KAAAwzE,aAAwB19C,MAAS2uC,GAAAmP,GAGjC5zE,KAAAqzE,2BAEWv9C,GAAM91B,KAAAwzE,gBAgBjBxsD,EAAAkgD,WAAA,SAAA9wE,GAEA,YAAA6F,IAAA7F,EACA4J,KAAA6zE,aAGAz9E,EAAAsJ,QAAAtJ,MACA4J,KAAA6zE,aAOA7zE,KAAA6zE,YAAAz9E,EAGAA,GACA4J,KAAAiB,GAAA,eAAAjB,KAAAqzE,0BACArzE,KAAAqzE,6BAEArzE,KAAAknB,IAAA,eAAAlnB,KAAAqzE,0BACArzE,KAAA0zE,4BAGAt9E,QAhBA,GA2BA4wB,EAAAssD,kBAAA,WACA,OAAAtzE,KAAAyzE,aAYAzsD,EAAA2sD,uBAAA,WACA,OAAAnP,GAAAxkE,KAAAyzE,cAAA,IA0DAzsD,EAAA8sD,UAAA,SAAA1nD,EAAAjc,GACA,IAAA4jE,EAAA/zE,KAEA,GAAAosB,GAAA,iBAAAA,EAAA,CAIApsB,KAAAg8C,QAEAh8C,KAAAulD,OAAAn5B,MAAA4W,GAAA5W,GACA,IAAA4nD,EAAAh0E,KAAAulD,OAAAn5B,MACA6nD,EAAAD,EAAAC,QACAvwB,EAAAswB,EAAAtwB,OACAvW,EAAA6mC,EAAA7mC,IACAC,EAAA4mC,EAAA5mC,YAEA6mC,GAAAvwB,IACA1jD,KAAAulD,OAAAn5B,MAAA6nD,UACA9mC,IAAAuW,EACAxuD,KAAAitD,GAAAuB,MAIAvW,GACAntC,KAAAmtC,OAGAuW,GACA1jD,KAAA0jD,UAGA/tD,MAAAyH,QAAAgwC,IACAA,EAAAr0C,QAAA,SAAAm7E,GACA,OAAAH,EAAAzmC,mBAAA4mC,GAAA,KAIAl0E,KAAAmQ,WAYA6W,EAAAmtD,SAAA,WACA,IAAAn0E,KAAAulD,OAAAn5B,MAAA,CACA,IAAAs3B,EAAA1jD,KAAA0jD,SAUAt3B,GACA+gB,IAVAntC,KAAAmyE,iBAWA/kC,WAVAz3C,MAAAW,UAAAT,IAAAW,KAAAwJ,KAAA28C,mBAAA,SAAAu3B,GACA,OACAphC,KAAAohC,EAAAphC,KACAtE,MAAA0lC,EAAA1lC,MACAlgD,SAAA4lF,EAAA5lF,SACA6+C,IAAA+mC,EAAA/mC,QAgBA,OARAuW,IACAt3B,EAAAs3B,SACAt3B,EAAA6nD,UACA9mC,IAAA/gB,EAAAs3B,OACAxuD,KAAAitD,GAAA/1B,EAAAs3B,WAIAt3B,EAGA,OAAA4W,GAAAhjC,KAAAulD,OAAAn5B,QAcA4c,EAAAk8B,eAAA,SAAAv4E,GACA,IAAAynF,GACAr+C,WACAxd,WAEA87D,EAAAl7C,GAAAxsC,GACA2nF,EAAAD,EAAA,cAWA,GATAp8C,GAAAtrC,EAAA,cACA0nF,EAAAzlC,MAAA,GAGA3W,GAAAtrC,EAAA,eACA0nF,EAAAzM,OAAA,GAIA,OAAA0M,EAAA,CAGA,IAAAC,EAA4BC,IAAcF,GAAA,MAC1Ch7E,EAAAi7E,EAAA,GACA1qF,EAAA0qF,EAAA,GAEAj7E,GACQm7B,EAAG7lB,MAAAtV,GAGLw8B,GAAMu+C,EAAAxqF,GAKZ,GAFIisC,GAAMs+C,EAAAC,GAEV1nF,EAAA8yE,gBAGA,IAFA,IAAAvlE,EAAAvN,EAAAixE,WAEA3yE,EAAA,EAAA2b,EAAA1M,EAAAtN,OAA0C3B,EAAA2b,EAAO3b,IAAA,CACjD,IAAAoW,EAAAnH,EAAAjP,GAEAwpF,EAAApzE,EAAAsb,SAAA6M,cAEA,WAAAirD,EACAL,EAAAr+C,QAAApqC,KAAAwtC,GAAA93B,IACS,UAAAozE,GACTL,EAAA77D,OAAA5sB,KAAAwtC,GAAA93B,IAKA,OAAA+yE,GAWAptD,EAAA4/C,kBAAA,WACA,IAAAxqC,EAAe3F,EAAAh9B,EAAQ29B,cAAA,KAGvB,sBAAAgF,EAAA0D,OAAA,oBAAA1D,EAAA0D,OAAA,iBAAA1D,EAAA0D,OAAA,gBAAA1D,EAAA0D,OACA,gBAAA1D,EAAA0D,QAGAkJ,EArpIA,CAspIE/F,IAmDF6W,GAAAC,MAAAhhD,QAAA,SAAA8sE,GACA,IAAAhsE,EAAAigD,GAAA+rB,GAEEZ,GAAM3uE,UAAAuD,EAAA4/C,YAAA,WACR,OAAAz5C,KAAAq3C,MACAr3C,KAAAq3C,MAAAx9C,EAAA4/C,eAKAz5C,KAAAnG,EAAA6/C,aAAA15C,KAAAnG,EAAA6/C,cAAA,IAAA7/C,EAAAy/C,UACAt5C,KAAAnG,EAAA6/C,iBAYAurB,GAAMh8B,WACN,IAAIyrC,GAAYlgD,EAAA/6B,EAAQkU,UAUxBs3D,GAAM3uE,UAAAgtC,UAENkf,UAAaxI,GAAIkE,kBACjBy2B,SACAC,SAEA9G,kBAAA,IAEA1W,iBAGA0X,QAAA,EAEA50E,UAAA,+JACA5L,SAAYomF,KAAcA,GAASxwC,WAAcwwC,GAASxwC,UAAA,IAAiBwwC,GAASG,cAAiBH,GAASpmF,WAAA,KAE9G41C,aAEAmtC,oBAAA,iDACApK,eACAC,YAAA,IASA,QAOA,UAQA,WAqBA,eAwBA,cAAAnuE,QAAA,SAAAuV,GACE22D,GAAM3uE,UAAAgY,GAAA,WACR,OAAAtO,KAAA4qE,SAAAt8D,MAGA21D,GAAAlrE,QAAA,SAAA+G,GACEmlE,GAAM3uE,UAAA,aAAAwsC,GAAAhjC,GAAA,gBACR,OAAAE,KAAAokB,QAAAtkB,MA6DAmjC,GAAS0F,kBAAA,SAA6Bs8B,IAUtC,IAiBA6P,MAYAC,GAAA,SAAApnF,GACA,OAAAmnF,GAAApqE,eAAA/c,IAcAqnF,GAAA,SAAArnF,GACA,OAAAonF,GAAApnF,GAAAmnF,GAAAnnF,QAAAsO,GAgBAg5E,GAAA,SAAAx1C,EAAA9xC,GACA8xC,EAAA,eAAAA,EAAA,mBACAA,EAAA,eAAA9xC,IAAA,GAkBAunF,GAAA,SAAAz1C,EAAArhC,EAAA+2E,GACA,IAAAzU,GAAAyU,EAAA,2BACA11C,EAAArb,QAAAs8C,EAAAtiE,GACAqhC,EAAArb,QAAAs8C,EAAA,IAAAtiE,EAAAzQ,KAAAyQ,IAgEAg3E,GAAA,SAAAznF,EAAA0nF,GAIA,OADAA,EAAA/+E,UAAA3I,OACA,WACAunF,GAAAl1E,MACArS,OACA2nF,OAAAD,EACAzkE,SAAA,OACK,GAEL,QAAAgkB,EAAA7kB,UAAAnjB,OAAAkjB,EAAA,IAAAna,MAAAi/B,GAAAppB,EAAA,EAAuEA,EAAAopB,EAAappB,IACpFsE,EAAAtE,GAAAuE,UAAAvE,GAGA,IAAAoF,EAAA0iB,EAAA+hD,GAAAr1E,MAAA9H,OAAA4X,IAQA,OALA9P,KAAArS,GAAA,WACA,OAAAijB,GAGAskE,GAAAl1E,KAAA4Q,EAAA2kE,gBACA3kE,IAmBA4kE,GAEA,WASA,SAAAA,EAAA/1C,GACA,GAAAz/B,KAAAuT,cAAAiiE,EACA,UAAA9lE,MAAA,0DAGA1P,KAAAy/B,SAGA2C,GAAApiC,aACAA,KAAAokB,QACAue,GAAA3iC,UAAAuT,YAAAqvB,cACAqyC,GAAAx1C,EAAAz/B,KAAArS,MAGAqS,KAAAonB,QAAA3W,GAAAzQ,UAAAonB,SAEAqY,EAAAx+B,GAAA,UAAAjB,KAAAonB,SAOA,IAAAJ,EAAAwuD,EAAAl/E,UAmOA,OAjOA0wB,EAAA76B,QAAA,WACA,OAAA6T,KAAAuT,YAAAkiE,SAgBAzuD,EAAAuuD,aAAA,SAAAn3E,GAQA,YAPA,IAAAA,IACAA,MAGAA,EAAAzQ,KAAAqS,KAAArS,KACAyQ,EAAAk3E,OAAAt1E,KAAAuT,YACAnV,EAAAwS,SAAA5Q,KACA5B,GAkBA4oB,EAAA5C,QAAA,SAAAtkB,EAAA1B,GAKA,YAJA,IAAAA,IACAA,MAGAgmB,GAAApkB,KAAAohC,YAAAthC,EAAAE,KAAAu1E,aAAAn3E,KAgBA4oB,EAAA6b,mBAAA,SAAA3kC,KAWA8oB,EAAAI,QAAA,WACA,IAAAz5B,EAAAqS,KAAArS,KACA8xC,EAAAz/B,KAAAy/B,OAQAz/B,KAAAokB,QAAA,WACApkB,KAAAknB,MACAuY,EAAAvY,IAAA,UAAAlnB,KAAAonB,SAIAqY,EAAA,eAAA9xC,IAAA,EACAqS,KAAAy/B,OAAAz/B,KAAAuL,MAAA,KAGAk0B,EAAA9xC,GAAAynF,GAAAznF,EAAAmnF,GAAAnnF,KAcA6nF,EAAAE,QAAA,SAAAJ,GACA,IAAAjiD,EAAA,iBAAAiiD,EAAAN,GAAAM,KACA,yBAAAjiD,IAAAmiD,EAAAl/E,UAAAwyC,cAAAzV,EAAA/8B,YAmBAk/E,EAAAG,eAAA,SAAAhoF,EAAA2nF,GACA,oBAAA3nF,EACA,UAAA+hB,MAAA,yBAAA/hB,EAAA,mCAAAA,EAAA,KAGA,GAAAonF,GAAApnF,GACM8mC,EAAGv7B,KAAA,mBAAAvL,EAAA,wEACJ,GAAUs3E,GAAM3uE,UAAAoU,eAAA/c,GACrB,UAAA+hB,MAAA,yBAAA/hB,EAAA,0DAGA,sBAAA2nF,EACA,UAAA5lE,MAAA,uBAAA/hB,EAAA,qCAAA2nF,EAAA,KAcA,OAXAR,GAAAnnF,GAAA2nF,EAnXA,WAsXA3nF,IACA6nF,EAAAE,QAAAJ,GACQrQ,GAAM3uE,UAAA3I,GAlRd,SAAAA,EAAA2nF,GACA,IAAAM,EAAA,WAOAV,GAAAl1E,MACArS,OACA2nF,SACA1kE,SAAA,OACK,GACL,IAAAA,EAAA0kE,EAAA78E,MAAAuH,KAAA+P,WAOA,OANAklE,GAAAj1E,KAAArS,GACAunF,GAAAl1E,MACArS,OACA2nF,SACA1kE,aAEAA,GAMA,OAHA7a,OAAAC,KAAAs/E,GAAAv8E,QAAA,SAAAm9B,GACA0/C,EAAA1/C,GAAAo/C,EAAAp/C,KAEA0/C,EAwPcC,CAAAloF,EAAA2nF,GAENrQ,GAAM3uE,UAAA3I,GAAAynF,GAAAznF,EAAA2nF,IAIdA,GAcAE,EAAAM,iBAAA,SAAAnoF,GACA,GA7YA,WA6YAA,EACA,UAAA+hB,MAAA,mCAGAqlE,GAAApnF,YACAmnF,GAAAnnF,UACas3E,GAAM3uE,UAAA3I,KAgBnB6nF,EAAAO,WAAA,SAAAh8B,GAKA,IAAA7uD,EASA,YAbA,IAAA6uD,IACAA,EAAAhkD,OAAAC,KAAA8+E,KAIA/6B,EAAAhhD,QAAA,SAAApL,GACA,IAAA2nF,EAAAN,GAAArnF,GAEA2nF,KACApqF,SACAyC,GAAA2nF,KAGApqF,GAaAsqF,EAAAQ,iBAAA,SAAAroF,GACA,IAAA2nF,EAAAN,GAAArnF,GACA,OAAA2nF,KAAAG,SAAA,IAGAD,EAnQA,GAmRAA,GAAAR,aAOAQ,GAAAS,iBA1dA,SA2dAT,GAAAG,eA3dA,SA2dAH,IAOAvQ,GAAM3uE,UAAA4/E,YAAA,SAAAvoF,GACN,QAAAqS,KAAA,qBAAAA,KAAA,eAAArS,IASAs3E,GAAM3uE,UAAA6/E,UAAA,SAAAxoF,GACN,QAAAonF,GAAApnF,IAiEA,IA0FAyoF,GAAA,SAAA/9E,GACA,WAAAA,EAAAkB,QAAA,KAAAlB,EAAA9B,MAAA,GAAA8B,GAmFA,SAAAg+E,GAAAh+E,EAAA2F,EAAAmS,GACA,IAAAsvB,EAAA42C,GAAAC,UAAAj+E,GAEA,GAAAonC,EASA,OARAzhC,GACMy2B,EAAGv7B,KAAA,WAAAb,EAAA,0DAGT8X,GACAsvB,EAAAtvB,SAGAsvB,EAGA,IAAA3yB,EAAA,iBAAAzU,EAAAmjC,GAAA,IAAA46C,GAAA/9E,MAEA,IAAAq+B,GAAA5pB,GACA,UAAAnG,UAAA,sDASAmG,EAAA0xB,cAAA+3C,aAAAzpE,EAAA0xB,cAAA5iB,KAAAyc,SAAAvrB,IACI2nB,EAAGv7B,KAAA,mDAGP8E,QACAq4E,GAAAG,MAAA,eAAAz9E,QAAA,SAAA09E,GACA,IAAAjwE,EAAAiwE,EAAA3pE,EAAAk2B,GAAAhlC,IAEA4O,GAAApG,KAAA7Q,MAAAyH,QAAAoJ,GAKAxI,EAAAglC,GAAAhlC,EAAAwI,GAJMiuB,EAAG7lB,MAAA,kDAQT,IAAA8nE,EAAwBzzC,GAAS+B,aAAA,UAKjC,OAJAvF,EAAA,IAAAi3C,EAAA5pE,EAAA9O,EAAAmS,GACAkmE,GAAAG,MAAA,SAAAz9E,QAAA,SAAA09E,GACA,OAAAA,EAAAh3C,KAEAA,EA+FA,GArFA42C,GAAAM,UAcAN,GAAAG,MAAA,SAAAthF,EAAAoZ,GAOA,OANA+nE,GAAAM,OAAAzhF,GAAAmhF,GAAAM,OAAAzhF,OAEAoZ,IACA+nE,GAAAM,OAAAzhF,GAAAmhF,GAAAM,OAAAzhF,GAAAgD,OAAAoW,IAGA+nE,GAAAM,OAAAzhF,IAaAmhF,GAAA16E,KAAA,SAAAzG,EAAAoZ,GACA+nE,GAAAG,MAAAthF,EAAAoZ,IAaA+nE,GAAAO,SAAA,SAAA1hF,EAAAoZ,GACA+nE,GAAAG,MAAAthF,KAAAgD,OAAAoW,GAAAzY,IAAA,SAAAghF,GAMA,OALA,SAAA70C,IAEA,OADAq0C,GAAAS,WAAA5hF,EAAA8sC,GACA60C,EAAAp+E,WAAA,EAAAsX,gBAoBAsmE,GAAAS,WAAA,SAAA5hF,EAAAoZ,GACA,IAAAxY,EAAAugF,GAAAG,MAAAthF,GAAAqE,QAAA+U,GAEA,QAAAxY,IAAA,KAIAugF,GAAAM,OAAAzhF,GAAAmhF,GAAAM,OAAAzhF,GAAAqB,QACA8/E,GAAAM,OAAAzhF,GAAAmU,OAAAvT,EAAA,IACA,KAIY,IAAR0+B,EAAA/6B,EAAQ+tE,0BAAAhxC,KAAA,CACZ,IAAAugD,GAAAv7C,GAAA,wBAEA,IAAAu7C,GAAA,CACAA,GAAcl3C,GAAkB,uBAChC,IAAQm3C,GAAIx7C,GAAA,QAEJw7C,IACFA,GAAIj/C,aAAAg/C,GAAuBC,GAAIl/C,YAGrCiI,GAAAg3C,GAAA,kJAOAv3C,GAAA,EAAA62C,IAOAA,GAAAZ,QAAoBxiD,EAQpBojD,GAAAr4E,QAAoBinE,GAAM3uE,UAAAgtC,SAQ1B+yC,GAAAY,WAAA,WACA,OAAShS,GAAMh8B,SAkBfotC,GAAAC,UAAA,SAAAj+E,GACA,IACA1L,EADAs8C,EAAgBg8B,GAAMh8B,QAGtB,oBAAA5wC,EAAA,CACA,IAAA6+E,EAAAd,GAAA/9E,GACAonC,EAAAwJ,EAAAiuC,GAEA,GAAAz3C,EACA,OAAAA,EAGA9yC,EAAA6uC,GAAA,IAAA07C,QAEAvqF,EAAA0L,EAGA,GAAAq+B,GAAA/pC,GAAA,CACA,IAAAwqF,EAAAxqF,EACAyqF,EAAAD,EAAA13C,OACA2hC,EAAA+V,EAAA/V,SAGA,GAAAgW,GAAAnuC,EAAAm4B,GACA,OAAAgW,GAAAnuC,EAAAm4B,KAeAiV,GAAAgB,cAAA,WACA,OAEAthF,OAAAC,KAAgBivE,GAAMh8B,SAAApzC,IAAA,SAAAgkC,GACtB,OAAaorC,GAAMh8B,QAAApP,KACd5jC,OAAAyJ,UAIL22E,GAAAptC,QAAoBg8B,GAAMh8B,QAC1BotC,GAAArxC,aAAyB/B,GAAS+B,aAmBlCqxC,GAAA1tC,kBAAA,SAAAk9B,EAAAl2D,GACMqqC,GAAIvU,OAAA91B,IACN8kB,EAAGv7B,KAAA,OAAA2sE,EAAA,+GAGL5iC,GAAS0F,kBAAAnyC,KAAwBysC,GAAS4iC,EAAAl2D,IAG5C0mE,GAAAl4B,QAAoBnE,GAAImE,QACxBk4B,GAAAr4B,aAAyBhE,GAAIgE,aAC7Bq4B,GAAAvgE,IA3ngBA,SAAA5gB,EAAA0qD,GACAJ,GAAAtqD,GAAAsqD,GAAAtqD,OACAsqD,GAAAtqD,GAAAvJ,KAAAi0D,IAkogBA7pD,OAAAkN,eAAAozE,GAAA,cACAjgF,SACAkhF,WAAA,EACAlhE,YAAA,IAEArgB,OAAAkN,eAAAozE,GAAAz2B,WAAA,cACAxpD,MAAAspD,GACA43B,WAAA,EACAlhE,YAAA,IASAigE,GAAA1rC,WASA0rC,GAAA7rC,iBACA6rC,GAAA78E,OAlcA,SAAAotB,EAAA2wD,QACA,IAAAA,IACAA,MAGA,IAAA5wD,EAAA,WACAC,EAAAnuB,MAAAuH,KAAA+P,YAGAynE,KAeA,QAAA7pF,IAbA,iBAAA4pF,GACAA,EAAAhkE,cAAAxd,OAAAO,UAAAid,cACAoT,EAAA4wD,EAAAhkE,aAGAikE,EAAAD,GACG,mBAAAA,IACH5wD,EAAA4wD,GA5DA,SAAA5wD,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAjgB,UAAA,kEAAAigB,GAGAD,EAAArwB,UAAAP,OAAA0R,OAAAmf,KAAAtwB,WACAid,aACAnd,MAAAuwB,EACAvQ,YAAA,EACAI,UAAA,EACAxB,cAAA,KAIA4R,IAEAD,EAAA8wD,OAAA7wD,GA+CA8wD,CAAA/wD,EAAAC,GAGA4wD,EACAA,EAAA9sE,eAAA/c,KACAg5B,EAAArwB,UAAA3I,GAAA6pF,EAAA7pF,IAIA,OAAAg5B,GAqaA0vD,GAAArzC,gBACAqzC,GAAA5lE,QACA4lE,GAAAV,eAAAH,GAAAG,eACAU,GAAAP,iBAAAN,GAAAM,iBAaAO,GAAAf,OAAA,SAAAzP,EAAAyP,GAEA,OADE7gD,EAAGv7B,KAAA,wEACLs8E,GAAAG,eAAA9P,EAAAyP,IAGAe,GAAAN,WAAAP,GAAAO,WACAM,GAAArB,UAAAQ,GAAAR,UACAqB,GAAAL,iBAAAR,GAAAQ,iBAeAK,GAAAsB,YAAA,SAAAx5D,EAAAt0B,GACA,IAAA+tF,EAIA,OAFAz5D,GAAA,GAAAA,GAAAqL,cACA6sD,GAAAr4E,QAAAkmC,UAAAlB,GAAAqzC,GAAAr4E,QAAAkmC,YAAA0zC,MAA6Fz5D,GAAAt0B,EAAA+tF,IAC7FvB,GAAAr4E,QAAAkmC,UAAA/lB,IAUAk4D,GAAAliD,IAAgBM,EAChB4hD,GAAA3hD,aAAAiB,EACA0gD,GAAAwB,gBAAAxB,GAAAjrC,oBACAirC,GAAA5tB,cACA4tB,GAAAyB,cA17cA,SAAAC,GACAtgF,GAAAsgF,GA07cA1B,GAAA2B,gBAp7cA,WACAvgF,GAAA4wD,IAo7cAguB,GAAApgC,SAAqBd,GACrBkhC,GAAAlgC,cAA0BN,GAC1BwgC,GAAA11C,eACA01C,GAAAp1E,MACAo1E,GAAA13C,OACA03C,GAAAnvD,OACAmvD,GAAAjyD,WAcAiyD,GAAA/5D,IAAgB46B,EAAAz9C,EAChB48E,GAAA3+B,UAAsBF,GACtB6+B,GAAA19B,cACA09B,GAAAx9B,eACA,4JAAA9/C,QAAA,SAAA8gC,GACAw8C,GAAAx8C,GAAA,WAEA,OADIpF,EAAGv7B,KAAA,WAAA2gC,EAAA,qCAAyCA,EAAA,cAChD6B,GAAA7B,GAAAphC,MAAA,KAAAsX,cAGAsmE,GAAAxvC,cAA0B5Q,GAQ1BogD,GAAA4B,IAAAv8C,GAQA26C,GAAAloE,IAAA6nC;;;;;;;AAYA,IAAIkiC,GAAU,SAAAC,EAAAC,GAEd,kBAAAp2E,KAAAo2E,GACAA,GAIA,QAAAp2E,KAAAm2E,KACAA,EAAcE,EAAA5+E,EAAU6+E,iBAAkB9jD,EAAA/6B,EAAQmE,SAAAuC,KAAAg4E,IAGzCE,EAAA5+E,EAAU6+E,iBAAAH,EAAAC,KAenBG,GAAA,SAAAC,EAAArqE,EAAAsqE,GAIA,OAAAD,GAAAC,EAAAC,aAAAvqE,IAAAsqE,EAAAC,YACAD,EAAAC,YAGAvqE,GAGIwqE,GAAc,SAAA/nE,EAAA0d,GAClB,KAAA1d,aAAA0d,GACA,UAAA3nB,UAAA,sCAIIiyE,GAAW,WACf,SAAA/iE,EAAAjV,EAAA/G,GACA,QAAA5O,EAAA,EAAmBA,EAAA4O,EAAAjN,OAAkB3B,IAAA,CACrC,IAAAujC,EAAA30B,EAAA5O,GACAujC,EAAApY,WAAAoY,EAAApY,aAAA,EACAoY,EAAAxZ,cAAA,EACA,UAAAwZ,MAAAhY,UAAA,GACAzgB,OAAAkN,eAAArC,EAAA4tB,EAAAt4B,IAAAs4B,IAIA,gBAAAF,EAAAG,EAAAC,GAGA,OAFAD,GAAA5Y,EAAAyY,EAAAh4B,UAAAm4B,GACAC,GAAA7Y,EAAAyY,EAAAI,GACAJ,GAde,GA2CXuqD,GAAQ,SAAAlyD,EAAAC,GACZ,sBAAAA,GAAA,OAAAA,EACA,UAAAjgB,UAAA,kEAAAigB,GAGAD,EAAArwB,UAAAP,OAAA0R,OAAAmf,KAAAtwB,WACAid,aACAnd,MAAAuwB,EACAvQ,YAAA,EACAI,UAAA,EACAxB,cAAA,KAGA4R,IAAA7wB,OAAAy7B,eAAAz7B,OAAAy7B,eAAA7K,EAAAC,GAAAD,EAAArT,UAAAsT,IAGIkyD,GAAyB,SAAAl/D,EAAApjB,GAC7B,IAAAojB,EACA,UAAAkN,eAAA,6DAGA,OAAAtwB,GAAA,iBAAAA,GAAA,mBAAAA,EAAAojB,EAAApjB,GAGAuiF,GAAA,WA2BA,gBAAAx0E,EAAAtZ,GACA,GAAA0K,MAAAyH,QAAAmH,GACA,OAAAA,EACK,GAAA6K,OAAAgD,YAAArc,OAAAwO,GACL,OA9BA,SAAAA,EAAAtZ,GACA,IAAA+tF,KACAC,GAAA,EACAC,GAAA,EACAC,OAAAl9E,EAEA,IACA,QAAAm9E,EAAAjoD,EAAA5sB,EAAA6K,OAAAgD,cAA+C6mE,GAAAG,EAAAjoD,EAAA3rB,QAAAotB,QAC/ComD,EAAArtF,KAAAytF,EAAAhjF,QAEAnL,GAAA+tF,EAAApsF,SAAA3B,GAH8EguF,GAAA,IAKzE,MAAA3/E,GACL4/E,GAAA,EACAC,EAAA7/E,EACK,QACL,KACA2/E,GAAA9nD,EAAA,QAAAA,EAAA,SACO,QACP,GAAA+nD,EAAA,MAAAC,GAIA,OAAAH,EAOAK,CAAA90E,EAAAtZ,GAEA,UAAA0b,UAAA,yDAjCA,GA8CA2yE,GAAAjD,GAAArzC,aACAu2C,GAAAlD,GAAA11C,YACA64C,GAAAnD,GAAAliD,IAWAslD,GAAA,SAAAC,EAAAl+D,IACA,qBAAAziB,QAAA,SAAA4gF,GACA,QAAAC,KAAAF,EAAAvtD,YAAAwtD,GACA,QAAAE,KAAAH,EAAAvtD,YAAAwtD,GAAAC,GAAA,CACA,IAAAE,EAAAJ,EAAAvtD,YAAAwtD,GAAAC,GAAAC,GACAr+D,EAAAs+D,EAAAH,EAAAC,EAAAC,OA6DAE,GAAA,SAAAL,EAAAttD,GACA,IAAAlhC,EAAAouF,GAAAI,MACA1tD,EAAA9gC,EAAAghC,UAAAE,EAAA7Q,KAEA,IAAAyQ,EACA,YAKA,GAAAA,EAAA7nB,UAAAioB,EAAAjoB,UAAA6nB,EAAA7nB,SAAAvX,SAAAw/B,EAAAjoB,SAAAvX,QAAAo/B,EAAAT,UAAAa,EAAAb,SAAAS,EAAAP,gBAAAW,EAAAX,cACA,YAGA,IAAAuuD,EAAAV,GAAAttD,EAAAI,GAEAJ,EAAA7nB,WACA61E,EAAA71E,SAxDA,SAAA0yE,EAAApzB,EAAAz4D,GACA,IAAAE,EAAAu4D,EAAAltD,QACAvL,KAAA,EAGA,IAFA,IAAA4B,EAAAwF,KAAAwG,IAAAi+E,EAAAjqF,OAAA62D,EAAA72D,OAAA5B,GAEAC,EAAAD,EAAsBC,EAAA2B,EAAY3B,IAClCC,EAAAD,EAAAD,GAAAsuF,GAAAzC,EAAA5rF,GAAAC,EAAAD,EAAAD,IAGA,OAAAE,EA+CA+uF,CAAAjuD,EAAA7nB,SAAAioB,EAAAjoB,SAAAioB,EAAAX,cAAAO,EAAAP,gBAIAuuD,EAAA71E,SAAApL,QAAA,SAAAqL,IAhDA,SAAAA,EAAA81E,GACA91E,EAAA+1E,cACA/1E,EAAA+1E,YAA0BjC,GAAUgC,EAAA91E,EAAAmX,MAGpCnX,EAAAlO,MAAAkO,EAAAlO,IAAAikF,cACA/1E,EAAAlO,IAAAikF,YAA8BjC,GAAUgC,EAAA91E,EAAAlO,IAAAqlB,MAGxCnX,EAAAvO,MAAAuO,EAAAvO,IAAAskF,cACA/1E,EAAAvO,IAAAskF,YAA8BjC,GAAUgC,EAAA91E,EAAAvO,IAAA0lB,MAuCxC6+D,CAAAh2E,EAAA41E,EAAAG,eAKA,QAAAlvF,EAAA,EAAiBA,EAAAC,EAAAghC,UAAAt/B,OAA6B3B,IAC9CC,EAAAghC,UAAAjhC,GAAAswB,MAAA6Q,EAAA7Q,MACArwB,EAAAghC,UAAAjhC,GAAA+uF,GAKA,OADA9uF,EAAAghC,UAAAE,EAAA7Q,KAAAy+D,EACA9uF,GAGAmvF,GAAA,SAAAX,GAIA,IAFA,IAAAzuF,EAAAyuF,EAAAxtD,UAAAt/B,OAEA3B,KAAA,CACA,IAAA+gC,EAAA0tD,EAAAxtD,UAAAjhC,GACAyuF,EAAAxtD,UAAAF,EAAAzQ,KAAAyQ,EACAA,EAAAmuD,YAA2BjC,GAAUwB,EAAAn+D,IAAAyQ,EAAAzQ,KACrCyQ,EAAA3zB,GAAApN,EAEA+gC,EAAAnE,aAMAmE,EAAAnE,cACA2xD,GAAAtgF,KAAA,yEAKAohF,GAAA,SAAAZ,GACAD,GAAAC,EAAA,SAAAxiD,GACAA,EAAA3b,MACA2b,EAAAijD,YAA+BjC,GAAUwB,EAAAn+D,IAAA2b,EAAA3b,SAgBzCg/D,GAAA,SAAAnuD,EAAAq3B,GACA,IAAA+2B,EAAApuD,EAAAjoB,SAAAioB,EAAAjoB,SAAAvX,OAAA,GAWA,OARA62D,GAAA+2B,KAAA9rF,SACA,IAAA8rF,EAAA9rF,SAIA,KAAA09B,EAAAgB,gBAAA,KAgBIqtD,GAAc,SAAAnpC,GAGlB,SAAAopC,EAAAC,EAAAC,GACA,IAAA58E,EAAA+R,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MACI4oE,GAAc34E,KAAA06E,GAElB,IAAAjzD,EAAgBqxD,GAAyB94E,MAAA06E,EAAApnE,WAAAvd,OAAA8kF,eAAAH,IAAAlkF,KAAAwJ,OAEzC86E,EAAA98E,EAAAkgB,gBACAA,OAAAjiB,IAAA6+E,KACAC,EAAA/8E,EAAAg9E,wBACAA,OAAA/+E,IAAA8+E,KACAtzD,EAAAkzD,SACAlzD,EAAAwzD,KAAAL,EACAnzD,EAAAvJ,kBACAuJ,EAAAuzD,0BACA,IAAAE,EAAAN,EAAAt3C,SAIA,GAHA7b,EAAA0zD,iBAAAD,KAAAC,qBACA1zD,EAAA2zD,iBAAAF,KAAAE,sBAEA3zD,EAAAkzD,OACA,UAAAjrE,MAAA,wCA8BA,OA1BA+X,EAAAlc,MAAA,eAEAkc,EAAAxmB,GAAA,gCACA,kBAAAwmB,EAAAlc,QAKAkc,EAAAlc,MAAA,wBACAkc,EAAA5I,QAAA4I,EAAAwzD,KAAA3+D,KACAf,IAAa28D,GAAUzwD,EAAAiyD,OAAAn+D,IAAAkM,EAAA2E,QAAA7Q,KACvB2C,gBAAAuJ,EAAAvJ,iBACO,SAAAtP,EAAA6pE,GAEP,GAAAhxD,EAAA5I,QAIA,OAAAjQ,EACA6Y,EAAA4zD,qBAAA5zD,EAAA5I,QAAA4I,EAAA2E,QAAA7Q,IAAA,sBAGAkM,EAAA6zD,aAAA7zD,EAAA5I,QAAA4I,EAAA2E,QAAA7Q,UAIAkM,EAqWA,OAxZEoxD,GAAQ6B,EAyZTnB,IAnWCX,GAAW8B,IACbxkF,IAAA,uBACAE,MAAA,SAAAmlF,EAAAptE,EAAAqtE,GAEAx7E,KAAA6e,QAAA,KAEA28D,IACAx7E,KAAAuL,MAAAiwE,GAGAx7E,KAAA4O,OACAod,SAAAhsB,KAAA05E,OAAAxtD,UAAA/d,GACAiO,OAAAm/D,EAAAn/D,OACAhjB,QAAA,sCAAA+U,EACAoO,aAAAg/D,EAAAh/D,aACA4B,KAAAo9D,EAAAn/D,QAAA,SAEApc,KAAAokB,QAAA,YAKAluB,IAAA,eACAE,MAAA,SAAAmlF,EAAAptE,GACA,IAAA+Z,EAAAloB,KAGAA,KAAA6e,QAAA,KACA7e,KAAAuL,MAAA,gBACA,IAAA+qC,EAAA,IAAuBnsB,EAEvBnqB,KAAAm7E,iBAAApiF,QAAA,SAAA0iF,GACA,OAAAnlC,EAAA3sB,UAAA8xD,KAGAz7E,KAAAo7E,iBAAAriF,QAAA,SAAAqvB,GACA,OAAAkuB,EAAArsB,aAAA7B,KAEAkuB,EAAA3qD,KAAA4vF,EAAAh/D,cACA+5B,EAAAnhD,MACAmhD,EAAAvrB,SAAAxP,IAAApN,EAGAmoC,EAAAvrB,SAAAlD,WAAAyuB,EAAAvrB,SAAAlD,eAEA,IAAA47B,EAAAs2B,GAAA/5E,KAAA05E,OAAApjC,EAAAvrB,UACA/qB,KAAAotB,eAAAkpB,EAAAvrB,SAAAqC,eAEAq2B,GACAzjD,KAAA05E,OAAAj2B,EACAzjD,KAAA07E,OAAA17E,KAAA05E,OAAAxtD,UAAAoqB,EAAAvrB,SAAAxP,MAEAvb,KAAAokB,QAAA,qBAIApkB,KAAAosB,QAAAb,UACQiJ,EAAA/6B,EAAQygB,aAAAla,KAAA27E,oBAChB37E,KAAA27E,mBAAkCnnD,EAAA/6B,EAAQiZ,WAAA,WAC1CwV,EAAA9D,QAAA,uBACSm2D,GAAAv6E,KAAAosB,UAAAq3B,KAGTzjD,KAAAokB,QAAA,qBAOAluB,IAAA,UACAE,MAAA,WACA4J,KAAA47E,cACMpnD,EAAA/6B,EAAQygB,aAAAla,KAAA27E,uBAGdzlF,IAAA,cACAE,MAAA,WACA,GAAA4J,KAAA6e,QAAA,CACA,IAAAg9D,EAAA77E,KAAA6e,QACA7e,KAAA6e,QAAA,KACAg9D,EAAAr+D,mBAAA,KACAq+D,EAAAnqE,YAiBAxb,IAAA,QACAE,MAAA,SAAA41B,GACA,IAAAnC,EAAA7pB,KAGA,IAAAgsB,EACA,OAAAhsB,KAAA07E,OAIA,oBAAA17E,KAAAuL,MACA,UAAAmE,MAAA,qCAAA1P,KAAAuL,OAGA,IAAAiwE,EAAAx7E,KAAAuL,MAGA,oBAAAygB,EAAA,CACA,IAAAhsB,KAAA05E,OAAAxtD,UAAAF,GACA,UAAAtc,MAAA,yBAAAsc,GAGAA,EAAAhsB,KAAA05E,OAAAxtD,UAAAF,GAGA,IAAA8vD,GAAA97E,KAAA07E,QAAA1vD,EAAAzQ,MAAAvb,KAAA07E,OAAAngE,IAEA,GAAAvb,KAAA05E,OAAAxtD,UAAAF,EAAAzQ,KAAAgQ,QAgBA,OAdAvrB,KAAA6e,UACA7e,KAAA6e,QAAArB,mBAAA,KACAxd,KAAA6e,QAAAnN,QACA1R,KAAA6e,QAAA,MAGA7e,KAAAuL,MAAA,gBACAvL,KAAA07E,OAAA1vD,OAEA8vD,IACA97E,KAAAokB,QAAA,iBACApkB,KAAAokB,QAAA,iBAOA,GAAA03D,EAAA,CAMA,GAFA97E,KAAAuL,MAAA,kBAEAvL,KAAA6e,QAAA,CACA,GAAAmN,EAAAmuD,cAAAn6E,KAAA6e,QAAA1Q,IAGA,OAGAnO,KAAA6e,QAAArB,mBAAA,KACAxd,KAAA6e,QAAAnN,QACA1R,KAAA6e,QAAA,KAIA7e,KAAA07E,QACA17E,KAAAokB,QAAA,iBAGApkB,KAAA6e,QAAA7e,KAAAi7E,KAAA3+D,KACAf,IAAAyQ,EAAAmuD,YACAj8D,gBAAAle,KAAAke,iBACO,SAAAtP,EAAA6pE,GAEP,GAAA5uD,EAAAhL,QAAA,CAMA,GAFAmN,EAAAmuD,YAAA5B,GAAA1uD,EAAAmxD,wBAAAhvD,EAAAmuD,YAAA1B,GAEA7pE,EACA,OAAAib,EAAAwxD,qBAAAxxD,EAAAhL,QAAAmN,EAAAzQ,IAAAigE,GAGA3xD,EAAAyxD,aAAA7C,EAAAzsD,EAAAzQ,KAGA,gBAAAigE,EACA3xD,EAAAzF,QAAA,kBAEAyF,EAAAzF,QAAA,sBASAluB,IAAA,QACAE,MAAA,WACA4J,KAAA47E,cACMpnD,EAAA/6B,EAAQygB,aAAAla,KAAA27E,oBAEd,iBAAA37E,KAAAuL,QAGAvL,KAAA+7E,SAAA,GAIA,oBAAA/7E,KAAAuL,MAIAvL,KAAA07E,OACA17E,KAAAuL,MAAA,gBAEAvL,KAAAuL,MAAA,cAEO,0BAAAvL,KAAAuL,QACPvL,KAAAuL,MAAA,oBAQArV,IAAA,OACAE,MAAA,SAAA4lF,GACA,IAAAxzC,EAAAxoC,KAEMw0B,EAAA/6B,EAAQygB,aAAAla,KAAA27E,oBACd,IAAAvvD,EAAApsB,KAAAosB,QAEA,GAAA4vD,EAAA,CACA,IAAA1qD,EAAAlF,IAAAgB,eAAA,UACAptB,KAAA27E,mBAAkCnnD,EAAA/6B,EAAQiZ,WAAA,WAC1C,OAAA81B,EAAA0Q,QACS5nB,QAITtxB,KAAA+7E,QAKA3vD,MAAAb,QACAvrB,KAAAokB,QAAA,sBAEApkB,KAAAokB,QAAA,kBAPApkB,KAAAutB,WAeAr3B,IAAA,QACAE,MAAA,WACA,IAAAkmD,EAAAt8C,KAEAA,KAAA+7E,SAAA,EAEA/7E,KAAA6e,QAAA7e,KAAAi7E,KAAA3+D,KACAf,IAAAvb,KAAA26E,OACAz8D,gBAAAle,KAAAke,iBACO,SAAAtP,EAAA6pE,GAEP,GAAAn8B,EAAAz9B,QAAA,CAOA,GAFAy9B,EAAAz9B,QAAA,KAEAjQ,EAaA,OAZA0tC,EAAA1tC,OACAwN,OAAAq8D,EAAAr8D,OACAhjB,QAAA,sCAAAkjD,EAAAq+B,OACAp+D,aAAAk8D,EAAAl8D,aAEA4B,KAAA,GAGA,iBAAAm+B,EAAA/wC,QACA+wC,EAAAy/B,SAAA,GAGAz/B,EAAAl4B,QAAA,SAGA,IAAAkyB,EAAA,IAAyBnsB,EAiBzB,OAfAmyB,EAAA6+B,iBAAApiF,QAAA,SAAA0iF,GACA,OAAAnlC,EAAA3sB,UAAA8xD,KAIAn/B,EAAA8+B,iBAAAriF,QAAA,SAAAqvB,GACA,OAAAkuB,EAAArsB,aAAA7B,KAGAkuB,EAAA3qD,KAAA8sF,EAAAl8D,cACA+5B,EAAAnhD,MACAmnD,EAAA/wC,MAAA,cACA+wC,EAAAq+B,OAAApC,GAAAj8B,EAAA0+B,wBAAA1+B,EAAAq+B,OAAAlC,GACAniC,EAAAvrB,SAAAxP,IAAA+gC,EAAAq+B,OAEArkC,EAAAvrB,SAAAmB,WACAowB,EAAAo9B,OAAApjC,EAAAvrB,SACAsvD,GAAA/9B,EAAAo9B,QACAY,GAAAh+B,EAAAo9B,QAEAp9B,EAAAl4B,QAAA,uBAEAk4B,EAAAz9B,SAGAy9B,EAAAlwB,MAAAkqB,EAAAvrB,SAAAmB,UAAA,OAQAowB,EAAAo9B,QACAvtD,aACAzB,SACAC,SACAC,qBACAC,cAEAtP,IAAeiZ,EAAA/6B,EAAQmE,SAAAuC,KACvB+rB,YACA3Q,IAAA+gC,EAAAq+B,OACAtiF,GAAA,EACA8hF,YAAA79B,EAAAq+B,OAGA9yD,iBAGAy0B,EAAAo9B,OAAAxtD,UAAAowB,EAAAq+B,QAAAr+B,EAAAo9B,OAAAxtD,UAAA,GAEAowB,EAAAg/B,aAAA7C,EAAAn8B,EAAAq+B,QAEAr+B,EAAAl4B,QAAA,0BAIAs2D,EAzZkB,GAkalB7C,GAAAxB,GAAAwB,gBAkHAoE,GAAA,SAAAjwD,EAAAkwD,EAAAC,GACA,IAAAC,EACA3mE,EAMA,YAJA,IAAAymE,IACAA,EAAAlwD,EAAAP,cAAAO,EAAA7nB,SAAAvX,QAGAsvF,EAAAlwD,EAAAP,cACA,GAIA2wD,EAtHA,SAAApwD,EAAAkwD,GACA,IAAAhxF,EAAA,EACAD,EAAAixF,EAAAlwD,EAAAP,cAGArnB,EAAA4nB,EAAA7nB,SAAAlZ,GAGA,GAAAmZ,EAAA,CACA,YAAAA,EAAAmpB,MACA,OACAriC,OAAAkZ,EAAAmpB,MACAG,SAAA,GAIA,YAAAtpB,EAAAjP,IACA,OACAjK,OAAAkZ,EAAAjP,IAAAiP,EAAA1V,SACAg/B,SAAA,GAKA,KAAAziC,KAAA,CAGA,aAFAmZ,EAAA4nB,EAAA7nB,SAAAlZ,IAEAkK,IACA,OACAjK,SAAAkZ,EAAAjP,IACAu4B,SAAA,GAMA,GAFAxiC,GAAAkZ,EAAA1V,cAEA,IAAA0V,EAAAmpB,MACA,OACAriC,SAAAkZ,EAAAmpB,MACAG,SAAA,GAKA,OACAxiC,SACAwiC,SAAA,GAwEA2uD,CAAArwD,EAAAkwD,IAEAxuD,QAIA0uD,EAAAlxF,QAKAuqB,EAvEA,SAAAuW,EAAAkwD,GAMA,IALA,IAAAhxF,EAAA,EACAkZ,OAAA,EACAnZ,EAAAixF,EAAAlwD,EAAAP,cAGQxgC,EAAA+gC,EAAA7nB,SAAAvX,OAA8B3B,IAAA,CAGtC,aAFAmZ,EAAA4nB,EAAA7nB,SAAAlZ,IAEAsiC,MACA,OACAriC,OAAAkZ,EAAAmpB,MAAAriC,EACAwiC,SAAA,GAMA,GAFAxiC,GAAAkZ,EAAA1V,cAEA,IAAA0V,EAAAjP,IACA,OACAjK,OAAAkZ,EAAAjP,IAAAjK,EACAwiC,SAAA,GAMA,OACAxiC,QAAA,EACAwiC,SAAA,GA0CA4uD,CAAAtwD,EAAAkwD,IAEAxuD,QAGAjY,EAAAvqB,OAIAkxF,EAAAlxF,OAAAixF,GAmBII,GAAQ,SAAAvwD,EAAAkwD,EAAAC,GACZ,IAAAnwD,EACA,SASA,GANA,iBAAAmwD,IACAA,EAAA,QAKA,IAAAD,EAAA,CAEA,GAAAlwD,EAAAsB,cACA,OAAAtB,EAAAsB,cAIA,IAAAtB,EAAAT,QACA,OAAaiJ,EAAA/6B,EAAQd,SAKrB,OAAAsjF,GAAAjwD,EAAAkwD,EAAAC,IAeAK,GAAA,SAAAxwD,EAAA/K,EAAAC,GACA,IAAAu7D,EAAA,EAEA,GAAAx7D,EAAAC,EAAA,CACA,IAAA0I,GAAA1I,EAAAD,GACAA,EAAA2I,EAAA,GACA1I,EAAA0I,EAAA,GAGA,GAAA3I,EAAA,GACA,QAAAh2B,EAAAg2B,EAA4Bh2B,EAAAmH,KAAAwG,IAAA,EAAAsoB,GAA2Bj2B,IACvDwxF,GAAAzwD,EAAAoB,eAGAnM,EAAA,EAGA,QAAAkQ,EAAAlQ,EAA2BkQ,EAAAjQ,EAAeiQ,IAC1CsrD,GAAAzwD,EAAA7nB,SAAAgtB,GAAAziC,SAGA,OAAA+tF,GAgBAC,GAAA,SAAA1wD,GACA,IAAAA,EAAA7nB,SAAAvX,OACA,SAOA,IAJA,IAAA3B,EAAA+gC,EAAA7nB,SAAAvX,OAAA,EACA+vF,EAAA3wD,EAAA7nB,SAAAlZ,GAAAyD,UAAAs9B,EAAAoB,eACAwvD,EAAAD,EAAA,EAAA3wD,EAAAoB,eAEAniC,QACA0xF,GAAA3wD,EAAA7nB,SAAAlZ,GAAAyD,WAEAkuF,KAKA,OAAAxqF,KAAAwf,IAAA,EAAA3mB,IAiBA4xF,GAAA,SAAA7wD,EAAAmwD,EAAAW,GACA,IAAA9wD,MAAA7nB,SACA,YAGA,GAAA6nB,EAAAT,QACA,OAAWgxD,GAAQvwD,GAGnB,UAAAmwD,EACA,YAGAA,KAAA,EACA,IAAAD,EAAAY,EAAAJ,GAAA1wD,KAAA7nB,SAAAvX,OACA,OAAAqvF,GAAAjwD,IAAAP,cAAAywD,EAAAC,IA+BAY,GAAA,SAAA12C,GACA,OAAAA,EAAAj0C,KAAA+mB,MAAAktB,IAAA,GAGA22C,GAAA,SAAAC,EAAA52C,GAEA,GAAA02C,GAAA12C,GACA,OAAAA,EAAA,GAAA42C,EAKA,IAFA,IAAAC,EAAA72C,EAAA3vC,WAAAK,MAAA,QAAAnK,OAEA3B,EAAA,EAAiBA,GAAAiyF,EAAuBjyF,IAAA,CACxC,IAAAyN,EAAAtG,KAAAC,IAAA,GAAApH,GACAukD,EAAAnJ,EAAA3tC,EAEA,GAAAqkF,GAAAvtC,IAAAvkD,IAAAiyF,EACA,OAAA1tC,EAAAytC,GAAAvkF,IAKAykF,GAAAH,GAAAvsE,KAAA,QACA2sE,GAAAJ,GAAAvsE,KAAA,SA2FA4sE,GAAA,SAAArxD,GACA,OAAAA,EAAAsxD,cAAAtxD,EAAAsxD,aAAAr0F,KAAA8kB,OAYAwvE,GAAA,SAAAvxD,GACA,OAAAA,EAAAsxD,cAAAtxD,EAAAsxD,eAAA3kF,KAWA6kF,GAAA,SAAAxxD,GACA,IAAAyxD,EAAAJ,GAAArxD,GACA,OAAAA,EAAAyQ,WAAAghD,GA2DA5sC,GAAA,SAAA/oB,EAAAkE,GACA,OAAAA,EAAAnE,YAAAmE,EAAAnE,WAAAC,IAqCA41D,GAAA,SAAAhE,EAAAttD,GACA,OAAAstD,EAAAxtD,UAAAt/B,OACA,SAGA,IAAA+wF,EAAAvxD,EAAAvE,WAAAuB,WAAAsvC,OAAAklB,UACA,OAMG,IANHlE,EAAAxtD,UAAAj2B,OAAA,SAAA+1B,GACA,QAAAwxD,GAAAxxD,KAIAA,EAAAnE,WAAAuB,WAAA,GAAAu0D,IACG/wF,QAIHixF,IACAnvF,SAAY6tF,GACZv7B,SA5QA,SAAAh1B,EAAAmwD,GACA,IACAluB,EAAAkuB,GAAA,EACAtwB,EAAAgxB,GAAA7wD,EAAAmwD,GAFA,GAIA,cAAAtwB,EACAgsB,KAGAA,GAAA5pB,EAAApC,IAoQA6wB,iBACAoB,oBA9NA,SAAA9xD,EAAAosB,EAAAn3B,EAAArpB,GACA,IAAA3M,OAAA,EACAmZ,OAAA,EACA25E,EAAA/xD,EAAA7nB,SAAAvX,OACAu8D,EAAA/Q,EAAAxgD,EAEA,GAAAuxD,EAAA,GAGA,GAAAloC,EAAA,EACA,IAAAh2B,EAAAg2B,EAAA,EAA8Bh2B,GAAA,EAAQA,IAItC,GAHAmZ,EAAA4nB,EAAA7nB,SAAAlZ,IACAk+D,GAAAi0B,GAAAh5E,EAAA1V,WAEA,EACA,OACAsvF,WAAA/yF,EACA2M,YAAA4kF,GAAAxwD,EAAA/K,EAAAh2B,IAQA,OACA+yF,WAAA,EACApmF,UAAAwgD,GAOA,GAAAn3B,EAAA,GACA,IAAAh2B,EAAAg2B,EAAwBh2B,EAAA,EAAOA,IAG/B,IAFAk+D,GAAAn9B,EAAAoB,gBAEA,EACA,OACA4wD,WAAA,EACApmF,UAAAwgD,GAKAn3B,EAAA,EAKA,IAAAh2B,EAAAg2B,EAAsBh2B,EAAA8yF,EAAiB9yF,IAIvC,GAHAmZ,EAAA4nB,EAAA7nB,SAAAlZ,IACAk+D,GAAAg0B,GAAA/4E,EAAA1V,WAEA,EACA,OACAsvF,WAAA/yF,EACA2M,YAAA4kF,GAAAxwD,EAAA/K,EAAAh2B,IAMA,OACA+yF,WAAAD,EAAA,EACAnmF,UAAAwgD,IA6JAolC,aACAS,WA5GA,SAAAjyD,GACA,OAAAA,EAAAyQ,UA4GA4gD,iBACAE,kBACAV,eACAqB,MAtGA,SAAA9xD,GACA,QAAAnhC,EAAA,EAAiBA,EAAAmhC,EAAAjoB,SAAAvX,OAA2B3B,IAC5C,GAAAmhC,EAAAjoB,SAAAlZ,GAAAiL,IACA,SAIA,UAgGAioF,OAvFA,SAAA/xD,GACA,QAAAnhC,EAAA,EAAiBA,EAAAmhC,EAAAjoB,SAAAvX,OAA2B3B,IAC5C,GAAAmhC,EAAAjoB,SAAAlZ,GAAA4K,IACA,SAIA,UAiFAg7C,gBACAutC,2BA9CA,SAAAC,EAAAC,EAAAtyD,GACA,IAAAuyD,EAAAxuE,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,KAEA,OAAA8gC,GAAA,YAAA7kB,IAIAqyD,EAAAryD,EAAAnE,WAAAuB,UACA,EAAAm1D,GAAAD,EAJAzc,KA2CA6b,6BAMAc,GAAAnI,GAAA/5D,IACAmiE,GAAApI,GAAArzC,aAEA07C,GAAA,WA+DA,OA9DA,SAAAC,EAAA3gF,EAAAwd,GAEAxd,EAAAygF,IACApkE,QAAA,MACKrc,GAGL,IAAA4gF,EAAAD,EAAAC,eAAAvI,GAAAwI,IAAAviE,IAAAsiE,cAEA,GAAAA,GAAA,mBAAAA,EAAA,CACA,IAAAE,EAAAF,EAAA5gF,GAEA8gF,IACA9gF,EAAA8gF,GAIA,IAAAjgE,EAAA2/D,GAAAxgF,EAAA,SAAA4Q,EAAA+M,GACA,IAAAojE,EAAAlgE,EAAAlD,UAEA/M,GAAAmwE,IACAlgE,EAAAmgE,aAAA/1F,KAAA8kB,MACA8Q,EAAAogE,cAAApgE,EAAAmgE,aAAAngE,EAAAqgE,YACArgE,EAAA0/D,cAAAQ,EAAA70F,YAAA60F,EAAAnyF,OAEAiyB,EAAAy/D,YACAz/D,EAAAy/D,UAAAlsF,KAAA+mB,MAAA0F,EAAA0/D,cAAA1/D,EAAAogE,cAAA,SAIAtjE,EAAAqB,UACA6B,EAAAsgE,gBAAAxjE,EAAAqB,SAMApO,GAAA,cAAAA,EAAAuP,OACAU,EAAAugE,UAAA,GAMAxwE,GAAAiQ,EAAA1C,SAAA,MAAAR,EAAAK,YAAA,MAAAL,EAAAK,YAAA,IAAAL,EAAAK,aACApN,EAAA,IAAAc,MAAA,mCAAAmP,IAAAkgE,GAAAlgE,EAAAtC,iBAGAf,EAAA5M,EAAAiQ,KAEAwgE,EAAAxgE,EAAAnN,MASA,OAPAmN,EAAAnN,MAAA,WAEA,OADAmN,EAAA1C,SAAA,EACAkjE,EAAA5mF,MAAAomB,EAAA9O,YAGA8O,EAAAtD,IAAAvd,EAAAud,IACAsD,EAAAqgE,YAAAj2F,KAAA8kB,MACA8Q,IAiBAygE,GAAA,SAAAC,EAAAt0F,GACA,OAAAs0F,EAAAhyD,MAAAtiC,GAAA,IAAAs0F,EAAApqF,IAAAlK,IAUAu0F,GAAA,SAAAthF,EAAAjT,GACA,IAAAmL,EAAA8H,EAAAxH,SAAA,IACA,WAAAixB,UAAA,IAAAvxB,EAAAxJ,QAAAwJ,GAAAnL,EAAA,WAGAw0F,GAAA,SAAAvhF,GACA,OAAAA,GAAA,IAAAA,EAAA,IACAtQ,OAAAC,aAAAqQ,GAGA,KAcAwhF,GAAA,SAAAtmF,GACA,IAAAumF,KAcA,OAbA5pF,OAAAC,KAAAoD,GAAAL,QAAA,SAAA7C,GACA,IAAAE,EAAAgD,EAAAlD,GAEAZ,YAAAsqF,OAAAxpF,GACAupF,EAAAzpF,IACAG,MAAAD,EAAApM,OACAC,WAAAmM,EAAAnM,WACAC,WAAAkM,EAAAlM,YAGAy1F,EAAAzpF,GAAAE,IAGAupF,GAQAE,GAAA,SAAAtmE,GACA,IAAA0P,EAAA1P,EAAA0P,YACAr8B,OAAA+L,IACA3N,OAAA,GAEA,OAAAi+B,EAAAr8B,OAAAq8B,EAAAj+B,OAAAuuB,EAAA4gE,aAAAvkF,KAAA,MAOAkqF,GAAA,SAAAj2F,GAOA,IANA,IAAAwM,EAAAV,MAAAW,UAAAC,MAAAC,KAAA3M,GAEAqB,EAAA,GAIA0b,EAAA,EAAiBA,EAAAvQ,EAAAzJ,OALjB,GAK0Cga,IAG1C1b,GAFAmL,EAAAE,MANA,GAMAqQ,EANA,GAMAA,EANA,IAMA/Q,IAAA2pF,IAAA5pF,KAAA,IAEA,IADAS,EAAAE,MAPA,GAOAqQ,EAPA,GAOAA,EAPA,IAOA/Q,IAAA4pF,IAAA7pF,KAAA,IACA,KAGA,OAAA1K,GAmBAo7B,GAEAvwB,OAAA0I,QACAihF,6BACAG,iBACAC,WACAC,QAtBA,SAAAn2D,GACA,IAAAvzB,EAAAuzB,EAAAvzB,MACA,OAAAypF,GAAAzpF,IAqBA2pF,WAlBA,SAAAj1C,GACA,IAAA7/C,EAAA,GACAD,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAA8/C,EAAAn+C,OAAmB3B,IAChCC,GAAAo0F,GAAAv0C,EAAA9/C,GAAA,IAGA,OAAAC,KAoPA+0F,GAAA,SAAAr2D,GACA,IAAAoC,EAAApC,EAAAoC,SACAk0D,EAAAt2D,EAAAu/B,KACAA,OAAAltD,IAAAikF,OAAAjkF,EAAAikF,EACA1kE,EAAAoO,EAAApO,SAEA,IAAAA,EACA,UAAA9L,MAAA,6CAGA,IAAAsc,QAAA/vB,IAAAktD,EACA,OAAA3tC,GACApiB,QAAA,uDAIA,IAAA+mF,EAzIA,SAAAh3B,EAAAn9B,GAKA,IAAAA,MAAA7nB,UAAA,IAAA6nB,EAAA7nB,SAAAvX,OACA,YAMA,IAHA,IAAAwzF,EAAA,EACAh8E,OAAA,EAEAnZ,EAAA,EAAiBA,EAAA+gC,EAAA7nB,SAAAvX,UAUjBu8D,IAFAi3B,GAPAh8E,EAAA4nB,EAAA7nB,SAAAlZ,IAOAo1F,gBAAAj8E,EAAAi8E,gBAAAC,0BAAAF,EAAAh8E,EAAA1V,WAR+CzD,KAe/C,IAAAuvF,EAAAxuD,EAAA7nB,SAAA6nB,EAAA7nB,SAAAvX,OAAA,GAEA,GAAA4tF,EAAA6F,iBAAA7F,EAAA6F,gBAAAC,0BAAAn3B,EAEA,YAGA,GAAAA,EAAAi3B,EAAA,CAIA,GAAAj3B,EAAAi3B,EAlJA,IAkJA5F,EAAA9rF,SAIA,YAGA0V,EAAAo2E,EAGA,OACAp2E,UACAm8E,eAAAn8E,EAAAi8E,gBAAAj8E,EAAAi8E,gBAAAG,4BAAAJ,EAAAh8E,EAAA1V,SAGAwG,KAAAkP,EAAAi8E,gBAAA,uBAoFAI,CAAAt3B,EAAAn9B,GAEA,IAAAm0D,EACA,OAAA3kE,GACApiB,QAAA,oCAIA,gBAAA+mF,EAAAjrF,KACA,OAAAsmB,GACApiB,QAAA,wFACAsnF,SAAAP,EAAAI,iBAIA,IAAAI,GACAC,aAAAz3B,GAEA03B,EAtPA,SAAAC,EAAA18E,GACA,IAAAA,EAAAklB,eAGA,YAGA,IAAAy3D,EAAA38E,EAAAi8E,gBAAAU,2BAIAC,EAAAF,GAHA18E,EAAAi8E,gBAAAG,4BAEAO,GAEA,WAAA93F,KAAAmb,EAAAklB,eAAAyS,UAAA,IAAAilD,GA0OAC,CAAA93B,EAAAg3B,EAAA/7E,SAMA,OAJAy8E,IACAF,EAAAO,gBAAAL,EAAAM,eAGA3lE,EAAA,KAAAmlE,IAkBAS,GAAA,SAAAA,EAAAl3D,GACA,IAAA22D,EAAA32D,EAAA22D,YACA70D,EAAA9B,EAAA8B,SACAq1D,EAAAn3D,EAAAo3D,WACAA,OAAArlF,IAAAolF,EAAA,EAAAA,EACAE,EAAAr3D,EAAAq3D,OACAC,EAAAt3D,EAAAu3D,eACAA,OAAAxlF,IAAAulF,KACAz0C,EAAA7iB,EAAA6iB,KACAvxB,EAAA0O,EAAA1O,SAEA,IAAAA,EACA,UAAA9L,MAAA,gDAGA,YAAAmxE,IAAA70D,IAAAu1D,EACA,OAAA/lE,GACApiB,QAAA,yEAIA,IAAA4yB,EAAAT,UAAAwhB,EAAAkN,YACA,OAAAz+B,GACApiB,QAAA,4DAIA,IArHA,SAAA4yB,GACA,IAAAA,EAAA7nB,UAAA,IAAA6nB,EAAA7nB,SAAAvX,OACA,SAGA,QAAA3B,EAAA,EAAiBA,EAAA+gC,EAAA7nB,SAAAvX,OAA8B3B,IAG/C,IAFA+gC,EAAA7nB,SAAAlZ,GAEAq+B,eACA,SAIA,SAwGAo4D,CAAA11D,GACA,OAAAxQ,GACApiB,QAAA,yDAAA4yB,EAAAmuD,cAIA,IAAAgG,EApRA,SAAAU,EAAA70D,GAIA,IAAA1C,OAAA,EAEA,IACAA,EAAA,IAAArgC,KAAA43F,GACG,MAAA3iF,GACH,YAGA,IAAA8tB,MAAA7nB,UAAA,IAAA6nB,EAAA7nB,SAAAvX,OACA,YAGA,IAAAwX,EAAA4nB,EAAA7nB,SAAA,GAEA,GAAAmlB,EAAAllB,EAAAklB,eAEA,YAGA,QAAAr+B,EAAA,EAAiBA,EAAA+gC,EAAA7nB,SAAAvX,OAAA,IACjBwX,EAAA4nB,EAAA7nB,SAAAlZ,KAGAq+B,EAFA0C,EAAA7nB,SAAAlZ,EAAA,GAAAq+B,iBAFmDr+B,KASnD,IA5CAo1F,EA4CA7F,EAAAxuD,EAAA7nB,SAAA6nB,EAAA7nB,SAAAvX,OAAA,GACA+0F,EAAAnH,EAAAlxD,eACAs4D,EAAApH,EAAA6F,iBA9CAA,EA8CA7F,EAAA6F,iBA7CAC,0BAAAD,EAAAG,4BAAAH,EAAAU,2BA6CAvG,EAAA9rF,SA9EA,IA8EA8rF,EAAA9rF,SAGA,OAAA46B,EAFA,IAAArgC,KAAA04F,EAAA5lD,UAAA,IAAA6lD,GAIA,MAGAt4D,EAAAq4D,IACAv9E,EAAAo2E,IAIAp2E,UACAm8E,eAAAn8E,EAAAi8E,gBAAAj8E,EAAAi8E,gBAAAG,4BAAA3C,GAAAnvF,SAAAs9B,IAAAP,cAAAO,EAAA7nB,SAAA5K,QAAA6K,IAKAlP,KAAAkP,EAAAi8E,gBAAA,wBA+NAwB,CAAAhB,EAAA70D,GAEA,IAAAm0D,EACA,OAAA3kE,GACApiB,QAAAynF,EAAA,iCAIA,IAAAz8E,EAAA+7E,EAAA/7E,QACA09E,EAzJA,SAAAC,EAAAlB,GACA,IAAAmB,OAAA,EACAd,OAAA,EAEA,IACAc,EAAA,IAAA/4F,KAAA84F,GACAb,EAAA,IAAAj4F,KAAA43F,GACG,MAAA3iF,IAGH,IAAA+jF,EAAAD,EAAAjmD,UAEA,OADAmlD,EAAAnlD,UACAkmD,GAAA,IA6IAC,CAAA99E,EAAAklB,eAAAu3D,GAEA,gBAAAV,EAAAjrF,KAEA,WAAAosF,EACA9lE,GACApiB,QAAAynF,EAAA,qCAIAU,EAAApB,EAAAI,eAAAuB,QACA/0C,EAAApO,IAAA,oBACAyiD,GACAP,cACA70D,WACAs1D,aAAA,EACAC,SACAE,iBACA10C,OACAvxB,gBASA,IAAA2mE,EAAA/9E,EAAAmpB,MAAAu0D,EAOA/0C,EAAApO,IAAA,SALA,WACA,OAAAnjB,EAAA,KAAAuxB,EAAAqL,iBAMAqpC,GACA10C,EAAAiC,QAGAuyC,EAAAY,IAmBAC,GAAA,SAAAC,EAAA9rE,GACA,IAAAte,KACAhN,OAAA,EAEA,GAAAo3F,KAAAz1F,OAEA,IAAA3B,EAAA,EAAeA,EAAAo3F,EAAAz1F,OAAuB3B,IACtCsrB,EAAA8rE,EAAA90D,MAAAtiC,GAAAo3F,EAAAltF,IAAAlK,KACAgN,EAAAtM,MAAA02F,EAAA90D,MAAAtiC,GAAAo3F,EAAAltF,IAAAlK,KAKA,OAAAorF,GAAAjrC,iBAAAnzC,IAWAqqF,GAAA,SAAAh3C,EAAA6d,GACA,OAAAi5B,GAAA92C,EAAA,SAAA/d,EAAAp4B,GACA,OAAAo4B,EAlCA,MAkCA47B,GAAAh0D,EAlCA,MAkCAg0D,KAWAo5B,GAAA,SAAAF,EAAAl5B,GACA,OAAAi5B,GAAAC,EAAA,SAAA90D,GACA,OAAAA,EA/CA,MA+CA47B,KAiCAq5B,GAAA,SAAAjD,GACA,IAAAkD,KAEA,IAAAlD,MAAA3yF,OACA,SAGA,QAAA3B,EAAA,EAAiBA,EAAAs0F,EAAA3yF,OAAkB3B,IACnCw3F,EAAA92F,KAAA4zF,EAAAhyD,MAAAtiC,GAAA,OAAAs0F,EAAApqF,IAAAlK,IAGA,OAAAw3F,EAAA7sF,KAAA,OA8BA8sF,GAAA,SAAAL,GAGA,IAFA,IAAAM,KAEA13F,EAAA,EAAiBA,EAAAo3F,EAAAz1F,OAAuB3B,IACxC03F,EAAAh3F,MACA4hC,MAAA80D,EAAA90D,MAAAtiC,GACAkK,IAAAktF,EAAAltF,IAAAlK,KAIA,OAAA03F,GAwEAC,GAAA,SAAAr1D,EAAAp4B,EAAAijB,GACA,IAAAntB,OAAA,EACA2hD,OAAA,EAEA,GAAAx0B,GAIAA,EAAAu0B,KAMA,IAFA1hD,EAAAmtB,EAAAu0B,KAAA//C,OAEA3B,MACA2hD,EAAAx0B,EAAAu0B,KAAA1hD,IAEA2M,WAAAzC,GAAAy3C,EAAAC,SAAAtf,GACAnV,EAAAogC,UAAA5L,IAyCAi2C,GAAA,SAAAn0F,GASA,OANA8+B,MAAA9+B,IAAA0D,KAAAuqE,IAAAjuE,KAAAiK,IACA+/D,OAAAklB,UAEAlvF,GAgBIo0F,GAAgB,SAAAC,EAAAC,EAAAC,GACpB,IAAAC,EAAY1uD,EAAA/6B,EAAQ0pF,eAAkB3uD,EAAA/6B,EAAQ6+C,OAS9C,GAPA0qC,GACAA,EAAAjqF,QAAA,SAAAqqF,GACA,IAAAhrE,EAAAgrE,EAAA59D,OACAxlB,KAAAqjF,kBAAAjrE,GAAAm1B,OAAA,IAAA21C,EAAAE,EAAAxrF,UAAAoI,KAAAsjF,gBAAAF,EAAAv2C,QAAA7sC,KAAAsjF,gBAAAF,EAAA15D,QACKq5D,GAGLE,EAAA,CACA,IAAAM,EAAAV,GAAAE,EAAAS,aAAA90F,UAsBA,GArBAu0F,EAAAlqF,QAAA,SAAA67C,GACA,IAAAuU,EAAAvU,EAAA6uC,QAAAzjF,KAAAsjF,kBAKA,iBAAAn6B,GAAsC30B,EAAA/6B,EAAQ+zB,MAAA27B,MAAA,IAAAA,EAAAxwD,KAI9Ci8C,EAAA8uC,OAAA3qF,QAAA,SAAA2oB,GACA,IAAAkrB,EAAA,IAAAs2C,EAAA/5B,IAAAznC,EAAAtrB,OAAAsrB,EAAAvT,KAAAuT,EAAA73B,MAAA,IACA+iD,EAAAlrB,QACAkrB,EAAAx2C,MAAAsrB,EAtEA,SAAAkrB,GACA72C,OAAA8f,iBAAA+2B,EAAAlrB,OACArpB,IACA6K,IAAA,WAEA,OADAmzE,GAAAliD,IAAAj7B,KAAA,0DACA0zC,EAAAx2C,MAAAF,MAGAE,OACA8M,IAAA,WAEA,OADAmzE,GAAAliD,IAAAj7B,KAAA,8DACA0zC,EAAAx2C,MAAAvM,OAGA85F,aACAzgF,IAAA,WAEA,OADAmzE,GAAAliD,IAAAj7B,KAAA,oEACA0zC,EAAAx2C,MAAAvM,SAsDA+5F,CAAAh3C,GACA5sC,KAAA6jF,eAAAt2C,OAAAX,IACO5sC,OACF+iF,GAILA,EAAAc,gBAAAd,EAAAc,eAAAl3C,MAAAo2C,EAAAc,eAAAl3C,KAAA//C,OAAA,CAKA,IAJA,IAAA+/C,EAAAo2C,EAAAc,eAAAl3C,KACAm3C,KAGA74F,EAAA,EAAqBA,EAAA0hD,EAAA//C,OAAiB3B,IACtC0hD,EAAA1hD,IACA64F,EAAAn4F,KAAAghD,EAAA1hD,IAKA,IAAA84F,EAAAD,EAAA1rF,OAAA,SAAAkF,EAAAsvC,GACA,IAAAo3C,EAAA1mF,EAAAsvC,EAAAh1C,eAGA,OAFAosF,EAAAr4F,KAAAihD,GACAtvC,EAAAsvC,EAAAh1C,WAAAosF,EACA1mF,OAGA2mF,EAAAluF,OAAAC,KAAA+tF,GAAA5mB,KAAA,SAAA1jE,EAAAC,GACA,OAAAg/D,OAAAj/D,GAAAi/D,OAAAh/D,KAGAuqF,EAAAlrF,QAAA,SAAAnB,EAAAssF,GACA,IAAAC,EAAAJ,EAAAnsF,GACAwsF,EAAA1rB,OAAAurB,EAAAC,EAAA,KAAAX,EAEAY,EAAAprF,QAAA,SAAA6zC,GACAA,EAAAC,QAAAu3C,SAOAC,GAAA,oBAAA1gF,iBACA2gF,GAAA,oBAAAl1E,OAAA,WAAAA,SACAm1E,GAAA,yBACAC,GAAAH,GAAAG,aAAAH,GAAAI,mBAAAJ,GAAAK,gBAAAL,GAAAM,cACAC,GAAAP,GAAAO,KAAAP,GAAAQ,WAAAD,OAAAE,MACAC,GAAAV,GAAAU,OAUA,SAAAC,GAAAC,EAAA32E,GACA,gBAAA42E,GACA,IAAA9xD,EAAApzB,KAEA,IAAAsO,EACA,WAAAy2E,GAAAE,GACK,GAAAF,KAAAG,EAAA,CAEL,IACAC,EAAAC,GADA92E,EAAA5X,WAAAkG,QAAA,gBAAuD,IAAArG,MAAA,OAIvD,OAFAyJ,KAAAskF,IAAA,IAAAS,GAAAI,GAiEA,SAAAE,EAAAF,GACA,IAAAE,IAAAF,EAAA,OACA,IAAAG,EAAAD,EAAAE,UACAF,EAAAF,SAEAE,EAAAE,UAAA,WACAF,EAAAF,QAAAP,GAAAY,gBAAAH,EAAAF,QACAG,EAAA9uF,KAAA6uF,IAvEAI,CAAAzlF,KAAAskF,IAAAa,GACAnlF,KAAAskF,IAEA,IAAAoB,GACAC,YAAA,SAAArgF,GACA8tB,EAAAwyD,WACAlzE,WAAA,WACA0gB,EAAAwyD,WACA/7F,KAAAyb,EACA1E,OAAA8kF,QAMAp3E,EAAA9X,KAAAkvF,GAEA1lF,KAAA2lF,YAAA,SAAArgF,GACAoN,WAAA,WACAgzE,EAAAE,WACA/7F,KAAAyb,EACA1E,OAAAwyB,OAKApzB,KAAA6lF,cAAA,GAMA,GAAAd,GAAA,CACA,IAAAe,GACAX,GAAAC,GAAA,mCACAW,GAAA,IAAAn6F,WAAA,GAEA,KACAk6F,GAAA,IAAAf,GAAAI,KAEAQ,YAAAI,OAAA/7F,SACG,MAAAkU,GACH6mF,GAAA,KACG,QACHH,GAAAY,gBAAAL,IAEAW,IACAA,GAAAP,aAKA,SAAAH,GAAA1oF,GACA,IACA,OAAAkoF,GAAAoB,gBAAA,IAAAC,MAAAvpF,IACAxH,KAAAqvF,MAEG,MAAArmF,GACH,IAAAgoF,EAAA,IAAA1B,GAEA,OADA0B,EAAAvmF,OAAAjD,GACAkoF,GAAAoB,gBAAAE,EAAAC,QAAAjxF,QAeA,IAAAkxF,GAAA,IAAApB,GAAA,yCAAArhF,EAAA0iF,GACA,IAAAzsE,EAAA5Z,MAEA,WAUA,IACA5K,EAAAhI,EAAAlB,EAAAc,EAAA4B,EAAAE,EAAAM,EAAAC,EAAAC,EAAAC,EAAAiE,EAAAJ,EAAAzE,EAAAN,EAAAb,EAAAuC,EAAAgB,EAAAS,EAAA+B,EAAAE,EAAAQ,EAAA0iB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAwSAC,EAAAC,EA2KAC,EAAAC,EAAAC,EApdAC,EAAA1lB,KAAAC,IAAA,SAGA,WACA,IAAApH,EA0CA,GAzCA0rB,GACA/sB,QAEAiB,QACAgB,QACAuB,QACAE,QACApB,QACAc,QACAQ,QACAQ,QACAK,QACAM,QACAC,QACAE,QACAM,QACAC,QACAN,QAEAO,QACAC,QACAQ,QACAc,QACAE,QACAC,QACAG,QACAK,QACAE,QACAG,QACAI,QACAC,QACAI,QACAiB,QACAC,QACAS,QACAR,QACAL,QACA0B,SAIA,oBAAAlJ,WAAA,CAIA,IAAAX,KAAA0rB,EACAA,EAAAjM,eAAAzf,KACA0rB,EAAA1rB,MAAAsR,WAAA,GAAAtR,EAAAsR,WAAA,GAAAtR,EAAAsR,WAAA,GAAAtR,EAAAsR,WAAA,KAIAqa,EAAA,IAAAhrB,YAAA,IAAA2Q,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAua,EAAA,IAAAlrB,YAAA,IAAA2Q,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAsa,EAAA,IAAAjrB,YAAA,UACAmrB,EAAA,IAAAnrB,YAAA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEAorB,EAAA,IAAAprB,YAAA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEAqrB,GACAc,MAAAhB,EACAiB,MAAAhB,GAEAI,EAAA,IAAAxrB,YAAA,EACA,MACA,QACA,SACA,eACA,EACA,QAEAurB,EAAA,IAAAvrB,YAAA,EACA,MACA,IACA,MAEAyrB,EAAA,IAAAzrB,YAAA,EACA,MACA,UAEA0rB,EAAAD,EACAE,EAAA,IAAA3rB,YAAA,EACA,MACA,QACA,UAEA4rB,EAAAH,EACAH,EAAA,IAAAtrB,YAAA,EACA,MACA,IACA,eAzGA,GA6GAwJ,EAAA,SAAAF,GACA,IAEAjK,EACAC,EAHA+sB,KACAtjB,EAAA,EAKA,IAAA1J,EAAA,EAAiBA,EAAA8kB,UAAAnjB,OAAsB3B,IACvCgtB,EAAAtsB,KAAAokB,UAAA9kB,IAKA,IAFAA,EAAAgtB,EAAArrB,OAEA3B,KACA0J,GAAAsjB,EAAAhtB,GAAAf,WAQA,IALAgB,EAAA,IAAAU,WAAA+I,EAAA,GACA,IAAA5K,SAAAmB,EAAAlB,OAAAkB,EAAAjB,WAAAiB,EAAAhB,YACAguB,UAAA,EAAAhtB,EAAAhB,YACAgB,EAAAitB,IAAAjjB,EAAA,GAEAjK,EAAA,EAAA0J,EAAA,EAA2B1J,EAAAgtB,EAAArrB,OAAoB3B,IAC/CC,EAAAitB,IAAAF,EAAAhtB,GAAA0J,GACAA,GAAAsjB,EAAAhtB,GAAAf,WAGA,OAAAgB,GAGAkC,EAAA,WACA,OAAAgI,EAAAuhB,EAAAvpB,KAAAgI,EAAAuhB,EAAArpB,KAAA8pB,KAGAlrB,EAAA,SAAAksB,GACA,OAAAhjB,EAAAuhB,EAAAzqB,KAAA,IAAAN,YAAA,EACA,MAEA,EACA,GACA,IACA,EAEA,EACA,GACA,GACA,GACA,MACA,YACA,YAEA,EACA,EAGAwsB,EAAAC,iBAAA,EAAAD,EAAAE,yBAAA,EAAAF,EAAAE,wBAAA,EAAAF,EAAAppB,cAAA,YAQAxB,EAAA,SAAA0H,GACA,OAAAE,EAAAuhB,EAAAnpB,KAAAypB,EAAA/hB,KAOA7G,EAAA,SAAA+pB,GACA,IAAAltB,EAAA,IAAAU,YAAA,EACA,MACA,QACA,QACA,WACAwsB,EAAA1pB,WAAA,OAAA0pB,EAAA1pB,WAAA,OAAA0pB,EAAA1pB,WAAA,UAAA0pB,EAAA1pB,SACA,OACA,MAWA,OAPA0pB,EAAAlpB,aACAhE,EAAA,IAAAktB,EAAAlpB,aAAA,OACAhE,EAAA,IAAAktB,EAAAlpB,aAAA,OACAhE,EAAA,IAAAktB,EAAAlpB,aAAA,MACAhE,EAAA,QAAAktB,EAAAlpB,YAGAkG,EAAAuhB,EAAAtoB,KAAAnD,IAGAyD,EAAA,SAAAypB,GACA,OAAAhjB,EAAAuhB,EAAAhoB,KAAAN,EAAA+pB,GAAA5qB,EAAA4qB,EAAAljB,MAAApG,EAAAspB,KAGAxpB,EAAA,SAAAC,GACA,OAAAuG,EAAAuhB,EAAA/nB,KAAA,IAAAhD,YAAA,SACA,WAAAiD,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,MAIAC,EAAA,SAAAspB,GACA,OAAAhjB,EAAAuhB,EAAA7nB,KAAA,UAAAspB,EAAAljB,KAAAE,EAAAuhB,EAAA7hB,KAAAoiB,GAAA9hB,EAAAuhB,EAAA9lB,KAAAsmB,GAAA/pB,IAAA2D,EAAAqnB,KAGAhpB,EAAA,SAAAP,EAAA0pB,GAIA,IAHA,IAAAC,KACAvtB,EAAAstB,EAAA3rB,OAEA3B,KACAutB,EAAAvtB,GAAAsI,EAAAglB,EAAAttB,IAGA,OAAAmK,EAAAqD,MAAA,MAAAke,EAAAvnB,KAAAR,EAAAC,IAAAqJ,OAAAsgB,KASAnpB,EAAA,SAAAkpB,GAIA,IAHA,IAAAttB,EAAAstB,EAAA3rB,OACAS,KAEApC,KACAoC,EAAApC,GAAAuI,EAAA+kB,EAAAttB,IAGA,OAAAmK,EAAAqD,MAAA,MAAAke,EAAAtnB,KAAAE,EAAA,aAAA2I,OAAA7K,GAAA6K,OAAA5I,EAAAipB,MAGAjpB,EAAA,SAAAipB,GAIA,IAHA,IAAAttB,EAAAstB,EAAA3rB,OACAS,KAEApC,KACAoC,EAAApC,GAAAwI,EAAA8kB,EAAAttB,IAGA,OAAAmK,EAAAqD,MAAA,MAAAke,EAAArnB,MAAA4I,OAAA7K,KAGAkC,EAAA,SAAAb,GACA,IAAA2H,EAAA,IAAAzK,YAAA,EACA,MACA,QACA,QACA,YACA,WAAA8C,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,EACA,QACA,IACA,IACA,QACA,QACA,yEACA,gDACA,kBAEA,OAAA0G,EAAAuhB,EAAApnB,KAAA8G,IAGAtG,EAAA,SAAAqoB,GACA,IAEAjvB,EACA8B,EAHA+E,EAAAooB,EAAApoB,YACAqG,EAAA,IAAAzK,WAAA,EAAAoE,EAAApD,QAKA,IAAA3B,EAAA,EAAiBA,EAAA+E,EAAApD,OAAoB3B,IACrC9B,EAAA6G,EAAA/E,GAAA9B,MACAkN,EAAApL,EAAA,GAAA9B,EAAAE,WAAA,EAAAF,EAAAG,cAAA,EAAAH,EAAAI,cAGA,OAAA6L,EAAAuhB,EAAA5mB,KAAAsG,IAGAtF,EAAA,SAAAqnB,GACA,OAAAhjB,EAAAuhB,EAAA5lB,KAAAS,EAAA4mB,GAAAhjB,EAAAuhB,EAAA9kB,KAAA2lB,GAAApiB,EAAAuhB,EAAAxlB,KAAAmmB,GAAAliB,EAAAuhB,EAAAjlB,KAAA6lB,GAAAniB,EAAAuhB,EAAA3lB,KAAAqmB,KAMA7lB,EAAA,SAAA4mB,GACA,OAAAhjB,EAAAuhB,EAAAnlB,KAAA,IAAA5F,YAAA,EACA,MACA,oBAAAwsB,EAAAljB,KAAAuiB,EAAAW,GAAAV,EAAAU,KAGAX,EAAA,SAAAW,GACA,IAIAntB,EAJAO,EAAA4sB,EAAA5sB,QACAC,EAAA2sB,EAAA3sB,QACAgtB,KACAC,KAGA,IAAAztB,EAAA,EAAmBA,EAAAO,EAAAoB,OAAgB3B,IACnCwtB,EAAA9sB,MAAA,MAAAH,EAAAP,GAAAf,cAAA,GACAuuB,EAAA9sB,KAAA,IAAAH,EAAAP,GAAAf,YAEAuuB,IAAAvgB,OAAAvC,MAAAW,UAAAC,MAAAC,KAAAhL,EAAAP,KAIA,IAAAA,EAAA,EAAmBA,EAAAQ,EAAAmB,OAAgB3B,IACnCytB,EAAA/sB,MAAA,MAAAF,EAAAR,GAAAf,cAAA,GACAwuB,EAAA/sB,KAAA,IAAAF,EAAAR,GAAAf,YACAwuB,IAAAxgB,OAAAvC,MAAAW,UAAAC,MAAAC,KAAA/K,EAAAR,KAGA,OAAAmK,EAAAuhB,EAAA/sB,KAAA,IAAAgC,YAAA,YACA,IACA,IACA,IACA,yBACA,MAAAwsB,EAAA/tB,QAAA,MAAA+tB,EAAA/tB,OACA,MAAA+tB,EAAA9tB,SAAA,MAAA8tB,EAAA9tB,OACA,SACA,SACA,QACA,IACA,mGACA,KACA,QACA8K,EAAAuhB,EAAA9rB,KAAA,IAAAe,YAAA,EACAwsB,EAAAO,WACAP,EAAA/sB,qBACA+sB,EAAAQ,SACA,KACA1gB,QAAA1M,EAAAoB,SACAsL,OAAAugB,GAAAvgB,QAAAzM,EAAAmB,SACAsL,OAAAwgB,KACAtjB,EAAAuhB,EAAA9qB,KAAA,IAAAD,YAAA,aACA,aACA,kBAIA8rB,EAAA,SAAAU,GACA,OAAAhjB,EAAAuhB,EAAA5nB,KAAA,IAAAnD,YACA,YACA,IAEA,QACA,SACA,MAAAwsB,EAAAppB,eAAA,MAAAopB,EAAAppB,cACA,MAAAopB,EAAAnpB,aAAA,MAAAmpB,EAAAnpB,WACA,IACA,KACA,MAAAmpB,EAAAlpB,aAAA,MAAAkpB,EAAAlpB,WAAA,MAEAhD,EAAAksB,KAIAhlB,EAAA,SAAAglB,GACA,IAAAltB,EAAA,IAAAU,YAAA,EACA,MACA,QACA,SACA,WAAAwsB,EAAA/f,KAAA,aAAA+f,EAAA/f,KAAA,UAAA+f,EAAA/f,KAAA,MAAA+f,EAAA/f,GACA,SACA,WAAA+f,EAAA1pB,WAAA,aAAA0pB,EAAA1pB,WAAA,UAAA0pB,EAAA1pB,WAAA,MAAA0pB,EAAA1pB,SACA,gBACA,IACA,IACA,IACA,IACA,0EACA,MAAA0pB,EAAA/tB,QAAA,MAAA+tB,EAAA/tB,MAAA,KACA,MAAA+tB,EAAA9tB,SAAA,MAAA8tB,EAAA9tB,OAAA,MAEA,OAAA8K,EAAAuhB,EAAAvjB,KAAAlI,IAQAqI,EAAA,SAAA6kB,GACA,IAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA0BA,OAzBAL,EAAAzjB,EAAAuhB,EAAArkB,KAAA,IAAA1G,YAAA,EACA,QACA,WAAAwsB,EAAA/f,KAAA,aAAA+f,EAAA/f,KAAA,UAAA+f,EAAA/f,KAAA,MAAA+f,EAAA/f,GACA,QACA,QACA,QACA,WAEA4gB,EAAA7mB,KAAA+mB,MAAAf,EAAAjmB,qBAAA2lB,EAAA,IACAoB,EAAA9mB,KAAA+mB,MAAAf,EAAAjmB,qBAAA2lB,EAAA,IACAgB,EAAA1jB,EAAAuhB,EAAAzkB,KAAA,IAAAtG,YAAA,EACA,MAEAqtB,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,EAAAC,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,KAIA,GAQA,UAAAd,EAAAljB,MACA6jB,EAAA9kB,EAAAmkB,EATA,IAUAhjB,EAAAuhB,EAAApjB,KAAAslB,EAAAC,EAAAC,KAMAC,EAAAjpB,EAAAqoB,GACAW,EAAA9kB,EAAAmkB,EAAAY,EAAApsB,OAjBA,IAkBAwI,EAAAuhB,EAAApjB,KAAAslB,EAAAC,EAAAC,EAAAC,KASAxlB,EAAA,SAAA4kB,GAEA,OADAA,EAAA1pB,SAAA0pB,EAAA1pB,UAAA,WACA0G,EAAAuhB,EAAAnjB,KAAAJ,EAAAglB,GAAAzpB,EAAAypB,KAGA3kB,EAAA,SAAA2kB,GACA,IAAAltB,EAAA,IAAAU,YAAA,EACA,OACA,WAAAwsB,EAAA/f,KAAA,aAAA+f,EAAA/f,KAAA,UAAA+f,EAAA/f,KAAA,MAAA+f,EAAA/f,GACA,QACA,QACA,QACA,UAUA,MAJA,UAAA+f,EAAAljB,OACAhK,IAAA0B,OAAA,MAGAwI,EAAAuhB,EAAAljB,KAAAvI,IASA2sB,EAAA,SAAA7nB,EAAAhF,GACA,IAAAouB,EAAA,EACAC,EAAA,EACAC,EAAA,EACA1kB,EAAA,EAoBA,OAlBA5E,EAAApD,cACAqP,IAAAjM,EAAA,GAAAtB,WACA0qB,EAAA,QAGAnd,IAAAjM,EAAA,GAAA2E,OACA0kB,EAAA,QAGApd,IAAAjM,EAAA,GAAA7G,QACAmwB,EAAA,QAGArd,IAAAjM,EAAA,GAAA4E,wBACAA,EAAA,KAIA,EACA,EAAAwkB,EAAAC,EAAAC,EAAA1kB,EAAA,GACA,WAAA5E,EAAApD,UAAA,aAAAoD,EAAApD,UAAA,UAAAoD,EAAApD,UAAA,MAAAoD,EAAApD,QACA,WAAA5B,KAAA,aAAAA,KAAA,UAAAA,KAAA,MAAAA,IAIA4sB,EAAA,SAAAQ,EAAAptB,GACA,IAAAqL,EAAArG,EAAAkE,EAAAjJ,EAKA,IAHAD,GAAA,OADAgF,EAAAooB,EAAApoB,aACApD,OACAyJ,EAAAwhB,EAAA7nB,EAAAhF,GAEAC,EAAA,EAAmBA,EAAA+E,EAAApD,OAAoB3B,IACvCiJ,EAAAlE,EAAA/E,GACAoL,IAAA6B,SAAA,WAAAhE,EAAAxF,YAAA,aAAAwF,EAAAxF,YAAA,UAAAwF,EAAAxF,YAAA,MAAAwF,EAAAxF,UACA,WAAAwF,EAAAS,QAAA,aAAAT,EAAAS,QAAA,UAAAT,EAAAS,QAAA,MAAAT,EAAAS,KACAT,EAAA/K,MAAAC,WAAA,EAAA8K,EAAA/K,MAAAE,UAAA6K,EAAA/K,MAAAG,cAAA,EAAA4K,EAAA/K,MAAAI,eAAA,EAAA2K,EAAA/K,MAAAK,cAAA,EAAA0K,EAAA/K,MAAAM,gBAAA,MAAAyK,EAAA/K,MAAAO,oBAAA,GAAAwK,EAAA/K,MAAAO,qBACA,WAAAwK,EAAAU,yBAAA,aAAAV,EAAAU,yBAAA,UAAAV,EAAAU,yBAAA,MAAAV,EAAAU,wBAIA,OAAAQ,EAAAuhB,EAAA1iB,KAAA,IAAArI,WAAAyK,KAGAshB,EAAA,SAAAS,EAAAptB,GACA,IAAAqL,EAAArG,EAAAkE,EAAAjJ,EAKA,IAHAD,GAAA,MADAgF,EAAAooB,EAAApoB,aACApD,OACAyJ,EAAAwhB,EAAA7nB,EAAAhF,GAEAC,EAAA,EAAmBA,EAAA+E,EAAApD,OAAoB3B,IACvCiJ,EAAAlE,EAAA/E,GACAoL,IAAA6B,SAAA,WAAAhE,EAAAxF,YAAA,aAAAwF,EAAAxF,YAAA,UAAAwF,EAAAxF,YAAA,MAAAwF,EAAAxF,UACA,WAAAwF,EAAAS,QAAA,aAAAT,EAAAS,QAAA,UAAAT,EAAAS,QAAA,MAAAT,EAAAS,OAGA,OAAAS,EAAAuhB,EAAA1iB,KAAA,IAAArI,WAAAyK,KAGApC,EAAA,SAAAmkB,EAAAptB,GACA,gBAAAotB,EAAAljB,KACAyiB,EAAAS,EAAAptB,GAGA4sB,EAAAQ,EAAAptB,IAIA,IAyBAs7F,EAAAz9F,EAzBA09F,GACAv5F,KAxXAA,EAAA,WACA,OAAAoI,EAAAuhB,EAAA3pB,KAAA4pB,EAAAC,EAAAD,EAAAE,IAwXA9oB,KAjXA,SAAAnE,GACA,OAAAuL,EAAAuhB,EAAA3oB,KAAAnE,IAiXAuF,OACAC,OACAkqB,YAAA,SAAAhB,GACA,IAEArtB,EAFAsuB,EAAAxsB,IACAysB,EAAApqB,EAAAkpB,GAKA,OAHArtB,EAAA,IAAAU,WAAA4tB,EAAAtvB,WAAAuvB,EAAAvvB,aACAiuB,IAAAqB,GACAtuB,EAAAitB,IAAAsB,EAAAD,EAAAtvB,YACAgB,IAWAs7F,EAPA,SAAApwF,GACA,OAAAA,IAAA,GA6MAoqB,GACA7oB,QAnMA2uF,EAAA,SAAAz8F,EAAAkO,GACA,IACA9M,EACA0J,EACAO,EACAC,EACA6C,EALAC,KAOA,IAAAF,EAAAnL,OAEA,YAGA,IAAA3B,EAAA,EAAiBA,EAAApB,EAAAK,YACjByK,EAAA6xF,EAAA38F,EAAAoB,IAAA,GAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,MAAApB,EAAAoB,EAAA,IACAiK,EAAArM,EAAAgB,EAAAe,SAAAK,EAAA,EAAAA,EAAA,IACAkK,EAAAR,EAAA,EAAA1J,EAAA0J,EAAA9K,EAAAK,WAEAgL,IAAA6C,EAAA,KACA,IAAAA,EAAAnL,OAGAqL,EAAAtM,KAAA9B,EAAAe,SAAAK,EAAA,EAAAkK,KAGA6C,EAAAsuF,EAAAz8F,EAAAe,SAAAK,EAAA,EAAAkK,GAAA4C,EAAAxB,MAAA,KAEA3J,SACAqL,IAAAC,OAAAF,KAKA/M,EAAAkK,EAIA,OAAA8C,GA+JApP,UAtJAA,EAAA,SAAAmB,GACA,IAAAkB,EAAA,GAKA,OAJAA,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,KAkJAyE,UA3HA,SAAA0J,GAKA,OAHAmuF,EAAAnuF,GAAA,gBAGAC,OAAA,SAAAlN,EAAAsI,GACA,IAAAJ,EAAAjH,EAAA2J,EAAAuC,EAAAhK,EAGA,OAFA+E,EAAAkzF,EAAA9yF,GAAA,cAMArH,EAAAiH,EAAA,GAEAiF,EAAAmuF,EAAApzF,EADA0C,EAAA,IAAA3J,EAAA,QACA,GAAAiH,EAAA0C,EAAA,OAAA1C,EAAA0C,EAAA,MAAA1C,EAAA0C,EAAA,KACAzH,EAAAi4F,EAAA9yF,GAAA,qBAOAsC,EAAA,KADA3J,EAAAkC,EAAA,IACA,MACAnD,EAAAmN,GAAAmuF,EAAAn4F,EAAAyH,IAAA,GAAAzH,EAAAyH,EAAA,OAAAzH,EAAAyH,EAAA,MAAAzH,EAAAyH,EAAA,IACA5K,GANA,MATA,WAkHA0M,UA9EA,SAAAnJ,EAAA6J,GACA,IAAAC,EAAAC,EAAAtN,EA+BA,OA7BAqN,EAAA+tF,EAAAhuF,GAAA,gBAEAE,KAAAN,OAAAO,SAAAF,EAAA1C,IAAA,SAAAtC,GACA,OAAA+yF,EAAA/yF,GAAA,SAAAsC,IAAA,SAAAvD,GACA,IAAA+F,EAAAK,EAoBA,OAlBAL,EAAAmuF,EAAAl0F,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAoG,EAAAjK,EAAA4J,IAAA,KAEAiuF,EAAA/yF,GAAA,SAAAsC,IAAA,SAAA3D,GACA,IAAA/F,EAAAjB,EASA,OARAiB,EAAA+F,EAAA,GACAhH,EAAAs7F,EAAAt0F,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA,IAAA/F,IACAjB,GAAAkH,KAAAC,IAAA,MACAnH,GAAAs7F,EAAAt0F,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAGAhH,IACW,IACXyN,KAEAD,OAIAxN,EAAAkH,KAAAwG,IAAAH,MAAA,KAAAD,GACAK,SAAA3N,KAAA,GA+CA4N,cAhCA,SAAAX,GACA,IAEAW,KAqBA,OAvBAwtF,EAAAnuF,GAAA,gBAGAY,QAAA,SAAAvF,GACA,IAAAwF,EAAAstF,EAAA9yF,GAAA,gBAEAyF,EAAAqtF,EAAA9yF,GAAA,SAEAwF,EAAAD,QAAA,SAAAvL,EAAAsI,GACA,IAEAhM,EAEAyI,EAJA7E,EAAA7E,EAAA2E,EAAA5C,SAAA,OACAwI,EAAA6F,EAAAnD,GAKA,SAAApI,IAGA6E,EAAA,KAFAzI,EAAA,IAAAC,SAAAqJ,EAAApJ,OAAAoJ,EAAAnJ,WAAAmJ,EAAAlJ,aACAuD,SAAA,GACA3D,EAAAiC,UAAA,IAAAjC,EAAAiC,UAAA,IACA+M,EAAAnN,KAAA4G,QAIAuG,IAoBAgrB,EAAA,WACA9jB,KAAA7H,KAAA,WACA,IAAA4uB,KAQA/mB,KAAAiB,GAAA,SAAA/L,EAAA+xB,GACAF,EAAA7xB,KACA6xB,EAAA7xB,OAGA6xB,EAAA7xB,GAAA6xB,EAAA7xB,GAAAgD,OAAA+uB,IAUAjnB,KAAAknB,IAAA,SAAAhyB,EAAA+xB,GACA,IAAAnxB,EAEA,QAAAixB,EAAA7xB,KAIAY,EAAAixB,EAAA7xB,GAAAqE,QAAA0tB,GACAF,EAAA7xB,GAAA6xB,EAAA7xB,GAAAqB,QACAwwB,EAAA7xB,GAAAmU,OAAAvT,EAAA,GACAA,GAAA,IASAkK,KAAAokB,QAAA,SAAAlvB,GACA,IAAAiyB,EAAAl8B,EAAA2B,EAAAkjB,EAGA,GAFAqX,EAAAJ,EAAA7xB,GAUA,OAAA6a,UAAAnjB,OAGA,IAFAA,EAAAu6B,EAAAv6B,OAEA3B,EAAA,EAAuBA,EAAA2B,IAAY3B,EACnCk8B,EAAAl8B,GAAAuL,KAAAwJ,KAAA+P,UAAA,QAEW,CAIX,IAHAD,KACA7kB,EAAA8kB,UAAAnjB,OAEA3B,EAAA,EAAuBA,EAAA8kB,UAAAnjB,SAAsB3B,EAC7C6kB,EAAAnkB,KAAAokB,UAAA9kB,IAKA,IAFA2B,EAAAu6B,EAAAv6B,OAEA3B,EAAA,EAAuBA,EAAA2B,IAAY3B,EACnCk8B,EAAAl8B,GAAAwN,MAAAuH,KAAA8P,KASA9P,KAAAonB,QAAA,WACAL,QAeAjD,EAAAxtB,UAAA+wB,KAAA,SAAAC,GAOA,OANAtnB,KAAAiB,GAAA,gBAAApX,GACAy9B,EAAA37B,KAAA9B,KAEAmW,KAAAiB,GAAA,gBAAAwlF,GACAn/D,EAAAjD,MAAAoiE,KAEAn/D,GAOAxD,EAAAxtB,UAAA3K,KAAA,SAAA9B,GACAmW,KAAAokB,QAAA,OAAAv6B,IAGAi6B,EAAAxtB,UAAA+tB,MAAA,SAAAoiE,GACAzmF,KAAAokB,QAAA,OAAAqiE,IAGA,IAwQAC,EA0BAC,EACAC,EACAC,EACAC,EArSAthE,EAAA1B,EAyKAijE,GAAA,SAAArlE,EAAAjtB,GACA,IAAAP,GAtBAS,KAAA,EACAxL,OACAC,UAAA,EACAC,UAAA,EACAC,aAAA,EACAC,cAAA,EACAG,oBAAA,EACAD,gBAAA,IA4BA,OAZAyK,EAAAO,aACAP,EAAAU,sBAAA8sB,EAAAwB,IAAAxB,EAAAuB,IACA/uB,EAAAxF,SAAAgzB,EAAAhzB,SACAwF,EAAAS,KAAA,EAAA+sB,EAAA90B,OAEAsH,EAAAS,MAAA+sB,EAAAx3B,WAEAw3B,EAAAslE,WACA9yF,EAAA/K,MAAAE,UAAA,EACA6K,EAAA/K,MAAAM,gBAAA,GAGAyK,GA6DA+yF,GA/OA,SAAAC,GACA,IAAAj8F,EACAk8F,EACAvlE,KACA8hE,KAGA,IAFA9hE,EAAA13B,WAAA,EAEAe,EAAA,EAAiBA,EAAAi8F,EAAAt6F,OAAqB3B,IAGtC,gCAFAk8F,EAAAD,EAAAj8F,IAEAm8F,aAGAxlE,EAAAh1B,SACAg1B,EAAAlzB,SAAAy4F,EAAAlkE,IAAArB,EAAAqB,IACAygE,EAAA/3F,KAAAi2B,KAGAA,GAAAulE,IACAj9F,WAAAi9F,EAAAt9F,KAAAK,WACA03B,EAAAsB,IAAAikE,EAAAjkE,IACAtB,EAAAqB,IAAAkkE,EAAAlkE,MAGA,8CAAAkkE,EAAAC,cACAxlE,EAAAolE,UAAA,GAGAplE,EAAAlzB,SAAAy4F,EAAAlkE,IAAArB,EAAAqB,IACArB,EAAA13B,YAAAi9F,EAAAt9F,KAAAK,WACA03B,EAAAj2B,KAAAw7F,IAYA,OANAzD,EAAA92F,UAAAg1B,EAAAlzB,UAAAkzB,EAAAlzB,UAAA,KACAkzB,EAAAlzB,SAAAg1F,IAAA92F,OAAA,GAAA8B,UAIAg1F,EAAA/3F,KAAAi2B,GACA8hE,GAqMAuD,GA9LA,SAAAvD,GACA,IAAAz4F,EACA22B,EACAylE,KACAC,KAeA,IAZAD,EAAAn9F,WAAA,EACAm9F,EAAAE,SAAA,EACAF,EAAA34F,SAAA,EACA24F,EAAAnkE,IAAAwgE,EAAA,GAAAxgE,IACAmkE,EAAApkE,IAAAygE,EAAA,GAAAzgE,IAEAqkE,EAAAp9F,WAAA,EACAo9F,EAAAC,SAAA,EACAD,EAAA54F,SAAA,EACA44F,EAAApkE,IAAAwgE,EAAA,GAAAxgE,IACAokE,EAAArkE,IAAAygE,EAAA,GAAAzgE,IAEAh4B,EAAA,EAAiBA,EAAAy4F,EAAA92F,OAAmB3B,KACpC22B,EAAA8hE,EAAAz4F,IAEA+7F,UAGAK,EAAAz6F,SACA06F,EAAA37F,KAAA07F,GACAC,EAAAp9F,YAAAm9F,EAAAn9F,WACAo9F,EAAAC,UAAAF,EAAAE,SACAD,EAAA54F,UAAA24F,EAAA34F,WAGA24F,GAAAzlE,IACA2lE,SAAA3lE,EAAAh1B,OACAy6F,EAAAn9F,WAAA03B,EAAA13B,WACAm9F,EAAAnkE,IAAAtB,EAAAsB,IACAmkE,EAAApkE,IAAArB,EAAAqB,IACAokE,EAAA34F,SAAAkzB,EAAAlzB,WAEA24F,EAAA34F,UAAAkzB,EAAAlzB,SACA24F,EAAAE,UAAA3lE,EAAAh1B,OACAy6F,EAAAn9F,YAAA03B,EAAA13B,WACAm9F,EAAA17F,KAAAi2B,IAaA,OATA0lE,EAAA16F,QAAAy6F,EAAA34F,UAAA,IACA24F,EAAA34F,SAAA44F,IAAA16F,OAAA,GAAA8B,UAGA44F,EAAAp9F,YAAAm9F,EAAAn9F,WACAo9F,EAAAC,UAAAF,EAAAE,SACAD,EAAA54F,UAAA24F,EAAA34F,SAEA44F,EAAA37F,KAAA07F,GACAC,GAuIAL,GA1HA,SAAAK,GACA,IAAAD,EAeA,OAbAC,EAAA,MAAAN,UAAAM,EAAA16F,OAAA,IAEAy6F,EAAAC,EAAAnqF,QACAmqF,EAAAp9F,YAAAm9F,EAAAn9F,WACAo9F,EAAAC,UAAAF,EAAAE,SAIAD,EAAA,MAAArkE,IAAAokE,EAAApkE,IACAqkE,EAAA,MAAApkE,IAAAmkE,EAAAnkE,IACAokE,EAAA,MAAA54F,UAAA24F,EAAA34F,UAGA44F,GA0GAL,GAzDA,SAAAK,EAAAv0F,GACA,IAAAsH,EACApP,EACAiJ,EACAmzF,EACAzlE,EACAntB,EAAA1B,GAAA,EACA/C,KAEA,IAAAqK,EAAA,EAAiBA,EAAAitF,EAAA16F,OAAiByN,IAGlC,IAFAgtF,EAAAC,EAAAjtF,GAEApP,EAAA,EAAmBA,EAAAo8F,EAAAz6F,OAAuB3B,IAC1C22B,EAAAylE,EAAAp8F,GAEAwJ,IADAP,EAAA6yF,GAAAnlE,EAAAntB,IACAE,KACA3E,EAAArE,KAAAuI,GAIA,OAAAlE,GAqCAi3F,GAjCA,SAAAK,GACA,IAAAjtF,EACApP,EACA2b,EACAygF,EACAzlE,EACAulE,EACA1yF,EAAA,EACA+yF,EAAAF,EAAAp9F,WACAu9F,EAAAH,EAAAC,SAEA19F,EAAA,IAAA+B,WADA47F,EAAA,EAAAC,GAEA39F,EAAA,IAAAC,SAAAF,EAAAG,QAEA,IAAAqQ,EAAA,EAAiBA,EAAAitF,EAAA16F,OAAiByN,IAGlC,IAFAgtF,EAAAC,EAAAjtF,GAEApP,EAAA,EAAmBA,EAAAo8F,EAAAz6F,OAAuB3B,IAG1C,IAFA22B,EAAAylE,EAAAp8F,GAEA2b,EAAA,EAAqBA,EAAAgb,EAAAh1B,OAAyBga,IAC9CugF,EAAAvlE,EAAAhb,GACA9c,EAAAouB,UAAAzjB,EAAA0yF,EAAAt9F,KAAAK,YACAuK,GAAA,EACA5K,EAAAsuB,IAAAgvE,EAAAt9F,KAAA4K,GACAA,GAAA0yF,EAAAt9F,KAAAK,WAKA,OAAAL,GAUA69F,IAAA,mBACAC,IAAA,2CAEAC,GAAA,SAAApoE,GAGA,IAFA,IAAA/lB,KAEA+lB,KACA/lB,EAAA9N,KAAA,GAGA,OAAA8N,GAaAouF,IACAC,OAAAJ,IAAA,QAAAE,GAAA,WACAG,OAAAL,IAAA,KAAAE,GAAA,WACAI,OAAAN,IAAA,SAAAE,GAAA,WACAK,OAAAP,IAAA,SAAAE,GAAA,kBAAAA,GAAA,WACAM,OAAAR,IAAA,SAAAE,GAAA,kBAAAA,GAAA,WACAO,OAAAT,IAAA,SAAAE,GAAA,cAAAA,GAAA,YACAQ,OAAAV,IAAA,SAAAE,GAAA,kBAAAA,GAAA,eAAAA,GAAA,YACAS,OAAAX,IAAA,SAAAE,GAAA,kBAAAA,GAAA,eAAAA,GAAA,eAAAA,GAAA,cACAU,OAAAX,GAAAC,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,WACAW,OAAAZ,GAAAC,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,YACAY,MAAAb,GAAAC,GAAA,gBAAAA,GAAA,UAEAa,IAvBA/B,EAuBAmB,GAtBA9xF,OAAAC,KAAA0wF,GAAAtuF,OAAA,SAAAkF,EAAApH,GAIA,OAHAoH,EAAApH,GAAA,IAAAtK,WAAA86F,EAAAxwF,GAAAkC,OAAA,SAAAmM,EAAA4nD,GACA,OAAA5nD,EAAArM,OAAAi0D,SAEA7uD,QAoDAorF,IAxBA/B,EAAA,SAAA39F,GACA,OAVA,IAUAA,GAGA49F,EAAA,SAAA59F,EAAAw5B,GACA,OAAAx5B,EAAAw5B,GAGAqkE,EAAA,SAAApkE,GACA,OAAAA,EAlBA,KAqBAqkE,EAAA,SAAArkE,EAAAD,GACA,OAAAC,EAAAD,GAGA,SAAAC,EAAAD,GACA,OAAAmkE,EAAAG,EAAArkE,EAAAD,MAOAkmE,GAJA,SAAAjmE,EAAAD,GACA,OAAAokE,EAAAC,EAAApkE,GAAAD,IA0IAmmE,GA1GA,SAAAvwE,EAAAsrE,EAAAkF,EAAAC,GACA,IAAAC,EACAC,EAIAC,EACA/9F,EAJAg+F,EAAA,EACAC,EAAA,EACAC,EAAA,EAIA,GAAAzF,EAAA92F,SAIAk8F,EAAAJ,GAAAtwE,EAAAjmB,oBAAAimB,EAAAlpB,YAEA65F,EAAA32F,KAAAg3F,KApCA,KAoCAhxE,EAAAlpB,WAAA,OAEA05F,GAAAC,IAEAI,EAAAH,EAAA12F,KAAAwf,IAAAg3E,EAAAC,GAGAM,GADAD,EAAA92F,KAAA+mB,MAAA8vE,EAAAF,IACAA,KAKAG,EAAA,GAAAC,EAAAE,OAAA,CAYA,KARAL,EAAAP,GAAArwE,EAAAlpB,eAKA85F,EAAAtF,EAAA,GAAA75F,MAGAoB,EAAA,EAAiBA,EAAAi+F,EAAyBj+F,IAC1Cy4F,EAAAr6E,OAAApe,EAAA,GACApB,KAAAm/F,IAIA5wE,EAAAjmB,qBAAAC,KAAA+mB,MAAAuvE,GAAAS,EAAA/wE,EAAAlpB,eA6DAy5F,GAtDA,SAAAW,EAAAlxE,EAAAmxE,GACA,OAAAnxE,EAAAoxE,eAAAD,EACAD,GAIAlxE,EAAAoxE,cAAA7wF,IACA2wF,EAAArzF,OAAA,SAAA2rB,GAEA,OAAAA,EAAAqB,KAAAsmE,IACAnxE,EAAAoxE,cAAAp3F,KAAAwG,IAAAwf,EAAAoxE,cAAA5nE,EAAAqB,KACA7K,EAAAqxE,cAAArxE,EAAAoxE,eACA,OA0CAb,GAjCA,SAAAjF,GACA,IAAAz4F,EACA22B,EACA5xB,KAEA,IAAA/E,EAAA,EAAiBA,EAAAy4F,EAAA92F,OAAmB3B,IACpC22B,EAAA8hE,EAAAz4F,GACA+E,EAAArE,MACAgJ,KAAAitB,EAAA/3B,KAAAK,WACAwE,SAAA,OAKA,OAAAsB,GAmBA24F,GAfA,SAAAjF,GACA,IAAAz4F,EACA22B,EACAntB,EAAA,EACA5K,EAAA,IAAA+B,WA9GA,SAAA4yB,GACA,IAAAvzB,EAEAy+F,EAAA,EAEA,IAAAz+F,EAAA,EAAiBA,EAAAuzB,EAAA5xB,OAAkB3B,IAEnCy+F,GADAlrE,EAAAvzB,GACApB,KAAAK,WAGA,OAAAw/F,EAoGAC,CAAAjG,IAEA,IAAAz4F,EAAA,EAAiBA,EAAAy4F,EAAA92F,OAAmB3B,IACpC22B,EAAA8hE,EAAAz4F,GACApB,EAAAsuB,IAAAyJ,EAAA/3B,KAAA4K,GACAA,GAAAmtB,EAAA/3B,KAAAK,WAGA,OAAAL,GAwGA+/F,GA5CA,SAAAxxE,UACAA,EAAAoxE,qBACApxE,EAAAyxE,qBACAzxE,EAAAqxE,qBACArxE,EAAA0xE,eAwCAF,GA5BA,SAAAxxE,EAAA2xE,GACA,IAAA53F,EAEAq3F,EAAApxE,EAAAoxE,cAsBA,OApBAO,IACAP,GAAApxE,EAAA2N,kBAAA9C,KAKA9wB,EAAAimB,EAAA2N,kBAAA5zB,oBAEAA,GAAAq3F,EAEAr3F,EAAAC,KAAAwf,IAAA,EAAAzf,GAEA,UAAAimB,EAAAljB,OAIA/C,GADAimB,EAAAlpB,WAvFA,IAyFAiD,EAAAC,KAAA+mB,MAAAhnB,IAGAA,GAGAy3F,GAvFA,SAAAxxE,EAAAvuB,GACA,iBAAAA,EAAAq5B,WACAjnB,IAAAmc,EAAA2N,kBAAA7C,MACA9K,EAAA2N,kBAAA7C,IAAAr5B,EAAAq5B,UAGAjnB,IAAAmc,EAAAqxE,cACArxE,EAAAqxE,cAAA5/F,EAAAq5B,IAEA9K,EAAAqxE,cAAAr3F,KAAAwG,IAAAwf,EAAAqxE,cAAA5/F,EAAAq5B,UAGAjnB,IAAAmc,EAAA0xE,cACA1xE,EAAA0xE,cAAAjgG,EAAAq5B,IAEA9K,EAAA0xE,cAAA13F,KAAAwf,IAAAwG,EAAA0xE,cAAAjgG,EAAAq5B,MAIA,iBAAAr5B,EAAAo5B,WACAhnB,IAAAmc,EAAA2N,kBAAA9C,MACA7K,EAAA2N,kBAAA9C,IAAAp5B,EAAAo5B,UAGAhnB,IAAAmc,EAAAoxE,cACApxE,EAAAoxE,cAAA3/F,EAAAo5B,IAEA7K,EAAAoxE,cAAAp3F,KAAAwG,IAAAwf,EAAAoxE,cAAA3/F,EAAAo5B,UAGAhnB,IAAAmc,EAAAyxE,cACAzxE,EAAAyxE,cAAAhgG,EAAAo5B,IAEA7K,EAAAyxE,cAAAz3F,KAAAwf,IAAAwG,EAAAyxE,cAAAhgG,EAAAo5B,OA2OA+mE,GApJA,SAAA3zF,GASA,IARA,IAAApL,EAAA,EACAC,GACA++F,aAAA,EACAC,YAAA,GAEAD,EAAA,EACAC,EAAA,EAEAj/F,EAAAoL,EAAAnM,YAnBA,MAqBAmM,EAAApL,IAFA,CAOA,WAAAoL,EAAApL,IACAg/F,GAAA,IACAh/F,IAKA,IAFAg/F,GAAA5zF,EAAApL,KAEA,MAAAoL,EAAApL,IACAi/F,GAAA,IACAj/F,IAMA,GAHAi/F,GAAA7zF,EAAApL,MAGAC,EAAA+sB,SA1CA,IA0CAgyE,EAAA,CACA/+F,EAAA++F,cACA/+F,EAAAg/F,cACAh/F,EAAA+sB,QAAA5hB,EAAAzL,SAAAK,IAAAi/F,GACA,MAIAj/F,GAAAi/F,EACAD,EAAA,EACAC,EAAA,EAGA,OAAAh/F,GAwGA8+F,GApGA,SAAAG,GAGA,aAAAA,EAAAlyE,QAAA,GACA,KAIA,KAAAkyE,EAAAlyE,QAAA,MAAAkyE,EAAAlyE,QAAA,IACA,KAIA,SAAArqB,OAAAC,aAAAs8F,EAAAlyE,QAAA,GAAAkyE,EAAAlyE,QAAA,GAAAkyE,EAAAlyE,QAAA,GAAAkyE,EAAAlyE,QAAA,IACA,KAIA,IAAAkyE,EAAAlyE,QAAA,GACA,KAKAkyE,EAAAlyE,QAAArtB,SAAA,EAAAu/F,EAAAlyE,QAAArrB,OAAA,IA4EAo9F,GAxEA,SAAA9mE,EAAAknE,GACA,IACAn/F,EACAu0B,EACAx0B,EACAnB,EAJAoO,KAMA,QAAAmyF,EAAA,IACA,OAAAnyF,EAMA,IAFAunB,EAAA,GAAA4qE,EAAA,GAEAn/F,EAAA,EAAiBA,EAAAu0B,EAAWv0B,IAE5BpB,GACAqL,KAAA,EAAAk1F,EAAA,GAFAp/F,EAAA,EAAAC,IAGAi4B,OAGA,EAAAknE,EAAAp/F,EAAA,KACAnB,EAAAwgG,OAAAD,EAAAp/F,EAAA,MAAAo/F,EAAAp/F,EAAA,GACAiN,EAAAtM,KAAA9B,IAIA,OAAAoO,GA6CA+xF,GA1CA,SAAAngG,GAOA,IANA,IAGAygG,EACAC,EAJA39F,EAAA/C,EAAAK,WACAsgG,KACAv/F,EAAA,EAIAA,EAAA2B,EAAA,GACA,IAAA/C,EAAAoB,IAAA,IAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,IACAu/F,EAAA7+F,KAAAV,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAAu/F,EAAA59F,OACA,OAAA/C,EAIAygG,EAAA19F,EAAA49F,EAAA59F,OACA29F,EAAA,IAAA3+F,WAAA0+F,GACA,IAAAG,EAAA,EAEA,IAAAx/F,EAAA,EAAiBA,EAAAq/F,EAAeG,IAAAx/F,IAChCw/F,IAAAD,EAAA,KAEAC,IAEAD,EAAArtF,SAGAotF,EAAAt/F,GAAApB,EAAA4gG,GAGA,OAAAF,GAIAP,GA/JA,EAyKAjmE,GAAA,SAAAA,IACAA,EAAAztB,UAAA6B,KAAA3B,KAAAwJ,MACAA,KAAA0qF,mBACA1qF,KAAA2qF,YAAA,IAAAvkE,GAAA,KACA,IAAAA,GAAA,KACA,IAAAA,GAAA,KACA,IAAAA,GAAA,MAEApmB,KAAAg8C,QAEAh8C,KAAA2qF,WAAA5xF,QAAA,SAAA6xF,GACAA,EAAA3pF,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,SACA4qF,EAAA3pF,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,UACOA,QAGP+jB,GAAAztB,UAAA,IAAAkvB,GAEA75B,KAAA,SAAAmU,GACA,IAAAqqF,EAAAC,EAAAS,EAEA,gBAAA/qF,EAAAsnF,cAKA+C,EAAAH,GAAAlqF,EAAAgrF,cAEAb,cAAAD,KAKAI,EAAAJ,GAAAG,IAcA,GAAArqF,EAAAmjB,IAAAjjB,KAAA+qF,WAEA/qF,KAAAgrF,qBAAA,MAFA,CAIO,GAAAlrF,EAAAmjB,MAAAjjB,KAAA+qF,YAAA/qF,KAAAgrF,oBAQP,OAPAhrF,KAAAirF,mBAEAjrF,KAAAirF,cAEAjrF,KAAAgrF,qBAAA,IAOAH,EAAAb,GAAAlqF,EAAAojB,IAAAknE,GACApqF,KAAA0qF,gBAAA1qF,KAAA0qF,gBAAAxyF,OAAA2yF,GAEA7qF,KAAA+qF,aAAAjrF,EAAAmjB,MACAjjB,KAAAirF,YAAA,GAGAjrF,KAAAirF,cACAjrF,KAAA+qF,WAAAjrF,EAAAmjB,MAGAc,GAAAztB,UAAA+tB,MAAA,WAEArkB,KAAA0qF,gBAAA99F,QASAoT,KAAA0qF,gBAAA3xF,QAAA,SAAAqjC,EAAA8nD,GACA9nD,EAAA8uD,aAAAhH,IAGAlkF,KAAA0qF,gBAAAvtB,KAAA,SAAA1jE,EAAAC,GACA,OAAAD,EAAAypB,MAAAxpB,EAAAwpB,IACAzpB,EAAAyxF,aAAAxxF,EAAAwxF,aAGAzxF,EAAAypB,IAAAxpB,EAAAwpB,MAEAljB,KAAA0qF,gBAAA3xF,QAAA,SAAA8nB,GACAA,EAAA3rB,KAAA,GAEA8K,KAAAmrF,qBAAAtqE,IAIO7gB,MACPA,KAAA0qF,gBAAA99F,OAAA,EACAoT,KAAA2qF,WAAA5xF,QAAA,SAAA6xF,GACAA,EAAAvmE,SACOrkB,OA9BPA,KAAA2qF,WAAA5xF,QAAA,SAAA6xF,GACAA,EAAAvmE,SACSrkB,OAgCT+jB,GAAAztB,UAAA0lD,MAAA,WACAh8C,KAAA+qF,WAAA,KACA/qF,KAAAgrF,qBAAA,EACAhrF,KAAAirF,YAAA,EACAjrF,KAAAorF,sBAAA,WACAprF,KAAA2qF,WAAA5xF,QAAA,SAAAsyF,GACAA,EAAArvC,WAIAj4B,GAAAztB,UAAA60F,qBAAA,SAAAtqE,GAEA7gB,KAAAsrF,mBAAAzqE,GACA7gB,KAAAorF,qBAAAvqE,EAAA3rB,MAAA,EACO8K,KAAAurF,mBAAA1qE,KACP7gB,KAAAorF,qBAAAvqE,EAAA3rB,MAAA,GAGA,OAAA8K,KAAAorF,qBAAAvqE,EAAA3rB,OAMA8K,KAAA2qF,YAAA9pE,EAAA3rB,MAAA,GAAA8K,KAAAorF,qBAAAvqE,EAAA3rB,OAAAvJ,KAAAk1B,IAGAkD,GAAAztB,UAAAg1F,mBAAA,SAAAzqE,GACA,oBAAAA,EAAAwpE,SAGAtmE,GAAAztB,UAAAi1F,mBAAA,SAAA1qE,GACA,oBAAAA,EAAAwpE,SAaA,IAAAmB,IACAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,MAIAC,GAAA,SAAAhzE,GACA,cAAAA,EACA,IAGAA,EAAAqtE,GAAArtE,MACAvwB,OAAAC,aAAAswB,KAOAizE,IAAA,4EAGAC,GAAA,WAIA,IAHA,IAAAnmG,KACAD,EAAAqmG,GAEArmG,KACAC,EAAAS,KAAA,IAGA,OAAAT,GAGAk7B,GAAA,SAAAA,EAAAmrE,EAAAC,GACAprE,EAAA9vB,UAAA6B,KAAA3B,KAAAwJ,MACAA,KAAAyxF,OAAAF,GAAA,EACAvxF,KAAA0xF,aAAAF,GAAA,EACAxxF,KAAAwjC,MAAA,SAAAxjC,KAAAyxF,QAAA,EAAAzxF,KAAA0xF,eACA1xF,KAAA2xF,eACA3xF,KAAAg8C,QAEAh8C,KAAArU,KAAA,SAAAk1B,GACA,IAAAh3B,EAAA+nG,EAAAC,EAAAC,EAAApoE,EAIA,IAFA7/B,EAAA,MAAAg3B,EAAAwpE,UAEArqF,KAAA+xF,kBAeA,GATA,aAAAloG,GACAmW,KAAA+xF,iBAAAloG,EACSA,IAAAmW,KAAAgyF,WACThyF,KAAA+xF,iBAAA,MAGAF,EAAAhoG,IAAA,EACAioG,EAAA,IAAAjoG,EAEAA,IAAAmW,KAAAgyF,SAES,GAAAnoG,IAAAmW,KAAAiyF,wBACTjyF,KAAAkyF,MAAA,aACS,GAAAroG,IAAAmW,KAAAmyF,gBAKTnyF,KAAAkyF,MAAA,QACAlyF,KAAAoyF,gBAAAvxE,EAAAqC,KAEAljB,KAAAqyF,eAAAxxE,EAAAqC,KAEA0uE,EAAA5xF,KAAAsyF,WACAtyF,KAAAsyF,WAAAtyF,KAAAuyF,cACAvyF,KAAAuyF,cAAAX,EAEA5xF,KAAAwyF,UAAA3xE,EAAAqC,SACS,GAAAr5B,IAAAmW,KAAAyyF,gBACTzyF,KAAA0yF,YAAA,EACA1yF,KAAA2yF,UAAA9xE,EAAAqC,UACS,GAAAr5B,IAAAmW,KAAA4yF,gBACT5yF,KAAA0yF,YAAA,EACA1yF,KAAA2yF,UAAA9xE,EAAAqC,UACS,GAAAr5B,IAAAmW,KAAA6yF,gBACT7yF,KAAA0yF,YAAA,EACA1yF,KAAA2yF,UAAA9xE,EAAAqC,UACS,GAAAr5B,IAAAmW,KAAA8yF,iBACT9yF,KAAAoyF,gBAAAvxE,EAAAqC,KACAljB,KAAAqyF,eAAAxxE,EAAAqC,KACAljB,KAAA+yF,eACA/yF,KAAAwyF,UAAA3xE,EAAAqC,SACS,GAAAr5B,IAAAmW,KAAAgzF,WACT,UAAAhzF,KAAAkyF,MACAlyF,KAAAuyF,cAAAvyF,KAAAizF,MAAAjzF,KAAAuyF,cAAAvyF,KAAAizF,MAAA18F,MAAA,MAEAyJ,KAAAsyF,WAAAtyF,KAAAizF,MAAAjzF,KAAAsyF,WAAAtyF,KAAAizF,MAAA18F,MAAA,WAES,GAAA1M,IAAAmW,KAAAkzF,wBACTlzF,KAAAqyF,eAAAxxE,EAAAqC,KACAljB,KAAAsyF,WAAAjB,UACS,GAAAxnG,IAAAmW,KAAAmzF,4BACTnzF,KAAAuyF,cAAAlB,UACS,GAAAxnG,IAAAmW,KAAAozF,0BACT,YAAApzF,KAAAkyF,QAGAlyF,KAAAqyF,eAAAxxE,EAAAqC,KACAljB,KAAAsyF,WAAAjB,MAGArxF,KAAAkyF,MAAA,UACAlyF,KAAAwyF,UAAA3xE,EAAAqC,SACS,GAAAljB,KAAAqzF,mBAAAxB,EAAAC,GAMTpoE,EAAAynE,IADAU,GAAA,EAAAA,IAAA,GACAC,GACA9xF,UAAAkyF,OAAArxE,EAAAqC,IAAAwG,GACA1pB,KAAAszF,eACS,GAAAtzF,KAAAuzF,eAAA1B,EAAAC,GAMT,UAAA9xF,KAAAkyF,MACAlyF,KAAAuyF,cAAAvyF,KAAAizF,MAAAjzF,KAAAuyF,cAAAvyF,KAAAizF,MAAA18F,MAAA,MAEAyJ,KAAAsyF,WAAAtyF,KAAAizF,MAAAjzF,KAAAsyF,WAAAtyF,KAAAizF,MAAA18F,MAAA,MAQAmzB,EAAAynE,IADAU,GAAA,EAAAA,IAAA,GACAC,GACA9xF,UAAAkyF,OAAArxE,EAAAqC,IAAAwG,GACA1pB,KAAAszF,eACS,GAAAtzF,KAAAwzF,aAAA3B,EAAAC,GAET9xF,KAAAoyF,gBAAAvxE,EAAAqC,KAGAljB,UAAAkyF,OAAArxE,EAAAqC,IAAA,KACAljB,KAAAszF,UAEA,QAAAxB,IACA9xF,KAAAyzF,cAAA5yE,EAAAqC,KAAA,MAGA,MAAA4uE,IACA9xF,KAAAyzF,cAAA5yE,EAAAqC,KAAA,WAGS,GAAAljB,KAAA0zF,oBAAA7B,EAAAC,GAKT9xF,KAAAszF,SAAA,EAAAxB,OACS,GAAA9xF,KAAA2zF,MAAA9B,EAAAC,GAAA,CAGT,IAAA8B,EAAAxC,GAAA73F,QAAA,KAAA1P,GAEA,WAAAmW,KAAAkyF,QAIA0B,EAAA5zF,KAAA0yF,YAAA,MACAkB,EAAA5zF,KAAA0yF,YAAA,GAGA1yF,KAAA2yF,UAAA9xE,EAAAqC,IAAA0wE,IAGAA,IAAA5zF,KAAAizF,OAEAjzF,KAAAoyF,gBAAAvxE,EAAAqC,KACAljB,KAAAizF,KAAAW,GAKA,EAAA9B,IAAA,IAAA9xF,KAAA6zF,YAAAt6F,QAAA,MACAyG,KAAAyzF,cAAA5yE,EAAAqC,KAAA,MAGA,QAAAr5B,KAKAmW,KAAAszF,QAAA,OAAAzpG,IAAA,IAGAmW,KAAA8zF,WAAAhC,IAKA,QAAAA,IACA9xF,KAAAyzF,cAAA5yE,EAAAqC,KAAA,WAISljB,KAAA+zF,aAAAlC,KACT,IAAAC,IACAA,EAAA,MAGApoE,EAAAynE,GAAAU,GACAnoE,GAAAynE,GAAAW,GACA9xF,UAAAkyF,OAAArxE,EAAAqC,IAAAwG,GACA1pB,KAAAszF,SAAA5pE,EAAA98B,aA7KAoT,KAAA+xF,iBAAA,OAmLA3rE,GAAA9vB,UAAA,IAAAkvB,EAGAY,GAAA9vB,UAAA+7F,eAAA,SAAAnvE,GACA,IAAAiU,EAAAn3B,KAAAsyF,WACAz8F,IAAA,SAAA+9F,GACA,IACA,OAAAA,EAAAl8F,OACS,MAAAwG,GAMT,OADAyT,QAAA/C,MAAA,+BACA,MAGAhZ,KAAA,MACAgH,QAAA,iBAEAu6B,EAAAvqC,QACAoT,KAAAokB,QAAA,QACA4vE,SAAAh0F,KAAAwyF,UACAyB,OAAA/wE,EACAwG,KAAAyN,EACA3R,OAAAxlB,KAAAwjC,SASApd,GAAA9vB,UAAA0lD,MAAA,WACAh8C,KAAAkyF,MAAA,QAKAlyF,KAAAk0F,QAAA,EACAl0F,KAAAwyF,UAAA,EACAxyF,KAAAsyF,WAAAjB,KACArxF,KAAAuyF,cAAAlB,KACArxF,KAAA+xF,iBAAA,KAEA/xF,KAAAszF,QAAA,EACAtzF,KAAAizF,KAjQA,GAkQAjzF,KAAA0yF,YAAA,EAEA1yF,KAAA6zF,gBAOAztE,GAAA9vB,UAAAq7F,aAAA,WAaA,IAAA3xF,KAAA0xF,cACA1xF,KAAAm0F,MAAA,GACAn0F,KAAAo0F,KAAA,GACAp0F,KAAAq0F,UAAA,GAAAr0F,KAAAyxF,SAAA,EACAzxF,KAAAs0F,QAAA,IACO,IAAAt0F,KAAA0xF,eACP1xF,KAAAm0F,MAAA,GACAn0F,KAAAo0F,KAAA,GACAp0F,KAAAq0F,UAAA,GAAAr0F,KAAAyxF,SAAA,EACAzxF,KAAAs0F,QAAA,IAOAt0F,KAAAgyF,SAAA,EAEAhyF,KAAAiyF,wBAAA,GAAAjyF,KAAAq0F,SACAr0F,KAAAmyF,gBAAA,GAAAnyF,KAAAq0F,SAEAr0F,KAAAyyF,gBAAA,GAAAzyF,KAAAq0F,SACAr0F,KAAA4yF,gBAAA,GAAA5yF,KAAAq0F,SACAr0F,KAAA6yF,gBAAA,GAAA7yF,KAAAq0F,SACAr0F,KAAA8yF,iBAAA,GAAA9yF,KAAAq0F,SAEAr0F,KAAAozF,0BAAA,GAAApzF,KAAAq0F,SAEAr0F,KAAAgzF,WAAA,GAAAhzF,KAAAq0F,SACAr0F,KAAAkzF,wBAAA,GAAAlzF,KAAAq0F,SACAr0F,KAAAmzF,4BAAA,GAAAnzF,KAAAq0F,UAeAjuE,GAAA9vB,UAAA+8F,mBAAA,SAAAxB,EAAAC,GACA,OAAAD,IAAA7xF,KAAAo0F,MAAAtC,GAAA,IAAAA,GAAA,IAeA1rE,GAAA9vB,UAAAi9F,eAAA,SAAA1B,EAAAC,GACA,OAAAD,IAAA7xF,KAAAo0F,KAAA,GAAAvC,IAAA7xF,KAAAo0F,KAAA,IAAAtC,GAAA,IAAAA,GAAA,IAeA1rE,GAAA9vB,UAAAk9F,aAAA,SAAA3B,EAAAC,GACA,OAAAD,IAAA7xF,KAAAo0F,MAAAtC,GAAA,IAAAA,GAAA,IAeA1rE,GAAA9vB,UAAAo9F,oBAAA,SAAA7B,EAAAC,GACA,OAAAD,IAAA7xF,KAAAs0F,SAAAxC,GAAA,IAAAA,GAAA,IAeA1rE,GAAA9vB,UAAAq9F,MAAA,SAAA9B,EAAAC,GACA,OAAAD,GAAA7xF,KAAAm0F,OAAAtC,EAAA7xF,KAAAm0F,MAAA,GAAArC,GAAA,IAAAA,GAAA,KAaA1rE,GAAA9vB,UAAAw9F,WAAA,SAAAhC,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAYA1rE,GAAA9vB,UAAAy9F,aAAA,SAAAQ,GACA,OAAAA,GAAA,IAAAA,GAAA,KAWAnuE,GAAA9vB,UAAAq8F,UAAA,SAAAzvE,EAAAsxE,GAWA,GATA,WAAAx0F,KAAAkyF,QACAlyF,KAAAizF,KA/aA,GAgbAjzF,KAAAkyF,MAAA,SAEAlyF,KAAAqyF,eAAAnvE,GACAljB,KAAAuyF,cAAAlB,KACArxF,KAAAsyF,WAAAjB,WAGAp1F,IAAAu4F,OAAAx0F,KAAAizF,KAEA,QAAAhoG,EAAA,EAAuBA,EAAA+U,KAAA0yF,YAAsBznG,IAC7C+U,KAAAsyF,WAAAkC,EAAAvpG,GAAA+U,KAAAsyF,WAAAtyF,KAAAizF,KAAAhoG,GACA+U,KAAAsyF,WAAAtyF,KAAAizF,KAAAhoG,GAAA,QAIAgR,IAAAu4F,IACAA,EAAAx0F,KAAAizF,MAGAjzF,KAAAk0F,QAAAM,EAAAx0F,KAAA0yF,YAAA,GAKAtsE,GAAA9vB,UAAAm9F,cAAA,SAAAvwE,EAAAuxE,GACAz0F,KAAA6zF,YAAA7zF,KAAA6zF,YAAA37F,OAAAu8F,GACA,IAAA/qE,EAAA+qE,EAAAr8F,OAAA,SAAAsxB,EAAA+qE,GACA,OAAA/qE,EAAA,IAAA+qE,EAAA,KACO,IACPz0F,UAAAkyF,OAAAhvE,EAAAwG,IAKAtD,GAAA9vB,UAAA87F,gBAAA,SAAAlvE,GACA,GAAAljB,KAAA6zF,YAAAjnG,OAAA,CAIA,IAAA88B,EAAA1pB,KAAA6zF,YAAAnjF,UAAAtY,OAAA,SAAAsxB,EAAA+qE,GACA,OAAA/qE,EAAA,KAAA+qE,EAAA,KACO,IACPz0F,KAAA6zF,eACA7zF,UAAAkyF,OAAAhvE,EAAAwG,KAIAtD,GAAA9vB,UAAAo+F,MAAA,SAAAxxE,EAAAwG,GACA,IAAAirE,EAAA30F,KAAAuyF,cAAAvyF,KAAAizF,MAEA0B,GAAAjrE,EACA1pB,KAAAuyF,cAAAvyF,KAAAizF,MAAA0B,GAGAvuE,GAAA9vB,UAAAs+F,OAAA,SAAA1xE,EAAAwG,GACA,IAAAirE,EAAA30F,KAAAsyF,WAAAtyF,KAAAizF,MACA0B,GAAAjrE,EACA1pB,KAAAsyF,WAAAtyF,KAAAizF,MAAA0B,GAGAvuE,GAAA9vB,UAAAy8F,aAAA,WACA,IAAA9nG,EAEA,IAAAA,EAAA,EAAiBA,EAAA+U,KAAAk0F,QAAkBjpG,IACnC+U,KAAAsyF,WAAArnG,GAAA,GAGA,IAAAA,EAAA+U,KAAAizF,KAAA,EAA6BhoG,EAAAqmG,GAAoBrmG,IACjD+U,KAAAsyF,WAAArnG,GAAA,GAIA,IAAAA,EAAA+U,KAAAk0F,QAA4BjpG,EAAA+U,KAAAizF,KAAehoG,IAC3C+U,KAAAsyF,WAAArnG,GAAA+U,KAAAsyF,WAAArnG,EAAA,GAIA+U,KAAAsyF,WAAAtyF,KAAAizF,MAAA,IAGA7sE,GAAA9vB,UAAAu+F,QAAA,SAAA3xE,EAAAwG,GACA,IAAAirE,EAAA30F,KAAAsyF,WAAAtyF,KAAAizF,MACA0B,GAAAjrE,EACA1pB,KAAAsyF,WAAAtyF,KAAAizF,MAAA0B,GAIA,IAAAG,IACA/wE,iBACAqC,iBAEA2uE,IACA5yE,iBAAA,GACAC,iBAAA,GACA6C,qBAAA,IAKA1E,GAAA,SAAAnqB,EAAA4+F,GACA,IAAAC,EAAA,EAeA,IAbA7+F,EAAA4+F,IAQAC,GAAA,GAKA7iG,KAAAuqE,IAAAq4B,EAAA5+F,GAlBA,YAmBAA,GApBA,WAoBA6+F,EAGA,OAAA7+F,GAGA4tB,GAAA,SAAAA,EAAA9uB,GACA,IAAAggG,EAAAC,EACAnxE,EAAA1tB,UAAA6B,KAAA3B,KAAAwJ,MACAA,KAAAo1F,MAAAlgG,EAEA8K,KAAArU,KAAA,SAAA9B,GACAA,EAAAqL,OAAA8K,KAAAo1F,aAIAn5F,IAAAk5F,IACAA,EAAAtrG,EAAAo5B,KAGAp5B,EAAAo5B,IAAA1C,GAAA12B,EAAAo5B,IAAAkyE,GACAtrG,EAAAq5B,IAAA3C,GAAA12B,EAAAq5B,IAAAiyE,GACAD,EAAArrG,EAAAo5B,IACAjjB,KAAAokB,QAAA,OAAAv6B,KAGAmW,KAAAqkB,MAAA,WACA8wE,EAAAD,EACAl1F,KAAAokB,QAAA,SAGApkB,KAAAitB,cAAA,WACAkoE,OAAA,EACAD,OAAA,IAIAlxE,GAAA1tB,UAAA,IAAAkvB,EACA,IAiFA6vE,GAjFAC,GACAtxE,GAIAuxE,GAAA,SAAAl/F,EAAAk3B,EAAAp4B,GACA,IAAAlK,EACAC,EAAA,GAEA,IAAAD,EAAAsiC,EAAqBtiC,EAAAkK,EAASlK,IAC9BC,GAAA,UAAAmL,EAAApL,GAAAyL,SAAA,KAAAH,OAAA,GAGA,OAAArL,GAIAsqG,GAAA,SAAAn/F,EAAAk3B,EAAAp4B,GACA,OAAArH,mBAAAynG,GAAAl/F,EAAAk3B,EAAAp4B,KAOAsgG,GAAA,SAAA5rG,GACA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA6rG,IACAC,KAAA,SAAAhpG,GACA,IAAA1B,EAEA,OAAA0B,EAAA9C,KAAA,IAKA,IAAAoB,EAAA,EAAmBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACxC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAwhD,YAAAqnD,GAAA7oG,EAAA9C,KAAA,EAAAoB,GAEA0B,EAAAyJ,MAAAo/F,GAAA7oG,EAAA9C,KAAAoB,EAAA,EAAA0B,EAAA9C,KAAA+C,QAAAgQ,QAAA,WACA,MAIAjQ,EAAA9C,KAAA8C,EAAAyJ,QAEAw/F,KAAA,SAAAjpG,GACA,IAAA1B,EAEA,OAAA0B,EAAA9C,KAAA,GAKA,IAAAoB,EAAA,EAAmBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACxC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAwhD,YAAAqnD,GAAA7oG,EAAA9C,KAAA,EAAAoB,GACA0B,EAAAwhB,IAAAqnF,GAAA7oG,EAAA9C,KAAAoB,EAAA,EAAA0B,EAAA9C,KAAA+C,QACA,QAIAipG,KAAA,SAAAlpG,GACA,IAAA1B,EA7CAoL,EA+CA,IAAApL,EAAA,EAAmBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACxC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAmpG,OAlDAz/F,EAkDA1J,EAAA9C,KAjDAksG,SAAAR,GAAAl/F,EAiDA,EAAApL,KACA,MAIA0B,EAAAg3F,YAAAh3F,EAAA9C,KAAAe,SAAAK,EAAA,GACA0B,EAAA9C,KAAA8C,EAAAg3F,eAKA0R,GAAA,SAAAr3F,GACA,IAaA/S,EAbA0sD,GACA5iB,SAAA/2B,MAAA+2B,OAIAvG,WAAAxwB,KAAAwwB,YAGAwnE,EAAA,EAEAhsG,KAEAyC,EAAA,EASA,GANA4oG,GAAA/+F,UAAA6B,KAAA3B,KAAAwJ,MAIAA,KAAAi2F,aAAAlB,GAAA9vE,qBAAAvuB,SAAA,IAEAihD,EAAAnpB,WACA,IAAAvjC,EAAA,EAAmBA,EAAA0sD,EAAAnpB,WAAA5hC,OAAgC3B,IACnD+U,KAAAi2F,eAAA,KAAAt+C,EAAAnpB,WAAAvjC,GAAAyL,SAAA,KAAAH,OAAA,GAIAyJ,KAAArU,KAAA,SAAAyiC,GACA,IAAAzhC,EAAAupG,EAAAxzE,EAAAhB,EAAAz2B,EAEA,sBAAAmjC,EAAAl5B,KAaA,GANAk5B,EAAAtI,yBACAr5B,EAAA,EACAzC,EAAA4C,OAAA,GAIA,IAAA5C,EAAA4C,SAAAwhC,EAAAvkC,KAAA+C,OAAA,IAAAwhC,EAAAvkC,KAAA,SAAA0S,WAAA,IAAA6xB,EAAAvkC,KAAA,SAAA0S,WAAA,IAAA6xB,EAAAvkC,KAAA,SAAA0S,WAAA,IACAo7C,EAAA5iB,OAEApjB,QAAAwiB,IAAA,8CAsBA,GAfAnqC,EAAA2B,KAAAyiC,GACA3hC,GAAA2hC,EAAAvkC,KAAAK,WAEA,IAAAF,EAAA4C,SAKAopG,EAAAP,GAAArnE,EAAAvkC,KAAAe,SAAA,OAGAorG,GAAA,MAIAvpG,EAAAupG,GAAA,CAYA,IAPArpG,GACA9C,KAAA,IAAA+B,WAAAoqG,GACAtS,UACAxgE,IAAAl5B,EAAA,GAAAk5B,IACAD,IAAAj5B,EAAA,GAAAi5B,KAGAh4B,EAAA,EAAmBA,EAAA+qG,GACnBrpG,EAAA9C,KAAAsuB,IAAAnuB,EAAA,GAAAH,KAAAe,SAAA,EAAAorG,EAAA/qG,MACAA,GAAAjB,EAAA,GAAAH,KAAAK,WACAuC,GAAAzC,EAAA,GAAAH,KAAAK,WACAF,EAAAmT,QAIA+4F,EAAA,GAEA,GAAAvpG,EAAA9C,KAAA,KAEAqsG,GAAA,EAEAA,GAAAT,GAAA9oG,EAAA9C,KAAAe,SAAA,QAEAorG,GAAAP,GAAA9oG,EAAA9C,KAAAe,SAAA,SAKA,GAIA,IAFA83B,EAAA+yE,GAAA9oG,EAAA9C,KAAAe,SAAAsrG,EAAA,EAAAA,EAAA,KAEA,EAEA,OAAAvkF,QAAAwiB,IAAA,+DAUA,IANAzS,GACArpB,GAFAzK,OAAAC,aAAAlB,EAAA9C,KAAAqsG,GAAAvpG,EAAA9C,KAAAqsG,EAAA,GAAAvpG,EAAA9C,KAAAqsG,EAAA,GAAAvpG,EAAA9C,KAAAqsG,EAAA,IAGArsG,KAAA8C,EAAA9C,KAAAe,SAAAsrG,EAAA,GAAAA,EAAAxzE,EAAA,MAEAxsB,IAAAwrB,EAAArpB,GAEAq9F,GAAAh0E,EAAArpB,MACAq9F,GAAAh0E,EAAArpB,IAAAqpB,GAGA,iDAAAA,EAAAo0E,OAAA,CACA,IAAA3mE,EAAAzN,EAAA73B,KACA8K,GAAA,EAAAw6B,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OACAx6B,GAAA,EACAA,GAAA,EAAAw6B,EAAA,GACAzN,EAAAy0E,UAAAxhG,OAKAsH,IAAAtP,EAAAu2B,UAAAjnB,IAAAtP,EAAAs2B,MACAt2B,EAAAu2B,IAAAxB,EAAAy0E,UACAxpG,EAAAs2B,IAAAvB,EAAAy0E,WAGAn2F,KAAAokB,QAAA,YAAA1C,GAIA/0B,EAAA+2F,OAAA/3F,KAAA+1B,GACAw0E,GAAA,GAEAA,GAAAxzE,QACSwzE,EAAAF,GAETh2F,KAAAokB,QAAA,OAAAz3B,OAIA2J,UAAA,IAAAkvB,EACA,IAGA4wE,GAAAC,GAAAC,GAHAC,GAAAlB,GACAmB,GAAAlB,IAaAc,GAAA,WACA,IAAApsG,EAAA,IAAA4B,WATA,KAUAs4B,EAAA,EAEAkyE,GAAA9/F,UAAA6B,KAAA3B,KAAAwJ,MAOAA,KAAArU,KAAA,SAAA0K,GACA,IAEA8tB,EAFAlD,EAAA,EACAC,EArBA,IAmCA,IAVAgD,IACAC,EAAA,IAAAv4B,WAAAyK,EAAAnM,WAAAg6B,IACA/L,IAAAnuB,EAAAY,SAAA,EAAAs5B,IACAC,EAAAhM,IAAA9hB,EAAA6tB,GACAA,EAAA,GAEAC,EAAA9tB,EAIA6qB,EAAAiD,EAAAj6B,YAjCA,KAmCAi6B,EAAAlD,IAnCA,KAmCAkD,EAAAjD,IAYAD,IACAC,MAVAlhB,KAAAokB,QAAA,OAAAD,EAAAv5B,SAAAq2B,EAAAC,IACAD,GAzCA,IA0CAC,GA1CA,KAwDAD,EAAAkD,EAAAj6B,aACAF,EAAAmuB,IAAAgM,EAAAv5B,SAAAq2B,GAAA,GACAiD,EAAAC,EAAAj6B,WAAA+2B,IAQAjhB,KAAAqkB,MAAA,WAlEA,MAsEAH,GApEA,KAoEAl6B,EAAA,KACAgW,KAAAokB,QAAA,OAAAp6B,GACAk6B,EAAA,GAGAlkB,KAAAokB,QAAA,WAIA9tB,UAAA,IAAAkvB,GAMA6wE,GAAA,WACA,IAAA/xE,EAAAtC,EAAAC,EAAArI,EAEAy8E,GAAA//F,UAAA6B,KAAA3B,KAAAwJ,MAEA4Z,EAAA5Z,KACAA,KAAAukB,wBACAvkB,KAAAwkB,qBAAAvoB,EAEAqoB,EAAA,SAAArM,EAAAwM,GACA,IAAAz5B,EAAA,EAOAy5B,EAAAC,4BACA15B,GAAAitB,EAAAjtB,GAAA,GAGA,QAAAy5B,EAAAvvB,KACA8sB,EAAA/J,EAAArtB,SAAAI,GAAAy5B,GAEAxC,EAAAhK,EAAArtB,SAAAI,GAAAy5B,IAIAzC,EAAA,SAAA/J,EAAA0M,GACAA,EAAAC,eAAA3M,EAAA,GAEA0M,EAAAE,oBAAA5M,EAAA,GAGA2B,EAAAkL,QAAA,GAAA7M,EAAA,QAAAA,EAAA,IACA0M,EAAAG,OAAAlL,EAAAkL,QAYA7C,EAAA,SAAAhK,EAAA2I,GACA,IAAAmE,EAAA/5B,EAMA,KAAAitB,EAAA,IAmBA,IAdA2B,EAAA4K,iBACAzM,MAAA,KACAC,MAAA,KACAgN,qBAIAD,EAAA,IADA,GAAA9M,EAAA,OAAAA,EAAA,IACA,EAKAjtB,EAAA,KAFA,GAAAitB,EAAA,QAAAA,EAAA,KAIAjtB,EAAA+5B,GAAA,CACA,IAAAv4B,EAAAyrB,EAAAjtB,GACAo2B,GAAA,GAAAnJ,EAAAjtB,EAAA,OAAAitB,EAAAjtB,EAAA,GAIAwB,IAAAuoG,GAAA5yE,kBAAA,OAAAvI,EAAA4K,gBAAAzM,MACA6B,EAAA4K,gBAAAzM,MAAAqJ,EACW50B,IAAAuoG,GAAA3yE,kBAAA,OAAAxI,EAAA4K,gBAAAxM,MACX4B,EAAA4K,gBAAAxM,MAAAoJ,EACW50B,IAAAuoG,GAAA9vE,uBAEXrL,EAAA4K,gBAAA,kBAAApD,GAAA50B,GAKAxB,GAAA,OAAAitB,EAAAjtB,EAAA,OAAAitB,EAAAjtB,EAAA,IAIA41B,EAAA4D,gBAAA5K,EAAA4K,kBAOAxkB,KAAArU,KAAA,SAAAk1B,GACA,IAAA31B,KACAF,EAAA,EAgBA,GAfAE,EAAAw5B,6BAAA,GAAA7D,EAAA,IAEA31B,EAAAk2B,IAAA,GAAAP,EAAA,GACA31B,EAAAk2B,MAAA,EACAl2B,EAAAk2B,KAAAP,EAAA,IAMA,GAAAA,EAAA,YACA71B,GAAA61B,EAAA71B,GAAA,GAIA,IAAAE,EAAAk2B,IACAl2B,EAAAgK,KAAA,MACAovB,EAAAzD,EAAAj2B,SAAAI,GAAAE,GACA8U,KAAAokB,QAAA,OAAAl5B,QACS,GAAAA,EAAAk2B,MAAAphB,KAAA8kB,OAKT,IAJA55B,EAAAgK,KAAA,MACAovB,EAAAzD,EAAAj2B,SAAAI,GAAAE,GACA8U,KAAAokB,QAAA,OAAAl5B,GAEA8U,KAAAukB,qBAAA33B,QACAoT,KAAAklB,YAAAzsB,MAAAuH,UAAAukB,qBAAApnB,mBAESlB,IAAA+D,KAAAwkB,gBAGTxkB,KAAAukB,qBAAA54B,MAAAk1B,EAAA71B,EAAAE,IAEA8U,KAAAklB,YAAArE,EAAA71B,EAAAE,IAIA8U,KAAAklB,YAAA,SAAArE,EAAA71B,EAAAE,GAEAA,EAAAk2B,MAAAphB,KAAAwkB,gBAAAzM,MACA7sB,EAAAsB,WAAAuoG,GAAA5yE,iBACSj3B,EAAAk2B,MAAAphB,KAAAwkB,gBAAAxM,MACT9sB,EAAAsB,WAAAuoG,GAAA3yE,iBAIAl3B,EAAAsB,WAAAwT,KAAAwkB,gBAAA,kBAAAt5B,EAAAk2B,KAGAl2B,EAAAgK,KAAA,MACAhK,EAAArB,KAAAg3B,EAAAj2B,SAAAI,GACAgV,KAAAokB,QAAA,OAAAl5B,MAIAoL,UAAA,IAAAkvB,EACA6wE,GAAAlxE,cACAC,KAAA,GACAC,KAAA,KAWAixE,GAAA,WACA,IAAA18E,EAAA5Z,KAEA+X,GACAluB,QACA8K,KAAA,GAEAqjB,GACAnuB,QACA8K,KAAA,GAEA2wB,GACAz7B,QACA8K,KAAA,GAgDA4wB,EAAA,SAAAkxE,EAAAvhG,EAAAuwB,GACA,IAMAC,EACAptB,EAPAqtB,EAAA,IAAA/5B,WAAA6qG,EAAA9hG,MACAmL,GACA5K,QAEAjK,EAAA,EACAD,EAAA,EAKA,GAAAyrG,EAAA5sG,KAAA+C,UAAA6pG,EAAA9hG,KAAA,IAMA,IAFAmL,EAAAvN,QAAAkkG,EAAA5sG,KAAA,GAAAu3B,IAEAn2B,EAAA,EAAmBA,EAAAwrG,EAAA5sG,KAAA+C,OAA2B3B,IAC9CqN,EAAAm+F,EAAA5sG,KAAAoB,GACA06B,EAAAxN,IAAA7f,EAAAzO,KAAAmB,GACAA,GAAAsN,EAAAzO,KAAAK,WAlEA,IAAA+tB,EAAA0J,EACAiE,EADA3N,EAsEA0N,GAtEAhE,EAsEA7hB,GAnEA+lB,aAAA,GAAA5N,EAAA,MAAAA,EAAA,IAEA0J,EAAAmE,uBAAA,MAAA7N,EAAA,IAaA,KATA2N,EAAA3N,EAAA,MAaA0J,EAAAuB,KAAA,GAAAjL,EAAA,aAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACA0J,EAAAuB,KAAA,EAEAvB,EAAAuB,MAAA,EAAAjL,EAAA,SAEA0J,EAAAsB,IAAAtB,EAAAuB,IAEA,GAAA0C,IACAjE,EAAAsB,KAAA,GAAAhL,EAAA,cAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACA0J,EAAAsB,KAAA,EAEAtB,EAAAsB,MAAA,EAAAhL,EAAA,WAOA0J,EAAA93B,KAAAouB,EAAArtB,SAAA,EAAAqtB,EAAA,IAiCAyN,EAAA,UAAAxwB,GAAA4K,EAAA+lB,cAAA4wE,EAAA9hG,MAEA8wB,GAAAC,KACA+wE,EAAA9hG,KAAA,EACA8hG,EAAA5sG,KAAA+C,OAAA,GAKA84B,GACA9L,EAAAwK,QAAA,OAAAtkB,KAIAw2F,GAAAhgG,UAAA6B,KAAA3B,KAAAwJ,MAOAA,KAAArU,KAAA,SAAA9B,KAEA86B,IAAA,aAGAhD,IAAA,WACA,IAAA80E,EAAAjqG,EAEA,OAAA3C,EAAA2C,YACA,KAAAuoG,GAAA5yE,iBACA,KAAA4yE,GAAA5yE,iBACAs0E,EAAA1+E,EACAvrB,EAAA,QACA,MAEA,KAAAuoG,GAAA3yE,iBACAq0E,EAAAz+E,EACAxrB,EAAA,QACA,MAEA,KAAAuoG,GAAA9vE,qBACAwxE,EAAAnxE,EACA94B,EAAA,iBACA,MAEA,QAEA,OAKA3C,EAAA66B,2BACAa,EAAAkxE,EAAAjqG,GAAA,GAKAiqG,EAAA5sG,KAAA8B,KAAA9B,GACA4sG,EAAA9hG,MAAA9K,OAAAK,YAEA02B,IAAA,WACA,IAAA9gB,GACA5K,KAAA,WACAqjB,WAEAiM,EAAA36B,EAAA26B,gBAEA,OAAAA,EAAAzM,OACAjY,EAAAyY,OAAA5sB,MACAo6B,mBACA5zB,oBAAA,GAEAkG,IAAAmsB,EAAAzM,MACAiO,MAAA,MACA9wB,KAAA,UAIA,OAAAsvB,EAAAxM,OACAlY,EAAAyY,OAAA5sB,MACAo6B,mBACA5zB,oBAAA,GAEAkG,IAAAmsB,EAAAxM,MACAgO,MAAA,OACA9wB,KAAA,UAIA0kB,EAAAwK,QAAA,OAAAtkB,MAESjW,EAAAqL,SAaT8K,KAAAqkB,MAAA,WAGAkB,EAAAxN,EAAA,SACAwN,EAAAvN,EAAA,SACAuN,EAAAD,EAAA,kBACAtlB,KAAAokB,QAAA,WAIA9tB,UAAA,IAAAkvB,EACA,IAAAS,IACAC,QAAA,EACAC,mBAhdA,IAidAxC,sBAAAyyE,GACAxyE,qBAAAyyE,GACAxyE,iBAAAyyE,GACAtyE,wBAAAwyE,GACAzyE,cAAA+wE,GAAA/wE,cACAqC,aAAA0uE,GAAA1uE,aACAC,eAAAkwE,IAGA,QAAArhG,MAAA6/F,GACAA,GAAArqF,eAAAxV,MACA+wB,GAAA/wB,IAAA6/F,GAAA7/F,KAIA,IAEAwhG,GAFAC,GAAA1wE,GAIA2wE,IAAA,sEAUAF,GAAA,WACA,IAAA1sG,EAEA0sG,GAAApgG,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAArU,KAAA,SAAAk1B,GACA,IAEAg2E,EACAC,EACAC,EACAC,EACAjlG,EACAklG,EAPAhsG,EAAA,EACAisG,EAAA,EAQA,aAAAr2E,EAAA3rB,KAkBA,IAXAlL,GACAgtG,EAAAhtG,GACAA,EAAA,IAAA4B,WAAAorG,EAAA9sG,WAAA22B,EAAAh3B,KAAAK,aACAiuB,IAAA6+E,GACAhtG,EAAAmuB,IAAA0I,EAAAh3B,KAAAmtG,EAAA9sG,aAEAF,EAAA62B,EAAAh3B,KAKAoB,EAAA,EAAAjB,EAAA4C,QAEA,SAAA5C,EAAAiB,IAAA,UAAAjB,EAAAiB,EAAA,KAkBA,GATA6rG,EAAA,MAAA9sG,EAAAiB,EAAA,IAGA4rG,GAAA,EAAA7sG,EAAAiB,EAAA,QAAAjB,EAAAiB,EAAA,WAAAjB,EAAAiB,EAAA,OAEAgsG,EAAA,KADAllG,EAAA,WAAA/H,EAAAiB,EAAA,MACA2rG,IAAA,GAAA5sG,EAAAiB,EAAA,SACA8rG,EAAA9rG,EAAA4rG,EAGA7sG,EAAAE,WAAA6sG,EACA,OAiBA,GAbA/2F,KAAAokB,QAAA,QACAlB,IAAArC,EAAAqC,IAAAg0E,EAAAD,EACAh0E,IAAApC,EAAAoC,IAAAi0E,EAAAD,EACAllG,cACAsmB,gBAAA,GAAAruB,EAAAiB,EAAA,UACA+D,cAAA,EAAAhF,EAAAiB,EAAA,YAAAjB,EAAAiB,EAAA,QACAiE,WAAA0nG,IAAA,GAAA5sG,EAAAiB,EAAA,SACAqtB,wBAAA,GAAAtuB,EAAAiB,EAAA,QAEAgE,WAAA,GACApF,KAAAG,EAAAY,SAAAK,EAAA,EAAA6rG,EAAAC,KAGA/sG,EAAAE,aAAA6sG,EAEA,YADA/sG,OAAAiS,GAIAi7F,IAEAltG,IAAAY,SAAAmsG,QAxCA9rG,KA4CA+U,KAAAqkB,MAAA,WACArkB,KAAAokB,QAAA,WAIA9tB,UAAA,IAAAkvB,EACA,IAoJA2xE,GAAAC,GAEAC,GAtJAhyE,GAAAqxE,GAkJAY,GA3IA,SAAAv4E,GACA,IACAC,EAAAD,EAAA70B,WAEA+0B,EAAA,EAGAC,EAAA,EAGAlf,KAAApT,OAAA,WACA,SAAAoyB,GAIAhf,KAAAmf,cAAA,WACA,SAAAH,EAAAE,GAIAlf,KAAAof,SAAA,WACA,IAAApT,EAAA+S,EAAA70B,WAAA80B,EACAK,EAAA,IAAAzzB,WAAA,GACA0zB,EAAAltB,KAAAwG,IAAA,EAAAomB,GAEA,OAAAM,EACA,UAAA5P,MAAA,sBAGA2P,EAAAlH,IAAA4G,EAAAn0B,SAAAohB,IAAAsT,IACAL,EAAA,IAAAl1B,SAAAs1B,EAAAr1B,QAAA+B,UAAA,GAEAmzB,EAAA,EAAAI,EACAN,GAAAM,GAIAtf,KAAAuf,SAAA,SAAAC,GACA,IAAAC,EAEAP,EAAAM,GACAP,IAAAO,EACAN,GAAAM,IAEAA,GAAAN,EAEAM,GAAA,GADAC,EAAArtB,KAAA+mB,MAAAqG,EAAA,IAEAR,GAAAS,EACAzf,KAAAof,WACAH,IAAAO,EACAN,GAAAM,IAKAxf,KAAA0f,SAAA,SAAA/qB,GACA,IAAAgrB,EAAAvtB,KAAAwG,IAAAsmB,EAAAvqB,GAEAirB,EAAAX,IAAA,GAAAU,EAaA,OAVAT,GAAAS,GAEA,EACAV,IAAAU,EACSX,EAAA,GACThf,KAAAof,YAGAO,EAAAhrB,EAAAgrB,GAEA,EACAC,GAAAD,EAAA3f,KAAA0f,SAAAC,GAGAC,GAIA5f,KAAA6f,iBAAA,WACA,IAAAC,EAEA,IAAAA,EAAA,EAAkCA,EAAAZ,IAAyCY,EAC3E,OAAAb,EAAA,aAAAa,GAIA,OAFAb,IAAAa,EACAZ,GAAAY,EACAA,EAMA,OADA9f,KAAAof,WACAU,EAAA9f,KAAA6f,oBAIA7f,KAAA+f,sBAAA,WACA/f,KAAAuf,SAAA,EAAAvf,KAAA6f,qBAIA7f,KAAAggB,cAAA,WACAhgB,KAAAuf,SAAA,EAAAvf,KAAA6f,qBAIA7f,KAAAigB,sBAAA,WACA,IAAAC,EAAAlgB,KAAA6f,mBAEA,OAAA7f,KAAA0f,SAAAQ,EAAA,MAIAlgB,KAAAmgB,cAAA,WACA,IAAAP,EAAA5f,KAAAigB,wBAEA,SAAAL,EAEA,EAAAA,IAAA,GAGA,GAAAA,IAAA,IAKA5f,KAAAogB,YAAA,WACA,WAAApgB,KAAA0f,SAAA,IAIA1f,KAAAqgB,iBAAA,WACA,OAAArgB,KAAA0f,SAAA,IAGA1f,KAAAof,aAYAg4E,GAAA,WACA,IACAnsG,EACAjB,EAFAutG,EAAA,EAIAH,GAAA9gG,UAAA6B,KAAA3B,KAAAwJ,MAUAA,KAAArU,KAAA,SAAA9B,GACA,IAAA2tG,EAoBA,IAlBAxtG,IAGAwtG,EAAA,IAAA5rG,WAAA5B,EAAAE,WAAAL,OAAAK,aACAiuB,IAAAnuB,GACAwtG,EAAAr/E,IAAAtuB,OAAAG,EAAAE,YACAF,EAAAwtG,GALAxtG,EAAAH,OAiBc0tG,EAAAvtG,EAAAE,WAAA,EAAmCqtG,IACjD,OAAAvtG,EAAAutG,EAAA,IAEAtsG,EAAAssG,EAAA,EACA,MAIA,KAAAtsG,EAAAjB,EAAAE,YAGA,OAAAF,EAAAiB,IACA,OAEA,OAAAjB,EAAAiB,EAAA,IACAA,GAAA,EACA,MACe,OAAAjB,EAAAiB,EAAA,IACfA,IACA,MAIAssG,EAAA,IAAAtsG,EAAA,GACA+U,KAAAokB,QAAA,OAAAp6B,EAAAY,SAAA2sG,EAAA,EAAAtsG,EAAA,IAIA,GACAA,UACe,IAAAjB,EAAAiB,MAAAjB,EAAA4C,QAEf2qG,EAAAtsG,EAAA,EACAA,GAAA,EACA,MAEA,OAEA,OAAAjB,EAAAiB,EAAA,QAAAjB,EAAAiB,EAAA,IACAA,GAAA,EACA,MAIA+U,KAAAokB,QAAA,OAAAp6B,EAAAY,SAAA2sG,EAAA,EAAAtsG,EAAA,IACAssG,EAAAtsG,EAAA,EACAA,GAAA,EACA,MAEA,QAGAA,GAAA,EAMAjB,IAAAY,SAAA2sG,GACAtsG,GAAAssG,EACAA,EAAA,GAGAv3F,KAAAqkB,MAAA,WAEAr6B,KAAAE,WAAA,GACA8V,KAAAokB,QAAA,OAAAp6B,EAAAY,SAAA2sG,EAAA,IAIAvtG,EAAA,KACAutG,EAAA,EACAv3F,KAAAokB,QAAA,WAIA9tB,UAAA,IAAAkvB,EAIA6xE,IACAI,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,IAOAjB,GAAA,WACA,IACAv9E,EACArnB,EACA8lG,EACAC,EACAC,EACAC,EACAC,EAPAC,EAAA,IAAAtB,GASAD,GAAA7gG,UAAA6B,KAAA3B,KAAAwJ,MAEA4Z,EAAA5Z,KAaAA,KAAArU,KAAA,SAAAk1B,GACA,UAAAA,EAAA3rB,OAIA3C,EAAAsuB,EAAAtuB,QACA8lG,EAAAx3E,EAAAqC,IACAo1E,EAAAz3E,EAAAoC,IACAy1E,EAAA/sG,KAAAk1B,KAYA63E,EAAAz3F,GAAA,gBAAApX,GACA,IAAAiW,GACAvN,UACA2wB,IAAAm1E,EACAp1E,IAAAq1E,EACAzuG,QAGA,UAAAA,EAAA,IACA,OACAiW,EAAAsnF,YAAA,4CACA,MAEA,OACAtnF,EAAAsnF,YAAA,WACAtnF,EAAAgrF,YAAAyN,EAAA1uG,EAAAe,SAAA,IACA,MAEA,OACAkV,EAAAsnF,YAAA,yBACAtnF,EAAAgrF,YAAAyN,EAAA1uG,EAAAe,SAAA,IACAkV,EAAAnV,OAAA6tG,EAAA14F,EAAAgrF,aACA,MAEA,OACAhrF,EAAAsnF,YAAA,yBACA,MAEA,OACAtnF,EAAAsnF,YAAA,6BAQAxtE,EAAAwK,QAAA,OAAAtkB,KAEA44F,EAAAz3F,GAAA,kBACA2Y,EAAAwK,QAAA,UAGApkB,KAAAqkB,MAAA,WACAq0E,EAAAr0E,SAaAo0E,EAAA,SAAAj5E,EAAAm5E,GACA,IAEA/xF,EAFAgyF,EAAA,EACAC,EAAA,EAIA,IAAAjyF,EAAA,EAAmBA,EAAA4Y,EAAW5Y,IAC9B,IAAAiyF,IAEAA,GAAAD,EADAD,EAAAx4E,gBACA,UAGAy4E,EAAA,IAAAC,EAAAD,EAAAC,GAaAN,EAAA,SAAA1uG,GAOA,IANA,IAGAygG,EACAC,EAJA39F,EAAA/C,EAAAK,WACAsgG,KACAv/F,EAAA,EAIAA,EAAA2B,EAAA,GACA,IAAA/C,EAAAoB,IAAA,IAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,IACAu/F,EAAA7+F,KAAAV,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAAu/F,EAAA59F,OACA,OAAA/C,EAIAygG,EAAA19F,EAAA49F,EAAA59F,OACA29F,EAAA,IAAA3+F,WAAA0+F,GACA,IAAAG,EAAA,EAEA,IAAAx/F,EAAA,EAAmBA,EAAAq/F,EAAeG,IAAAx/F,IAClCw/F,IAAAD,EAAA,KAEAC,IAEAD,EAAArtF,SAGAotF,EAAAt/F,GAAApB,EAAA4gG,GAGA,OAAAF,GAaAiO,EAAA,SAAA3uG,GACA,IAKA8uG,EACAhgF,EACAC,EACAvtB,EACAytG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEApuG,EAlBAquG,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAyBA,GATA/gF,GADAggF,EAAA,IAAArB,GAAAztG,IACAw2B,mBAEAh1B,EAAAstG,EAAAt4E,mBAEAzH,EAAA+/E,EAAAt4E,mBAEAs4E,EAAA54E,wBAGAs3E,GAAA1+E,KAGA,KAFAmgF,EAAAH,EAAA14E,0BAGA04E,EAAAp5E,SAAA,GAGAo5E,EAAA54E,wBAEA44E,EAAA54E,wBAEA44E,EAAAp5E,SAAA,GAEAo5E,EAAAv4E,eAIA,IAFAg5E,EAAA,IAAAN,EAAA,KAEA7tG,EAAA,EAAuBA,EAAAmuG,EAAsBnuG,IAC7C0tG,EAAAv4E,eAGAq4E,EADAxtG,EAAA,EACA,GAEA,GAFA0tG,GAaA,GAJAA,EAAA54E,wBAIA,KAFAg5E,EAAAJ,EAAA14E,yBAGA04E,EAAA14E,6BACS,OAAA84E,EAST,IARAJ,EAAAp5E,SAAA,GAEAo5E,EAAA34E,gBAEA24E,EAAA34E,gBAEAg5E,EAAAL,EAAA14E,wBAEAh1B,EAAA,EAAqBA,EAAA+tG,EAAoC/tG,IACzD0tG,EAAA34E,gBA0BA,GAtBA24E,EAAA54E,wBAEA44E,EAAAp5E,SAAA,GAEA05E,EAAAN,EAAA14E,wBACAi5E,EAAAP,EAAA14E,wBAGA,KAFAk5E,EAAAR,EAAAj5E,SAAA,KAGAi5E,EAAAp5E,SAAA,GAGAo5E,EAAAp5E,SAAA,GAEAo5E,EAAAv4E,gBAEAk5E,EAAAX,EAAA14E,wBACAs5E,EAAAZ,EAAA14E,wBACAu5E,EAAAb,EAAA14E,wBACAw5E,EAAAd,EAAA14E,yBAGA04E,EAAAv4E,eAEAu4E,EAAAv4E,cAAA,CAIA,OAFAu4E,EAAAt4E,oBAGA,OACAg5E,GAAA,KACA,MAEA,OACAA,GAAA,OACA,MAEA,OACAA,GAAA,OACA,MAEA,OACAA,GAAA,OACA,MAEA,OACAA,GAAA,OACA,MAEA,OACAA,GAAA,OACA,MAEA,OACAA,GAAA,OACA,MAEA,OACAA,GAAA,OACA,MAEA,OACAA,GAAA,OACA,MAEA,QACAA,GAAA,OACA,MAEA,QACAA,GAAA,OACA,MAEA,QACAA,GAAA,OACA,MAEA,QACAA,GAAA,QACA,MAEA,QACAA,GAAA,KACA,MAEA,QACAA,GAAA,KACA,MAEA,QACAA,GAAA,KACA,MAEA,SAEAA,GAAAV,EAAAt4E,oBAAA,EAAAs4E,EAAAt4E,mBAAAs4E,EAAAt4E,oBAAA,EAAAs4E,EAAAt4E,oBAKAg5E,IACAK,EAAAL,EAAA,GAAAA,EAAA,IAKA,OACA1gF,aACAC,WACAvtB,uBACAhB,MAAA+H,KAAAg3F,MAAA,IAAA6P,EAAA,KAAAK,EAAA,EAAAC,GAAAG,GACApvG,QAAA,EAAA6uG,IAAAD,EAAA,QAAAM,EAAA,EAAAC,MAKAnjG,UAAA,IAAAkvB,EACA,IAyJAm0E,GAzJAv0E,IACAw0E,WAAAzC,GACA0C,cAAAzC,IA8IA9wE,GAjIA,SAAAz8B,GACA,OAAAA,EAAA,SAAA0S,WAAA,IAAA1S,EAAA,SAAA0S,WAAA,IAAA1S,EAAA,SAAA0S,WAAA,IAgIA+pB,GAlGA,SAAAwzE,EAAAn3E,GACA,IAAAo3E,EAAAD,EAAAn3E,EAAA,OAAAm3E,EAAAn3E,EAAA,OAAAm3E,EAAAn3E,EAAA,MAAAm3E,EAAAn3E,EAAA,GAIA,OAFA,GADAm3E,EAAAn3E,EAAA,KACA,EAGAo3E,EAAA,GAGAA,EAAA,IAyFAzzE,GAtFA,SAAAwzE,EAAAn3E,GACA,IAAAq3E,GAAA,IAAAF,EAAAn3E,EAAA,OACAs3E,EAAAH,EAAAn3E,EAAA,MAEA,OADA,KAAAm3E,EAAAn3E,EAAA,GACAs3E,EAAAD,IAiGAL,GAAA,WACA,IAAAx1E,EAAA,IAAAv4B,WACAuqG,EAAA,EAEAwD,GAAArjG,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAAk6F,aAAA,SAAAz3E,GACA0zE,EAAA1zE,GAGAziB,KAAArU,KAAA,SAAA0K,GACA,IAEA8jG,EACA/rE,EACAvN,EACAu5E,EALA13E,EAAA,EACAC,EAAA,EAgBA,IATAwB,EAAAv3B,QACAwtG,EAAAj2E,EAAAv3B,QACAu3B,EAAA,IAAAv4B,WAAAyK,EAAAnM,WAAAkwG,IACAjiF,IAAAgM,EAAAv5B,SAAA,EAAAwvG,IACAj2E,EAAAhM,IAAA9hB,EAAA+jG,IAEAj2E,EAAA9tB,EAGA8tB,EAAAv3B,OAAA+1B,GAAA,GACA,GAAAwB,EAAAxB,KAAA,IAAApmB,WAAA,IAAA4nB,EAAAxB,EAAA,SAAApmB,WAAA,IAAA4nB,EAAAxB,EAAA,SAAApmB,WAAA,GAuBW,aAAA4nB,EAAAxB,KAAA,UAAAwB,EAAAxB,EAAA,IAyBXA,QAzBW,CAGX,GAAAwB,EAAAv3B,OAAA+1B,EAAA,EACA,MAMA,GAAAA,GAHAD,EAAA4D,GAAAnC,EAAAxB,IAGAwB,EAAAv3B,OACA,MAGAi0B,GACA3rB,KAAA,QACArL,KAAAs6B,EAAAv5B,SAAA+3B,IAAAD,GACAQ,IAAAizE,EACAlzE,IAAAkzE,GAEAn2F,KAAAokB,QAAA,OAAAvD,GACA8B,GAAAD,MA5CA,CAGA,GAAAyB,EAAAv3B,OAAA+1B,EAAA,GACA,MAQA,GAAAA,GAJAD,EAAA4D,GAAAnC,EAAAxB,IAIAwB,EAAAv3B,OACA,MAGAwhC,GACAl5B,KAAA,iBACArL,KAAAs6B,EAAAv5B,SAAA+3B,IAAAD,IAEA1iB,KAAAokB,QAAA,OAAAgK,GACAzL,GAAAD,EA8BAy3E,EAAAh2E,EAAAv3B,OAAA+1B,EAGAwB,EADAg2E,EAAA,EACAh2E,EAAAv5B,SAAA+3B,GAEA,IAAA/2B,cAKA0K,UAAA,IAAAkvB,EACA,IAOA60E,GAAAC,GAAAC,GAAAC,GAPA95E,GAAAi5E,GACAC,GAAAx0E,GAAAw0E,WACAa,GAAAn0E,GAEAo0E,IAAA,qFACAC,IAAA,iEAQAC,GAAA,SAAAnhG,EAAAC,GACA,IAAAzO,EAEA,GAAAwO,EAAA7M,SAAA8M,EAAA9M,OACA,SAIA,IAAA3B,EAAA,EAAiBA,EAAAwO,EAAA7M,OAAc3B,IAC/B,GAAAwO,EAAAxO,KAAAyO,EAAAzO,GACA,SAIA,UAGA4vG,GAAA,SAAA1oG,EAAA2oG,EAAA9G,EAAA+G,EAAA9G,EAAA+G,GAQA,OACAztE,OACAtK,IAAA9wB,EACA+wB,IAAA/wB,GAVA6hG,EAAA8G,IAYA3lG,KACA8tB,IAAA9wB,GAZA4oG,EAAAD,GAaA53E,IAAA/wB,GAZA8hG,EAAAD,IAcAgH,2BACA7oG,yBAcAmoG,GAAA,SAAAliF,EAAApa,GACA,IAAAsrF,KACAz6F,EAAA,EACA06F,EAAA,EACAX,EAAA,EACAC,EAAAlwF,IACAqF,QAEAs8F,GAAAhkG,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAArU,KAAA,SAAA9B,GACA+/F,GAAAxxE,EAAAvuB,GAEAuuB,GACAsiF,GAAA3hG,QAAA,SAAAm9B,GACA9d,EAAA8d,GAAArsC,EAAAqsC,KAKAozD,EAAA39F,KAAA9B,IAGAmW,KAAAi7F,eAAA,SAAAC,GACA3R,EAAA2R,EAAA9iF,EAAA2N,kBAAA5zB,qBAGA6N,KAAAm7F,4BAAA,SAAAhpG,GACA02F,EAAA12F,GAGA6N,KAAAo7F,oBAAA,SAAA34E,GACAmmE,EAAAnmE,GAGAziB,KAAAqkB,MAAA,WACA,IAAAq/D,EAAAt0F,EAAApB,EAAAX,EAEA,IAAAi8F,EAAA18F,QAKA82F,EAAAiF,GAAAW,EAAAlxE,EAAAmxE,GACAnxE,EAAAjmB,oBAAAy3F,GAAAxxE,EAAApa,EAAA+rF,wBACApB,GAAAvwE,EAAAsrE,EAAAkF,EAAAC,GAGAzwE,EAAApoB,QAAA24F,GAAAjF,GAEA11F,EAAAu4F,EAAAv4F,KAAA26F,GAAAjF,IACA4F,KACAl6F,EAAAm3F,EAAAn3F,KAAAP,GAAAupB,IACA/qB,EAAA,IAAAzB,WAAAwD,EAAAlF,WAAA8D,EAAA9D,YAEA2E,IACAxB,EAAA8qB,IAAA/oB,GACA/B,EAAA8qB,IAAAnqB,EAAAoB,EAAAlF,YACA0/F,GAAAxxE,GACApY,KAAAokB,QAAA,QACAhM,QACA/qB,UAEA2S,KAAAokB,QAAA,8BAxBApkB,KAAAokB,QAAA,gCA4BA9tB,UAAA,IAAAkvB,GAaA60E,GAAA,SAAAjiF,EAAApa,GACA,IAGArT,EACAc,EAJAoD,EAAA,EACAq4F,KACAmU,KAGAr9F,QAEAq8F,GAAA/jG,UAAA6B,KAAA3B,KAAAwJ,aAEAoY,EAAAkjF,OACAt7F,KAAAu7F,aAUAv7F,KAAArU,KAAA,SAAA6vG,GACA5R,GAAAxxE,EAAAojF,GAEA,2BAAAA,EAAApU,aAAAz8F,IACAA,EAAA6wG,EAAA7wG,OACAytB,EAAA5sB,KAAAgwG,EAAA3xG,MACA8wG,GAAA5hG,QAAA,SAAAm9B,GACA9d,EAAA8d,GAAAvrC,EAAAurC,IACWl2B,OAGX,2BAAAw7F,EAAApU,aAAA37F,IACAA,EAAA+vG,EAAA3xG,KACAuuB,EAAA3sB,KAAA+vG,EAAA3xG,OAIAq9F,EAAAv7F,KAAA6vG,IAQAx7F,KAAAqkB,MAAA,WAYA,IAXA,IAAAq/D,EACA+X,EACAnU,EACAl4F,EACApB,EACAX,EAEAquG,EACAC,EAFAX,EAAA,EAKA9T,EAAAt6F,QACA,+BAAAs6F,EAAA,GAAAE,aAIAF,EAAA/pF,QAIA,OAAA+pF,EAAAt6F,OAGA,OAFAoT,KAAA47F,oBACA57F,KAAAokB,QAAA,6BAkDA,GA3CAs/D,EAAAuD,GAAAC,IACAI,EAAAL,GAAAvD,IAmBA,MAAAsD,YAEAyU,EAAAz7F,KAAA67F,iBAAA3U,EAAA,GAAA9uE,KAKA4iF,EAAAS,EAAA/sG,SACA44F,EAAA/oF,QAAAk9F,GAGAnU,EAAAp9F,YAAAuxG,EAAAvxG,WACAo9F,EAAAC,UAAAkU,EAAAlU,SACAD,EAAApkE,IAAAu4E,EAAAv4E,IACAokE,EAAArkE,IAAAw4E,EAAAx4E,IACAqkE,EAAA54F,UAAA+sG,EAAA/sG,UAGA44F,EAAAL,GAAAK,IAKA+T,EAAAzuG,OAAA,CACA,IAAAkvG,EAQA,KALAA,EADA99F,EAAA+9F,eACA/7F,KAAAg8F,gBAAA1U,GAEAtnF,KAAAi8F,kBAAA3U,IAiBA,OAZAtnF,KAAAu7F,UAAAh9F,SACA29F,IAAA5U,EAAApjF,MACAzY,IAAA2sB,EAAA3sB,IACAD,IAAA4sB,EAAA5sB,MAGAwU,KAAAu7F,UAAA3uG,OAAAwF,KAAAwG,IAAA,EAAAoH,KAAAu7F,UAAA3uG,QAEAs6F,KAEAlnF,KAAA47F,oBACA57F,KAAAokB,QAAA,6BAMAwlE,GAAAxxE,GACAkvE,EAAAwU,EAGAlS,GAAAxxE,EAAAkvE,GAGAlvE,EAAApoB,QAAAi3F,GAAAK,GAEAt5F,EAAAu4F,EAAAv4F,KAAAi5F,GAAAK,IACAlvE,EAAAjmB,oBAAAy3F,GAAAxxE,EAAApa,EAAA+rF,wBACA/pF,KAAAokB,QAAA,oBAAAkjE,EAAAzxF,IAAA,SAAAqmG,GACA,OACAh5E,IAAAg5E,EAAAh5E,IACAD,IAAAi5E,EAAAj5E,IACA/4B,WAAAgyG,EAAAhyG,eAGAwxG,EAAApU,EAAA,GACAqU,EAAArU,IAAA16F,OAAA,GACAoT,KAAAokB,QAAA,oBAAAy2E,GAAAziF,EAAAjmB,oBAAAupG,EAAAz4E,IAAAy4E,EAAAx4E,IAAAy4E,EAAA14E,IAAA04E,EAAAjtG,SAAAitG,EAAAz4E,IAAAy4E,EAAAjtG,SAAAssG,IAEAh7F,KAAAu7F,UAAAh9F,SACA29F,IAAA5U,EAAApjF,MACAzY,IAAA2sB,EAAA3sB,IACAD,IAAA4sB,EAAA5sB,MAGAwU,KAAAu7F,UAAA3uG,OAAAwF,KAAAwG,IAAA,EAAAoH,KAAAu7F,UAAA3uG,QAEAs6F,KACAlnF,KAAAokB,QAAA,sBAAAhM,EAAAjmB,qBACA6N,KAAAokB,QAAA,oBAAAhM,EAAA2N,mBACA32B,EAAAm3F,EAAAn3F,KAAAP,GAAAupB,IAGA/qB,EAAA,IAAAzB,WAAAwD,EAAAlF,WAAA8D,EAAA9D,YAEA2E,IACAxB,EAAA8qB,IAAA/oB,GACA/B,EAAA8qB,IAAAnqB,EAAAoB,EAAAlF,YACA8V,KAAAokB,QAAA,QACAhM,QACA/qB,UAEA2S,KAAA47F,eAEA57F,KAAAokB,QAAA,8BAGApkB,KAAA47F,aAAA,WACAhS,GAAAxxE,GAGAztB,OAAAsR,EACAxQ,OAAAwQ,GAKA+D,KAAA67F,iBAAA,SAAAL,GACA,IAKAW,EACAC,EACA/U,EACAgV,EACApxG,EALAqxG,EAAA3jG,IAOA,IAAA1N,EAAA,EAAmBA,EAAA+U,KAAAu7F,UAAA3uG,OAA2B3B,IAE9Co8F,GADAgV,EAAAr8F,KAAAu7F,UAAAtwG,IACAixG,IAEA9jF,EAAA3sB,KAAAmvG,GAAAxiF,EAAA3sB,IAAA,GAAA4wG,EAAA5wG,IAAA,KAAA2sB,EAAA5sB,KAAAovG,GAAAxiF,EAAA5sB,IAAA,GAAA6wG,EAAA7wG,IAAA,MAKA67F,EAAApkE,IAAA7K,EAAA2N,kBAAA9C,MAKAk5E,EAAAX,EAAAv4E,IAAAokE,EAAApkE,IAAAokE,EAAA34F,YAvBA,KA0BAytG,GA5BA,QA+BAC,GAAAE,EAAAH,KACAC,EAAAC,EACAC,EAAAH,IAKA,OAAAC,EACAA,EAAAF,IAGA,MAKAl8F,KAAAi8F,kBAAA,SAAA3U,GACA,IAAAiV,EAAAC,EAAAC,EAAAP,EAAAhyG,EAAAq9F,EAAA74F,EAAAotG,EAMA,IALA5xG,EAAAo9F,EAAAp9F,WACAq9F,EAAAD,EAAAC,SACA74F,EAAA44F,EAAA54F,SACA6tG,EAAAC,EAAA,EAEAD,EAAAlB,EAAAzuG,QAAA4vG,EAAAlV,EAAA16F,SACA6vG,EAAApB,EAAAkB,GACAL,EAAA5U,EAAAkV,GAEAC,EAAAv5E,MAAAg5E,EAAAh5E,MAIAg5E,EAAAh5E,IAAAu5E,EAAAv5E,IAGAq5E,KAMAC,IACAtyG,GAAAgyG,EAAAhyG,WACAq9F,GAAA2U,EAAA3U,SACA74F,GAAAwtG,EAAAxtG,UAGA,WAAA8tG,EAEAlV,EAGAkV,IAAAlV,EAAA16F,OAEA,OAGAkvG,EAAAxU,EAAA/wF,MAAAimG,IACAtyG,aACA4xG,EAAAptG,WACAotG,EAAAvU,WACAuU,EAAA54E,IAAA44E,EAAA,GAAA54E,IACA44E,EAAA74E,IAAA64E,EAAA,GAAA74E,IACA64E,IAKA97F,KAAAg8F,gBAAA,SAAA1U,GACA,IAAAiV,EAAAC,EAAAC,EAAAP,EAAAQ,EAAAC,EAkCAC,EA5BA,IALAL,EAAAlB,EAAAzuG,OAAA,EACA4vG,EAAAlV,EAAA16F,OAAA,EACA8vG,EAAA,KACAC,GAAA,EAEAJ,GAAA,GAAAC,GAAA,IAIA,GAHAC,EAAApB,EAAAkB,GACAL,EAAA5U,EAAAkV,GAEAC,EAAAv5E,MAAAg5E,EAAAh5E,IAAA,CACAy5E,GAAA,EACA,MAGAF,EAAAv5E,IAAAg5E,EAAAh5E,IACAq5E,KAIAA,IAAAlB,EAAAzuG,OAAA,IAIA8vG,EAAAF,GAGAA,KAGA,IAAAG,GAAA,OAAAD,EACA,YAWA,QALAE,EADAD,EACAH,EAEAE,GAIA,OAAApV,EAGA,IAAAwU,EAAAxU,EAAA/wF,MAAAqmG,GACAhoD,EAAAknD,EAAA1jG,OAAA,SAAAykG,EAAAX,GAIA,OAHAW,EAAA3yG,YAAAgyG,EAAAhyG,WACA2yG,EAAAnuG,UAAAwtG,EAAAxtG,SACAmuG,EAAAtV,UAAA2U,EAAA3U,SACAsV,IAEA3yG,WAAA,EACAwE,SAAA,EACA64F,SAAA,IAOA,OALAuU,EAAA5xG,WAAA0qD,EAAA1qD,WACA4xG,EAAAptG,SAAAkmD,EAAAlmD,SACAotG,EAAAvU,SAAA3yC,EAAA2yC,SACAuU,EAAA54E,IAAA44E,EAAA,GAAA54E,IACA44E,EAAA74E,IAAA64E,EAAA,GAAA74E,IACA64E,GAGA97F,KAAA88F,cAAA,SAAAC,GACA1B,EAAA0B,KAIAzmG,UAAA,IAAAkvB,GAUAg1E,GAAA,SAAAx8F,EAAAu4F,GAIAv2F,KAAAg9F,eAAA,EACAh9F,KAAAu2F,sBAGA,KAFAv4F,SAEAi/F,MACAj9F,KAAAk9F,cAAAl/F,EAAAi/F,MAEAj9F,KAAAk9F,aAAA,EAGA,kBAAAl/F,EAAA+rF,yBACA/pF,KAAA+pF,uBAAA/rF,EAAA+rF,wBAGA/pF,KAAAm9F,iBACAn9F,KAAAo9F,WAAA,KACAp9F,KAAAq9F,gBACAr9F,KAAAs9F,mBACAt9F,KAAAu9F,mBACAv9F,KAAAw9F,aAAA,EACAx9F,KAAAy9F,cAAA,EAEAjD,GAAAlkG,UAAA6B,KAAA3B,KAAAwJ,MAGAA,KAAArU,KAAA,SAAA+xG,GAGA,OAAAA,EAAAh0E,KACA1pB,KAAAs9F,gBAAA3xG,KAAA+xG,GAIAA,EAAAha,OACA1jF,KAAAu9F,gBAAA5xG,KAAA+xG,IAMA19F,KAAAm9F,cAAAxxG,KAAA+xG,EAAAtlF,OACApY,KAAAq9F,aAAA1xG,KAAA+xG,EAAArwG,OACA2S,KAAAw9F,cAAAE,EAAArwG,MAAAnD,WAEA,UAAAwzG,EAAAtlF,MAAAljB,OACA8K,KAAAo9F,WAAAM,EAAAtlF,YAGA,UAAAslF,EAAAtlF,MAAAljB,OACA8K,KAAA29F,WAAAD,EAAAtlF,YAKA9hB,UAAA,IAAAkvB,EAEAg1E,GAAAlkG,UAAA+tB,MAAA,SAAAoiE,GACA,IAOArD,EACAwa,EACArkF,EAEAtuB,EAXAD,EAAA,EACA8U,GACAm0C,YACA4pD,kBACAjpD,YACAtxB,SAKAw6E,EAAA,EAGA,GAAA99F,KAAAm9F,cAAAvwG,OAAAoT,KAAAg9F,eAAA,CACA,0BAAAvW,GAAA,uBAAAA,EAIA,OACS,GAAAzmF,KAAAk9F,YAGT,OACS,OAAAl9F,KAAAm9F,cAAAvwG,OAcT,OAPAoT,KAAAy9F,qBAEAz9F,KAAAy9F,eAAAz9F,KAAAg9F,iBACAh9F,KAAAokB,QAAA,QACApkB,KAAAy9F,cAAA,IAmCA,IA5BAz9F,KAAAo9F,YACAU,EAAA99F,KAAAo9F,WAAAr3E,kBAAA7C,IACAy3E,GAAA5hG,QAAA,SAAAm9B,GACAp2B,EAAAwjB,KAAA4S,GAAAl2B,KAAAo9F,WAAAlnE,IACSl2B,OACFA,KAAA29F,aACPG,EAAA99F,KAAA29F,WAAA53E,kBAAA7C,IACAw3E,GAAA3hG,QAAA,SAAAm9B,GACAp2B,EAAAwjB,KAAA4S,GAAAl2B,KAAA29F,WAAAznE,IACSl2B,OAGT,IAAAA,KAAAm9F,cAAAvwG,OACAkT,EAAA5K,KAAA8K,KAAAm9F,cAAA,GAAAjoG,KAEA4K,EAAA5K,KAAA,WAGA8K,KAAAy9F,eAAAz9F,KAAAm9F,cAAAvwG,OACA2sB,EAAAgtE,EAAAhtE,YAAAvZ,KAAAm9F,eAEAr9F,EAAAyZ,YAAA,IAAA3tB,WAAA2tB,EAAArvB,YAGA4V,EAAAyZ,YAAApB,IAAAoB,GAEAzZ,EAAAjW,KAAA,IAAA+B,WAAAoU,KAAAw9F,cAEAvyG,EAAA,EAAiBA,EAAA+U,KAAAq9F,aAAAzwG,OAA8B3B,IAC/C6U,EAAAjW,KAAAsuB,IAAAnY,KAAAq9F,aAAApyG,GAAAD,GACAA,GAAAgV,KAAAq9F,aAAApyG,GAAAf,WAKA,IAAAe,EAAA,EAAiBA,EAAA+U,KAAAs9F,gBAAA1wG,OAAiC3B,KAClDm4F,EAAApjF,KAAAs9F,gBAAAryG,IACA2M,UAAAwrF,EAAA4Q,SAEAh0F,KAAA+pF,yBACA3G,EAAAxrF,WAAAkmG,GAGA1a,EAAAxrF,WAAA,IACAwrF,EAAAv2C,QAAAu2C,EAAA6Q,OAEAj0F,KAAA+pF,yBACA3G,EAAAv2C,SAAAixD,GAGA1a,EAAAv2C,SAAA,IACA/sC,EAAA+9F,eAAAza,EAAA59D,SAAA,EACA1lB,EAAAm0C,SAAAtoD,KAAAy3F,GAKA,IAAAn4F,EAAA,EAAiBA,EAAA+U,KAAAu9F,gBAAA3wG,OAAiC3B,KAClD2yG,EAAA59F,KAAAu9F,gBAAAtyG,IACAw4F,QAAAma,EAAA16E,IAEAljB,KAAA+pF,yBACA6T,EAAAna,SAAAqa,GAGAF,EAAAna,SAAA,IACA3jF,EAAA80C,SAAAjpD,KAAAiyG,GAKA99F,EAAA80C,SAAAqhD,aAAAj2F,KAAAu2F,eAAAN,aAEAj2F,KAAAm9F,cAAAvwG,OAAA,EACAoT,KAAAo9F,WAAA,KACAp9F,KAAAq9F,aAAAzwG,OAAA,EACAoT,KAAAs9F,gBAAA1wG,OAAA,EACAoT,KAAAw9F,aAAA,EACAx9F,KAAAu9F,gBAAA3wG,OAAA,EAEAoT,KAAAokB,QAAA,OAAAtkB,GAEAE,KAAAy9F,eAAAz9F,KAAAg9F,iBACAh9F,KAAAokB,QAAA,QACApkB,KAAAy9F,cAAA,KAWAlD,GAAA,SAAAv8F,GACA,IAEAo/F,EACAO,EAHA/jF,EAAA5Z,KACA+9F,GAAA,EAIAxD,GAAAjkG,UAAA6B,KAAA3B,KAAAwJ,MAEAhC,QACAgC,KAAA7N,oBAAA6L,EAAA7L,qBAAA,EACA6N,KAAAg+F,qBAEAh+F,KAAAi+F,iBAAA,WACA,IAAAC,KACAl+F,KAAAg+F,kBAAAE,EACAA,EAAAhpG,KAAA,MACAgpG,EAAA3H,eAAA,IAAAI,GAAAtwE,eAEA63E,EAAAC,UAAA,IAAAz9E,GACAw9E,EAAAE,6BAAA,IAAAzH,GAAA3yE,wBAAA,SACAk6E,EAAAG,qCAAA,IAAA1H,GAAA3yE,wBAAA,kBACAk6E,EAAAI,WAAA,IAAAj5E,GACA64E,EAAAK,eAAA,IAAA/D,GAAAx8F,EAAAkgG,EAAA3H,gBACA2H,EAAAM,eAAAN,EAAAC,UACAD,EAAAC,UAAA92E,KAAA62E,EAAAE,8BAAA/2E,KAAA62E,EAAAI,YACAJ,EAAAC,UAAA92E,KAAA62E,EAAAG,sCAAAh3E,KAAA62E,EAAA3H,gBAAAlvE,KAAA62E,EAAAK,gBACAL,EAAA3H,eAAAt1F,GAAA,qBAAAygB,GACAw8E,EAAAC,UAAAjE,aAAAx4E,EAAAy0E,aAEA+H,EAAAC,UAAAl9F,GAAA,gBAAApX,GACA,mBAAAA,EAAAqL,MAAAgpG,EAAAO,qBACAd,MACA53E,mBACA5zB,oBAAAynB,EAAAznB,qBAEA6zB,MAAA,OACA9wB,KAAA,SAGAgpG,EAAAK,eAAAvB,iBACAkB,EAAAO,mBAAA,IAAAnE,GAAAqD,EAAA3/F,GAEAkgG,EAAAI,WAAAj3E,KAAA62E,EAAAO,oBAAAp3E,KAAA62E,EAAAK,mBAIAL,EAAAK,eAAAt9F,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,SAEAk+F,EAAAK,eAAAt9F,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,UAGAA,KAAA0+F,gBAAA,WACA,IAAAR,KACAl+F,KAAAg+F,kBAAAE,EACAA,EAAAhpG,KAAA,KACAgpG,EAAA3H,eAAA,IAAAI,GAAAtwE,eAEA63E,EAAAS,aAAA,IAAAhI,GAAAhzE,sBACAu6E,EAAA7zE,YAAA,IAAAssE,GAAA/yE,qBACAs6E,EAAAU,iBAAA,IAAAjI,GAAA9yE,iBACAq6E,EAAAW,6BAAA,IAAAlI,GAAA3yE,wBAAA,SACAk6E,EAAAE,6BAAA,IAAAzH,GAAA3yE,wBAAA,SACAk6E,EAAAG,qCAAA,IAAA1H,GAAA3yE,wBAAA,kBACAk6E,EAAAI,WAAA,IAAAj5E,GACA64E,EAAAY,WAAA,IAAAlF,GACAsE,EAAApJ,cAAA,IAAA6B,GAAA5yE,cACAm6E,EAAAK,eAAA,IAAA/D,GAAAx8F,EAAAkgG,EAAA3H,gBACA2H,EAAAM,eAAAN,EAAAS,aAEAT,EAAAS,aAAAt3E,KAAA62E,EAAA7zE,aAAAhD,KAAA62E,EAAAU,kBAGAV,EAAAU,iBAAAv3E,KAAA62E,EAAAW,8BAAAx3E,KAAA62E,EAAAY,YACAZ,EAAAU,iBAAAv3E,KAAA62E,EAAAE,8BAAA/2E,KAAA62E,EAAAI,YACAJ,EAAAU,iBAAAv3E,KAAA62E,EAAAG,sCAAAh3E,KAAA62E,EAAA3H,gBAAAlvE,KAAA62E,EAAAK,gBAEAL,EAAAY,WAAAz3E,KAAA62E,EAAApJ,eAAAztE,KAAA62E,EAAAK,gBACAL,EAAAU,iBAAA39F,GAAA,gBAAApX,GACA,IAAAoB,EAEA,gBAAApB,EAAAqL,KAAA,CAGA,IAFAjK,EAAApB,EAAA0uB,OAAA3rB,OAEA3B,KACAmyG,GAAA,UAAAvzG,EAAA0uB,OAAAttB,GAAAiK,KAGeyoG,GAAA,UAAA9zG,EAAA0uB,OAAAttB,GAAAiK,QACfyoG,EAAA9zG,EAAA0uB,OAAAttB,IACA86B,kBAAA5zB,oBAAAynB,EAAAznB,sBAJAirG,EAAAvzG,EAAA0uB,OAAAttB,IACA86B,kBAAA5zB,oBAAAynB,EAAAznB,oBAQAirG,IAAAc,EAAAa,qBACAb,EAAAK,eAAAvB,iBACAkB,EAAAa,mBAAA,IAAA1E,GAAA+C,EAAAp/F,GACAkgG,EAAAa,mBAAA99F,GAAA,6BAAA8kB,GAIA43E,IACAA,EAAA53E,oBAKAm4E,EAAAO,mBAAAxD,eAAAl1E,EAAA9C,QAGAi7E,EAAAa,mBAAA99F,GAAA,oBAAA2Y,EAAAwK,QAAA3T,KAAAmJ,EAAA,YACAskF,EAAAa,mBAAA99F,GAAA,oBAAA2Y,EAAAwK,QAAA3T,KAAAmJ,EAAA,2BACAskF,EAAAa,mBAAA99F,GAAA,+BAAA9O,GACAwrG,GACAO,EAAAO,mBAAAtD,4BAAAhpG,KAIA+rG,EAAAY,WAAAz3E,KAAA62E,EAAAa,oBAAA13E,KAAA62E,EAAAK,iBAGAZ,IAAAO,EAAAO,qBAEAP,EAAAK,eAAAvB,iBACAkB,EAAAO,mBAAA,IAAAnE,GAAAqD,EAAA3/F,GAEAkgG,EAAAI,WAAAj3E,KAAA62E,EAAAO,oBAAAp3E,KAAA62E,EAAAK,oBAKAL,EAAAK,eAAAt9F,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,SAEAk+F,EAAAK,eAAAt9F,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,UAIAA,KAAAg/F,uBAAA,SAAA7sG,GACA,IAAA+rG,EAAAl+F,KAAAg+F,kBAEAhgG,EAAA+rF,yBACA/pF,KAAA7N,uBAGAwrG,IACAA,EAAA53E,kBAAA9C,SAAAhnB,EACA0hG,EAAA53E,kBAAA7C,SAAAjnB,EACA2tF,GAAA+T,GAEA3/F,EAAA+rF,yBACA4T,EAAA53E,kBAAA5zB,uBAGA+rG,EAAAE,8BACAF,EAAAE,6BAAAnxE,iBAIAmwE,IACAc,EAAAa,qBACAb,EAAAa,mBAAAxD,aACA2C,EAAAW,6BAAA5xE,iBAGAmwE,EAAAr3E,kBAAA9C,SAAAhnB,EACAmhG,EAAAr3E,kBAAA7C,SAAAjnB,EACA2tF,GAAAwT,GACAc,EAAApJ,cAAA94C,QAEAh+C,EAAA+rF,yBACAqT,EAAAr3E,kBAAA5zB,wBAIA+rG,EAAAG,sCACAH,EAAAG,qCAAApxE,iBAIAjtB,KAAAo7F,oBAAA,SAAA34E,GACAk7E,GACA39F,KAAAg+F,kBAAAS,mBAAArD,oBAAA34E,IAIAziB,KAAA88F,cAAA,SAAAzB,GACA+B,GAAAp9F,KAAAg+F,kBAAAe,oBACA/+F,KAAAg+F,kBAAAe,mBAAAjC,cAAAzB,IAKAr7F,KAAArU,KAAA,SAAA9B,GACA,GAAAk0G,EAAA,CACA,IAAAkB,EAAAxE,GAAA5wG,GAEAo1G,GAAA,QAAAj/F,KAAAg+F,kBAAA9oG,KACA8K,KAAAi+F,mBACWgB,GAAA,OAAAj/F,KAAAg+F,kBAAA9oG,MACX8K,KAAA0+F,kBAGAX,GAAA,EAGA/9F,KAAAg+F,kBAAAQ,eAAA7yG,KAAA9B,IAIAmW,KAAAqkB,MAAA,WACA05E,GAAA,EAEA/9F,KAAAg+F,kBAAAQ,eAAAn6E,SAIArkB,KAAAk/F,cAAA,WACAl/F,KAAAg+F,kBAAAlJ,eACA90F,KAAAg+F,kBAAAlJ,cAAA94C,WAKA1lD,UAAA,IAAAkvB,EACA,IAUA78B,GACAw2G,GAXAC,IACAC,WAAA9E,GACA+E,mBAAAjF,GACAkF,mBAAAjF,GACAI,oBACAC,oBAEAE,mCAKA2E,GAAAh/E,EAAA33B,UACAE,GAAA,SAAAC,GACA,WAAAC,KAAA,IAAAD,EAAA,aAEAE,GAAA,SAAAC,GACA,OACAC,WAAA,GAAAD,EAAA,QACAE,UAAA,EAAAF,EAAA,GACAG,cAAA,IAAAH,EAAA,QACAI,eAAA,GAAAJ,EAAA,QACAK,cAAA,GAAAL,EAAA,QACAM,gBAAA,EAAAN,EAAA,GACAO,oBAAAP,EAAA,MAAAA,EAAA,KAoDAs2G,IAIA71G,KAAA,SAAAC,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAC,mBAAAL,EAAAM,UAAA,GACAC,MAAAP,EAAAM,UAAA,IACAE,OAAAR,EAAAM,UAAA,IACAG,gBAAAT,EAAAM,UAAA,IAAAN,EAAAM,UAAA,OACAI,eAAAV,EAAAM,UAAA,IAAAN,EAAAM,UAAA,OACAK,WAAAX,EAAAM,UAAA,IACAM,MAAAZ,EAAAM,UAAA,IACAO,OAAAhC,GAAAkB,EAAAe,SAAA,GAAAf,EAAAK,eAGAW,KAAA,SAAAhB,GACA,IAWAiB,EACAC,EACAC,EACAC,EAdAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAC,qBAAAtB,EAAA,GACAuB,qBAAAvB,EAAA,GACAwB,qBAAAxB,EAAA,GACAyB,mBAAAzB,EAAA,GACA0B,mBAAA,EAAA1B,EAAA,GACA2B,OACAC,QAEAC,EAAA,GAAA7B,EAAA,GAQA,IAFAmB,EAAA,EAEAC,EAAA,EAAmBA,EAAAS,EAAgCT,IACnDF,EAAAjB,EAAAM,UAAAY,GACAA,GAAA,EACAE,EAAAM,IAAAG,KAAA,IAAAC,WAAA/B,EAAAe,SAAAI,IAAAD,KACAC,GAAAD,EAOA,IAHAD,EAAAjB,EAAAmB,GACAA,IAEAC,EAAA,EAAmBA,EAAAH,EAA+BG,IAClDF,EAAAjB,EAAAM,UAAAY,GACAA,GAAA,EACAE,EAAAO,IAAAE,KAAA,IAAAC,WAAA/B,EAAAe,SAAAI,IAAAD,KACAC,GAAAD,EAGA,OAAAG,GAEAW,KAAA,SAAAhC,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACA4B,aAAAhC,EAAAiC,UAAA,GACAC,WAAAlC,EAAAiC,UAAA,GACAE,WAAAnC,EAAAiC,UAAA,KAGAG,KAAA,SAAArC,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAwB,KAAAvC,EAAA,MAAAA,EAAA,GACAwC,eAAA,GAAAxC,EAAA,GACAyC,eACAC,wBAAA1C,EAAA,IACA2C,WAAA3C,EAAA,WACA4C,WAAA5C,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAmC,WAAAnC,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAoC,WAAApC,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACA6C,yBACAC,IAAA9C,EAAA,IACA+C,OAAA/C,EAAA,IACAgD,gBAAAhD,EAAA,WACAiD,wBAAA,EAAAjD,EAAA,QAAAA,EAAA,UACAkD,qBAAAlD,EAAA,eAKAmD,KAAA,SAAAnD,GASA,IARA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACA+B,WAAAuyG,GAAA31G,EAAAe,SAAA,MACAsC,aAAApD,EAAAiC,UAAA,GACAoB,qBAEAlC,EAAA,EAEAA,EAAApB,EAAAK,YACAgB,EAAAiC,iBAAAxB,KAAA6zG,GAAA31G,EAAAe,SAAAK,IAAA,KACAA,GAAA,EAGA,OAAAC,GAEAkC,KAAA,SAAAvD,GACA,OACAwD,MAAA1E,GAAAkB,KAGAyD,KAAA,SAAAzD,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2C,eAAA5E,GAAAkB,EAAAe,SAAA,MAGA4C,KAAA,SAAA3D,GACA,IACAqB,GACAiB,QAFA,IAAApC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YAEAuD,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA8C,YAAA8xG,GAAA31G,EAAAe,SAAA,OACA+C,KAAA,IAEA1C,EAAA,EAEA,IAAAA,EAAA,GAAoBA,EAAApB,EAAAK,WAAqBe,IAAA,CACzC,OAAApB,EAAAoB,GAAA,CAEAA,IACA,MAGAC,EAAAyC,MAAAC,OAAAC,aAAAhE,EAAAoB,IAMA,OADAC,EAAAyC,KAAAG,mBAAAC,OAAA7C,EAAAyC,OACAzC,GAEA8C,KAAA,SAAAnE,GACA,OACAK,WAAAL,EAAAK,WACA+D,KA/LA,SAAAC,GACA,IAEAjD,EACA2B,EAHAuB,EAAA,IAAApE,SAAAmE,EAAAlE,OAAAkE,EAAAjE,WAAAiE,EAAAhE,YACAgB,KAIA,IAAAD,EAAA,EAAiBA,EAAA,EAAAiD,EAAAtB,OAA0B3B,GAAA2B,EAI3C,GAHAA,EAAAuB,EAAApC,UAAAd,GACAA,GAAA,EAEA2B,GAAA,EACA1B,EAAAS,KAAA,uDAIA,UAAAuC,EAAAjD,IACA,OACAC,EAAAS,KAAA,yCACA,MAEA,OACAT,EAAAS,KAAA,6CACA,MAEA,OACAT,EAAAS,KAAA,YACA,MAEA,OACAT,EAAAS,KAAA,0BACA,MAEA,OACAT,EAAAS,KAAA,0BACA,MAEA,OACAT,EAAAS,KAAA,8BACA,MAEA,QACAT,EAAAS,KAAA,iBAAAuC,EAAAjD,GAAA,IAKA,OAAAC,EAiJAkD,CAAAvE,KAGAwE,KAAA,SAAAxE,GACA,IAEAyE,EAFAxE,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EAEAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA0D,SAAA,IA+BA,OA5BA,IAAApD,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IAEAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IAEAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAGAA,GAAA,EAGAqD,EAAAxE,EAAAM,UAAAa,GACAC,EAAAoD,UAAAV,OAAAC,aAAA,IAAAS,GAAA,KACApD,EAAAoD,UAAAV,OAAAC,aAAA,SAAAS,IAAA,IACApD,EAAAoD,UAAAV,OAAAC,aAAA,OAAAS,IACApD,GAEAyD,KAAA,SAAA9E,GACA,OACAwD,MAAA1E,GAAAkB,KAGA+E,KAAA,SAAA/E,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAiE,eAAAhF,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,KAGAiF,KAAA,SAAAjF,GACA,OACAwD,MAAA1E,GAAAkB,KAMAkF,KAAA,SAAAlF,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GAEAf,mBAAAL,EAAAM,UAAA,GAEA4E,aAAAlF,EAAAM,UAAA,IACA6E,WAAAnF,EAAAM,UAAA,IAGA8E,WAAApF,EAAAM,UAAA,IAAAN,EAAAM,UAAA,WAQA,OAJAP,EAAAK,WAAA,KACAgB,EAAAiE,iBAAAxG,GAAAkB,EAAAe,SAAA,SAGAM,GAEAkE,KAAA,SAAAvF,GACA,OACAwD,MAAA1E,GAAAkB,KAGAwF,KAAA,SAAAxF,GACA,OACAwD,MAAA1E,GAAAkB,KAGAyF,KAAA,SAAAzF,GACA,OACAwD,MAAA1E,GAAAkB,KAGA0F,KAAA,SAAA1F,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EACAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,OAoCA,OAjCA,IAAAM,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IAEAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IAEAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAGAA,GAAA,EAEAC,EAAAsE,KAAA1F,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAA,GAAA,EACAC,EAAAuE,OAAA3F,EAAA2D,SAAAxC,GAAAnB,EAAA2D,SAAAxC,EAAA,KACAA,GAAA,EACAA,GAAA,EACAA,GAAA,EACAC,EAAAwE,OAAA,IAAAC,YAAA9F,EAAAe,SAAAK,IAAA,KACAA,GAAA,GACAA,GAAA,GACAC,EAAA0E,YAAA9F,EAAAiC,UAAAd,GACAC,GAEA2E,KAAA,SAAAhG,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA4E,KAAA1F,EAAAiC,UAAA,GACA+D,aAAAhG,EAAAiC,UAAA,KAGAgE,KAAA,SAAAlG,GACA,IAKAoB,EALAC,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAoF,YAIA,IAAA/E,EAAA,EAAmBA,EAAApB,EAAAK,WAAqBe,IACxCC,EAAA8E,QAAArE,MACAtC,WAAA,GAAAQ,EAAAoB,KAAA,EACA3B,cAAA,GAAAO,EAAAoB,KAAA,EACA1B,cAAA,EAAAM,EAAAoB,KAIA,OAAAC,GAEA+E,KAAA,SAAApG,GACA,IAWAoB,EAXAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAsF,cACAC,YAAArG,EAAAiC,UAAA,GACA0C,UAAA3E,EAAAiC,UAAA,GACAqE,yBAAAtG,EAAAiC,UAAA,IACAsE,YAAAvG,EAAAiC,UAAA,KAEAuE,EAAAxG,EAAAM,UAAA,IAGA,IAAAa,EAAA,GAAoBqF,EAAgBrF,GAAA,GAAAqF,IACpCpF,EAAAgF,WAAAvE,MACA4E,eAAA,IAAA1G,EAAAoB,MAAA,EACAuF,eAAA,WAAA1G,EAAAiC,UAAAd,GACAwF,mBAAA3G,EAAAiC,UAAAd,EAAA,GACAyF,iBAAA,IAAA7G,EAAAoB,EAAA,IACA0F,SAAA,IAAA9G,EAAAoB,EAAA,QACA2F,aAAA,UAAA9G,EAAAiC,UAAAd,EAAA,KAIA,OAAAC,GAEA2F,KAAA,SAAAhH,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAkG,QAAAjH,EAAA,GAAAA,EAAA,SAGAkH,KAAA,SAAAlH,GACA,OACAwD,MAAA1E,GAAAkB,KAGAmH,KAAA,SAAAnH,GACA,IAOAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAqG,iBAEAC,EAAApH,EAAAiC,UAAA,GAGA,IAAAd,EAAA,EAAmBiG,EAAYjG,GAAA,EAAAiG,IAC/BhG,EAAA+F,aAAAtF,KAAA7B,EAAAiC,UAAAd,IAGA,OAAAC,GAEAiG,KAAA,SAAAtH,GACA,IAOAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgH,EAAApH,EAAAiC,UAAA,GACAb,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAwG,mBAIA,IAAAnG,EAAA,EAAmBiG,EAAYjG,GAAA,GAAAiG,IAC/BhG,EAAAkG,eAAAzF,MACA0F,WAAAvH,EAAAiC,UAAAd,GACAqG,gBAAAxH,EAAAiC,UAAAd,EAAA,GACAsG,uBAAAzH,EAAAiC,UAAAd,EAAA,KAIA,OAAAC,GAEAsG,KAAA,SAAA3H,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA6G,mBAAA9I,GAAAkB,EAAAe,SAAA,MAGA8G,KAAA,SAAA7H,GACA,IAOAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA+G,WAAA7H,EAAAiC,UAAA,GACA6F,YAIA,IAAA3G,EAAA,GAAoBA,EAAApB,EAAAK,WAAqBe,GAAA,EACzCC,EAAA0G,QAAAjG,KAAA7B,EAAAiC,UAAAd,IAGA,OAAAC,GAEA2G,KAAA,SAAAhI,GACA,IAOAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAkH,kBAEAZ,EAAApH,EAAAiC,UAAA,GAGA,IAAAd,EAAA,EAAmBiG,EAAYjG,GAAA,EAAAiG,IAC/BhG,EAAA4G,cAAAnG,MACAoG,YAAAjI,EAAAiC,UAAAd,GACA+G,YAAAlI,EAAAiC,UAAAd,EAAA,KAIA,OAAAC,GAEA+G,KAAA,SAAApI,GACA,OAAA41G,GAAAzyG,KAAAnD,IAEAqI,KAAA,SAAArI,GACA,IAAAqB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAuH,oBAAAtI,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAQA,OALA,IAAAqB,EAAAiB,UACAjB,EAAAiH,qBAAAC,KAAAC,IAAA,MACAnH,EAAAiH,qBAAAtI,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAGAqB,GAEAoH,KAAA,SAAAzI,GACA,IAaAoB,EAbAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2H,QAAAzI,EAAAiC,UAAA,IAEAyG,EAAA,EAAAtH,EAAA/B,MAAA,GACAsJ,EAAA,EAAAvH,EAAA/B,MAAA,GACAuJ,EAAA,EAAAxH,EAAA/B,MAAA,GACAwJ,EAAA,GAAAzH,EAAA/B,MAAA,GACAyJ,EAAA,GAAA1H,EAAA/B,MAAA,GACA0J,EAAA,MAAA3H,EAAA/B,MAAA,GACA2J,EAAA,OAAA5H,EAAA/B,MAAA,GAuCA,OArCA8B,EAAA,EAEAuH,IACAvH,GAAA,EAGAC,EAAA6H,eAAAjJ,EAAAiC,UAAA,IACAd,GAAA,GAGAwH,IACAvH,EAAAqG,uBAAAzH,EAAAiC,UAAAd,GACAA,GAAA,GAGAyH,IACAxH,EAAA8H,sBAAAlJ,EAAAiC,UAAAd,GACAA,GAAA,GAGA0H,IACAzH,EAAA+H,kBAAAnJ,EAAAiC,UAAAd,GACAA,GAAA,GAGA2H,IACA1H,EAAAgI,mBAAApJ,EAAAiC,UAAAd,IAGA4H,IACA3H,EAAA2H,iBAAA,IAGAL,GAAAM,IACA5H,EAAAiI,sBAAA,GAGAjI,GAEAkI,KAAA,SAAAvJ,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EACAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,OAyCA,OAtCA,IAAAM,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IAEAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IAEAA,GAAA,EACAC,EAAAqH,QAAAzI,EAAAiC,UAAAd,GACAA,GAAA,EACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAqH,QAAAzI,EAAAiC,UAAAd,GACAA,GAAA,EACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAGAA,GAAA,EACAA,GAAA,EACAC,EAAAmI,MAAAvJ,EAAAM,UAAAa,GACAA,GAAA,EACAC,EAAAoI,eAAAxJ,EAAAM,UAAAa,GACAA,GAAA,EAEAC,EAAAuE,OAAA3F,EAAA2D,SAAAxC,GAAAnB,EAAA2D,SAAAxC,EAAA,KACAA,GAAA,EACAA,GAAA,EACAC,EAAAwE,OAAA,IAAAC,YAAA9F,EAAAe,SAAAK,IAAA,KACAA,GAAA,GACAC,EAAAb,MAAAP,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAA,GAAA,EACAC,EAAAZ,OAAAR,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAC,GAEAqI,KAAA,SAAA1J,GACA,OACAwD,MAAA1E,GAAAkB,KAGA2J,KAAA,SAAA3J,GACA,OACAwD,MAAA1E,GAAAkB,KAGA4J,KAAA,SAAA5J,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2H,QAAAzI,EAAAiC,UAAA,GACA2H,8BAAA5J,EAAAiC,UAAA,GACAiH,sBAAAlJ,EAAAiC,UAAA,IACAkH,kBAAAnJ,EAAAiC,UAAA,IACA4H,gBAAA,EAAA9J,EAAA,IACA+J,oBAAA,IAAA/J,EAAA,QACAgK,qBAAA,GAAAhK,EAAA,QACAiK,oBAAA,GAAAjK,EAAA,QACAkK,4BAAA,EAAAlK,EAAA,KACAmK,0BAAAlK,EAAAM,UAAA,MAGA6J,KAAA,SAAApK,GACA,IAqBAqK,EArBAhJ,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAoF,YAEAlG,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YAEAiK,EAAA,EAAAjJ,EAAA/B,MAAA,GAEAiL,EAAA,EAAAlJ,EAAA/B,MAAA,GAEAkL,EAAA,EAAAnJ,EAAA/B,MAAA,GAEAmL,EAAA,EAAApJ,EAAA/B,MAAA,GAEAoL,EAAA,EAAArJ,EAAA/B,MAAA,GAEAqL,EAAA,EAAAtJ,EAAA/B,MAAA,GAEA4I,EAAAjI,EAAAiC,UAAA,GACAf,EAAA,EAqCA,IAlCAmJ,IAEAjJ,EAAAuJ,WAAA3K,EAAA4K,SAAA1J,GACAA,GAAA,GAKAoJ,GAAArC,IACAmC,GACA/K,MAAAD,GAAAW,EAAAe,SAAAI,IAAA,KAEAA,GAAA,EAEAqJ,IACAH,EAAAxF,SAAA5E,EAAAiC,UAAAf,GACAA,GAAA,GAGAsJ,IACAJ,EAAAS,KAAA7K,EAAAiC,UAAAf,GACAA,GAAA,GAGAwJ,IAEAN,EAAAU,sBAAA9K,EAAAiC,UAAAf,GACAA,GAAA,GAGAE,EAAA8E,QAAArE,KAAAuI,GACAnC,KAGAA,KACAmC,KAEAG,IACAH,EAAAxF,SAAA5E,EAAAiC,UAAAf,GACAA,GAAA,GAGAsJ,IACAJ,EAAAS,KAAA7K,EAAAiC,UAAAf,GACAA,GAAA,GAGAuJ,IACAL,EAAA/K,MAAAD,GAAAW,EAAAe,SAAAI,IAAA,IACAA,GAAA,GAGAwJ,IAEAN,EAAAU,sBAAA9K,EAAAiC,UAAAf,GACAA,GAAA,GAGAE,EAAA8E,QAAArE,KAAAuI,GAGA,OAAAhJ,GAEA2J,OAAA,SAAAhL,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,QAGAkK,KAAA,SAAAjL,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAmK,aAAAjL,EAAAM,UAAA,GACA4K,QAAA,IAAAC,aAAAnL,EAAAM,UAAA,GAAAN,EAAAM,UAAA,GAAAN,EAAAM,UAAA,SA4GAs1G,IACAxoG,QAjGAvO,GAAA,SAAAkB,GAYA,IAXA,IAEAC,EACA6K,EACAO,EACAC,EACAC,EANAnK,EAAA,EACAC,KAOAmK,EAAA,IAAAC,YAAAzL,EAAA+C,QACA2I,EAAA,IAAA3J,WAAAyJ,GAEAG,EAAA,EAAqBA,EAAA3L,EAAA+C,SAAiB4I,EACtCD,EAAAC,GAAA3L,EAAA2L,GAKA,IAFA1L,EAAA,IAAAC,SAAAsL,GAEApK,EAAApB,EAAAK,YAEAyK,EAAA7K,EAAAiC,UAAAd,GACAiK,EAAAsqG,GAAA31G,EAAAe,SAAAK,EAAA,EAAAA,EAAA,IACAkK,EAAAR,EAAA,EAAA1J,EAAA0J,EAAA9K,EAAAK,YAEAkL,GAAAqqG,GAAAvqG,IAAA,SAAArL,GACA,OACAA,UAESA,EAAAe,SAAAK,EAAA,EAAAkK,KAETR,OACAS,EAAAF,OAEAhK,EAAAS,KAAAyJ,GACAnK,EAAAkK,EAGA,OAAAjK,GA6DAiM,QA/CAgoG,GAAA,SAAA1pG,EAAA/K,GACA,IAAAgL,EAIA,OAHAhL,KAAA,EACAgL,EAAA,IAAAC,MAAA,EAAAjL,EAAA,GAAAkL,KAAA,KAEAH,EAAAI,IAAA,SAAAT,EAAAU,GAEA,OAAAJ,EAAAN,EAAAF,KAAA,KACAa,OAAAC,KAAAZ,GAAAa,OAAA,SAAAC,GACA,eAAAA,GAAA,UAAAA,IACSL,IAAA,SAAAK,GACT,IAAAC,EAAAT,EAAA,KAAAQ,EAAA,KACAE,EAAAhB,EAAAc,GAEA,GAAAE,aAAAxK,YAAAwK,aAAAzG,YAAA,CACA,IAAA0G,EAAAV,MAAAW,UAAAC,MAAAC,KAAA,IAAA5K,WAAAwK,EAAApM,OAAAoM,EAAAnM,WAAAmM,EAAAlM,aAAA2L,IAAA,SAAAY,GACA,gBAAAA,EAAAC,SAAA,KAAAH,OAAA,KACaX,KAAA,IAAAe,MAAA,YAEb,OAAAN,EAIA,IAAAA,EAAAzJ,OACAuJ,EAAA,IAAAE,EAAAT,KAAA,IAAAW,MAAA,OAGAJ,EAAA,MAAAE,EAAAR,IAAA,SAAAe,GACA,OAAAlB,EAAA,KAAAkB,IACahB,KAAA,WAAAF,EAAA,MATbS,EAAA,KAaA,OAAAA,EAAAU,KAAAC,UAAAV,EAAA,QAAAW,MAAA,MAAAlB,IAAA,SAAAe,EAAAd,GACA,WAAAA,EACAc,EAGAlB,EAAA,KAAAkB,IACWhB,KAAA,QACFA,KAAA,OACTR,EAAA/H,MAAA,KAAA8xG,GAAA/pG,EAAA/H,MAAA3C,EAAA,SACOkL,KAAA,OAMPwB,UAAAqoG,GAAAvtG,KACAmF,UAAAooG,GAAAjyG,KACA8J,UAAAmoG,GAAAntG,KACAiF,UAAAkoG,GAAAxrG,KACAuD,UAAAioG,GAAAxvG,MAEA0vG,GAAA3V,GACA4V,GAAA9K,GAAA/wE,cAYA87E,GAAA,SAAA70G,EAAAgF,GAGA,IAFA,IAAA8vG,EAAA90G,EAEAC,EAAA,EAAqBA,EAAA+E,EAAApD,OAAoB3B,IAAA,CACzC,IAAAiJ,EAAAlE,EAAA/E,GAEA,GAAA60G,EAAA5rG,EAAAS,KACA,OAAAT,EAGA4rG,GAAA5rG,EAAAS,KAGA,aA+HAorG,GAAA,SAAA37F,EAAA47F,GAEA,IAAAznG,EAAAioB,EAAA7oB,QAAAyM,GAAA,gBAGA67F,KACAC,KAkCA,OApCA1/E,EAAA7oB,QAAAyM,GAAA,SAIArL,QAAA,SAAA/K,EAAA8H,GACA,IAAAqqG,EAAA5nG,EAAAzC,GACAoqG,EAAAv0G,MACAqC,OACAuF,KAAA4sG,MAGAD,EAAAnnG,QAAA,SAAAqnG,GACA,IAWAC,EAXAryG,EAAAoyG,EAAApyG,KACAuF,EAAA6sG,EAAA7sG,KACAjB,EAAAkuB,EAAA7oB,QAAApE,GAAA,SAEA+sG,EAAAZ,GAAApoG,UAAAhF,EAAA,IACAC,EAAA+tG,EAAA/tG,QACAL,EAAAsuB,EAAA7oB,QAAApE,GAAA,SAEApB,EAAAD,EAAAtF,OAAA,EAAA8yG,GAAAtoG,UAAAlF,EAAA,IAAAC,oBAAA,EACAouG,EAAA//E,EAAA7oB,QAAApE,GAAA,SAIAysG,IAAAztG,GAAAguG,EAAA3zG,OAAA,IAEAyzG,EA5IA,SAAAnyG,EAAA8B,EAAAuC,GACA,IAEAiuG,EACAv1G,EACA2B,EACA6zG,EALAtyG,EAAA,IAAApE,SAAAmE,EAAAlE,OAAAkE,EAAAjE,WAAAiE,EAAAhE,YACAgB,KAMA,IAAAD,EAAA,EAAiBA,EAAA,EAAAiD,EAAAtB,OAA0B3B,GAAA2B,EAI3C,GAHAA,EAAAuB,EAAApC,UAAAd,GACAA,GAAA,IAEA2B,GAAA,GAIA,UAAAsB,EAAAjD,IACA,OACA,IAAApB,EAAAqE,EAAAtD,SAAAK,EAAA,EAAAA,EAAA,EAAA2B,GACA8zG,EAAAb,GAAA50G,EAAA+E,GACAwwG,GACApZ,YAAA,WACAzyF,KAAA/H,EACA/C,OACAihG,YAAA6U,GAAA91G,GACA0I,WAGAmuG,GACAF,EAAAt9E,IAAAw9E,EAAAx9E,IACAs9E,EAAAv9E,IAAAy9E,EAAAz9E,IACAw9E,EAAAC,IAIAF,EAAAt9E,IAAAu9E,EAAAv9E,IACAs9E,EAAAv9E,IAAAw9E,EAAAx9E,KAGA/3B,EAAAS,KAAA60G,GAQA,OAAAt1G,EA6FAy1G,CAAA3yG,EA5EA,SAAAuyG,EAAApuG,EAAAG,GACA,IAAAgmG,EAAAnmG,EACAa,EAAAV,EAAAU,uBAAA,EACAC,EAAAX,EAAAW,mBAAA,EACAV,EAAAD,EAAAC,QACAquG,KA4BA,OA3BAL,EAAAxnG,QAAA,SAAA9E,GAIA,IACAjE,EADA0vG,GAAAnoG,UAAAtD,GACAjE,QACAA,EAAA+I,QAAA,SAAA7E,QACA+H,IAAA/H,EAAAxF,WACAwF,EAAAxF,SAAAsE,QAGAiJ,IAAA/H,EAAAS,OACAT,EAAAS,KAAA1B,GAGAiB,EAAA3B,UACA2B,EAAA+uB,IAAAq1E,OAEAr8F,IAAA/H,EAAAU,wBACAV,EAAAU,sBAAA,GAGAV,EAAAgvB,IAAAo1E,EAAApkG,EAAAU,sBACA0jG,GAAApkG,EAAAxF,WAEAkyG,IAAA1oG,OAAAlI,KAEA4wG,EA0CAC,CAAAN,EAAApuG,EAAAmuG,GACA/tG,GAEA0tG,EAAA1tG,KACA0tG,EAAA1tG,OAGA0tG,EAAA1tG,GAAA0tG,EAAA1tG,GAAA2F,OAAAmoG,MAGAJ,GAkOA3+C,IACAw/C,UAAAva,EACA/lE,QACA6+E,WAAAD,GAAAC,WACAE,mBAAAH,GAAAG,mBACAD,mBAAAF,GAAAE,mBACAyB,cAlMA,WACA,IACAC,EAEAC,EAEA1uG,EAEA9D,EAEAyyG,EATAC,GAAA,EAeAnhG,KAAAmhG,cAAA,WACA,OAAAA,GAQAnhG,KAAA7H,KAAA,WACA6oG,EAAA,IAAApB,GACAuB,GAAA,EAEAH,EAAA//F,GAAA,gBAAAnB,GAEAA,EAAAlI,UAAAkI,EAAAk0F,SAAAvlG,EACAqR,EAAA+sC,QAAA/sC,EAAAm0F,OAAAxlG,EACAyyG,EAAAjtD,SAAAtoD,KAAAmU,GACAohG,EAAArD,eAAA/9F,EAAA0lB,SAAA,KAUAxlB,KAAAohG,UAAA,SAAAtoG,EAAAuoG,GACA,QAAAvoG,GAAA,IAAAA,EAAAlM,QAAAy0G,GAAA,iBAAAA,GAAA,IAAAtrG,OAAAC,KAAAqrG,GAAAz0G,QAIA2F,IAAAuG,EAAA,IAAArK,IAAA4yG,EAAA9uG,KAcAyN,KAAArW,MAAA,SAAAya,EAAAtL,EAAAuoG,GACA,IAAAC,EAEA,IAAAthG,KAAAmhG,gBACA,YACS,IAAAroG,IAAAuoG,EACT,YACS,GAAArhG,KAAAohG,UAAAtoG,EAAAuoG,GAGT9uG,EAAAuG,EAAA,GACArK,EAAA4yG,EAAA9uG,QAES,IAAAA,IAAA9D,EAET,OADAwyG,EAAAt1G,KAAAyY,GACA,KAIA,KAAA68F,EAAAr0G,OAAA,IACA,IAAA20G,EAAAN,EAAA9jG,QACA6C,KAAArW,MAAA43G,EAAAzoG,EAAAuoG,GAKA,eAFAC,EAzGA,SAAAl9F,EAAA7R,EAAA9D,GAGA,OAAA8D,GAMA8tG,QAFAN,GAAA37F,EAAA7R,GAEAA,GACA9D,aANA,KAqGA+yG,CAAAp9F,EAAA7R,EAAA9D,KAEA6yG,EAAAjB,SAIArgG,KAAAyhG,SAAAH,EAAAjB,SAEArgG,KAAAulB,cACA27E,GANA,MAgBAlhG,KAAAyhG,SAAA,SAAAxzG,GACA,IAAA+R,KAAAmhG,kBAAAlzG,GAAA,IAAAA,EAAArB,OACA,YAGAqB,EAAA8K,QAAA,SAAA2oG,GACAV,EAAAr1G,KAAA+1G,MASA1hG,KAAAulB,YAAA,WACA,IAAAvlB,KAAAmhG,gBACA,YAGAH,EAAA38E,SAOArkB,KAAA2hG,oBAAA,WACAT,EAAAjtD,YACAitD,EAAArD,mBAQA79F,KAAA4hG,mBAAA,WACA,IAAA5hG,KAAAmhG,gBACA,YAGAH,EAAAhlD,SASAh8C,KAAA6hG,iBAAA,WACA7hG,KAAA2hG,sBACA3hG,KAAA4hG,sBAOA5hG,KAAAg8C,MAAA,WACAilD,KACA1uG,EAAA,KACA9D,EAAA,KAEAyyG,EAOAlhG,KAAA2hG,sBANAT,GACAjtD,YAEA4pD,mBAMA79F,KAAA4hG,sBAGA5hG,KAAAg8C,UAaA3tB,GAAA,SAAAzd,EAAA0d,GACA,KAAA1d,aAAA0d,GACA,UAAA3nB,UAAA,sCAIA4nB,GAAA,WACA,SAAA1Y,EAAAjV,EAAA/G,GACA,QAAA5O,EAAA,EAAuBA,EAAA4O,EAAAjN,OAAkB3B,IAAA,CACzC,IAAAujC,EAAA30B,EAAA5O,GACAujC,EAAApY,WAAAoY,EAAApY,aAAA,EACAoY,EAAAxZ,cAAA,EACA,UAAAwZ,MAAAhY,UAAA,GACAzgB,OAAAkN,eAAArC,EAAA4tB,EAAAt4B,IAAAs4B,IAIA,gBAAAF,EAAAG,EAAAC,GAGA,OAFAD,GAAA5Y,EAAAyY,EAAAh4B,UAAAm4B,GACAC,GAAA7Y,EAAAyY,EAAAI,GACAJ,GAdA,GAwFAwzE,GAAA,WACA,SAAAA,EAAAloF,EAAA5b,GACAqwB,GAAAruB,KAAA8hG,GACA9hG,KAAAhC,cACAgC,KAAA4Z,OACA5Z,KAAA7H,OAmFA,OA5EAo2B,GAAAuzE,IACA5rG,IAAA,OACAE,MAAA,WAxEA,IAAAwjB,EAAAwlF,EAyEAp/F,KAAAo/F,YACAp/F,KAAAo/F,WAAAh4E,UAGApnB,KAAAo/F,WAAA,IAAA99C,GAAA+9C,WAAAr/F,KAAAhC,SA7EA4b,EA8EA5Z,KAAA4Z,MA9EAwlF,EA8EAp/F,KAAAo/F,YA7EAn+F,GAAA,gBAAAmD,GAKA,IAAA29F,EAAA39F,EAAAmV,YACAnV,EAAAmV,aACA1vB,KAAAk4G,EAAA/3G,OACAC,WAAA83G,EAAA93G,WACAC,WAAA63G,EAAA73G,YAEA,IAAA83G,EAAA59F,EAAAva,KACAua,EAAAva,KAAAm4G,EAAAh4G,OACA4vB,EAAA+rE,aACAsc,OAAA,OACA79F,UACAna,WAAA+3G,EAAA/3G,WACAC,WAAA83G,EAAA93G,aACSka,EAAAva,SAGTu1G,EAAAtK,eACAsK,EAAAtK,cAAA7zF,GAAA,gBAAAmiF,GACAxpE,EAAA+rE,aACAsc,OAAA,UACAp4G,KAAAu5F,MAKAgc,EAAAn+F,GAAA,gBAAApX,GACA+vB,EAAA+rE,aACAsc,OAAA,WAGA7C,EAAAn+F,GAAA,mBAAAihG,GACAtoF,EAAA+rE,aACAsc,OAAA,UACAC,cAGA9C,EAAAn+F,GAAA,kCAAAkhG,GACAvoF,EAAA+rE,aACAsc,OAAA,yBACAE,gCA2CAjsG,IAAA,OACAE,MAAA,SAAAvM,GAEA,IAAAua,EAAA,IAAAxY,WAAA/B,SAAAI,WAAAJ,EAAAK,YACA8V,KAAAo/F,WAAAzzG,KAAAyY,MAQAlO,IAAA,QACAE,MAAA,WACA4J,KAAA7H,UAWAjC,IAAA,qBACAE,MAAA,SAAAvM,GACA,IAAAy5F,EAAAz5F,EAAAy5F,iBAAA,EACAtjF,KAAAo/F,WAAAJ,uBAAA5sG,KAAAgoC,MAAA,IAAAkpD,OAGAptF,IAAA,sBACAE,MAAA,SAAAvM,GACAmW,KAAAo/F,WAAAhE,oBAAAhpG,KAAAg3F,KAAA,IAAAv/F,EAAAu4G,iBAUAlsG,IAAA,QACAE,MAAA,SAAAvM,GACAmW,KAAAo/F,WAAA/6E,WAGAnuB,IAAA,gBACAE,MAAA,WACA4J,KAAAo/F,WAAAF,mBAGAhpG,IAAA,gBACAE,MAAA,SAAAvM,GACAmW,KAAAo/F,WAAAtC,cAAAjzG,EAAAwxG,gBAAA9kG,aAGAurG,EAxFA,GAsHA,IAnBA,SAAAloF,GACAA,EAAAgsE,UAAA,SAAA9lF,GACA,SAAAA,EAAAjW,KAAAo4G,QAAAniG,EAAAjW,KAAAmU,QACAgC,KAAAqiG,gBAAA,IAAAP,GAAAloF,EAAA9Z,EAAAjW,KAAAmU,UAIAgC,KAAAqiG,kBACAriG,KAAAqiG,gBAAA,IAAAP,GAAAloF,IAGA9Z,EAAAjW,MAAAiW,EAAAjW,KAAAo4G,QAAA,SAAAniG,EAAAjW,KAAAo4G,QACAjiG,KAAAqiG,gBAAAviG,EAAAjW,KAAAo4G,SACAjiG,KAAAqiG,gBAAAviG,EAAAjW,KAAAo4G,QAAAniG,EAAAjW,QAMA,CAAA+vB,GAvoNA,KAipNA0oF,IACAC,WAAA,OACAC,yBAAA,UAEAC,aAAA,KAWAC,GAAA,SAAAC,GACA,OAAAA,EAAA9sG,IAAA,SAAAmwB,GACA,OAAAA,EAAAppB,QAAA,+BAAAgmG,EAAAC,EAAAC,GAGA,eAFA,KAAApqC,OAAAmqC,GAAAnsG,SAAA,KAAAH,OAAA,GAEA,MADA,KAAAmiE,OAAAoqC,GAAApsG,SAAA,KAAAH,OAAA,QAWAwsG,GAAA,WACA,IAIA/hF,EAJA2hF,EAAA5yF,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MACA7kB,GACA83G,WAAA,GAgBA,OAbA93G,EAAA83G,WAAAL,EAAA5rG,MAAA,KAAAnK,OACA1B,EAAA83G,WAAA93G,EAAA83G,YAAA,GAEAhiF,EAAA,8BAAA3b,KAAAs9F,MAGAz3G,EAAAq3G,WAAAvhF,EAAA,GACA91B,EAAAs3G,yBAAAxhF,EAAA,IAIA91B,EAAAu3G,aAAA,8CAAAp9F,KAAAs9F,GACAz3G,EAAAu3G,aAAAv3G,EAAAu3G,cAAAv3G,EAAAu3G,aAAA,GACAv3G,GA2BA+3G,GAAA,SAAA/tG,EAAAguG,EAAAP,GAIA,OAAAztG,EAAA,IAAAguG,EAAA,aAAoCP,EAAA1sG,OAAA,SAAAqG,GACpC,QAAAA,IACG1G,KAAA,WA8EHutG,GAAA,SAAAzpB,EAAAttD,GACA,IAAAg3E,EAtEA,SAAAh3E,GAKA,OAAAA,EAAAjoB,UAAAioB,EAAAjoB,SAAAvX,QAAAw/B,EAAAjoB,SAAA,GAAAtO,IACA,MAGA,OA6DAwtG,CAAAj3E,GACAk3E,EApDA,SAAAl3E,GAGA,IAAAm3E,EAAAn3E,EAAAvE,eAEA,OAAA07E,EAAAC,OACAT,GAAAQ,EAAAC,QAGAlB,GA2CAmB,CAAAr3E,GACAm3E,EAAAn3E,EAAAvE,eAEA67E,GAAA,EACAC,GAAA,EAEA,IAAAv3E,EAEA,SAGA,GAAAstD,EAAAvtD,YAAAzB,OAAA64E,EAAA74E,MAAA,CACA,IAAAk5E,EAAAlqB,EAAAvtD,YAAAzB,MAAA64E,EAAA74E,OAEA,GAAAk5E,EAKA,QAAAC,KAJAF,GAAA,EAEAD,GAAA,EAEAE,EAIA,IAAAA,EAAAC,GAAAtoF,MAAAqoF,EAAAC,GAAA33E,UAAA,CACAw3E,GAAA,EACA,OAQAC,IAAAL,EAAAb,eACAiB,IAIAJ,EAAAb,aA9EA,SAAA/oB,EAAAoqB,GACA,IAAApqB,EAAAvtD,YAAAzB,QAAAo5E,EACA,YAGA,IAAAF,EAAAlqB,EAAAvtD,YAAAzB,MAAAo5E,GAEA,IAAAF,EACA,YAGA,QAAAj2G,KAAAi2G,EAAA,CACA,IAAAG,EAAAH,EAAAj2G,GAEA,GAAAo2G,EAAAjqG,SAAAiqG,EAAA73E,UAEA,OAAA62E,GAAAgB,EAAA73E,UAAA,GAAArE,WAAA27E,QAAAf,aAIA,YA0DAuB,CAAAtqB,EAAA6pB,EAAA74E,QAGA44E,EAAAb,eACApsB,GAAAliD,IAAAj7B,KAAA,+HACAoqG,EAAAb,aAAAH,GAAAG,eAKA,IAAAwB,KAEAX,EAAAf,aACA0B,EAAAlsF,MAAA,GAAAurF,EAAAf,WAAAe,EAAAd,0BAGAc,EAAAb,eACAwB,EAAAjsF,MAAA,WAAAsrF,EAAAb,cAKA,IAAAyB,EAAAjB,GAAA,QAAAG,GAAAa,EAAAjsF,QACAmsF,EAAAlB,GAAA,QAAAG,GAAAa,EAAAlsF,QACAqsF,EAAAnB,GAAA,QAAAG,GAAAa,EAAAlsF,MAAAksF,EAAAjsF,QAEA,OAAA2rF,GACAD,GAAAO,EAAAlsF,OACAosF,EAAAD,GAGAR,GAAAO,EAAAlsF,OASAqsF,EAAAF,IANAA,KAWAD,EAAAlsF,OAMAqsF,IALAF,IA6CAG,GAAA,SAAAr+E,GACA,uBAAAhkB,KAAAgkB,IAWAs+E,GAAA,SAAAt+E,GACA,wBAAAhkB,KAAAgkB,IAuHAslB,GAAA,SAAAi5D,EAAAC,EAAAC,GACA,IAAAl3E,EAAA,KACAp4B,EAAA,KACAuvG,EAAA,EACAC,KACA55D,KAEA,IAAAw5D,IAAAC,EACA,OAAAnuB,GAAAwB,kBAIA,IAAA0sB,EACA,OAAAC,EAAAl5D,SAGA,IAAAk5D,EACA,OAAAD,EAAAj5D,SAIA,GAAAm5D,EACA,OAAAF,EAAAj5D,SAIA,OAAAi5D,EAAAj5D,SAAA1+C,QAAA,IAAA43G,EAAAl5D,SAAA1+C,OACA,OAAAypF,GAAAwB,kBASA,IAJA,IAAA+sB,EAAAL,EAAAj5D,SACAu5D,EAAAL,EAAAl5D,SACA9rB,EAAAolF,EAAAh4G,OAEA4yB,KACAmlF,EAAAh5G,MACAw9D,KAAAy7C,EAAAr3E,MAAA/N,GACAtqB,KAAA,UAEAyvG,EAAAh5G,MACAw9D,KAAAy7C,EAAAzvG,IAAAqqB,GACAtqB,KAAA,QAMA,IAFAsqB,EAAAqlF,EAAAj4G,OAEA4yB,KACAmlF,EAAAh5G,MACAw9D,KAAA07C,EAAAt3E,MAAA/N,GACAtqB,KAAA,UAEAyvG,EAAAh5G,MACAw9D,KAAA07C,EAAA1vG,IAAAqqB,GACAtqB,KAAA,QAUA,IALAyvG,EAAAxnC,KAAA,SAAA1jE,EAAAC,GACA,OAAAD,EAAA0vD,KAAAzvD,EAAAyvD,OAIA3pC,EAAA,EAAiBA,EAAAmlF,EAAA/3G,OAAwB4yB,IACzC,UAAAmlF,EAAAnlF,GAAAtqB,KAIA,MAHAwvG,IAIAn3E,EAAAo3E,EAAAnlF,GAAA2pC,MAEK,QAAAw7C,EAAAnlF,GAAAtqB,MAIL,MAHAwvG,IAIAvvG,EAAAwvG,EAAAnlF,GAAA2pC,MAKA,OAAA57B,GAAA,OAAAp4B,IACA41C,EAAAp/C,MAAA4hC,EAAAp4B,IACAo4B,EAAA,KACAp4B,EAAA,MAIA,OAAAkhF,GAAAjrC,iBAAAL,IAwDA+5D,GAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAArC,GACIhqB,GAAc34E,KAAA8kG,GAElB,IAAAr9E,EAAgBqxD,GAAyB94E,MAAA8kG,EAAAxxF,WAAAvd,OAAA8kF,eAAAiqB,IAAAtuG,KAAAwJ,KAAAq2E,GAAA11C,cAEzClZ,EAAAw9E,iBAAA,EACAx9E,EAAAy9E,mBACAz9E,EAAA09E,iBAAA,EACA19E,EAAA+7D,aAAAwhB,EACAv9E,EAAA29E,QAAAzC,EACAl7E,EAAA49E,YAAA,KACA59E,EAAA69E,YAAA,KACA79E,EAAA89E,gBAAA,EACA99E,EAAA+9E,yBAAA,EACA/9E,EAAAg+E,cACAh+E,EAAAi+E,aAAA,EACAj+E,EAAAk+E,YAAAtvB,GAAA1rC,QAAAN,YAAA,GACA,IAAArsC,GACAi/F,OAAA,EACAlB,eAAAt0E,EAAAk+E,aAwFA,OArFAl+E,EAAA29E,QAAArsG,QAAA,SAAAitB,GACAq+E,GAAAr+E,GACAyB,EAAA49E,YAAAr/E,EACOs+E,GAAAt+E,KACPyB,EAAA69E,YAAAt/E,KAMAyB,EAAAm+E,YAAA,IAAAxf,GAEA3+D,EAAAm+E,YAAAjgB,aACAsc,OAAA,OACAjkG,YAGAypB,EAAAm+E,YAAAhgB,UAAA,SAAA9lF,GACA,eAAAA,EAAAjW,KAAAo4G,OACAx6E,EAAAo+E,MAAA/lG,GAGA,SAAAA,EAAAjW,KAAAo4G,OACAx6E,EAAAq+E,MAAAhmG,GAGA,YAAAA,EAAAjW,KAAAo4G,OACAx6E,EAAAs+E,eAAAjmG,GAGA,2BAAAA,EAAAjW,KAAAo4G,OACAx6E,EAAAu+E,wBAAAlmG,EAAAjW,KAAAs4G,6BADA,GAOApsG,OAAAkN,eAAAwkB,EAAA,mBACAvkB,IAAA,WACA,OAAAlD,KAAAilG,kBAEA9sF,IAAA,SAAA3c,GACA,iBAAAA,MAAA,IACAwE,KAAAilG,iBAAAzpG,EACAwE,KAAAwlG,yBAAA,EAEAxlG,KAAAylG,WAAA74G,OAAA,EACAoT,KAAA0lG,aAAA,EAGA1lG,KAAA4lG,YAAAjgB,aACAsc,OAAA,qBACA3e,gBAAA9nF,QAMAzF,OAAAkN,eAAAwkB,EAAA,qBACAvkB,IAAA,WACA,OAAAlD,KAAAimG,cAAAjmG,KAAAkmG,cAAAC,mBAEAhuF,IAAA,SAAAoV,GACAvtB,KAAAimG,eACAjmG,KAAAimG,aAAAE,kBAAA54E,GAGAvtB,KAAAkmG,eACAlmG,KAAAkmG,aAAAC,kBAAA54E,MAKAx3B,OAAAkN,eAAAwkB,EAAA,YACAvkB,IAAA,WACA,SAAAlD,KAAAmlG,kBAAAnlG,KAAAulG,gBAAAvlG,KAAAkmG,cAAAlmG,KAAAkmG,aAAAE,UAAApmG,KAAAimG,cAAAjmG,KAAAimG,aAAAG,aAKArwG,OAAAkN,eAAAwkB,EAAA,YACAvkB,IAAA,WACA,OAAAooC,GAAAtrC,KAAAimG,aAAAjmG,KAAAkmG,aAAAlmG,KAAAulG,mBAGA99E,EAmbA,OAhiBEoxD,GAAQisB,EAAAC,GAyHRnsB,GAAWksB,IACb5uG,IAAA,QACAE,MAAA,SAAA0J,GACA,IAAAsE,EAAAtE,EAAAjW,KAAAua,QAEAA,EAAAva,KAAA,IAAA+B,WAAAwY,EAAAva,KAAAiW,EAAAjW,KAAAI,WAAA6V,EAAAjW,KAAAK,YACAka,EAAAmV,YAAA,IAAA3tB,WAAAwY,EAAAmV,YAAA1vB,KAAAua,EAAAmV,YAAAtvB,WAAAma,EAAAmV,YAAArvB,YAhoPA,SAAAm8G,EAAArB,EAAA5gG,GACA,IAAAq7B,EAAAulE,EAAA5hE,QAEA,GAAAh/B,EAAA6vC,UAAA7vC,EAAA6vC,SAAArnD,OAKA,QAAA2F,KAJA8zG,EAAAhjB,oBACAgjB,EAAAhjB,sBAGAj/E,EAAAy5F,eACA,IAAAwI,EAAAhjB,kBAAA9wF,GAAA,CACAktC,EAAA4X,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,YAEA,IAAAyqB,EAAAqnB,EAAA2N,aAAAuE,aAAAp/C,GAMA8zG,EAAAhjB,kBAAA9wF,GAJA6lB,GAQAqnB,EAAA6N,oBACAwF,KAAA,WACAz6C,GAAA9F,EACAi8C,MAAAj8C,IACW,GAAA6lB,MAMXhU,EAAAwwC,UAAAxwC,EAAAwwC,SAAAhoD,SAAAy5G,EAAAxiB,iBACAwiB,EAAAxiB,eAAApkD,EAAA6N,oBACAwF,KAAA,WACAtE,MAAA,mBACK,GAAAp2B,MACLiuF,EAAAxiB,eAAAyiB,gCAAAliG,EAAAwwC,SAAAqhD,cA0lPAsQ,CAAAvmG,UAAAwjF,aAAAp/E,GAEApE,KAAAklG,gBAAAv5G,KAAAyY,MAcAlO,IAAA,QACAE,MAAA,SAAA0J,GAEA,WAAAE,KAAAwjF,aAAA/lE,WAOAzd,KAAAwmG,0BANAxmG,KAAAklG,gBAAAt4G,OAAA,KAUAsJ,IAAA,0BACAE,MAAA,SAAAqwG,GACA,IAAAC,GACAn5E,OACA1wB,OAAA4pG,EAAAl5E,MAAAtK,IApNA,IAqNA0jF,aAAAF,EAAAl5E,MAAArK,IArNA,KAuNA/tB,KACA0H,OAAA4pG,EAAAtxG,IAAA8tB,IAxNA,IAyNA0jF,aAAAF,EAAAtxG,IAAA+tB,IAzNA,KA2NA/wB,oBAAAs0G,EAAAt0G,oBA3NA,KA8NAs0G,EAAAzL,2BACA0L,EAAA1L,yBAAAyL,EAAAzL,yBA/NA,KAkOAh7F,KAAAokB,SACAlvB,KAAA,yBACAitG,uBAAAuE,OAaAxwG,IAAA,2BACAE,MAAA,WACA,IAAA8xB,EAAAloB,KAEA2W,GAAA,iBACAA,EAAA5d,QAAA,SAAA7D,GAGA,GAAAgzB,EAAAhzB,EAAA,YAKAgzB,EAAAhzB,EAAA,YAIA,IAAAlL,EAAA,KAGA,GAAAk+B,EAAAs7D,aAAAtuF,EAAA,YACAlL,EAAAk+B,EAAAs7D,aAAAtuF,EAAA,YAWAkxG,UAAA,MACS,CACT,IACAQ,EAAA1xG,EAAA,gBAAsCgzB,EADtChzB,EAAA,UACsC,IACtClL,EAhRA,SAAAg7G,EAAA4B,GACA,IAAAP,EAAArB,EAAA6B,gBAAAD,GACA5kE,EAAAjsC,OAAA0R,OAAA,MACAu6B,EAAAokE,UAAA,EACApkE,EAAA8kE,YAAAT,EAEA,IAAAnxD,EAAA,SAAAh/C,GACA,mBAAAmwG,EAAAnwG,GACA8rC,EAAA9rC,GAAA,WACA,OAAAmwG,EAAAnwG,GAAAuC,MAAA4tG,EAAAt2F,iBAEK,IAAAiyB,EAAA9rC,IACLH,OAAAkN,eAAA++B,EAAA9rC,GACAgN,IAAA,WACA,OAAAmjG,EAAAnwG,IAEAiiB,IAAA,SAAA5iB,GACA,OAAA8wG,EAAAnwG,GAAAX,MAMA,QAAAW,KAAAmwG,EACAnxD,EAAAh/C,GAGA,OAAA8rC,EAqPA+kE,CAAA7+E,EAAAs7D,aAAAwjB,mBAAAJ,GACA1+E,EAAAs7D,aAAAtuF,EAAA,WAAAlL,EAGAk+B,EAAAhzB,EAAA,WAAAlL,GAEA,oCAAA+O,QAAA,SAAA+G,GACA9V,EAAAqhB,iBAAAvL,EAAA,WAEA,aAAA5K,IAAAgzB,EAAAq9E,eAuBA,MAnBA,cAAAzlG,IACAooB,EAAAhzB,EAAA,WAAAkxG,UAAA,GAGAzvF,EAAA3X,MAAA,SAAAs/B,GAGA,kBAAAA,IAAApW,EAAAq9E,kBAKArwG,IAAAopC,IAAApW,EAAAoW,EAAA,aAAApW,EAAAoW,EAAA,WAAA8nE,YAQAl+E,EAAA9D,QAAAtkB,QADA,YAkBA5J,IAAA,eACAE,MAAA,SAAAgO,GAIA,GAFApE,KAAAmlG,iBAAA,EAEAnlG,KAAAkmG,cAAAlmG,KAAAkmG,aAAA56D,SAAA1+C,OAAA,CACA,IAAAi4G,EAAA7kG,KAAAkmG,aAAA56D,SACAtrC,KAAA4lG,YAAAjgB,aACAsc,OAAA,sBACAG,YAAAyC,EAAA1vG,IAAA0vG,EAAAj4G,OAAA,KAIAoT,KAAAimG,cACAjmG,KAAA4lG,YAAAjgB,aACAsc,OAAA,gBACA5G,gBA/hBA,SAAArxG,EAAAouD,EAAA6uD,GACA,YAAA7uD,GAAA,OAAAA,IAAApuD,EAAA4C,OACA,SAIA,IAAAs6G,EAAA90G,KAAAg3F,KAAA,KAAAhxC,EAAA6uD,EAAA,IACAh8G,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAAjB,EAAA4C,UACb5C,EAAAiB,GAAAi4B,IAAAgkF,GADgCj8G,KAMhC,OAAAjB,EAAAuM,MAAAtL,GAghBAk8G,CAAAnnG,KAAAylG,WAAAzlG,KAAAwjF,aAAApgD,QAAApjC,KAAAwjF,aAAApgD,QAAAgV,cAAA,KAAAp4C,KAAA0lG,gBAIA1lG,KAAA4lG,YAAAjgB,aACAsc,OAAA,OAIAp4G,KAAAua,EAAApa,OAGAC,WAAAma,EAAAna,WACAC,WAAAka,EAAAla,aACOka,EAAApa,SACPgW,KAAA4lG,YAAAjgB,aACAsc,OAAA,aAcA/rG,IAAA,iBACAE,MAAA,SAAA0J,GACAE,KAAAylG,WA9hBA,SAAAz7G,EAAAs9F,EAAA1qF,GACA,IAAA0qF,EAAA16F,OACA,OAAA5C,EAGA,GAAA4S,EAKA,OAAA0qF,EAAA/wF,QAMA,IAHA,IAAAg3B,EAAA+5D,EAAA,GAAApkE,IACAj4B,EAAA,EAESA,EAAAjB,EAAA4C,UACT5C,EAAAiB,GAAAi4B,KAAAqK,GAD4BtiC,KAM5B,OAAAjB,EAAAuM,MAAA,EAAAtL,GAAAiN,OAAAovF,GAwgBA8f,CAAApnG,KAAAylG,WAAA3lG,EAAAjW,KAAAq4G,QAAAliG,KAAA2lG,gBAYAzvG,IAAA,SACAE,MAAA,SAAAm3B,EAAAp4B,GAeA,GAdA6K,KAAAimG,eACAjmG,KAAAimG,aAAAG,UAAA,EACApmG,KAAAimG,aAAArtE,OAAArL,EAAAp4B,GACA6K,KAAAylG,WAzgBA,SAAAz7G,EAAAujC,EAAAp4B,EAAA8xG,GAMA,IALA,IAAAjT,EAAA5hG,KAAAg3F,KAAA,KAAA77D,EAAA05E,IACAhT,EAAA7hG,KAAAg3F,KAAA,KAAAj0F,EAAA8xG,IACAI,EAAAr9G,EAAAuM,QACAtL,EAAAjB,EAAA4C,OAEA3B,OACAjB,EAAAiB,GAAAi4B,KAAA+wE,KAKA,QAAAhpG,EAEA,OAAAo8G,EAKA,IAFA,IAAAzgG,EAAA3b,EAAA,EAEA2b,OACA5c,EAAA4c,GAAAsc,KAAA8wE,KAQA,OAFAptF,EAAAxU,KAAAwf,IAAAhL,EAAA,GACAygG,EAAAh+F,OAAAzC,EAAA3b,EAAA2b,EAAA,GACAygG,EA6eAC,CAAAtnG,KAAAylG,WAAAl4E,EAAAp4B,EAAA6K,KAAA0lG,gBAGA1lG,KAAAulG,gBAAAvlG,KAAAkmG,eACAlmG,KAAAkmG,aAAAE,UAAA,EACApmG,KAAAkmG,aAAAttE,OAAArL,EAAAp4B,IAIAytF,GAAAr1D,EAAAp4B,EAAA6K,KAAA6jF,gBAEA7jF,KAAAqjF,kBACA,QAAAjrE,KAAApY,KAAAqjF,kBACAT,GAAAr1D,EAAAp4B,EAAA6K,KAAAqjF,kBAAAjrE,OAaAliB,IAAA,0BACAE,MAAA,WACA,IAAAmxG,GACAxvF,OACA5T,YACA9N,MAAA,GAEA2hB,OACA7T,YACA9N,MAAA,GAEA49C,YACAW,aAIA2yD,EAAAvnG,KAAAklG,gBAAA9sG,OAAA,SAAAovG,EAAApjG,GACA,IAAAlP,EAAAkP,EAAAlP,KACArL,EAAAua,EAAAva,KACA0vB,EAAAnV,EAAAmV,YAkBA,OAjBAiuF,EAAAtyG,GAAAiP,SAAAxY,KAAA9B,GACA29G,EAAAtyG,GAAAmB,OAAAxM,EAAAK,WACAs9G,EAAAtyG,GAAAqkB,cAEAnV,EAAA6vC,WACAuzD,EAAAvzD,SAAAuzD,EAAAvzD,SAAA/7C,OAAAkM,EAAA6vC,WAGA7vC,EAAAkf,OACAkkF,EAAAtyG,GAAAouB,KAAAlf,EAAAkf,MAIAlf,EAAAwwC,WACA4yD,EAAA5yD,SAAA4yD,EAAA5yD,SAAA18C,OAAAkM,EAAAwwC,WAGA4yD,GACOD,GAGPvnG,KAAAimG,cAAAjmG,KAAAkmG,eAGA,IAAAqB,EAAAxvF,MAAA1hB,QACA2J,KAAAslG,YAAA,MAGA,IAAAiC,EAAAvvF,MAAA3hB,QACA2J,KAAAqlG,YAAA,MAGArlG,KAAAynG,4BAGAF,EAAAvvF,MAAAsL,MACAtjB,KAAAwjF,aAAAp/D,SACAlvB,KAAA,YACAouB,KAAAikF,EAAAvvF,MAAAsL,OAIAikF,EAAAxvF,MAAAuL,MACAtjB,KAAAwjF,aAAAp/D,SACAlvB,KAAA,YACAouB,KAAAikF,EAAAxvF,MAAAuL,OAIAtjB,KAAAwlG,2BACAxlG,KAAAulG,gBAAAvlG,KAAAkmG,eACAqB,EAAAvvF,MAAA7T,SAAA5F,QAAAgpG,EAAAvvF,MAAAuB,aACAguF,EAAAvvF,MAAA3hB,OAAAkxG,EAAAvvF,MAAAuB,YAAArvB,YAGA8V,KAAAwlG,yBAAA,GAGA,IAAAkC,GAAA,EAEA1nG,KAAAimG,cAAAsB,EAAAxvF,MAAA1hB,OACAkxG,EAAAxvF,MAAA5T,SAAA5F,QAAAgpG,EAAAxvF,MAAAwB,aACAguF,EAAAxvF,MAAA1hB,OAAAkxG,EAAAxvF,MAAAwB,YAAArvB,WACA8V,KAAA2nG,yBAAAJ,EAAAxvF,MAAA/X,KAAAimG,gBACOjmG,KAAAimG,eAAAjmG,KAAAulG,gBAAAvlG,KAAAkmG,eAOPwB,GAAA,GAIM5kB,GAAgB9iF,KAAAunG,EAAAtzD,SAAAszD,EAAA3yD,WAEtB50C,KAAAulG,gBAAAvlG,KAAAkmG,cACAlmG,KAAA2nG,yBAAAJ,EAAAvvF,MAAAhY,KAAAkmG,cAGAlmG,KAAAklG,gBAAAt4G,OAAA,EAEA86G,GACA1nG,KAAAokB,QAAA,aAIApkB,KAAAmlG,iBAAA,KAYAjvG,IAAA,2BACAE,MAAA,SAAAoxG,EAAAI,GACA,IAAA58G,EAAA,EACA68G,OAAA,EAEA,GAAAL,EAAAnxG,MAAA,CACAwxG,EAAA,IAAAj8G,WAAA47G,EAAAnxG,OAEAmxG,EAAArjG,SAAApL,QAAA,SAAAqL,GACAyjG,EAAA1vF,IAAA/T,EAAApZ,GACAA,GAAAoZ,EAAAla,aAGA,IACA09G,EAAAxB,UAAA,EACAwB,EAAAE,aAAAD,GACS,MAAAj5F,GACT5O,KAAAwjF,aAAApgD,SACApjC,KAAAwjF,aAAApgD,QAAAx0B,OACAuP,MAAA,EACAjpB,KAAA,oBACAkE,QAAAwV,EAAAxV,QACA2uG,cAAAn5F,SAcA1Y,IAAA,QACAE,MAAA,WACA4J,KAAAimG,cACAjmG,KAAAimG,aAAAv0F,SAGA1R,KAAAulG,gBAAAvlG,KAAAkmG,cACAlmG,KAAAkmG,aAAAx0F,QAGA1R,KAAA4lG,aACA5lG,KAAA4lG,YAAAjgB,aACAsc,OAAA,UAIAjiG,KAAAklG,gBAAAt4G,OAAA,EACAoT,KAAAmlG,iBAAA,MAGAL,EAjiBA,CAkiBCzuB,GAAA11C,aAeGqnE,GAAe,SAAAjD,GAGnB,SAAAkD,IACItvB,GAAc34E,KAAAioG,GAElB,IAAAxgF,EAAgBqxD,GAAyB94E,MAAAioG,EAAA30F,WAAAvd,OAAA8kF,eAAAotB,IAAAzxG,KAAAwJ,OAEzCkoG,OAAA,EAGA,IAAAA,KAFAzgF,EAAAu/E,mBAAA,IAAmCxyE,EAAA/6B,EAAQ0uG,YAE3C1gF,EAAAu/E,mBACAkB,KAAAD,EAAA3xG,WAAA,mBAAAmxB,EAAAu/E,mBAAAkB,KACAzgF,EAAAygF,GAAAzgF,EAAAu/E,mBAAAkB,GAAAz3F,KAAAgX,EAAAu/E,qBA0OA,OAnOAv/E,EAAA6zB,UAAAumB,IACA9rE,OAAAkN,eAAAwkB,EAAA,YACAvkB,IAAA,WACA,OAAAlD,KAAAs7C,YAAA3iD,IACAqH,KAAAs7C,UAGAt7C,KAAAgnG,mBAAAt4G,UAEAypB,IAAA,SAAAzpB,GACAsR,KAAAs7C,UAAA5sD,EAEAA,IAAAiK,MACAqH,KAAAgnG,mBAAAt4G,eAKAqH,OAAAkN,eAAAwkB,EAAA,YACAvkB,IAAA,WACA,OAAAlD,KAAAs7C,YAAA3iD,IACA09E,GAAAjrC,mBAAA,EAAAprC,KAAAgnG,mBAAAt4G,YAGAsR,KAAAgnG,mBAAAhmD,YAGAjrD,OAAAkN,eAAAwkB,EAAA,cACAvkB,IAAA,WACA,OAAAlD,KAAAgnG,mBAAAvpF,cAGA1nB,OAAAkN,eAAAwkB,EAAA,uBACAvkB,IAAA,WACA,OAAAlD,KAAAooG,wBAKA3gF,EAAA4gF,iBACA5gF,EAAA2gF,wBAQA3gF,EAAA6gF,2BAAA,WAKA,GAHA7gF,EAAA2gF,qBAAAx7G,OAAA,EAGA,IAAA66B,EAAA4gF,cAAAz7G,OAAA,CACA,IAAAy5G,EAAA5+E,EAAA4gF,cAAA,GAMA,OALAhC,EAAAb,yBAAA,EACAa,EAAAd,gBAAAc,EAAAhB,iBAEA59E,EAAA2gF,qBAAAz8G,KAAA06G,GAaA,IAJA,IAAAkC,GAAA,EACAC,GAAA,EAGAv9G,EAAA,EAAqBA,EAAAw8B,EAAA2b,QAAAuzB,cAAA/pE,OAAwC3B,IAAA,CAC7D,IAAAmtB,EAAAqP,EAAA2b,QAAAuzB,cAAA1rE,GAEA,GAAAmtB,EAAA65B,SAAA,SAAA75B,EAAA06B,KAAA,CAGAy1D,GAAA,EACAC,GAAA,EACA,OAIA/gF,EAAA4gF,cAAAtvG,QAAA,SAAAstG,EAAAvwG,GAQA,GAFAuwG,EAAAb,yBAAA,EAEAa,EAAAf,aAAAe,EAAAhB,YAEAgB,EAAAd,eAAAgD,OACS,GAAAlC,EAAAf,cAAAe,EAAAhB,YAITgB,EAAAd,gBAAA,EACAiD,GAAA,OACS,IAAAnC,EAAAf,aAAAe,EAAAhB,cAOTgB,EAAAd,eAAAzvG,EAAA0yG,KAEAnC,EAAAd,gBACA,OAIA99E,EAAA2gF,qBAAAz8G,KAAA06G,MAIA5+E,EAAAghF,qBAAA,WACAhhF,EAAA4gF,cAAAtvG,QAAA,SAAAstG,GACAA,EAAAb,yBAAA,KAIA/9E,EAAAihF,YAAA,WACAjhF,EAAA4gF,cAAAtvG,QAAA,SAAAstG,GACAA,EAAAT,aACAS,EAAAT,YAAAjgB,aACAsc,OAAA,qBAMAx6E,EAAAkhF,yBAAA,SAAA7oG,GACA2nB,EAAA4gF,cAAAtvG,QAAA,SAAA/O,GACA,OAAAA,EAAA07G,aAAA5lG,EAAAmnG,YAKA,0CAAAluG,QAAA,SAAA2nE,GACA1gE,KAAAgnG,mBAAA37F,iBAAAq1D,EAAA1gE,KAAAokB,QAAA3T,KAAAzQ,QACKynB,GAGLA,EAAAxmB,GAAA,sBAAAnB,GAEA,IAAAiY,EAAkB0e,EAAAh9B,EAAQuT,cAAA,SAAAya,EAAAmhF,KAAA,MAE1B7wF,IAIA0P,EAAA2b,QAAAizC,GAAAt+D,EAAA4hB,YAEAlS,EAAA2b,UAMA3b,EAAA2b,QAAAiU,MAAAp2C,GAAA,YAAAwmB,EAAAihF,aAKAjhF,EAAA2b,QAAAiU,MAAAp2C,GAAA,2BAAAwmB,EAAAkhF,0BAEAlhF,EAAA2b,QAAAuzB,aAAAlvC,EAAA2b,QAAAuzB,gBACAlvC,EAAA2b,QAAAuzB,cAAA11D,GAAA,SAAAwmB,EAAA6gF,4BAEA7gF,EAAA2b,QAAAuzB,cAAA11D,GAAA,WAAAwmB,EAAA6gF,4BAEA7gF,EAAA2b,QAAAuzB,cAAA11D,GAAA,cAAAwmB,EAAA6gF,6BAGA7gF,EAAA2b,QAAAniC,GAAA,cAAAwmB,EAAAghF,0BAGAhhF,EAAAxmB,GAAA,uBAAAnB,GAGA,IAFA,IAAApR,EAAAm0F,GAAAp7D,EAAA/4B,UAEAzD,EAAA,EAAqBA,EAAAw8B,EAAA4gF,cAAAz7G,OAAgC3B,IAAA,CACrD,IAAA49G,EAAAphF,EAAA4gF,cAAAp9G,GACA0hD,EAAAk8D,EAAAhlB,gBAAAglB,EAAAhlB,eAAAl3C,KAEAA,KAAA//C,SACA+/C,IAAA//C,OAAA,GAAAigD,QAAAn+C,MAOA+4B,EAAAxmB,GAAA,uBAAAnB,GACAE,KAAAqoG,cAAAtvG,QAAA,SAAAstG,GACAA,EAAAT,aACAS,EAAAT,YAAArgB,cAGAvlF,KAAAqoG,cAAAz7G,OAAA,EAEAoT,KAAAojC,UAIApjC,KAAAojC,QAAAuzB,aAAA32D,KAAAojC,QAAAuzB,gBACA32D,KAAAojC,QAAAuzB,cAAAzvC,IAAA,SAAAlnB,KAAAsoG,4BACAtoG,KAAAojC,QAAAuzB,cAAAzvC,IAAA,WAAAlnB,KAAAsoG,4BACAtoG,KAAAojC,QAAAuzB,cAAAzvC,IAAA,cAAAlnB,KAAAsoG,6BAOAtoG,KAAAojC,QAAAK,KACAzjC,KAAAojC,QAAAlc,IAAA,cAAAlnB,KAAAyoG,sBAGAzoG,KAAAojC,QAAAiU,OAAAr3C,KAAAojC,QAAAiU,MAAA5T,MACAzjC,KAAAojC,QAAAiU,MAAAnwB,IAAA,YAAAlnB,KAAA0oG,aACA1oG,KAAAojC,QAAAiU,MAAAnwB,IAAA,2BAAAlnB,KAAA2oG,8BAIAlhF,EAgFA,OAtUEoxD,GAAQovB,EAAAlD,GAiQRnsB,GAAWqvB,IACb/xG,IAAA,oBACAE,MAAA,SAAAm3B,EAAAp4B,GACA,IAAAyZ,OAAA,EAEA,GAAA5O,KAAAtR,WAAAiK,IAIA,MAHAiW,EAAA,IAAAc,MAAA,qFACA/hB,KAAA,oBACAihB,EAAAuP,KAAA,GACAvP,GAGAzZ,EAAA6K,KAAAgnG,mBAAAt4G,UAAA8+B,MAAAxtB,KAAAgnG,mBAAAt4G,aACAsR,KAAAgnG,mBAAAt4G,SAAAyG,MAYAe,IAAA,kBACAE,MAAA,SAAAlB,GACA,IAAAlL,OAAA,EACA8+G,EAloCA,SAAA5zG,GACA,IAAAohB,GACAphB,KAAA,GACA6zG,eAEAA,EAAA7zG,EAAAwC,OAAAX,MAAA,KAYA,OAVAuf,EAAAphB,KAAA6zG,EAAA5rG,QAAAzF,OACAqxG,EAAAhwG,QAAA,SAAAiwG,GACA,IAAA5I,EAAA4I,EAAAtxG,OAAAX,MAAA,KAEA,GAAAqpG,EAAAxzG,OAAA,GACA,IAAAe,EAAAyyG,EAAA,GAAAxjG,QAAA,SAAAlF,OACAtB,EAAAgqG,EAAA,GAAAxjG,QAAA,SAAAlF,OACA4e,EAAAyyF,WAAAp7G,GAAAyI,KAGAkgB,EAinCA2yF,CAAA/zG,GAGA,4BAAA8M,KAAA8mG,EAAA5zG,MAAA,CACA,IAAAytG,KAEAmG,EAAAC,YAAAD,EAAAC,WAAApG,SACAA,EAAAmG,EAAAC,WAAApG,OAAA5rG,MAAA,KAEA4rG,GADAA,EAAAD,GAAAC,IACA1sG,OAAA,SAAA+vB,GACA,OAAAq+E,GAAAr+E,IAAAs+E,GAAAt+E,MAIA,IAAA28E,EAAA/1G,SACA+1G,GAAA,4BAGA34G,EAAA,IAAA86G,GAAA9kG,KAAA2iG,GAEA,IAAA3iG,KAAAqoG,cAAAz7G,SAMAoT,KAAAqoG,cAAA,GAAAZ,2BACAz9G,EAAAy9G,2BAGAznG,KAAAqoG,cAAA,GAAA9C,gBAAA,QAIAv7G,EAAAgW,KAAAgnG,mBAAAH,gBAAA3xG,GAIA,OADA8K,KAAAqoG,cAAA18G,KAAA3B,GACAA,MAGAi+G,EAvUmB,CAwUlB5xB,GAAA11C,aAMDuoE,GAAA,EAOA7yB,GAAA8yB,gBASA,IAAIC,GAAI,SAAAC,EAAAC,GACR,IAAAtE,EAAA3uB,GAAA8yB,aAAAE,GAEA,IAAArE,EAMA,UAAAt1F,MAAA,qCALAs1F,EAAA5gF,SACAlvB,KAAA,aACAo0G,WAcIC,GAA0B,WAC9B,QAAW/0E,EAAA/6B,EAAQ0uG,eAAkB3zE,EAAA/6B,EAAQ0uG,YAAAqB,iBAAgCh1E,EAAA/6B,EAAQ0uG,YAAAqB,gBAAA,6CAWrFrB,GAAA,WAMA,GALAnoG,KAAAmoG,aACApqF,KAAUqrF,GACVK,2BAAgCF,IAG1BA,KACN,WAAevB,GAGf,UAAAt4F,MAAA,2DAGAy4F,GAAApqF,KAAmBqrF,GACnBjB,GAAAsB,2BAAyCF,GAQzC,IAAAG,IASA1jB,gBAAA,SAAA1vE,GACA,IACAnI,OAAA,EAEA,OAAAmI,aAA0B0xF,IAC1B75F,EAAYqmB,EAAA/6B,EAAQmrF,IAAAoB,gBAAA1vE,EAAA0wF,oBACpB1wF,EAAAsyF,KAAAz6F,EACAA,GAKAmI,aAA4B0xF,IAQ5B75F,EAnBA,yBAmBA+6F,GACAA,KAEA7yB,GAAA8yB,aAAAh7F,GAAAmI,EACAnI,IAXAA,EAAYqmB,EAAA/6B,EAAQmrF,IAAAoB,gBAAA1vE,GACpBA,EAAAsyF,KAAAz6F,EACAA,KAYAkoE,GAAA8xB,eACA9xB,GAAAuO,IAAA8kB,GACA,IAAAC,GAAAtzB,GAAA11C,YACAipE,GAAAvzB,GAAArzC,aAcA6mE,GAAA,SAAAC,EAAAC,GAQA,IAPA,IAAAC,OAAA,EACAvmD,EAAAmmD,GAAAE,GAEAp7G,SAAAq7G,EAAAr7G,SACAu7G,oBAAAF,EAAAE,sBAGAh/G,EAAA,EAAiBA,EAAA8+G,EAAA79E,UAAAt/B,OAAgC3B,IAAA,CACjD,IAAAi/G,EAAAnwB,GAAAt2B,EAAAsmD,EAAA79E,UAAAjhC,IAEAi/G,EACAzmD,EAAAymD,EAEAF,GAAA,EAoBA,OAfAvwB,GAAAswB,EAAA,SAAA7yE,EAAAhiC,EAAAwQ,EAAA8oC,GACA,GAAAtX,EAAAhL,WAAAgL,EAAAhL,UAAAt/B,OAAA,CACA,IAAA2uB,EAAA2b,EAAAhL,UAAA,GAAA3Q,IAEA4uF,EAAApwB,GAAAt2B,EAAAvsB,EAAAhL,UAAA,IAEAi+E,KACA1mD,EAAA0mD,GAEAh+E,YAAAj3B,GAAAwQ,GAAA8oC,GAAAtiB,UAAA,GAAAu3B,EAAAv3B,UAAA3Q,GACAyuF,GAAA,MAKAA,EACA,KAGAvmD,GAGI2mD,GAAkB,SAAA94D,GAKtB,SAAA+4D,EAAAC,EAAA1vB,GACA,IAAA58E,EAAA+R,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MACAw6F,EAAAx6F,UAAA,GACI4oE,GAAc34E,KAAAqqG,GAElB,IAAA5iF,EAAgBqxD,GAAyB94E,MAAAqqG,EAAA/2F,WAAAvd,OAAA8kF,eAAAwvB,IAAA7zG,KAAAwJ,OAEzC86E,EAAA98E,EAAAkgB,gBACAA,OAAAjiB,IAAA6+E,KACAC,EAAA/8E,EAAAg9E,wBACAA,OAAA/+E,IAAA8+E,KAKA,GAJAtzD,EAAAwzD,KAAAL,EACAnzD,EAAAvJ,kBACAuJ,EAAAuzD,2BAEAsvB,EACA,UAAA56F,MAAA,oDAiBA,OAbA+X,EAAAxmB,GAAA,iCACAwmB,EAAA+iF,gBAIA/iF,EAAAxmB,GAAA,gCACAwmB,EAAAgjF,kBAGAhjF,EAAAlc,MAAA,eACAkc,EAAAijF,oBAGA,iBAAAJ,GACA7iF,EAAAkzD,OAAA2vB,EACaxxB,GAAyBrxD,KAGtCA,EAAAkjF,iBAAAJ,EAAAD,GAEA7iF,GA8bA,OA1eEoxD,GAAQwxB,EA2eTV,IA5bC/wB,GAAWyxB,IACbn0G,IAAA,mBACAE,MAAA,SAAAm0G,EAAAv+E,GACAhsB,KAAA4qG,sBAAAL,EACAvqG,KAAA6qG,eAAA7+E,KAGA91B,IAAA,UACAE,MAAA,WACA4J,KAAA47E,cACA57E,KAAA0qG,oBACMl2E,EAAA/6B,EAAQygB,aAAAla,KAAA27E,uBAGdzlF,IAAA,oBACAE,MAAA,WACA,OAAA4J,KAAA6e,SAAA7e,KAAA8qG,iBAGA50G,IAAA,cACAE,MAAA,WACA,GAAA4J,KAAA6e,QAAA,CACA,IAAAg9D,EAAA77E,KAAA6e,QACA7e,KAAA6e,QAAA,KACAg9D,EAAAr+D,mBAAA,KACAq+D,EAAAnqE,YAIAxb,IAAA,QACAE,MAAA,SAAA41B,GAEA,IAAAA,EACA,OAAAhsB,KAAA07E,OAIA,oBAAA17E,KAAAuL,MACA,UAAAmE,MAAA,qCAAA1P,KAAAuL,OAGA,IAAAiwE,EAAAx7E,KAAAuL,MAEA,oBAAAygB,EAAA,CACA,IAAAhsB,KAAA05E,OAAAxtD,UAAAF,GACA,UAAAtc,MAAA,yBAAAsc,GAGAA,EAAAhsB,KAAA05E,OAAAxtD,UAAAF,GAGA,IAAA8vD,GAAA97E,KAAA07E,QAAA1vD,EAAAzQ,MAAAvb,KAAA07E,OAAAngE,IAEA,GAAAugE,GAAA97E,KAAA0qG,iBAAA1+E,EAAAzQ,MAAAvb,KAAA0qG,iBAAA1+E,EAAAzQ,KAAAgQ,QASA,OARAvrB,KAAAuL,MAAA,gBACAvL,KAAA07E,OAAA1vD,OAEA8vD,IACA97E,KAAAokB,QAAA,iBACApkB,KAAAokB,QAAA,iBAOA03D,IAKA97E,KAAA07E,QACA17E,KAAAokB,QAAA,iBAMApkB,KAAA8qG,cAA2Bt2E,EAAA/6B,EAAQiZ,WAAA1S,KAAAs7E,aAAA7qE,KAAAzQ,MACnCw7E,gBACAxvD,aACO,OAGP91B,IAAA,eACAE,MAAA,SAAAwzB,GACA,IAAA4xD,EAAA5xD,EAAA4xD,cACAxvD,EAAApC,EAAAoC,SACAhsB,KAAAuL,MAAA,gBACAvL,KAAA07E,OAAA1vD,EACAhsB,KAAA0qG,iBAAA1+E,EAAAzQ,KAAAyQ,EACAhsB,KAAA8qG,cAAA,KAEA9qG,KAAAyqG,gBAGA,gBAAAjvB,EACAx7E,KAAAokB,QAAA,kBAGApkB,KAAAokB,QAAA,kBAIAluB,IAAA,QACAE,MAAA,WACA4J,KAAA47E,cACMpnD,EAAA/6B,EAAQygB,aAAAla,KAAA27E,oBAEd,iBAAA37E,KAAAuL,QAGAvL,KAAA+7E,SAAA,MAIA7lF,IAAA,OACAE,MAAA,SAAA4lF,GACA,IAAA9zD,EAAAloB,KAEMw0B,EAAA/6B,EAAQygB,aAAAla,KAAA27E,oBACd,IAAAvvD,EAAApsB,KAAAosB,QAEA,GAAA4vD,EAAA,CACA,IAAA1qD,EAAAlF,IAAAgB,eAAA,UACAptB,KAAA27E,mBAAkCnnD,EAAA/6B,EAAQiZ,WAAA,WAC1C,OAAAwV,EAAAgxB,QACS5nB,QAMTtxB,KAAA+7E,QAKA/7E,KAAAokB,QAAA,kBAJApkB,KAAAutB,WAcAr3B,IAAA,iBACAE,MAAA,WACA,IAAAsjF,EAAmB3jF,OAAAg1G,EAAA,EAAAh1G,CAAKiK,KAAAgrG,YACxBC,YAAAjrG,KAAA26E,OACAuwB,aAAAlrG,KAAAmrG,gBAEAzxB,EAAAn+D,IAAAvb,KAAA26E,OAIA,QAAA1vF,EAAA,EAAqBA,EAAAyuF,EAAAxtD,UAAAt/B,OAA6B3B,IAAA,CAClD,IAAAmgH,EAAA,mBAAAngH,EACAyuF,EAAAxtD,UAAAjhC,GAAAswB,IAAA6vF,EAEA1xB,EAAAxtD,UAAAk/E,GAAA1xB,EAAAxtD,UAAAjhC,GAgBA,OAXAwuF,GAAAC,EAAA,SAAAxiD,EAAAyiD,EAAAC,EAAAC,GACA,GAAA3iD,EAAAhL,WAAAgL,EAAAhL,UAAAt/B,OAAA,CACA,IAAAy+G,EAAA,mBAAA1xB,EAAA,IAAAC,EAAA,IAAAC,EAEA3iD,EAAAhL,UAAA,GAAA3Q,IAAA8vF,EAEA3xB,EAAAxtD,UAAAm/E,GAAAn0E,EAAAhL,UAAA,MAGAmuD,GAAAX,GACAY,GAAAZ,GACAA,KAGAxjF,IAAA,QACAE,MAAA,WACA,IAAAyzB,EAAA7pB,KAEAA,KAAA+7E,SAAA,EAGA/7E,KAAA4qG,sBACA5qG,KAAA8qG,cAA6Bt2E,EAAA/6B,EAAQiZ,WAAA1S,KAAAsrG,YAAA76F,KAAAzQ,MAAA,GAKrCA,KAAA6e,QAAA7e,KAAAi7E,KAAA3+D,KACAf,IAAAvb,KAAA26E,OACAz8D,gBAAAle,KAAAke,iBACO,SAAAtP,EAAA6pE,GAEP,GAAA5uD,EAAAhL,QAAA,CAOA,GAFAgL,EAAAhL,QAAA,KAEAjQ,EAaA,OAZAib,EAAAjb,OACAwN,OAAAq8D,EAAAr8D,OACAhjB,QAAA,uCAAAywB,EAAA8wD,OACAp+D,aAAAk8D,EAAAl8D,aAEA4B,KAAA,GAGA,iBAAA0L,EAAAte,QACAse,EAAAkyD,SAAA,GAGAlyD,EAAAzF,QAAA,SAGAyF,EAAAmhF,WAAAvyB,EAAAl8D,aAEAk8D,EAAA0G,iBAAA1G,EAAA0G,gBAAAosB,KACA1hF,EAAA2hF,cAAAviH,KAAAU,MAAA8uF,EAAA0G,gBAAAosB,MAEA1hF,EAAA2hF,cAAAviH,KAAA8kB,MAGA8b,EAAA8wD,OAAApC,GAAA1uD,EAAAmxD,wBAAAnxD,EAAA8wD,OAAAlC,GAEA5uD,EAAA4hF,uBAAA5hF,EAAA6hF,yBAAAj7F,KAAAoZ,UAYA3zB,IAAA,yBACAE,MAAA,SAAAw8B,GACA,IAAA4V,EAAAxoC,KAEA2rG,EAAsB51G,OAAAg1G,EAAA,EAAAh1G,CAAciK,KAAAgrG,YAGpC,cAAAW,GACA3rG,KAAAmrG,cAAAnrG,KAAAwrG,cAAAviH,KAAA8kB,MACA6kB,KAGA,WAAA+4E,EAAA5uF,QACA/c,KAAAmrG,cAAAQ,EAAAv1G,MAAAnN,KAAA8kB,MACA6kB,UAGA5yB,KAAA6e,QAAA7e,KAAAi7E,KAAA3+D,KACAf,IAAa28D,GAAUl4E,KAAA26E,OAAAgxB,EAAAv1G,OACvB2mB,OAAA4uF,EAAA5uF,OACAmB,gBAAAle,KAAAke,iBACO,SAAAtP,EAAA6pE,GAEP,GAAAjwC,EAAA3pB,QAAA,CAIA,GAAAjQ,EAIA,OADA45B,EAAA2iE,cAAA3iE,EAAAgjE,cAAAviH,KAAA8kB,MACA6kB,IAGA,IAAAg5E,OAAA,EAQAA,EANA,SAAAD,EAAA5uF,OACA07D,EAAA0G,iBAAA1G,EAAA0G,gBAAAosB,KAKAtiH,KAAAU,MAAA8uF,EAAA0G,gBAAAosB,MAFA/iE,EAAAgjE,cAKAviH,KAAAU,MAAA8uF,EAAAl8D,cAGAisB,EAAA2iE,cAAAS,EAAA3iH,KAAA8kB,MACA6kB,WAIA18B,IAAA,cACAE,MAAA,WACA4J,KAAAuL,MAAA,cAEAvL,KAAA8qG,cAAA,KAEA9qG,KAAA4qG,sBAMO5qG,KAAA07E,QAGP17E,KAAAosB,MAAApsB,KAAA6qG,iBARA7qG,KAAA05E,OAAA15E,KAAA6rG,iBAIA7rG,KAAAokB,QAAA,sBAaAluB,IAAA,2BACAE,MAAA,WACA,IAAAkmD,EAAAt8C,KAEAA,KAAAsrG,cAEAtrG,KAAA8rG,qBAAA9rG,KAAA07E,QACA17E,KAAAosB,MAAApsB,KAAA05E,OAAAxtD,UAAA,IASAlsB,KAAA05E,QAAA15E,KAAA05E,OAAAuwB,qBACQz1E,EAAA/6B,EAAQiZ,WAAA,WAChB4pC,EAAAl4B,QAAA,wBACSpkB,KAAA05E,OAAAuwB,wBAST/zG,IAAA,cACAE,MAAA,WACA,IAAAqmD,EAAAz8C,KAIAA,KAAA6e,QAAA7e,KAAAi7E,KAAA3+D,KACAf,IAAAvb,KAAA26E,OACAz8D,gBAAAle,KAAAke,iBACO,SAAAtP,EAAA6pE,GAEP,GAAAh8B,EAAA59B,QAAA,CAOA,GAFA49B,EAAA59B,QAAA,KAEAjQ,EAaA,OAZA6tC,EAAA7tC,OACAwN,OAAAq8D,EAAAr8D,OACAhjB,QAAA,uCAAAqjD,EAAAk+B,OACAp+D,aAAAk8D,EAAAl8D,aAEA4B,KAAA,GAGA,iBAAAs+B,EAAAlxC,QACAkxC,EAAAs/B,SAAA,GAGAt/B,EAAAr4B,QAAA,SAGAq4B,EAAAuuD,WAAAvyB,EAAAl8D,aAEA,IAAAwtF,EAAAttD,EAAAovD,iBAEAE,EAAAlC,GAAAptD,EAAAi9B,OAAAqwB,GAEAgC,IACAtvD,EAAAi9B,OAAAqyB,GAGQv3E,EAAA/6B,EAAQiZ,WAAA,WAChB+pC,EAAAr4B,QAAA,wBACSq4B,EAAAi9B,OAAAuwB,2BAUT/zG,IAAA,gBACAE,MAAA,WACA,IAAAgnD,EAAAp9C,KAEA8pG,OAAA,EACAC,OAAA,EAEA/pG,KAAA4qG,uBACAd,EAAA9pG,KAAA4qG,sBAAAlxB,OACAqwB,EAAA/pG,KAAA4qG,sBAAAiB,mBAEA/B,EAAA9pG,KAAA05E,OACAqwB,EAAA/pG,KAAA6rG,kBAGA,IAAAE,EAAAlC,GAAAC,EAAAC,GAEAgC,GACA/rG,KAAA4qG,sBACA5qG,KAAA4qG,sBAAAlxB,OAAAqyB,EAEA/rG,KAAA05E,OAAAqyB,EAGA/rG,KAAA07E,OAAAqwB,EAAA7/E,UAAAlsB,KAAA07E,OAAAngE,MAEAvb,KAAAokB,QAAA,qBAGApkB,KAAAosB,QAAAb,UACAvrB,KAAA27E,mBAAkCnnD,EAAA/6B,EAAQiZ,WAAA,WAC1C0qC,EAAAh5B,QAAA,uBACSm2D,GAAAv6E,KAAAosB,UAAA2/E,KAGT/rG,KAAAokB,QAAA,sBAGAimF,EA3esB,GA8etB2B,GAAA,SAAA7kG,GACA,OAAAkvE,GAAAliD,IAAAY,MACAshD,GAAAliD,IAAAY,MAAAtkB,KAAA4lE,GAAA,OAAAlvE,EAAA,MAGA,cAGA,SAAS8kG,MAqBT,IAAAC,GAAA,WACA,SAAAA,EAAAlH,EAAA4B,EAAA1xG,EAAAi3G,GACIxzB,GAAc34E,KAAAksG,GAClBlsG,KAAAosG,cACApsG,KAAAqsG,iBAAA,KACArsG,KAAAilG,iBAAA,EACAjlG,KAAAglG,cACAhlG,KAAAssG,kBAAA,EACAtsG,KAAAo1F,MAAAlgG,EACA8K,KAAAusG,UAAA3F,EACA5mG,KAAAwsG,QAAAR,GAAA,iBAAA92G,EAAA,KAAA0xG,EAAA,KAEA,WAAA5B,EAAAvnF,WACAunF,EAAA35F,iBAAA,aAAArL,KAAAysG,oBAAAh8F,KAAAzQ,KAAA4mG,EAAAuF,IAEAnsG,KAAAysG,oBAAA7F,EAAAuF,GAmNA,OA/MEvzB,GAAWszB,IACbh2G,IAAA,sBACAE,MAAA,SAAAwwG,EAAAuF,GACA,IAAA1kF,EAAAznB,KAEAA,KAAA0sG,cAAA1sG,KAAAglG,YAAA6B,gBAAAD,GACA5mG,KAAAwsG,QAAA,wBAEAL,IACAA,EAAA/nF,QAAA,qBAEApkB,KAAAglG,YAAAqD,cAAAz7G,OAAA,GAKAu/G,EAAAlrG,GAAA,+BACAwmB,EAAAklF,WAMA3sG,KAAA2sG,YAGAz2G,IAAA,SACAE,MAAA,WACA,IAAA8xB,EAAAloB,KAEAA,KAAA4sG,UAAA,EAGA5sG,KAAA6sG,qBAAA,WACA,IAAAC,EAAA5kF,EAAAmkF,iBACAnkF,EAAAmkF,iBAAA,KAEAnkF,EAAAskF,QAAA,aAAAhqB,GAAAt6D,EAAAojB,YAAA,KAEAwhE,GACAA,IAGA5kF,EAAA6kF,gBAGA/sG,KAAA0sG,cAAArhG,iBAAA,YAAArL,KAAA6sG,sBACA7sG,KAAA+sG,kBAUA72G,IAAA,QACAE,MAAA,SAAAw8B,GACA,IAAA/I,EAAA7pB,KAEAA,KAAAssG,kBACAtsG,KAAAgtG,eAAA,WACAnjF,EAAA6iF,cAAAh7F,SACSkhB,MAYT18B,IAAA,eACAE,MAAA,SAAAzL,EAAAioC,GACA,IAAA4V,EAAAxoC,KAEAA,KAAAssG,kBAAA,EACAtsG,KAAAgtG,eAAA,WACAriH,EAAAsiH,gCACAzkE,EAAAkkE,cAAArhG,iBAAA,yBAAA1gB,EAAAsiH,gCAGAzkE,EAAAkkE,cAAA5E,aAAAn9G,EAAA0L,QACO,WACP1L,EAAAsiH,gCACAzkE,EAAAkkE,cAAApwE,oBAAA,yBAAA3xC,EAAAsiH,gCAGAr6E,SAUA18B,IAAA,WACAE,MAAA,WACA,OAAA4J,KAAA0sG,cAIA1sG,KAAA0sG,cAAAphE,SAHA+qC,GAAAjrC,sBAgBAl1C,IAAA,SACAE,MAAA,SAAAm3B,EAAAp4B,GACA,IAAAmnD,EAAAt8C,KAEA4yB,EAAA7iB,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,GAAqFk8F,GAErFjsG,KAAAssG,kBACAtsG,KAAAgtG,eAAA,WACA1wD,EAAAkwD,QAAA,WAAAj/E,EAAA,OAAAp4B,EAAA,KAEAmnD,EAAAowD,cAAA9zE,OAAArL,EAAAp4B,IACSy9B,MAUT18B,IAAA,WACAE,MAAA,WAEA,OAAA4J,KAAA0sG,eAAA1sG,KAAA0sG,cAAAtG,YACApmG,KAAAqsG,kBAAArsG,KAAAqsG,mBAA2DJ,MAS3D/1G,IAAA,kBACAE,MAAA,SAAApL,GACA,IAAAyxD,EAAAz8C,KASA,YAPA,IAAAhV,IACAgV,KAAAgtG,eAAA,WACAvwD,EAAAiwD,cAAAppB,gBAAAt4F,IAEAgV,KAAAilG,iBAAAj6G,GAGAgV,KAAAilG,oBAOA/uG,IAAA,iBACAE,MAAA,SAAAolB,EAAAoX,GACA5yB,KAAAosG,WAAAzgH,MAAA6vB,EAAA/K,KAAAzQ,MAAA4yB,IACA5yB,KAAA+sG,kBAOA72G,IAAA,eACAE,MAAA,WACA,IAAA+wB,OAAA,GAEAnnB,KAAAomG,YAAApmG,KAAAosG,WAAAx/G,QAAAoT,KAAA4sG,WACAzlF,EAAAnnB,KAAAosG,WAAAjvG,QACA6C,KAAAqsG,iBAAAllF,EAAA,GACAA,EAAA,SAQAjxB,IAAA,UACAE,MAAA,WACA4J,KAAA0sG,cAAApwE,oBAAA,YAAAt8B,KAAA6sG,sBAEA7sG,KAAA0sG,eAAA,SAAA1sG,KAAAglG,YAAAvnF,YACAzd,KAAA0sG,cAAAh7F,YAIAw6F,EAlOA,GAqOAgB,IACAC,mBAAA,GACAC,uBAAA,GACAC,wBAAA,EAEAC,kBAAA,QAGAC,mBAAA,IAEAC,sBAAA,EACAC,0BAAA,GACAC,2BAAA,GAEAC,GACA,EADAA,IAEA,IAFAA,IAGA,IA2BAC,GAAA,SAAAxpG,GACA,IAlBA6kB,EAEA4kF,EAgBA7wF,KAMA,OAJA5Y,EAAA6kB,YACAjM,EAAA8wF,OArBA7kF,EAqBA7kB,EAAA6kB,UAhBA4kF,EAAA5kF,EAAAj+B,OAAAi+B,EAAAr8B,OAAA,EAEA,SADAq8B,EAAAj+B,OACA,IAAA6iH,IAiBA7wF,GASA+wF,GAAA,SAAAC,GACAA,EAAAj1G,QAAA,SAAAwiF,GACAA,EAAA7pE,WAiDAu8F,GAAA,SAAAr/F,EAAAiQ,GACA,OAAAA,EAAAugE,UAEAhjE,OAAAyC,EAAAzC,OACAhjB,QAAA,iCAAAylB,EAAAtD,IACA4C,KAAAwvF,GACArxF,IAAAuC,GAIAA,EAAA1C,SAEAC,OAAAyC,EAAAzC,OACAhjB,QAAA,+BAAAylB,EAAAtD,IACA4C,KAAAwvF,GACArxF,IAAAuC,GAIAjQ,GAEAwN,OAAAyC,EAAAzC,OACAhjB,QAAA,+BAAAylB,EAAAtD,IACA4C,KAAAwvF,GACArxF,IAAAuC,GAIA,MAkLAqvF,GAAA,SAAAF,EAAAG,EAAAC,GACA,IAAA5uF,EAAA,EACA6uF,GAAA,EACA,gBAAAz/F,EAAAxK,GACA,IAAAiqG,EAIA,OAAAz/F,GACAy/F,GAAA,EAEAN,GAAAC,GAYAI,EAAAx/F,EAAAxK,KAGAob,GAAA,KAEAwuF,EAAAphH,QAEAwX,EAAAkqG,iBAAArlH,KAAA8kB,MAEA3J,EAAAmqG,eAjEA,SAAAJ,EAAA/pG,EAAAgqG,GAUAD,EAAA9iG,iBAAA,UATA,SAAAmjG,EAAA1uG,GACA,GAAAA,EAAAjW,KAAAsd,SAAA/C,EAAAqqG,UAAA,CACAN,EAAA7xE,oBAAA,UAAAkyE,GACA,IAAAr8E,EAAAryB,EAAAjW,KAAAsoC,UAEA,OADA/tB,EAAA/N,MAAA,IAAAzK,WAAAumC,EAAA97B,MAAA87B,EAAAloC,WAAAkoC,EAAAjoC,YACAkkH,EAAA,KAAAhqG,MAOA+pG,EAAAxoB,YAAAjG,IACAv4E,OAAA/C,EAAAqqG,UACA38E,UAAA1tB,EAAAmqG,eACAr4G,IAAAkO,EAAAlO,IAAAG,MACAu1B,GAAAxnB,EAAAlO,IAAA01B,MACGxnB,EAAAmqG,eAAAvkH,OAAAoa,EAAAlO,IAAAG,MAAArM,SAgDH0kH,CAAAP,EAAA/pG,EAAAgqG,GAIAA,EAAA,KAAAhqG,SATA,IAyBAuqG,GAAA,SAAAvqG,EAAAwqG,GACA,gBAAA9uG,GA5RA,IAAA+uG,EACAhwF,EAEAiwF,EAgSA,OANA1qG,EAAA0qG,MAAAz4B,GAAArzC,aAAA5+B,EAAA0qG,OA5RAjwF,GADAgwF,EA6RA/uG,GA5RAc,QAEAkuG,GACAxwB,UAAA3lF,IACA4lF,cAAA,EACAU,cAJAh2F,KAAA8kB,MAAA8Q,EAAAqgE,aAIA,IAEAX,cAAAswB,EAAAE,OAIAD,EAAAxwB,UAAAlsF,KAAA+mB,MAAA21F,EAAAvwB,cAAAuwB,EAAA7vB,cAAA,OACA6vB,KAkRA1qG,EAAA0qG,MAAAE,sBAAA5qG,EAAA0qG,MAAAvwB,gBACAn6E,EAAA0qG,MAAAE,qBAAA/lH,KAAA8kB,OAGA6gG,EAAA9uG,EAAAsE,KAqDA6qG,GAAA,SAAA1zB,EAAA2zB,EAAAC,EAAAC,EAAAhrG,EAAAwqG,EAAAR,GACA,IAAAJ,KACAqB,EAAAnB,GAAAF,EAAAmB,EAAAf,GAEA,GAAAhqG,EAAAlO,IAAA,CACA,IAKAo5G,EAAA/zB,EALAlF,GAAArzC,aAAAksE,GACA3zF,IAAAnX,EAAAlO,IAAAikF,YACA39D,aAAA,gBA9RA,SAAApY,EAAAirG,GACA,gBAAAzgG,EAAAiQ,GACA,IAAAlD,EAAAkD,EAAAlD,SACA4zF,EAAAtB,GAAAr/F,EAAAiQ,GAEA,GAAA0wF,EACA,OAAAF,EAAAE,EAAAnrG,GAGA,QAAAuX,EAAAzxB,WACA,OAAAmlH,GACAjzF,OAAAyC,EAAAzC,OACAhjB,QAAA,2BAAAylB,EAAAtD,IACA4C,KAAAwvF,GACArxF,IAAAuC,GACOza,GAGP,IAAAta,EAAA,IAAAC,SAAA4xB,GAEA,OADAvX,EAAAlO,IAAAG,MAAA,IAAA1G,aAAA7F,EAAAiC,UAAA,GAAAjC,EAAAiC,UAAA,GAAAjC,EAAAiC,UAAA,GAAAjC,EAAAiC,UAAA,MACAsjH,EAAA,KAAAjrG,IA4QAorG,CAAAprG,EAAAirG,IAEArB,EAAAriH,KAAA2jH,GAIA,GAAAlrG,EAAAvO,MAAAuO,EAAAvO,IAAAQ,MAAA,CACA,IAMAo5G,EAAAl0B,EANAlF,GAAArzC,aAAAksE,GACA3zF,IAAAnX,EAAAvO,IAAAskF,YACA39D,aAAA,cACAQ,QAAA4wF,GAAAxpG,EAAAvO,OAzQ6B,SAAAuO,EAAAgrG,EAAAC,GAC7B,gBAAAzgG,EAAAiQ,GACA,IAAAlD,EAAAkD,EAAAlD,SACA4zF,EAAAtB,GAAAr/F,EAAAiQ,GAEA,OAAA0wF,EACAF,EAAAE,EAAAnrG,GAIA,IAAAuX,EAAAzxB,WACAmlH,GACAjzF,OAAAyC,EAAAzC,OACAhjB,QAAA,qCAAAylB,EAAAtD,IACA4C,KAAAwvF,GACArxF,IAAAuC,GACOza,IAGPA,EAAAvO,IAAAQ,MAAA,IAAAzK,WAAAizB,EAAAlD,UAEAyzF,EAAAjO,iBACAiO,EAAAj3G,OAGAiM,EAAAvO,IAAAwrG,WAA6BqO,EAAAj2G,EAAQhL,UAAA2V,EAAAvO,IAAAQ,OACrC+N,EAAAvO,IAAAiD,cAAgC42G,EAAAj2G,EAAQX,cAAAsL,EAAAvO,IAAAQ,OACxCg5G,EAAA,KAAAjrG,KAgPqCurG,CAAyBvrG,EAAAgrG,EAAAC,IAE9DrB,EAAAriH,KAAA8jH,GAGA,IAMAG,EAAAr0B,EANAlF,GAAArzC,aAAAksE,GACA3zF,IAAAnX,EAAA+1E,YACA39D,aAAA,cACAQ,QAAA4wF,GAAAxpG,KAzOA,SAAAA,EAAAgrG,EAAAC,GACA,gBAAAzgG,EAAAiQ,GACA,IAAAlD,EAAAkD,EAAAlD,SACA4zF,EAAAtB,GAAAr/F,EAAAiQ,GACAmC,OAAA,EAEA,OAAAuuF,EACAF,EAAAE,EAAAnrG,GAIA,IAAAuX,EAAAzxB,WACAmlH,GACAjzF,OAAAyC,EAAAzC,OACAhjB,QAAA,qCAAAylB,EAAAtD,IACA4C,KAAAwvF,GACArxF,IAAAuC,GACOza,IAGPA,EAAA0qG,MA/KA,SAAAjwF,GACA,OACAy/D,UAAAz/D,EAAAy/D,UACAC,cAAA1/D,EAAA0/D,eAAA,EACAU,cAAApgE,EAAAogE,eAAA,GA2KA4wB,CAAAhxF,GAEAza,EAAAlO,IACAkO,EAAAmqG,eAAA,IAAA3iH,WAAAizB,EAAAlD,UAEAvX,EAAA/N,MAAA,IAAAzK,WAAAizB,EAAAlD,UAKAvX,EAAAvO,KAAAuO,EAAAvO,IAAAQ,QAEA+4G,EAAAjO,iBACAiO,EAAAj3G,QAGA6oB,EAAAouF,EAAAzlH,MAAAya,EAAA/N,MAAA+N,EAAAvO,IAAAiD,cAAAsL,EAAAvO,IAAAwrG,cAEArgF,EAAAizB,WACA7vC,EAAAy5F,eAAA78E,EAAA68E,eACAz5F,EAAA0rG,aAAA9uF,EAAAizB,WAIAo7D,EAAA,KAAAjrG,KA+LA2rG,CAAA3rG,EAAAgrG,EAAAC,IAIA,OAFAO,EAAAvkG,iBAAA,WAAAsjG,GAAAvqG,EAAAwqG,IACAZ,EAAAriH,KAAAikH,GACA,WACA,OAAA7B,GAAAC,KAgBIgC,GAAoB,SAAAljG,EAAAo7F,GACxB,IAAAh9G,EAEA,OAAA4hB,IAIA5hB,EAAWspC,EAAA/6B,EAAQ08B,iBAAArpB,IAMnB5hB,EAAAg9G,GATA,IAoBA+H,GAAA,SAAAzxF,EAAA0xF,GACA,IAAAC,EAAA3xF,EAAAjoB,QACAioB,EAAA2+C,KAAA,SAAA9vD,EAAAu/C,GACA,IAAAwjD,EAAAF,EAAA7iG,EAAAu/C,GAEA,WAAAwjD,EACAD,EAAA52G,QAAA8T,GAAA8iG,EAAA52G,QAAAqzD,GAGAwjD,KAeIC,GAAwB,SAAAhjG,EAAAu/C,GAC5B,IAAA0jD,OAAA,EACAC,OAAA,EAaA,OAXAljG,EAAAwa,WAAAuB,YACAknF,EAAAjjG,EAAAwa,WAAAuB,WAGAknF,KAAmC97E,EAAA/6B,EAAQi/D,OAAAklB,UAE3ChxB,EAAA/kC,WAAAuB,YACAmnF,EAAA3jD,EAAA/kC,WAAAuB,WAIAknF,GADAC,KAAqC/7E,EAAA/6B,EAAQi/D,OAAAklB,YAgY7C4yB,GAAA,SAAAnqE,GACA,uBAAAA,GAAAxtC,SAAAwtC,IA8EIoqE,GAAa,SAAA1L,GAGjB,SAAA2L,EAAA/4D,GACIghC,GAAc34E,KAAA0wG,GAElB,IAAAjpF,EAAgBqxD,GAAyB94E,MAAA0wG,EAAAp9F,WAAAvd,OAAA8kF,eAAA61B,IAAAl6G,KAAAwJ,OAEzC,IAAA23C,EACA,UAAAhxC,UAAA,wCAGA,sBAAAgxC,EAAAS,YACA,UAAAzxC,UAAA,mCAGA,IAAAgxC,EAAAqtD,YACA,UAAAr+F,UAAA,4BA0EA,OAtEA8gB,EAAA62D,UAAA3mC,EAAA2mC,UACA72D,EAAAkpF,YACAnhH,KAAA,EACAgwB,MAAA,GAEAiI,EAAAmpF,UAAA/uC,IAEAp6C,EAAAopF,cAEAppF,EAAAu2D,WAAA,KAEAv2D,EAAAqpF,WAAAn5D,EAAAo5D,UACAtpF,EAAAupF,aAAAr5D,EAAAS,YACA3wB,EAAAwpF,UAAAt5D,EAAAqJ,SACAv5B,EAAAypF,SAAAv5D,EAAAiyB,QACAniD,EAAA6zB,UAAA3D,EAAAjpD,SACA+4B,EAAA+7D,aAAA7rC,EAAAqtD,YACAv9E,EAAAwzD,KAAAtjC,EAAAijC,IACAnzD,EAAA0pF,YAAAx5D,EAAAy5D,WACA3pF,EAAA4pF,oBAAA,EACA5pF,EAAA6pF,sBAAA35D,EAAA45D,qBACA9pF,EAAA+pF,kBAAA75D,EAAA85D,iBACAhqF,EAAAiqF,YAAA/5D,EAAAg6D,WACAlqF,EAAA47D,kBAAA1rC,EAAAi6D,iBACAnqF,EAAAoqF,OAAA,OAEApqF,EAAAqqF,oBAAA,KACArqF,EAAAw0B,YAAA,EACAx0B,EAAAsqF,kBAAA,EACAtqF,EAAAuqF,gBAAA,KACAvqF,EAAA8kF,UAAA,KACA9kF,EAAAwqF,eAAA,KACAxqF,EAAAyqF,YAAA,KAEAzqF,EAAA0qF,qBAAA,KACA1qF,EAAA2qF,iBAEA3qF,EAAA4qF,eAAA,IAA+B/wD,EAAA,cAC/B75B,EAAA6qF,WAAA36D,EAAAw2D,UAIA1mF,EAAA8qF,gBAAA56D,EAAA66D,eACA/qF,EAAAgrF,YACAC,aAAA,EACAvpD,KAAA,GAGA1hC,EAAA8qF,gBAAAtxG,GAAA,4BACA,OAAAwmB,EAAArD,QAAA,oBAGAqD,EAAA+7D,aAAAn4E,iBAAA,wBACA,OAAAoc,EAAAkrF,QAAA,IAIAlrF,EAAAmrF,gBAAA,EACAnrF,EAAA+kF,QAAAR,GAAA,iBAAAvkF,EAAA0pF,YAAA,KACAp7G,OAAAkN,eAAAwkB,EAAA,SACAvkB,IAAA,WACA,OAAAlD,KAAA6xG,QAEA15F,IAAA,SAAA06F,GACAA,IAAA7yG,KAAA6xG,SACA7xG,KAAAwsG,QAAAxsG,KAAA6xG,OAAA,OAAAgB,GACA7yG,KAAA6xG,OAAAgB,MAIAprF,EAgrCA,OA1wCEoxD,GAAQ63B,EAAA3L,GAmGRnsB,GAAW83B,IACbx6G,IAAA,cACAE,MAAA,WACA4J,KAAA8yG,sBAAA,EACA9yG,KAAA+yG,cAAA,EACA/yG,KAAAgzG,qBAAA,EACAhzG,KAAAizG,sBAAA,EACAjzG,KAAAkzG,qBAAA,EACAlzG,KAAAmzG,sBAAA,EACAnzG,KAAAozG,mBAAA,KAOAl9G,IAAA,UACAE,MAAA,WACA4J,KAAAuL,MAAA,WACAvL,KAAAgvC,QACAhvC,KAAAqzG,SAEArzG,KAAAiyG,gBACAjyG,KAAAiyG,eAAA7qF,UAGApnB,KAAA6wG,cACA7wG,KAAAqyG,eAAAr2D,WAQA9lD,IAAA,QACAE,MAAA,WACA,YAAA4J,KAAAuL,OAQAvL,KAAAqzG,SAKArzG,KAAAuL,MAAA,QAGAvL,KAAA8uC,UACA9uC,KAAAszG,kBAhBAtzG,KAAAgyG,kBACAhyG,KAAAgyG,gBAAA,SAyBA97G,IAAA,SACAE,MAAA,WACA4J,KAAAgyG,iBACAhyG,KAAAgyG,gBAAAuB,gBAIAvzG,KAAAgyG,gBAAA,QAUA97G,IAAA,QACAE,MAAA,SAAAo9G,GAMA,YALA,IAAAA,IACAxzG,KAAAi8C,OAAAu3D,GAGAxzG,KAAAgyG,gBAAA,KACAhyG,KAAAi8C,UAGA/lD,IAAA,cACAE,MAAA,WACA4J,KAAA2yG,QAAA,EACA3yG,KAAAgvC,QACAhvC,KAAAokB,QAAA,YAUAluB,IAAA,YACAE,MAAA,WACA,OAAA4J,KAAAiyG,eAIAjyG,KAAAiyG,eAAA3mE,WAHA+qC,GAAAjrC,sBAiBAl1C,IAAA,cACAE,MAAA,SAAAP,GACA,IAAA49G,EAAA1jG,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,IAAAA,UAAA,GAEA,IAAAla,EACA,YAGA,IAAAwC,EAAAwnF,GAAAhqF,GACA69G,EAAA1zG,KAAAoyG,cAAA/5G,GAYA,OAVAo7G,IAAAC,GAAA79G,EAAAQ,QACA2J,KAAAoyG,cAAA/5G,GAAAq7G,GACAv5B,YAAAtkF,EAAAskF,YACAlxD,UAAApzB,EAAAozB,UACA5yB,MAAAR,EAAAQ,MACAgrG,WAAAxrG,EAAAwrG,WACAvoG,cAAAjD,EAAAiD,gBAIA46G,GAAA79G,KAUAK,IAAA,qBACAE,MAAA,WACA,OAAA4J,KAAA2zG,YAGA3zG,KAAAiyG,gBAAAjyG,KAAAusG,WAAA,SAAAvsG,KAAAuL,SAAAvL,KAAA8uC,YAOA54C,IAAA,OACAE,MAAA,WAKA,GAHA4J,KAAAszG,iBAGAtzG,KAAA2zG,UAAA,CAOA,GAFA3zG,KAAAuyG,gBAAAqB,mBAAA5zG,KAAA2zG,WAEA,SAAA3zG,KAAAuL,OAAAvL,KAAA6zG,qBACA,OAAA7zG,KAAA8zG,SAKA9zG,KAAA6zG,sBAAA,UAAA7zG,KAAAuL,OAAA,SAAAvL,KAAAuL,QAIAvL,KAAAuL,MAAA,aAWArV,IAAA,QACAE,MAAA,WAIA,OAHA4J,KAAAuL,MAAA,QACAvL,KAAAiyG,eAAA,IAAA/F,GAAAlsG,KAAAwjF,aAAAxjF,KAAAusG,UAAAvsG,KAAAmxG,YAAAnxG,KAAA+zG,sBACA/zG,KAAAg0G,kBACAh0G,KAAAszG,oBASAp9G,IAAA,WACAE,MAAA,SAAA69G,GACA,IAAAj2G,EAAA+R,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MAEA,GAAAkkG,EAAA,CAIA,IAAAC,EAAAl0G,KAAA2zG,UACAvwF,EAAApjB,KAAAgyG,gBACAhyG,KAAA2zG,UAAAM,EACAj0G,KAAAkyG,YAAAl0G,EAIAgC,KAAA8wG,eACAmD,EAAAE,UACA1oF,cAAAwoF,EAAAxoF,cACA09B,KAAA,IAIA,IAAAirD,EAAA,KAgBA,GAdAF,IACAA,EAAA77G,GACA+7G,EAAAF,EAAA77G,GACS67G,EAAA34F,MACT64F,EAAAF,EAAA34F,MAIAvb,KAAAwsG,QAAA,oBAAA4H,EAAA,QAAAH,EAAA57G,IAAA47G,EAAA14F,KAAA,KAGAvb,KAAAokB,QAAA,kBAGA,SAAApkB,KAAAuL,OAAAvL,KAAA6zG,qBACA,OAAA7zG,KAAA8zG,QAGA,GAAAI,KAAA34F,MAAA04F,EAAA14F,IAAA,CAaA,IAAA84F,EAAAJ,EAAAxoF,cAAAyoF,EAAAzoF,cACAzrB,KAAAwsG,QAAA,sBAAA6H,EAAA,KAIA,OAAAr0G,KAAAg+E,aACAh+E,KAAAg+E,YAAAq2B,GAMAjxF,IACAA,EAAA46D,YAAAq2B,EAIAjxF,EAAA46D,YAAA,IACA56D,EAAAhf,QAAA6vG,EAAA9vG,SAAAif,EAAA46D,cAIAh+E,KAAAuyG,gBAAA+B,uBAAAJ,EAAAD,QAlCA,OAAAj0G,KAAAg+E,YAGAh+E,KAAAu0G,mBAyCAr+G,IAAA,QACAE,MAAA,WACA4J,KAAA8xG,sBACQt9E,EAAA/6B,EAAQygB,aAAAla,KAAA8xG,qBAChB9xG,KAAA8xG,oBAAA,SAUA57G,IAAA,SACAE,MAAA,WACA,cAAA4J,KAAA8xG,uBAYA57G,IAAA,WACAE,MAAA,SAAAo+G,EAAArI,GACAnsG,KAAAusG,YAIAvsG,KAAAusG,UAAAiI,EACAx0G,KAAA+zG,qBAAA5H,EAGA,SAAAnsG,KAAAuL,OAAAvL,KAAA6zG,sBACA7zG,KAAA8zG,YAUA59G,IAAA,kBACAE,MAAA,SAAAw8B,GACA5yB,KAAA2yG,QAAA,EACA3yG,KAAAy0G,cACAz0G,KAAA44B,OAAA,EAAA54B,KAAAs7C,YAAA1oB,GAEA5yB,KAAAqyG,eAAAxQ,mBACA7hG,KAAAokB,QAAA,sBAUAluB,IAAA,cACAE,MAAA,WACA4J,KAAA4yG,gBAAA,EACA5yG,KAAAu0G,kBAQAr+G,IAAA,eACAE,MAAA,WACA4J,KAAAg+E,WAAA,KACAh+E,KAAAyyG,WAAA,KACAzyG,KAAA0R,WAWAxb,IAAA,SACAE,MAAA,SAAAm3B,EAAAp4B,EAAAy9B,GAOA,GANA5yB,KAAAiyG,gBACAjyG,KAAAiyG,eAAAr5E,OAAArL,EAAAp4B,EAAAy9B,GAGAgwD,GAAAr1D,EAAAp4B,EAAA6K,KAAAsxG,uBAEAtxG,KAAAqjF,kBACA,QAAAhrF,KAAA2H,KAAAqjF,kBACAT,GAAAr1D,EAAAp4B,EAAA6K,KAAAqjF,kBAAAhrF,OAWAnC,IAAA,iBACAE,MAAA,WACA4J,KAAA8xG,qBACQt9E,EAAA/6B,EAAQygB,aAAAla,KAAA8xG,qBAGhB9xG,KAAA8xG,oBAAiCt9E,EAAA/6B,EAAQiZ,WAAA1S,KAAA00G,mBAAAjkG,KAAAzQ,MAAA,MAUzC9J,IAAA,qBACAE,MAAA,WACA,UAAA4J,KAAAuL,OACAvL,KAAA20G,cAGA30G,KAAA8xG,qBACQt9E,EAAA/6B,EAAQygB,aAAAla,KAAA8xG,qBAGhB9xG,KAAA8xG,oBAAiCt9E,EAAA/6B,EAAQiZ,WAAA1S,KAAA00G,mBAAAjkG,KAAAzQ,MAxoBzC,QAqpBA9J,IAAA,cACAE,MAAA,WACA,IAAA4J,KAAAiyG,eAAA7L,WAAA,CAIApmG,KAAAyyG,aACAzyG,KAAAyyG,WAAAzyG,KAAAuyG,gBAAAqC,aAAA50G,KAAA2zG,UAAA3zG,KAAAs7C,YAAAt7C,KAAA+xG,iBAAA/xG,KAAAgxG,iBAIA,IAAA5tF,EAAApjB,KAAA60G,aAAA70G,KAAA80G,YAAA90G,KAAA2zG,UAAA3zG,KAAAg+E,WAAAh+E,KAAA8wG,aAAA9wG,KAAAgxG,eAAAhxG,KAAAyyG,YAEArvF,IAIApjB,KAAA+0G,eAAA3xF,EAAA46D,YACAh+E,KAAAg1G,eAIA5xF,EAAA46D,aAAAh+E,KAAA2zG,UAAAxvG,SAAAvX,OAAA,aAAAoT,KAAAwjF,aAAA/lE,YAAAzd,KAAAkxG,eAWA9tF,EAAA6K,WAAAjuB,KAAA+xG,kBAAA,OAAA3uF,EAAA6xF,gBAAA7xF,EAAA6xF,eAAAj1G,KAAAiyG,eAAA3uB,qBACAtjF,KAAAuyG,gBAAAv2D,QACA54B,EAAAkgE,gBAAAlgE,EAAA6xF,eACAj1G,KAAAqyG,eAAAxQ,oBAGA7hG,KAAAk1G,aAAA9xF,SAWAltB,IAAA,iBACAE,MAAA,SAAA4nF,GAEA,OA9rBA,SAAAhyD,EAAAg5E,EAAA0N,GACA,IAAA1mF,IAAAg5E,EACA,SAGA,IAGAmQ,EAAAzC,IAHA1mF,EAAA7nB,SAGAvX,OAIA,OAAAo/B,EAAAT,SAAA,SAAAy5E,EAAAvnF,YAAA03F,EAkrBAC,CADArlG,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,GAAA/P,KAAA2zG,UACA3zG,KAAAwjF,aAAAxF,KAAAh+E,KAAAiyG,eAAA7L,cAgBAlwG,IAAA,eACAE,MAAA,SAAAk1C,EAAAtf,EAAAgyD,EAAA+yB,EAAA34D,EAAAm/C,GACA,IAAA8d,EAAA,EACAJ,OAAA,EAEA3pE,EAAA1+C,SACAyoH,EAAA/pE,EAAAn2C,IAAAm2C,EAAA1+C,OAAA,IAGA,IAAA0oH,EAAAljH,KAAAwf,IAAA,EAAAyjG,EAAAj9D,GAEA,IAAApsB,EAAA7nB,SAAAvX,OACA,YAKA,GAAA0oH,GAAAt1G,KAAAwxG,oBACA,YAKA,IAAAT,GAAAuE,GAAA,EACA,YAOA,UAAA/d,EAEA,OADAvZ,EAAAh+E,KAAAu1G,yBAAAvpF,GACAhsB,KAAAw1G,qBAAAxpF,EAAAgyD,EAAA,SAIA,UAAAA,EAAA,CACA,IAAA55E,EAAA4nB,EAAA7nB,SAAA65E,GAQA,OALAi3B,EADA7wG,KAAAjP,IACAiP,EAAAjP,IAEAkgH,EAGAr1G,KAAAw1G,qBAAAxpF,EAAAgyD,EAAA,EAAAi3B,GAAA,GAMA,GAAAj1G,KAAA4yG,eAAA,CAEA,IAAA6C,EAAA53B,GAAAC,oBAAA9xD,EAAAqpF,EAAA9d,EAAAmb,aAAAnb,EAAApuC,MACA60B,EAAAy3B,EAAAz3B,WACAi3B,EAAAQ,EAAA79G,cACO,CAEP,IAAA89G,EAAA73B,GAAAC,oBAAA9xD,EAAAosB,EAAAm/C,EAAAmb,aAAAnb,EAAApuC,MAEA60B,EAAA03B,EAAA13B,WACAi3B,EAAAS,EAAA99G,UAGA,OAAAoI,KAAAw1G,qBAAAxpF,EAAAgyD,EAAAi3B,GAAA,MAaA/+G,IAAA,2BACAE,MAAA,SAAA41B,GACA,IAAA9D,EAAAloB,KAEA,QAAAA,KAAA+xG,iBACA,SAGA,IAAA4D,EAAA3pF,EAAA7nB,SAAAtO,IAAA,SAAA05B,EAAAtkC,GACA,OACAgjC,SAAAsB,EAAAtB,SACAykF,aAAAznH,KAEOgL,OAAA,SAAAs5B,GACP,OAAAA,EAAAtB,WAAA/F,EAAA6pF,mBAGA,OAAA4D,EAAA/oH,OACA+oH,EAAAvjH,KAAAwG,IAAA+8G,EAAA/oH,OAAA,MAAA8lH,aAGAtgH,KAAAwf,IAAAoa,EAAA7nB,SAAAvX,OAAA,QAGAsJ,IAAA,uBACAE,MAAA,SAAA41B,EAAAgyD,EAAAi3B,EAAAW,GACA,GAAA53B,EAAA,GAAAA,GAAAhyD,EAAA7nB,SAAAvX,OACA,YAGA,IAAAwX,EAAA4nB,EAAA7nB,SAAA65E,GACA,OACAywB,UAAA,kBAAAr8G,KAAAyjH,SAEAt6F,IAAAnX,EAAA+1E,YAEA6D,aAGA43B,gBACAX,iBAEAjpF,WAEA31B,MAAA,KAEAk4G,eAAA,KAGAjrB,gBAAA,KAEAr1D,SAAA7pB,EAAA6pB,SAEAv/B,SAAA0V,EAAA1V,SAEA0V,cAeAlO,IAAA,qBACAE,MAAA,SAAA04G,GACA,GAAA9uG,KAAAi7E,KAAA5jC,MAAAvI,WAGA9uC,KAAAkyG,YAAA73F,UACAra,KAAA2zG,UAAA9rF,WAAAuB,UACA,SAMA,GAAAngC,KAAA8kB,OAAA+gG,EAAAE,sBAAA/lH,KAAA8kB,OAAA,IACA,SAGA,IAAAqqC,EAAAp4C,KAAAgxG,eACA8E,EAAAhH,EAAAxwB,UACAD,EAAAr+E,KAAAgyG,gBAAAtjH,SACAqnH,EAAAl4B,GAAAO,2BAAAC,EAAAy3B,EAAA91G,KAAA2zG,UAAA7E,EAAAvwB,eAIAy3B,EArkWA,SAAA1qE,EAAA8M,GACA,IAAA0e,EAAA/mD,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,KAEA,QADAu7B,EAAA1+C,OAAA0+C,EAAAn2C,IAAAm2C,EAAA1+C,OAAA,MACAwrD,GAAA0e,EAkkWAm/C,CAAAj2G,KAAA80G,YAAA18D,EAAAp4C,KAAAi7E,KAAA5jC,MAAAyf,gBAAA,EAGA,GAAAi/C,GAAAC,EACA,SAGA,IAAAE,EAxiCA,SAAAv+D,GACA,IAAA+hC,EAAA/hC,EAAA+hC,OACAthC,EAAAT,EAAAS,YACAkmC,EAAA3mC,EAAA2mC,UACA63B,EAAAx+D,EAAAjpD,SACA2vF,EAAA1mC,EAAA0mC,gBACA43B,EAAAt+D,EAAAs+D,kBACAnrF,EAAA6sB,EAAA7sB,gBACA0nF,EAAA76D,EAAA66D,eAGA4D,EAAA18B,EAAAxtD,UAAAj2B,OAAA,SAAA+1B,GACA,OAAA6xD,GAAAN,eAAAvxD,KAIAqqF,EAAAD,EAAAngH,OAAA4nF,GAAAL,WAEA64B,EAAAzpH,SAIAypH,EAAAD,EAAAngH,OAAA,SAAA+1B,GACA,OAAA6xD,GAAAI,WAAAjyD,MAIA,IACAsqF,EADAD,EAAApgH,OAAA4nF,GAAAhtC,aAAApgC,KAAA,mBACA5a,IAAA,SAAAm2B,GACA,IAGAuqF,EAHA/D,EAAAoC,aAAA5oF,EAAAmqF,EAAArrF,EAAAstB,GAGA,IAGA,OACApsB,WACAwqF,kBAJA34B,GAAAO,2BAAAC,EAAAC,EAAAtyD,GACAuqF,EAAAN,KAMAQ,EAAAH,EAAArgH,OAAA,SAAAygH,GACA,OAAAA,EAAAF,mBAAA,IAOA,OAJAvG,GAAAwG,EAAA,SAAAh9G,EAAAC,GACA,OAAW22G,GAAwB32G,EAAAsyB,SAAAvyB,EAAAuyB,YAGnCyqF,EAAA7pH,OACA6pH,EAAA,IAGAxG,GAAAqG,EAAA,SAAA78G,EAAAC,GACA,OAAAD,EAAA+8G,kBAAA98G,EAAA88G,oBAEAF,EAAA,UAi/BAK,EACAj9B,OAAA15E,KAAAi7E,KAAA/uD,UAAAwtD,OACAthC,cACAkmC,UAAAw3B,EACApnH,SAAAsR,KAAAs7C,YACA+iC,kBACA43B,kBAAAD,EACAlrF,gBAAA9qB,KAAA+xG,iBACAS,eAAAxyG,KAAAuyG,kBAGA,GAAA2D,EAAA,CAIA,IACAU,EADAb,EAAAC,EACAE,EAAAM,kBACAK,EAAA,GAQA,OAJAb,GA9sWA,OA+sWAa,EAAA,IAGAX,EAAAlqF,UAAAkqF,EAAAlqF,SAAAzQ,MAAAvb,KAAA2zG,UAAAp4F,KAAAq7F,EAAAC,GACA,GAMA72G,KAAAs+E,UAAA43B,EAAAlqF,SAAAnE,WAAAuB,UAAA8jF,GAAAK,mBAAA,EACAvtG,KAAA0R,QACA1R,KAAAokB,QAAA,eACA,OAaAluB,IAAA,kBACAE,MAAA,SAAA0J,EAAAg3G,GACA92G,KAAAgyG,iBAAA8E,EAAArI,YAAAzuG,KAAAgyG,gBAAAvD,YAAAzuG,KAAA+2G,mBAAAD,EAAAhI,QAIA9uG,KAAAokB,QAAA,eASAluB,IAAA,eACAE,MAAA,SAAAgtB,GACApjB,KAAAuL,MAAA,UACAvL,KAAAgyG,gBAAA5uF,EACApjB,KAAAg3G,gBAAA5zF,GACAA,EAAAmwF,cAAAtE,GAAAjvG,KAAAi7E,KAAA3+D,IAAAtc,KAAAkyG,YAAAlyG,KAAAsyG,WAAAtyG,KAAAqyG,eAAAryG,KAAAi3G,4BAAA7zF,GACApjB,KAAAk3G,gBAAAzmG,KAAAzQ,WAAAm3G,wBAAA1mG,KAAAzQ,UAYA9J,IAAA,kBACAE,MAAA,SAAAgtB,GACA,IAAAg0F,EA75BA,SAAAC,EAAAj/D,EAAAhrB,GACA,IAAAgqF,OAAA,EAaA,OATAA,EAFAC,EAAAzqH,QAAAyqH,EAAA9pF,MAAA,MAAA8pF,EAAA9pF,MAAA,GAAA6qB,EAEAi/D,EAAA9pF,MAAA,GAGA6qB,EAAA,GAMAhmD,KAAAwG,IAAAw+G,EAAAh/D,EAAAhrB,GA+4BAkqF,CAAAt3G,KAAAixG,YAAAjxG,KAAAgxG,eAAAhxG,KAAA2zG,UAAAvmF,gBAAA,IAMAgqF,EAAA,GACAp3G,KAAA44B,OAAA,EAAAw+E,MAcAlhH,IAAA,8BACAE,MAAA,SAAAgtB,GACA,IAAAhf,EAAAgf,EAAAhf,QACA0yG,GACA38B,YAAA/1E,EAAA+1E,YACAlxD,UAAA7kB,EAAA6kB,UACAwlF,UAAArrF,EAAAqrF,WAGA,GAAArqG,EAAAlO,IAAA,CAGA,IAAA01B,EAAAxnB,EAAAlO,IAAA01B,IAAA,IAAAj8B,aAAA,MAAAyzB,EAAA46D,WAAA56D,EAAA4I,SAAAP,gBACAqrF,EAAA5gH,KACAikF,YAAA/1E,EAAAlO,IAAAikF,YACAvuD,MAQA,OAJAxnB,EAAAvO,MACAihH,EAAAjhH,IAAAmK,KAAAuZ,YAAAnV,EAAAvO,MAGAihH,KAUA5gH,IAAA,0BACAE,MAAA,SAAAwY,EAAAkoG,GAWA,GARA92G,KAAA+yG,eAAA,EAEA+D,EAAAhI,QACA9uG,KAAA8yG,uBAAAgE,EAAAhI,MAAAvwB,cACAv+E,KAAAmzG,uBAAA2D,EAAAhI,MAAA7vB,eAIAj/E,KAAAgyG,iBASA,GAAA8E,EAAArI,YAAAzuG,KAAAgyG,gBAAAvD,UAAA,CAKA,GAAA7/F,EAMA,OALA5O,KAAAgyG,gBAAA,KACAhyG,KAAAuL,MAAA,QAIAqD,EAAAuP,OAAAwvF,QACA3tG,KAAAgzG,sBAAA,IAIAhzG,KAAAgvC,QAIApgC,EAAAuP,OAAAwvF,IACA3tG,KAAAizG,uBAAA,EACAjzG,KAAAs+E,UAAA,EACAt+E,KAAA4wG,UAAA/uC,SACA7hE,KAAAokB,QAAA,qBAMApkB,KAAAkzG,sBAAA,EACAlzG,KAAA4O,cACA5O,KAAAokB,QAAA,WAMApkB,KAAAs+E,UAAAw4B,EAAAhI,MAAAxwB,UACAt+E,KAAA4wG,UAAAkG,EAAAhI,MAAA7vB,cAGA63B,EAAAjhH,MACAihH,EAAAjhH,IAAAmK,KAAAuZ,YAAAu9F,EAAAjhH,KAAA,IAGAmK,KAAAu3G,wBAAAT,SAtDA92G,KAAAgzG,sBAAA,KAgEA98G,IAAA,0BACAE,MAAA,SAAA0gH,GACA,IAAA1zF,EAAApjB,KAAAgyG,gBACA5uF,EAAA/sB,MAAAygH,EAAAzgH,MAEAygH,EAAAjhH,MACAutB,EAAAhf,QAAAvO,IAAAQ,MAAAygH,EAAAjhH,IAAAQ,OAGA+sB,EAAAkrF,iBAAAwI,EAAAxI,iBAEAwI,EAAAhH,gBAvqCA,SAAA8B,EAAA7kE,EAAA8wD,GACA,QAAAtrG,KAAAsrG,EACA,IAAA+T,EAAAr/G,GAAA,CACAw6C,EAAA3oB,SACAlvB,KAAA,QACAvH,KAAA,YAEA,IAAAyqB,EAAA20B,EAAAK,aAAAuE,aAAAp/C,GAMAq/G,EAAAr/G,GAJA6lB,GAQA20B,EAAAO,oBACAwF,KAAA,WACAz6C,GAAA9F,EACAi8C,MAAAj8C,IACS,GAAA6lB,OAmpCTo/F,CAAAx3G,KAAAqjF,kBAAArjF,KAAAi7E,KAAA5jC,MAAAy/D,EAAAjZ,gBA7oCA,SAAAj0E,GACA,IAAAgoF,EAAAhoF,EAAAgoF,iBACA5uB,EAAAp5D,EAAAo5D,aACAM,EAAA15D,EAAA05D,gBAEA,GAAAN,EAAA,CAIA,IAAAE,EAAAv/E,OAAAw/E,eAAAx/E,OAAA20C,OACA0qC,EAAAjqF,QAAA,SAAAqqF,GACA,IAAAhrE,EAAAgrE,EAAA59D,OACA5tB,EAAAwrF,EAAAxrF,UACAi1C,EAAAu2C,EAAAv2C,QAEA+kE,EAAAx5F,KAIAxgB,GAAA0rF,EACAz2C,GAAAy2C,EACAsuB,EAAAx5F,GAAAm1B,OAAA,IAAA21C,EAAAtrF,EAAAi1C,EAAAu2C,EAAA15D,WAynCA+tF,EACA7F,iBAAA5xG,KAAAqjF,kBACAL,aAAA8zB,EAAAhH,aAEAxsB,gBAAA,IAIAtjF,KAAAqyG,eAAA1Q,uBAGA3hG,KAAA03G,oBASAxhH,IAAA,iBACAE,MAAA,WACA,IAAAyzB,EAAA7pB,KAEA,GAAAA,KAAAgyG,gBAAA,CAKA,IAAA5uF,EAAApjB,KAAAgyG,gBACA5tG,EAAAgf,EAAAhf,QACAqiG,EAAAzmG,KAAAuyG,gBAAAoF,iBAAAv0F,QAIA,IAAApjB,KAAAqxG,gBAAA5K,IAEAA,EAAAmR,eAAAnR,EAAAoR,iBACA73G,KAAAqxG,gBACAuG,cAAAnR,EAAAmR,cACAC,cAAApR,EAAAoR,gBAIA,IA7nCAzG,EAAA0G,EAAAC,EA6nCAC,GA7nCA5G,EA6nCApxG,KAAAmxG,YA7nCA2G,EA6nCA93G,KAAAqxG,eA7nCA0G,EA6nCAtR,EA1nCA,SAAA2K,GAAA0G,GAAAC,EAIAA,EAAAH,eAAAG,EAAAF,cAIAC,EAAAD,gBAAAE,EAAAF,cACA,6LAGAC,EAAAD,eAAAE,EAAAF,cACA,kMAGA,KAXA,4CAJA,MA2nCA,GAAAG,EAMA,OALAh4G,KAAA4O,OACAxV,QAAA4+G,EACAC,kBAAAt/G,WAEAqH,KAAAokB,QAAA,SAIA,GAAAhB,EAAAwyF,cAIA,OAHA51G,KAAAokB,QAAA,kBACApkB,KAAAgyG,gBAAA,UACAhyG,KAAAuL,MAAA,SAIA,OAAA6X,EAAAkgE,iBAAAlgE,EAAAkgE,kBAAAtjF,KAAAiyG,eAAA3uB,oBACAtjF,KAAAiyG,eAAA3uB,gBAAAlgE,EAAAkgE,iBAEAtjF,KAAAokB,QAAA,oBAGA,IAAA8zF,EAAAl4G,KAAAuyG,gBAAA4F,mBAAA/0F,EAAA6K,UAYA,GAVA,OAAAiqF,GACAl4G,KAAAokB,SACAlvB,KAAA,qBACA+xG,QAAAiR,IAIAl4G,KAAAuL,MAAA,YAGAnH,EAAAvO,IAAA,CACA,IAAAuiH,EAAAv4B,GAAAz7E,EAAAvO,KAEA,IAAAmK,KAAAmyG,sBAAAnyG,KAAAmyG,uBAAAiG,EAAA,CACA,IAAA7+F,EAAAvZ,KAAAuZ,YAAAnV,EAAAvO,KACAmK,KAAAiyG,eAAAnK,cACAzxG,MAAAkjB,EAAAljB,OACW,WACXwzB,EAAAsoF,qBAAAiG,KAKAh1F,EAAAl5B,WAAAk5B,EAAA/sB,MAAAnM,WAEA,iBAAAka,EAAAmpB,OAAA,iBAAAnpB,EAAAjP,IACA6K,KAAAozG,oBAAAhvG,EAAAjP,IAAAiP,EAAAmpB,MAEAvtB,KAAAozG,oBAAAhvG,EAAA1V,SAGAsR,KAAAwsG,QAjoCA,SAAAppF,GACA,IAAAi1F,EAAAj1F,EAAAhf,QACAmpB,EAAA8qF,EAAA9qF,MACAp4B,EAAAkjH,EAAAljH,IACAmjH,EAAAl1F,EAAA4I,SACAusF,EAAAD,EAAA7sF,cACApzB,EAAAigH,EAAAjgH,GACAmgH,EAAAF,EAAAn0G,SACAA,OAAAlI,IAAAu8G,OACA1iH,EAAAstB,EAAA46D,WACA/vD,EAAA7K,EAAA6K,SACA,qBAAAn4B,EAAA,SAAAyiH,EAAA,MAAAA,EAAAp0G,EAAAvX,QAAA,oBAAAyL,EAAA,QAAAk1B,EAAA,OAAAp4B,EAAA,kBAAA84B,EAAA,KAAAr4B,KAAA,KAsnCA6iH,CAAAr1F,IACApjB,KAAAiyG,eAAAnK,cACAzxG,MAAA+sB,EAAA/sB,MACA42G,+BAAAjtG,KAAA04G,8BAAAjoG,KAAAzQ,KAAAojB,EAAAqrF,YACOzuG,KAAA24G,iBAAAloG,KAAAzQ,YAhFPA,KAAAuL,MAAA,WAmFArV,IAAA,gCACAE,MAAA,SAAAq4G,EAAA3uG,GACA,GAAAE,KAAAgyG,iBAAAvD,IAAAzuG,KAAAgyG,gBAAAvD,UAAA,CAIA,IAAArqG,EAAApE,KAAAgyG,gBAAA5tG,QAEAA,EAAAi8E,kBACAj8E,EAAAi8E,oBAGAj8E,EAAAi8E,gBAAAU,2BAAAjhF,EAAAqiG,uBAAAnH,0BAAA,EACA52F,EAAAi8E,gBAAAG,4BAAA1gF,EAAAqiG,uBAAA50E,MAAAo5E,aACAviG,EAAAi8E,gBAAAC,0BAAAxgF,EAAAqiG,uBAAAhtG,IAAAwxG,aAEAviG,EAAAi8E,gBAAAluF,oBAAA2N,EAAAqiG,uBAAAhwG,wBAWA+D,IAAA,mBACAE,MAAA,WACA,IAAA4J,KAAAgyG,gBAOA,OANAhyG,KAAAuL,MAAA,aAEAvL,KAAA8uC,UACA9uC,KAAAszG,kBAMA,IAAAlwF,EAAApjB,KAAAgyG,gBACA5tG,EAAAgf,EAAAhf,QACAw0G,EAAA,OAAA54G,KAAAg+E,WACAh+E,KAAAgyG,gBAAA,KACAhyG,KAAA64G,kBAAAz1F,GACApjB,KAAA84G,uBAAA11F,GACApjB,KAAAuL,MAAA,QACAvL,KAAAg+E,WAAA56D,EAAA46D,WACAh+E,KAAA4yG,gBAAA,EACA5yG,KAAA+xG,iBAAA3uF,EAAA6K,SAKAjuB,KAAAokB,QAAA,kBAKAhgB,EAAAjP,KAAA6K,KAAAgxG,eAAA5sG,EAAAjP,IAAA,EAAAiuB,EAAA4I,SAAAoB,eACAptB,KAAAg0G,mBAMA4E,GACA54G,KAAAokB,QAAA,mBAGApkB,KAAAokB,QAAA,YAIApkB,KAAA+0G,eAAA3xF,EAAA46D,WAAA,EAAA56D,EAAA4I,WACAhsB,KAAAg1G,cAGAh1G,KAAA8uC,UACA9uC,KAAAszG,qBAcAp9G,IAAA,oBACAE,MAAA,SAAAgtB,GACA,IAAA5zB,EAAAwQ,KAAA2wG,WAAAnhH,KAGAupH,EAAA9vH,KAAA8kB,MAAAqV,EAAAkrF,iBAAA,EAEA0K,EAAA5mH,KAAA+mB,MAAAiK,EAAAl5B,WAAA6uH,EAAA,OAGA/4G,KAAA2wG,WAAAnhH,OAAAwpH,EAAAxpH,KAAAwQ,KAAA2wG,WAAAnxF,SAaAtpB,IAAA,yBACAE,MAAA,SAAAgtB,GACA,GAAApjB,KAAAsxG,sBAAA,CAIA,IAAAltG,EAAAgf,EAAAhf,QACAmpB,EAAAnpB,EAAAmpB,MACAp4B,EAAAiP,EAAAjP,IAEA,GAAAq7G,GAAAjjF,IAAAijF,GAAAr7G,GAAA,CAIAytF,GAAAr1D,EAAAp4B,EAAA6K,KAAAsxG,uBACA,IAAApuB,EAAgB1uD,EAAA/6B,EAAQ0pF,eAAkB3uD,EAAA/6B,EAAQ6+C,OAClDliD,GACA+3B,OAAA/pB,EAAA+pB,OACA7E,eAAAllB,EAAAklB,eACAD,eAAAjlB,EAAAilB,eACAi1D,UAAAl7D,EAAA4I,SAAAnE,WAAAuB,UACAD,WAAA/F,EAAA4I,SAAAnE,WAAAqB,WACAy5E,OAAAv/E,EAAA4I,SAAAnE,WAAA27E,OACAt5G,WAAAk5B,EAAAl5B,WACAqxB,IAAA6H,EAAA7H,IACA0S,SAAA7K,EAAA6K,SACAjC,SAAA5I,EAAA4I,SAAAzQ,IACAgS,QACAp4B,OAGAy3C,EAAA,IAAAs2C,EAAA31D,EAAAp4B,EADA0B,KAAAC,UAAAV,IAIAw2C,EAAAx2C,QACA4J,KAAAsxG,sBAAA/jE,OAAAX,SAGA8jE,EA3wCiB,CA4wChBr6B,GAAA11C,aAEDs4E,GAAA,SAAAC,GACA,OAAAprH,mBAAAC,OAAAH,OAAAC,aAAA4K,MAAA,KAAAygH,MAOAC,GAAA,IAAAvtH,WAAA,OAAAmL,MAAA,IAAAlB,IAAA,SAAA0+F,GACA,OAAAA,EAAAh4F,WAAA,MAUI68G,GAAgB,SAAAC,GAGpB,SAAAC,EAAA3hE,GACA,IAAA35C,EAAA+R,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MACI4oE,GAAc34E,KAAAs5G,GAGlB,IAAA7xF,EAAgBqxD,GAAyB94E,MAAAs5G,EAAAhmG,WAAAvd,OAAA8kF,eAAAy+B,IAAA9iH,KAAAwJ,KAAA23C,EAAA35C,IAIzC,OAFAypB,EAAA+7D,aAAA,KACA/7D,EAAA8xF,gBAAA,KACA9xF,EA0XA,OArYEoxD,GAAQygC,EAsYR7I,IAjXA73B,GAAW0gC,IACbpjH,IAAA,YACAE,MAAA,WACA,IAAA4J,KAAAu5G,kBAAAv5G,KAAAu5G,gBAAA5sE,KAAA//C,OACA,OAAAypF,GAAAjrC,mBAGA,IAAAuB,EAAA3sC,KAAAu5G,gBAAA5sE,KACApf,EAAAof,EAAA,GAAA/0C,UACAzC,EAAAw3C,IAAA//C,OAAA,GAAAgL,UACA,OAAAy+E,GAAAjrC,mBAAA7d,EAAAp4B,QAcAe,IAAA,cACAE,MAAA,SAAAP,GACA,IAAA49G,EAAA1jG,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,IAAAA,UAAA,GAEA,IAAAla,EACA,YAGA,IAAAwC,EAAAwnF,GAAAhqF,GACA69G,EAAA1zG,KAAAoyG,cAAA/5G,GAEA,GAAAo7G,IAAAC,GAAA79G,EAAAQ,MAAA,CAKA,IAAAmjH,EAAAL,GAAAjvH,WAAA2L,EAAAQ,MAAAnM,WACAuvH,EAAA,IAAA7tH,WAAA4tH,GACAC,EAAAthG,IAAAtiB,EAAAQ,OACAojH,EAAAthG,IAAAghG,GAAAtjH,EAAAQ,MAAAnM,YACA8V,KAAAoyG,cAAA/5G,GAAAq7G,GACAv5B,YAAAtkF,EAAAskF,YACAlxD,UAAApzB,EAAAozB,UACA5yB,MAAAojH,GAIA,OAAA/F,GAAA79G,KAUAK,IAAA,qBACAE,MAAA,WACA,OAAA4J,KAAA2zG,WAAA3zG,KAAAu5G,kBAAAv5G,KAAA8uC,YAWA54C,IAAA,QACAE,MAAA,WAGA,OAFA4J,KAAAuL,MAAA,QACAvL,KAAAg0G,kBACAh0G,KAAAszG,oBAYAp9G,IAAA,QACAE,MAAA,SAAAsjH,GACA,gBAAAA,EACA15G,KAAAu5G,iBAGAv5G,KAAAu5G,gBAAAG,EAGA,SAAA15G,KAAAuL,OAAAvL,KAAA6zG,sBACA7zG,KAAA8zG,QAGA9zG,KAAAu5G,oBASArjH,IAAA,SACAE,MAAA,SAAAm3B,EAAAp4B,GACAytF,GAAAr1D,EAAAp4B,EAAA6K,KAAAu5G,oBAaArjH,IAAA,cACAE,MAAA,WACA,IAAA8xB,EAAAloB,KAEAA,KAAAyyG,aACAzyG,KAAAyyG,WAAAzyG,KAAAuyG,gBAAAqC,aAAA50G,KAAA2zG,UAAA3zG,KAAAs7C,YAAAt7C,KAAA+xG,iBAAA/xG,KAAAgxG,iBAIA,IAAA5tF,EAAApjB,KAAA60G,aAAA70G,KAAA80G,YAAA90G,KAAA2zG,UAAA3zG,KAAAg+E,WAAAh+E,KAAA8wG,aAAA9wG,KAAAgxG,eAAAhxG,KAAAyyG,YAGA,GAFArvF,EAAApjB,KAAA25G,mBAAAv2F,GAEA,CAIA,UAAApjB,KAAAuyG,gBAAAqH,2BAAAx2F,EAAA6K,UAAA,CAcA,OAFAjuB,KAAAuyG,gBAAA5zE,IAAA,kBATA,WACAzW,EAAA3c,MAAA,QAEA2c,EAAA4mB,UAEA5mB,EAAAorF,wBAKAtzG,KAAAuL,MAAA,uBAIAvL,KAAAk1G,aAAA9xF,OAcAltB,IAAA,qBACAE,MAAA,SAAAgtB,GACA,KAAAA,KAAAhf,QAAA0rC,OACA1sB,EAAApjB,KAAAw1G,qBAAApyF,EAAA4I,SAAA5I,EAAA46D,WAAA,EAAA56D,EAAA6xF,eAAA7xF,EAAA10B,SAAA00B,EAAAwyF,eAGA,OAAAxyF,KASAltB,IAAA,iBACAE,MAAA,WACA,IAAAyzB,EAAA7pB,KAEA,GAAAA,KAAAgyG,iBAAAhyG,KAAAu5G,gBAAA,CAKAv5G,KAAAuL,MAAA,YACA,IAAA6X,EAAApjB,KAAAgyG,gBACA5tG,EAAAgf,EAAAhf,QAEA,GAAyB,mBAARowB,EAAA/6B,EAAQ88C,QAAAv2C,KAAAu5G,iBAAAv5G,KAAAu5G,gBAAAliE,MAAA,CACzB,IAAAC,EAAA,WACAztB,EAAA6tF,kBAkBA,OAfA13G,KAAAuL,MAAA,mBACAvL,KAAAu5G,gBAAAliE,MAAA1Y,IAAA,cAAA2Y,QACAt3C,KAAAu5G,gBAAAliE,MAAA1Y,IAAA,wBACA9U,EAAA0vF,gBAAAliE,MAAAnwB,IAAA,cAAAowB,GAEAztB,EAAAjb,OACAxV,QAAA,yBAGAywB,EAAAte,MAAA,QAEAse,EAAAmlB,QAEAnlB,EAAAzF,QAAA,WAKAhgB,EAAAy1G,WAAA,EAEA,IACA75G,KAAA85G,cAAA12F,GACO,MAAAllB,GAMP,OALA8B,KAAA4O,OACAxV,QAAA8E,EAAA9E,UAEA4G,KAAAuL,MAAA,QACAvL,KAAAgvC,QACAhvC,KAAAokB,QAAA,SAKA,GAFApkB,KAAA+5G,mBAAA32F,EAAApjB,KAAAuyG,gBAAAyH,UAAA52F,EAAA6K,UAAAjuB,KAAA2zG,WAEAvwF,EAAAwyF,cAIA,OAHA51G,KAAAokB,QAAA,kBACApkB,KAAAgyG,gBAAA,UACAhyG,KAAAuL,MAAA,SAIA6X,EAAAl5B,WAAAk5B,EAAA/sB,MAAAnM,WACA8V,KAAAozG,oBAAAhvG,EAAA1V,SAEA00B,EAAAupB,KAAA//C,QAEAoT,KAAA44B,OAAAxV,EAAAupB,KAAA,GAAAE,QAAAzpB,EAAAupB,KAAAvpB,EAAAupB,KAAA//C,OAAA,GAAAigD,SAGAzpB,EAAAupB,KAAA5zC,QAAA,SAAA6zC,GACA/iB,EAAA0vF,gBAAAhsE,OAAAX,KAEA5sC,KAAA24G,wBAhEA34G,KAAAuL,MAAA,WA2EArV,IAAA,gBACAE,MAAA,SAAAgtB,GACA,IAAA62F,OAAA,EACAC,GAAA,EAEyB,mBAAR1lF,EAAA/6B,EAAQ0gH,YACzBF,EAAA,IAAsBzlF,EAAA/6B,EAAQ0gH,YAAA,SAE9BF,EAAkBzlF,EAAA/6B,EAAQ88C,OAAAE,gBAC1ByjE,GAAA,GAGA,IAAA5jE,EAAA,IAAuB9hB,EAAA/6B,EAAQ88C,OAAApsB,OAAeqK,EAAA/6B,EAAU+6B,EAAA/6B,EAAQ+8C,MAAAyjE,GAgBhE,GAfA72F,EAAAupB,QACAvpB,EAAAg3F,cACAC,OAAA,EACAC,MAAA,GAEAhkE,EAAAK,MAAAvzB,EAAAupB,KAAAhhD,KAAA8kB,KAAA2S,EAAAupB,MAEA2J,EAAAikE,eAAA,SAAA1kH,GACA,OAAAutB,EAAAg3F,aAAAvkH,GAGAygD,EAAAM,eAAA,SAAAhoC,GACAynE,GAAAliD,IAAAj7B,KAAA,wCAAA0V,EAAAxV,UAGAgqB,EAAAhf,QAAAvO,IAAA,CACA,IAAA2kH,EAAAp3F,EAAAhf,QAAAvO,IAAAQ,MAEA6jH,IACAM,EAAAvB,GAAAuB,IAGAlkE,EAAA3sD,MAAA6wH,GAGA,IAAAC,EAAAr3F,EAAA/sB,MAEA6jH,IACAO,EAAAxB,GAAAwB,IAGAnkE,EAAA3sD,MAAA8wH,GACAnkE,EAAAjyB,WAiBAnuB,IAAA,qBACAE,MAAA,SAAAgtB,EAAAs3F,EAAA1uF,GACA,IAAA5nB,EAAAgf,EAAAhf,QAEA,GAAAs2G,EAOA,GAAAt3F,EAAAupB,KAAA//C,OAAA,CAQA,IAAAwtH,EAAAh3F,EAAAg3F,aACAO,EAAAP,EAAAC,OAAA,IAAAD,EAAAE,MAAAI,EAAAzT,QAOA,GANA7jF,EAAAupB,KAAA5zC,QAAA,SAAA6zC,GAEAA,EAAAh1C,WAAA+iH,EACA/tE,EAAAC,SAAA8tE,KAGA3uF,EAAAmoF,SAAA,CACA,IAAAyG,EAAAx3F,EAAAupB,KAAA,GAAA/0C,UACAijH,EAAAz3F,EAAAupB,KAAAvpB,EAAAupB,KAAA//C,OAAA,GAAAgL,UACAo0B,EAAAmoF,UACA1oF,cAAAO,EAAAP,cAAArI,EAAA46D,WACA70B,KAAA/2D,KAAAwG,IAAAgiH,EAAAC,EAAAz2G,EAAA1V,iBAjBA0V,EAAA0rC,OAAA,MAsBAwpE,EAtYoB,GAiZpBwB,GAAA,SAAA1iG,EAAA2iG,GAGA,IAFA,IAAApuE,EAAAv0B,EAAAu0B,KAEA1hD,EAAA,EAAiBA,EAAA0hD,EAAA//C,OAAiB3B,IAAA,CAClC,IAAA2hD,EAAAD,EAAA1hD,GAEA,GAAA8vH,GAAAnuE,EAAAouE,aAAAD,GAAAnuE,EAAAquE,UACA,OAAAruE,EAIA,aA+EAsuE,GAAcC,EAAA1hH,EAAWvC,QACzBkkH,KAGAztH,KAAA,MACA0tH,IAAA,SAAA7I,EAAAxmF,EAAAmqF,EAAArrF,EAAAstB,GACA,GAAA+9D,IAAAx9G,IAAA,CAKA,OAHAwwD,KAAA,EACAupD,aAAA,GAKA,eAIA/kH,KAAA,kBACA0tH,IAAA,SAAA7I,EAAAxmF,EAAAmqF,EAAArrF,EAAAstB,GACA,IAAAo6D,EAAA8I,sBACA,YAGA,IAAAn3G,EAAA6nB,EAAA7nB,aACAozF,EAAA,KACAgkB,EAAA,KACAnjE,KAAA,EAEA,QAAAntD,EAAA,EAAmBA,EAAAkZ,EAAAvX,OAAqB3B,IAAA,CACxC,IAAAmZ,EAAAD,EAAAlZ,GAEA,GAAAmZ,EAAAklB,eAAA,CACA,IACAkyF,EADAp3G,EAAAklB,eAAAyS,UAAA,IACAy2E,EAAA8I,sBACAltD,EAAAh8D,KAAAuqE,IAAAvkB,EAAAojE,GAGA,UAAAD,KAAAntD,EACA,MAGAmtD,EAAAntD,EACAmpC,GACApuC,KAAAqyD,EACA9I,aAAAznH,IAKA,OAAAssG,KAKA5pG,KAAA,UACA0tH,IAAA,SAAA7I,EAAAxmF,EAAAmqF,EAAArrF,EAAAstB,GACA,IAAAj0C,EAAA6nB,EAAA7nB,aACAozF,EAAA,KACAgkB,EAAA,KACAnjE,KAAA,EAEA,QAAAntD,EAAA,EAAmBA,EAAAkZ,EAAAvX,OAAqB3B,IAAA,CACxC,IAAAmZ,EAAAD,EAAAlZ,GAEA,GAAAmZ,EAAA6pB,WAAAnD,QAAA,IAAA1mB,EAAAmpB,MAAA,CACA,IAAA6gC,EAAAh8D,KAAAuqE,IAAAvkB,EAAAh0C,EAAAmpB,OAGA,UAAAguF,KAAAntD,EACA,QAGAmpC,GAAA,OAAAgkB,MAAAntD,KACAmtD,EAAAntD,EACAmpC,GACApuC,KAAA/kD,EAAAmpB,MACAmlF,aAAAznH,KAMA,OAAAssG,KAKA5pG,KAAA,gBACA0tH,IAAA,SAAA7I,EAAAxmF,EAAAmqF,EAAArrF,EAAAstB,GACA,IAAAm/C,EAAA,KAGA,GAFAn/C,KAAA,EAEApsB,EAAAf,qBAAAe,EAAAf,oBAAAr+B,OAGA,IAFA,IAAA2uH,EAAA,KAEAtwH,EAAA,EAAqBA,EAAA+gC,EAAAf,oBAAAr+B,OAAyC3B,IAAA,CAC9D,IAAAynH,EAAA1mF,EAAAf,oBAAAhgC,GACAgiC,EAAAjB,EAAAN,sBAAAzgC,EAAA,EACAwwH,EAAAjJ,EAAAkJ,gBAAAzuF,GAEA,GAAAwuF,EAAA,CACA,IAAArtD,EAAAh8D,KAAAuqE,IAAAvkB,EAAAqjE,EAAAtyD,MAGA,UAAAoyD,KAAAntD,EACA,QAGAmpC,GAAA,OAAAgkB,MAAAntD,KACAmtD,EAAAntD,EACAmpC,GACApuC,KAAAsyD,EAAAtyD,KACAupD,kBAOA,OAAAnb,KAKA5pG,KAAA,WACA0tH,IAAA,SAAA7I,EAAAxmF,EAAAmqF,EAAArrF,EAAAstB,GACA,OAAApsB,EAAAmoF,UAEAhrD,KAAAn9B,EAAAmoF,SAAAhrD,KACAupD,aAAA1mF,EAAAmoF,SAAA1oF,cAAAO,EAAAP,eAKA,QAIIkwF,GAAc,SAAA5W,GAGlB,SAAA6W,IACIjjC,GAAc34E,KAAA47G,GAGlB,IAAAn0F,EAAgBqxD,GAAyB94E,MAAA47G,EAAAtoG,WAAAvd,OAAA8kF,eAAA+gC,IAAAplH,KAAAwJ,OAQzC,OANAynB,EAAAo0F,mBAAA5/G,EAEAwrB,EAAAuyF,aACAvyF,EAAAi0F,mBACAj0F,EAAA6zF,sBAAA,KACA7zF,EAAA+kF,QAAAR,GAAA,kBACAvkF,EAuZA,OAraEoxD,GAAQ+iC,EAAA7W,GAiCRnsB,GAAWgjC,IACb1lH,IAAA,eACAE,MAAA,SAAA41B,EAAAmqF,EAAArrF,EAAAstB,GACA,IAAA0jE,EAAA97G,KAAA+7G,eAAA/vF,EAAAmqF,EAAArrF,EAAAstB,GAEA,OAAA0jE,EAAAlvH,OAUAoT,KAAAg8G,iBAAAF,GACA5lH,IAAA,OACAE,MAAAgiD,IARA,QAwBAliD,IAAA,iBACAE,MAAA,SAAA41B,EAAAmqF,GACA,IAAAnqF,MAAA7nB,SACA,YAGA,IAAA23G,EAAA97G,KAAA+7G,eAAA/vF,EAAAmqF,EAAAnqF,EAAAN,sBAAA,GAEA,IAAAowF,EAAAlvH,OACA,YAGA,IAAA2qG,EAAAv3F,KAAAg8G,iBAAAF,GACA5lH,IAAA,eACAE,MAAA,IAQA,OAJAmhG,EAAAmb,aAAA,IACAnb,EAAApuC,OAAA,GAGA/2D,KAAAuqE,IAAA46B,EAAApuC,KAAAqzB,GAAAxwD,EAAAurE,EAAAmb,aAAA,OAkBAx8G,IAAA,iBACAE,MAAA,SAAA41B,EAAAmqF,EAAArrF,EAAAstB,GAGA,IAFA,IAAA0jE,KAEA7wH,EAAA,EAAqBA,EAAAmwH,GAAAxuH,OAAgC3B,IAAA,CACrD,IAAAgxH,EAAAb,GAAAnwH,GACAssG,EAAA0kB,EAAAZ,IAAAr7G,KAAAgsB,EAAAmqF,EAAArrF,EAAAstB,GAEAm/C,IACAA,EAAA0kB,WAAAtuH,KACAmuH,EAAAnwH,MACAswH,WAAAtuH,KACA4pG,eAKA,OAAAukB,KAmBA5lH,IAAA,mBACAE,MAAA,SAAA0lH,EAAAl7G,GAKA,IAJA,IAAAs7G,EAAAJ,EAAA,GAAAvkB,UACA4kB,EAAA/pH,KAAAuqE,IAAAm/C,EAAA,GAAAvkB,UAAA32F,EAAA1K,KAAA0K,EAAAxK,OACAgmH,EAAAN,EAAA,GAAAG,SAEAhxH,EAAA,EAAqBA,EAAA6wH,EAAAlvH,OAAuB3B,IAAA,CAC5C,IAAAoxH,EAAAjqH,KAAAuqE,IAAAm/C,EAAA7wH,GAAAssG,UAAA32F,EAAA1K,KAAA0K,EAAAxK,OAEAimH,EAAAF,IACAA,EAAAE,EACAH,EAAAJ,EAAA7wH,GAAAssG,UACA6kB,EAAAN,EAAA7wH,GAAAgxH,UAKA,OADAj8G,KAAAwsG,QAAA,kBAAA5rG,EAAA1K,IAAA,KAAA0K,EAAAxK,MAAA,2BAAAgmH,EAAA,YAAAF,EAAA/yD,KAAA,kBAAA+yD,EAAAxJ,aAAA,KACAwJ,KAYAhmH,IAAA,yBACAE,MAAA,SAAA89G,EAAAD,GAIA,IAHA,IAGAhpH,EAHAgpH,EAAAxoF,cAAAyoF,EAAAzoF,cAGA,EAAyCxgC,GAAA,EAAQA,IAAA,CACjD,IAAAqxH,EAAApI,EAAA/vG,SAAAlZ,GAEA,GAAAqxH,QAAA,IAAAA,EAAA/uF,MAAA,CACA0mF,EAAAE,UACA1oF,cAAAyoF,EAAAzoF,cAAAxgC,EACAk+D,KAAAmzD,EAAA/uF,OAEAvtB,KAAAwsG,QAAA,gCAAAyH,EAAAE,SAAAhrD,KAAA,oBAAA8qD,EAAAE,SAAA1oF,cAAA,KACAzrB,KAAAokB,QAAA,kBACA,WAYAluB,IAAA,qBACAE,MAAA,SAAA41B,GACA,IAAAhsB,KAAAs7G,uBAAAtvF,EAAA7nB,UAAA6nB,EAAA7nB,SAAAvX,QAAAo/B,EAAA7nB,SAAA,GAAAmlB,eAAA,CACA,IAAAizF,EAAAvwF,EAAA7nB,SAAA,GAAAmlB,eAAAyS,UAAA,IACA/7B,KAAAs7G,uBAAAiB,MASArmH,IAAA,QACAE,MAAA,WACA4J,KAAA67G,mBAAA5/G,KAYA/F,IAAA,mBACAE,MAAA,SAAAgtB,GACA,IAAAhf,EAAAgf,EAAAhf,QACA4nB,EAAA5I,EAAA4I,SACAy6E,OAAA,EAsBA,OAnBAA,EADAriG,EAAAvO,IACAmK,KAAAw8G,iBAAAp5F,GAEApjB,KAAAy8G,gBAAAr5F,KAIApjB,KAAA08G,6BAAAt5F,EAAAqjF,KACAzmG,KAAA28G,2BAAAv5F,GAGA4I,EAAAmoF,WACAnoF,EAAAmoF,UACA1oF,cAAAO,EAAAP,cAAArI,EAAA46D,WACA70B,KAAA/kD,EAAAmpB,SAMAk5E,KAYAvwG,IAAA,mBACAE,MAAA,SAAAgtB,GACA,IAAAhf,EAAAgf,EAAAhf,QACAi9F,EAAuBqO,EAAAj2G,EAAQhL,UAAA2V,EAAAvO,IAAAQ,OAC/BuB,EAAsB83G,EAAAj2G,EAAQ7B,UAAAypG,EAAAj+E,EAAA/sB,OAM9B,OAJA,OAAA+sB,EAAAkgE,kBACAlgE,EAAAkgE,iBAAA1rF,IAIA21B,MAAA31B,EACAzC,IAAAyC,EAAAwM,EAAA1V,aAaAwH,IAAA,kBACAE,MAAA,SAAAgtB,GACA,IAAAw5F,EAAA1B,GAAA93F,EAAA/sB,MAAA2J,KAAA67G,eACAgB,OAAA,EACAC,OAAA,EAEA,OAAAF,GAIAA,EAAA7kG,OAAA,IAAA6kG,EAAA7kG,MAAAnrB,QACAoT,KAAA67G,cAAAe,EAAA7kG,MAAA,GAAAkL,IACA45F,EAAAD,EAAA7kG,MAAA,GAAAwL,QACAu5F,EAAAF,EAAA7kG,MAAA,GAAAwL,SACOq5F,EAAA5kG,OAAA,IAAA4kG,EAAA5kG,MAAAprB,SACPoT,KAAA67G,cAAAe,EAAA5kG,MAAA,GAAAiL,IACA45F,EAAAD,EAAA5kG,MAAA,GAAAuL,QACAu5F,EAAAF,EAAA5kG,MAAA,GAAAuL,UAIAgK,MAAAsvF,EACA1nH,IAAA2nH,EACAjF,cAAA+E,EAAA7kG,OAAA,IAAA6kG,EAAA7kG,MAAAnrB,OACAgrH,cAAAgF,EAAA5kG,OAAA,IAAA4kG,EAAA5kG,MAAAprB,SAjBA,QAsBAsJ,IAAA,6BACAE,MAAA,SAAA63B,GACA,gBAAAjuB,KAAAg6G,UAAA/rF,GACA,KAGAjuB,KAAAg6G,UAAA/rF,GAAAk7B,QAGAjzD,IAAA,qBACAE,MAAA,SAAA63B,GACA,gBAAAjuB,KAAAg6G,UAAA/rF,GACA,KAGAjuB,KAAAg6G,UAAA/rF,GAAAg5E,WAgBA/wG,IAAA,+BACAE,MAAA,SAAAgtB,EAAAqjF,GACA,IAAAriG,EAAAgf,EAAAhf,QACAs2G,EAAA16G,KAAAg6G,UAAA52F,EAAA6K,UAEA,UAAA7K,EAAAkgE,gBACAo3B,GACAvxD,KAAA/lC,EAAA6xF,eACAhO,QAAA7jF,EAAA6xF,eAAAxO,EAAAl5E,OAEAvtB,KAAAg6G,UAAA52F,EAAA6K,UAAAysF,EACA16G,KAAAokB,QAAA,mBACApkB,KAAAwsG,QAAA,6BAAAppF,EAAA6K,SAAA,YAAAysF,EAAAvxD,KAAA,eAAAuxD,EAAAzT,QAAA,KACA7iG,EAAAmpB,MAAAnK,EAAA6xF,eACA7wG,EAAAjP,IAAAsxG,EAAAtxG,IAAAulH,EAAAzT,YACO,KAAAyT,EAIP,SAHAt2G,EAAAmpB,MAAAk5E,EAAAl5E,MAAAmtF,EAAAzT,QACA7iG,EAAAjP,IAAAsxG,EAAAtxG,IAAAulH,EAAAzT,QAKA,YAYA/wG,IAAA,6BACAE,MAAA,SAAAgtB,GACA,IAAA4I,EAAA5I,EAAA4I,SACA5nB,EAAAgf,EAAAhf,QAIA,GAAAA,EAAA6oB,cACAjtB,KAAA07G,gBAAAt3G,EAAA6pB,WACAk7B,KAAA/kD,EAAAmpB,MACAwvF,SAAA,QAEO,GAAA/wF,EAAAf,qBAAAe,EAAAf,oBAAAr+B,OAGP,QAAA3B,EAAA,EAAuBA,EAAA+gC,EAAAf,oBAAAr+B,OAAyC3B,IAAA,CAChE,IAAAynH,EAAA1mF,EAAAf,oBAAAhgC,GACAgiC,EAAAjB,EAAAN,sBAAAzgC,EAAA,EACA+xH,EAAAtK,EAAAtvF,EAAA46D,WACA++B,EAAA3qH,KAAAuqE,IAAAqgD,GAEA,IAAAh9G,KAAA07G,gBAAAzuF,IAAAjtB,KAAA07G,gBAAAzuF,GAAA8vF,WAAA,CACA,IAAA5zD,OAAA,EAGAA,EADA6zD,EAAA,EACA54G,EAAAmpB,MAAAivD,GAAAxwD,EAAA5I,EAAA46D,WAAA00B,GAEAtuG,EAAAjP,IAAAqnF,GAAAxwD,EAAA5I,EAAA46D,WAAA,EAAA00B,GAGA1yG,KAAA07G,gBAAAzuF,IACAk8B,OACA4zD,kBAOAnB,EAtakB,CAuajBvlC,GAAA11C,aAEDs8E,GAAA,IAAAj4B,GAAA,wCAAArhF,EAAA0iF,GACA,IAAAzsE,EAAA5Z,MAEA,WAmBA,IAAAquB,EAAA,SAAAzd,EAAA0d,GACA,KAAA1d,aAAA0d,GACA,UAAA3nB,UAAA,sCAIA4nB,EAAA,WACA,SAAA1Y,EAAAjV,EAAA/G,GACA,QAAA5O,EAAA,EAAuBA,EAAA4O,EAAAjN,OAAkB3B,IAAA,CACzC,IAAAujC,EAAA30B,EAAA5O,GACAujC,EAAApY,WAAAoY,EAAApY,aAAA,EACAoY,EAAAxZ,cAAA,EACA,UAAAwZ,MAAAhY,UAAA,GACAzgB,OAAAkN,eAAArC,EAAA4tB,EAAAt4B,IAAAs4B,IAIA,gBAAAF,EAAAG,EAAAC,GAGA,OAFAD,GAAA5Y,EAAAyY,EAAAh4B,UAAAm4B,GACAC,GAAA7Y,EAAAyY,EAAAI,GACAJ,GAdA,GAkCAK,EAAA,SAAA/U,EAAApjB,GACA,IAAAojB,EACA,UAAAkN,eAAA,6DAGA,OAAAtwB,GAAA,iBAAAA,GAAA,mBAAAA,EAAAojB,EAAApjB,GAgDAo4B,EAAA,WACA,IAAAC,sCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACA9jC,OAAA,EACAuS,OAAA,EACA0xB,OAAA,EACAC,KACAC,KACAC,OAAA,EACAC,OAAA,EAEAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEA,IAAAxkC,EAAA,EAAiBA,EAAA,IAASA,IAC1BmkC,GAAAD,EAAAlkC,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAAuS,EAAA0xB,EAAA,GAAwBF,EAAAxxB,GAAUA,GAAA6xB,GAAA,EAAAH,EAAAE,EAAAF,IAAA,EAWlC,IARAK,GADAA,EAAAL,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,IACA,MAAAK,EAAA,GACAP,EAAAxxB,GAAA+xB,EACAN,EAAAM,GAAA/xB,EAGAiyB,EAAA,SADAN,EAAAG,EAAAH,EAAAE,EAAAF,EAAA3xB,KACA,MAAA8xB,EAAA,IAAAD,EAAA,SAAA7xB,EACAgyB,EAAA,IAAAL,EAAAI,GAAA,SAAAA,EAEAtkC,EAAA,EAAmBA,EAAA,EAAOA,IAC1B6jC,EAAA7jC,GAAAuS,GAAAgyB,KAAA,GAAAA,IAAA,EACAT,EAAA9jC,GAAAskC,GAAAE,KAAA,GAAAA,IAAA,EAKA,IAAAxkC,EAAA,EAAiBA,EAAA,EAAOA,IACxB6jC,EAAA7jC,GAAA6jC,EAAA7jC,GAAAsL,MAAA,GACAw4B,EAAA9jC,GAAA8jC,EAAA9jC,GAAAsL,MAAA,GAGA,OAAAs4B,GAGAa,EAAA,KASAC,EAAA,WACA,SAAAA,EAAAz5B,GACAm4B,EAAAruB,KAAA2vB,GAgBAD,IACAA,EAAAd,KAIA5uB,KAAA4vB,UAAAF,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,UAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,QAAAm5B,EAAA,MAAAn5B,UACA,IAAAtL,OAAA,EACA2b,OAAA,EACAipB,OAAA,EACAC,OAAA,EACAC,OAAA,EACAf,EAAAhvB,KAAA4vB,QAAA,MACAb,EAAA/uB,KAAA4vB,QAAA,GACAI,EAAA95B,EAAAtJ,OACAqjC,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAtgB,MAAA,wBAOA,IAJAogB,EAAA55B,EAAAK,MAAA,GACAw5B,KACA/vB,KAAAwL,MAAAskB,EAAAC,GAEA9kC,EAAA+kC,EAAwB/kC,EAAA,EAAA+kC,EAAA,GAAqB/kC,IAC7C4kC,EAAAC,EAAA7kC,EAAA,IAEAA,EAAA+kC,GAAA,OAAAA,GAAA/kC,EAAA+kC,GAAA,KACAH,EAAAb,EAAAa,IAAA,QAAAb,EAAAa,GAAA,YAAAb,EAAAa,GAAA,UAAAb,EAAA,IAAAa,GAEA5kC,EAAA+kC,GAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAA7kC,GAAA6kC,EAAA7kC,EAAA+kC,GAAAH,EAIA,IAAAjpB,EAAA,EAAmB3b,EAAG2b,IAAA3b,IACtB4kC,EAAAC,EAAA,EAAAlpB,EAAA3b,IAAA,GAGA8kC,EAAAnpB,GADA3b,GAAA,GAAA2b,EAAA,EACAipB,EAEAd,EAAA,GAAAC,EAAAa,IAAA,KAAAd,EAAA,GAAAC,EAAAa,GAAA,SAAAd,EAAA,GAAAC,EAAAa,GAAA,QAAAd,EAAA,GAAAC,EAAA,IAAAa,IA+DA,OA5CAF,EAAAr5B,UAAA45B,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvlC,GACA,IAAAkL,EAAA8J,KAAAwL,KAAA,GAEA/R,EAAA02B,EAAAj6B,EAAA,GACAwD,EAAA42B,EAAAp6B,EAAA,GACAoG,EAAA+zB,EAAAn6B,EAAA,GACAi5B,EAAAiB,EAAAl6B,EAAA,GACAs6B,OAAA,EACAC,OAAA,EACAC,OAAA,EAEAC,EAAAz6B,EAAAtJ,OAAA,IACA3B,OAAA,EACA2lC,EAAA,EACAtP,EAAAthB,KAAA4vB,QAAA,GAEAiB,EAAAvP,EAAA,GACAwP,EAAAxP,EAAA,GACAyP,EAAAzP,EAAA,GACA0P,EAAA1P,EAAA,GACA0N,EAAA1N,EAAA,GAEA,IAAAr2B,EAAA,EAAmBA,EAAA0lC,EAAkB1lC,IACrCulC,EAAAK,EAAAp3B,IAAA,IAAAq3B,EAAAp3B,GAAA,QAAAq3B,EAAAz0B,GAAA,OAAA00B,EAAA,IAAA7B,GAAAj5B,EAAA06B,GACAH,EAAAI,EAAAn3B,IAAA,IAAAo3B,EAAAx0B,GAAA,QAAAy0B,EAAA5B,GAAA,OAAA6B,EAAA,IAAAv3B,GAAAvD,EAAA06B,EAAA,GACAF,EAAAG,EAAAv0B,IAAA,IAAAw0B,EAAA3B,GAAA,QAAA4B,EAAAt3B,GAAA,OAAAu3B,EAAA,IAAAt3B,GAAAxD,EAAA06B,EAAA,GACAzB,EAAA0B,EAAA1B,IAAA,IAAA2B,EAAAr3B,GAAA,QAAAs3B,EAAAr3B,GAAA,OAAAs3B,EAAA,IAAA10B,GAAApG,EAAA06B,EAAA,GACAA,GAAA,EACAn3B,EAAA+2B,EACA92B,EAAA+2B,EACAn0B,EAAAo0B,EAIA,IAAAzlC,EAAA,EAAmBA,EAAA,EAAOA,IAC1BslC,GAAA,GAAAtlC,GAAAD,GAAAgkC,EAAAv1B,IAAA,QAAAu1B,EAAAt1B,GAAA,YAAAs1B,EAAA1yB,GAAA,UAAA0yB,EAAA,IAAAG,GAAAj5B,EAAA06B,KACAJ,EAAA/2B,EACAA,EAAAC,EACAA,EAAA4C,EACAA,EAAA6yB,EACAA,EAAAqB,GAIAb,EA/HA,GA4IA7L,EAAA,WACA,SAAAA,IACAuK,EAAAruB,KAAA8jB,GACA9jB,KAAA+mB,aA+FA,OApFAjD,EAAAxtB,UAAA2K,GAAA,SAAA/L,EAAA+xB,GACAjnB,KAAA+mB,UAAA7xB,KACA8K,KAAA+mB,UAAA7xB,OAGA8K,KAAA+mB,UAAA7xB,GAAAvJ,KAAAs7B,IAYAnD,EAAAxtB,UAAA4wB,IAAA,SAAAhyB,EAAA+xB,GACA,IAAAjnB,KAAA+mB,UAAA7xB,GACA,SAGA,IAAAY,EAAAkK,KAAA+mB,UAAA7xB,GAAAqE,QAAA0tB,GAEA,OADAjnB,KAAA+mB,UAAA7xB,GAAAmU,OAAAvT,EAAA,GACAA,GAAA,GAUAguB,EAAAxtB,UAAA8tB,QAAA,SAAAlvB,GACA,IAAAiyB,EAAAnnB,KAAA+mB,UAAA7xB,GAEA,GAAAiyB,EAQA,OAAApX,UAAAnjB,OAGA,IAFA,IAAAA,EAAAu6B,EAAAv6B,OAEA3B,EAAA,EAAyBA,EAAA2B,IAAY3B,EACrCk8B,EAAAl8B,GAAAuL,KAAAwJ,KAAA+P,UAAA,SAMA,IAHA,IAAAD,EAAAna,MAAAW,UAAAC,MAAAC,KAAAuZ,UAAA,GACAmhB,EAAA/J,EAAAv6B,OAEAukC,EAAA,EAA0BA,EAAAD,IAAcC,EACxChK,EAAAgK,GAAA14B,MAAAuH,KAAA8P,IASAgU,EAAAxtB,UAAA8wB,QAAA,WACApnB,KAAA+mB,cAYAjD,EAAAxtB,UAAA+wB,KAAA,SAAAC,GACAtnB,KAAAiB,GAAA,gBAAApX,GACAy9B,EAAA37B,KAAA9B,MAIAi6B,EAlGA,GAiHAo5F,EAAA,SAAA11F,GAGA,SAAA01F,IACA7uF,EAAAruB,KAAAk9G,GAEA,IAAAz1F,EAAAkH,EAAA3uB,KAAAwnB,EAAAhxB,KAAAwJ,KAAA8jB,IAKA,OAHA2D,EAAA4J,QACA5J,EAAA6J,MAAA,EACA7J,EAAA8J,SAAA,KACA9J,EAiCA,OAvaA,SAAAd,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAjgB,UAAA,kEAAAigB,GAGAD,EAAArwB,UAAAP,OAAA0R,OAAAmf,KAAAtwB,WACAid,aACAnd,MAAAuwB,EACAvQ,YAAA,EACAI,UAAA,EACAxB,cAAA,KAGA4R,IAAA7wB,OAAAy7B,eAAAz7B,OAAAy7B,eAAA7K,EAAAC,GAAAD,EAAArT,UAAAsT,GA+WA6K,CAAAyrF,EAAA11F,GAmBA01F,EAAA5mH,UAAAo7B,YAAA,WACA1xB,KAAAqxB,KAAAl0B,OAAA6C,GAEAA,KAAAqxB,KAAAzkC,OACAoT,KAAAuxB,SAAA7e,WAAA1S,KAAA0xB,YAAAjhB,KAAAzQ,WAAAsxB,OAEAtxB,KAAAuxB,SAAA,MAUA2rF,EAAA5mH,UAAA3K,KAAA,SAAAgmC,GACA3xB,KAAAqxB,KAAA1lC,KAAAgmC,GAEA3xB,KAAAuxB,WACAvxB,KAAAuxB,SAAA7e,WAAA1S,KAAA0xB,YAAAjhB,KAAAzQ,WAAAsxB,SAIA4rF,EA5CA,CA6CKp5F,GAcL8N,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAiFAsrF,EAAA,WACA,SAAAA,EAAArrF,EAAA57B,EAAA67B,EAAAa,GACAvE,EAAAruB,KAAAm9G,GACA,IAAA3uG,EAAA2uG,EAAAtqF,KACAb,EAAA,IAAAC,WAAAH,EAAA9nC,QACAmoC,EAAA,IAAAvmC,WAAAkmC,EAAA5nC,YACAe,EAAA,EAKA,IAJA+U,KAAA8yB,aAAA,IAAAoqF,EAEAl9G,KAAA8yB,aAAAnnC,KAAAqU,KAAA+yB,cAAAf,EAAApnC,SAAAK,IAAAujB,GAAAtY,EAAA67B,EAAAI,IAEAlnC,EAAAujB,EAAsBvjB,EAAA+mC,EAAAplC,OAAwB3B,GAAAujB,EAC9CujB,EAAA,IAAApiC,aAAAiiC,EAAAI,EAAA/mC,EAAA,IAAA2mC,EAAAI,EAAA/mC,EAAA,IAAA2mC,EAAAI,EAAA/mC,EAAA,IAAA2mC,EAAAI,EAAA/mC,EAAA,MACA+U,KAAA8yB,aAAAnnC,KAAAqU,KAAA+yB,cAAAf,EAAApnC,SAAAK,IAAAujB,GAAAtY,EAAA67B,EAAAI,IAIAnyB,KAAA8yB,aAAAnnC,KAAA,WArjBA,IAAAqnC,EAujBAJ,EAAA,MAvjBAI,EAujBAb,GAtjBAvnC,SAAA,EAAAooC,EAAA9oC,WAAA8oC,IAAA9oC,WAAA,OAklBA,OAdAizH,EAAA7mH,UAAAy8B,cAAA,SAAAjB,EAAA57B,EAAA67B,EAAAI,GACA,kBACA,IAAA97B,EAnGA,SAAAy7B,EAAA57B,EAAA67B,GAEA,IAAAC,EAAA,IAAAC,WAAAH,EAAA9nC,OAAA8nC,EAAA7nC,WAAA6nC,EAAA5nC,YAAA,GACAgoC,EAAA,IAAAvC,EAAAh6B,MAAAW,UAAAC,MAAAC,KAAAN,IAEAi8B,EAAA,IAAAvmC,WAAAkmC,EAAA5nC,YACAkoC,EAAA,IAAAH,WAAAE,EAAAnoC,QAGAqoC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACArC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEAmC,OAAA,EASA,IANAJ,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GAGAU,EAAA,EAAsBA,EAAAT,EAAAplC,OAA6B6lC,GAAA,EAGnDtC,EAAAyB,EAAAI,EAAAS,IACArC,EAAAwB,EAAAI,EAAAS,EAAA,IACApC,EAAAuB,EAAAI,EAAAS,EAAA,IACAnC,EAAAsB,EAAAI,EAAAS,EAAA,IAEAP,EAAAhC,QAAAC,EAAAC,EAAAC,EAAAC,EAAA8B,EAAAK,GAGAL,EAAAK,GAAAb,EAAAQ,EAAAK,GAAAJ,GACAD,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAH,GACAF,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAF,GACAH,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAD,GAEAH,EAAAlC,EACAmC,EAAAlC,EACAmC,EAAAlC,EACAmC,EAAAlC,EAGA,OAAA6B,EAkDAirF,CAAAtrF,EAAA57B,EAAA67B,GACAI,EAAAha,IAAA9hB,EAAAy7B,EAAA7nC,cAIAskC,EAAA4uF,EAAA,OACAjnH,IAAA,OACAgN,IAAA,WAEA,gBAGAi6G,EA/CA,GA8GA,IAlBA,SAAAvjG,GACAA,EAAAgsE,UAAA,SAAA9lF,GACA,IAAAjW,EAAAiW,EAAAjW,KACAioC,EAAA,IAAAlmC,WAAA/B,EAAAioC,UAAAz7B,MAAAxM,EAAAioC,UAAA7nC,WAAAJ,EAAAioC,UAAA5nC,YACAgM,EAAA,IAAAvG,YAAA9F,EAAAqM,IAAAG,MAAAxM,EAAAqM,IAAAjM,WAAAJ,EAAAqM,IAAAhM,WAAA,GACA0hC,EAAA,IAAAj8B,YAAA9F,EAAA+hC,GAAAv1B,MAAAxM,EAAA+hC,GAAA3hC,WAAAJ,EAAA+hC,GAAA1hC,WAAA,GAGA,IAAAizH,EAAArrF,EAAA57B,EAAA01B,EAAA,SAAAtyB,EAAAjD,GAnCA,IAAA+C,EACAumF,EAmCA/lE,EAAA+rE,aApCAvsF,GAqCA+N,OAAAtd,EAAAsd,OACAgrB,UAAA97B,GArCAspF,KACA5pF,OAAAC,KAAAoD,GAAAL,QAAA,SAAA7C,GACA,IAAAE,EAAAgD,EAAAlD,GAEAZ,YAAAsqF,OAAAxpF,GACAupF,EAAAzpF,IACAG,MAAAD,EAAApM,OACAC,WAAAmM,EAAAnM,WACAC,WAAAkM,EAAAlM,YAGAy1F,EAAAzpF,GAAAE,IAGAupF,IAwBWtpF,EAAArM,YAMX,CAAA4vB,GAjqBA,KA2qBAyjG,GAAA,SAAAnmF,GACA,IAAA4b,EAAA5b,EAAAp9B,QAAA,qBAMA,OAJAo9B,EAAApK,iBAAAoK,EAAApK,gBAAAvzB,QAAA,6CACAu5C,EAAA,aAGAA,GAaAwqE,GAAA,SAAAC,EAAA5jC,GACA4jC,EAAA7rG,QACA6rG,EAAAvuE,QAEA2qC,KAAA6jC,uBACA7jC,EAAA6jC,qBAAAxuE,QACA2qC,EAAA6jC,qBAAA,OAcAC,GAAA,SAAAC,EAAA/jC,GAGAA,EAAA6jC,qBAAAE,EACAA,EAAAxkE,QA+GA/nC,IAcAuZ,MAAA,SAAAx1B,EAAAyiD,GACA,kBACA,IAAA4lE,EAAA5lE,EAAAgmE,eAAAzoH,GACAykF,EAAAhiC,EAAAimE,WAAA1oH,GACA2oH,EAAAlmE,EAAAkmE,yBACAP,GAAAC,EAAA5jC,GAEA,IAAAmkC,EAAAnkC,EAAAmkC,cACAC,EAAApkC,EAAAokC,cACA1lH,GAAA0lH,EAAA9nH,OAAA,SAAAyP,GACA,OAAAA,EAAA5L,UACO,IAAAikH,EAAA,IAAA1lH,GACP2lH,EAAArkC,EAAAphE,OAAAlgB,GAEA,GAAAylH,IAAAE,EAAA,CAWA,QAAAzrH,KAFA8jF,GAAAliD,IAAAj7B,KAAA,oFAEAygF,EAAAphE,OACAohE,EAAAphE,OAAAhmB,GAAA0/C,QAAA0nC,EAAAphE,OAAAhmB,KAAAyrH,EAGArkC,EAAAskC,sBAZAJ,GACAzkH,QAAA,2DA2BAyxB,UAAA,SAAA31B,EAAAyiD,GACA,kBACA,IAAA4lE,EAAA5lE,EAAAgmE,eAAAzoH,GACAykF,EAAAhiC,EAAAimE,WAAA1oH,GACAmhF,GAAAliD,IAAAj7B,KAAA,4EACAokH,GAAAC,EAAA5jC,GACA,IAAAvhE,EAAAuhE,EAAAmkC,cAEA1lG,IACAA,EAAAtD,KAAA,YAGA6kE,EAAAskC,oBAIA9pG,IAYAuW,MAAA,SAAAx1B,EAAAwoH,EAAA/lE,GACA,GAAA+lE,EAAA,CAKA,IAAA3wE,EAAA4K,EAAA5K,KACAmxE,EAAAvmE,EAAAumE,eACAX,EAAA5lE,EAAAgmE,eAAAzoH,GACAwoH,EAAAz8G,GAAA,4BACA,IAAAmrB,EAAAsxF,EAAAtxF,QACAmxF,EAAAvxF,SAAAI,EAAA8xF,KAGAnxE,EAAA+B,UAAA1iB,EAAAb,SAAA,SAAAwhB,EAAAs0B,YACAk8C,EAAArkE,SAGAwkE,EAAAz8G,GAAA,4BACAs8G,EAAAvxF,SAAA0xF,EAAAtxF,QAAA8xF,GAEAnxE,EAAA+B,UACAyuE,EAAArkE,SAGAwkE,EAAAz8G,GAAA,QAAAkQ,GAAAjc,KAAAyiD,MAcA9sB,UAAA,SAAA31B,EAAAwoH,EAAA/lE,GACA,IAAA5K,EAAA4K,EAAA5K,KACAmxE,EAAAvmE,EAAAumE,eACAX,EAAA5lE,EAAAgmE,eAAAzoH,GACAykF,EAAAhiC,EAAAimE,WAAA1oH,GACAwoH,EAAAz8G,GAAA,4BACA,IAAAmrB,EAAAsxF,EAAAtxF,QACAmxF,EAAAvxF,SAAAI,EAAA8xF,GACAX,EAAAnlG,MAAAuhE,EAAAmkC,iBAGA/wE,EAAA+B,UAAA1iB,EAAAb,SAAA,SAAAwhB,EAAAs0B,YACAk8C,EAAArkE,SAGAwkE,EAAAz8G,GAAA,4BACAs8G,EAAAvxF,SAAA0xF,EAAAtxF,QAAA8xF,GAEAnxE,EAAA+B,UACAyuE,EAAArkE,SAGAwkE,EAAAz8G,GAAA,QAAAkQ,GAAAjc,KAAAyiD,MAIAwmE,GAAA,SAAAjpH,EAAA2uG,GACA,gBAAA73E,GACA,OAAAA,EAAAnE,WAAA3yB,KAAA2uG,IAIAua,GAAA,SAAAjkC,GACA,gBAAAnuD,GACA,OAAAA,EAAAmuD,kBAIAkkC,IAUA3zF,MAAA,SAAAx1B,EAAAyiD,GACA,IAAAijC,EAAAjjC,EAAAijC,IACA+2B,EAAAh6D,EAAAg6D,WACA4L,EAAA5lE,EAAAgmE,eAAAzoH,GACAgpH,EAAAvmE,EAAAumE,eACAI,EAAA3mE,EAAA+hC,OACAvtD,EAAAmyF,EAAAnyF,YACAD,EAAAoyF,EAAApyF,UACAqyF,EAAA5mE,EAAAimE,WAAA1oH,GACAgS,EAAAq3G,EAAAr3G,OACAqR,EAAAgmG,EAAAhmG,OACAgyF,EAAA5yD,EAAA4yD,qBAYA,QAAA1G,KAVA13E,EAAAj3B,IAAA,IAAAa,OAAAC,KAAAm2B,EAAAj3B,IAAAtI,SACAu/B,EAAAj3B,IACAg/C,MACAp6C,SACAA,SAAA,MAMAqyB,EAAAj3B,GAAA,CACAgS,EAAA28F,KACA38F,EAAA28F,OAKA,IAAA2a,EAAAtyF,EAAAj2B,OAAAkoH,GAAAjpH,EAAA2uG,IAEA,QAAA4a,KAAAtyF,EAAAj3B,GAAA2uG,GAAA,CACA,IAAA3sE,EAAA/K,EAAAj3B,GAAA2uG,GAAA4a,GAGAD,EAAAvoH,OAAAmoH,GAAAlnF,EAAAijD,cAEAvtF,eAMAsqC,EAAAijD,YAGA,IAAAujC,OAAA,EAmBA,GAhBAA,EADAxmF,EAAAijD,YACA,IAA+BM,GAAcvjD,EAAAijD,YAAAS,EAAAsjC,GACpChnF,EAAAhL,WAAA,SAAAylF,EACT,IAA+BvH,GAAkBlzE,EAAAhL,UAAA,GAAA0uD,EAAAsjC,EAAA3T,GAIjD,KAGArzE,EAAAm/C,GAAArzC,cACA3qC,GAAAomH,EACAf,kBACSxmF,GACT/iB,GAAAjf,KAAAgiC,EAAAwmF,eAAA/lE,GACAzwC,EAAA28F,GAAAl4G,KAAAurC,QAEA,IAAA3e,EAAAkmG,GAAA,CACA,IAAArmG,EAAA,IAAAi+D,GAAA19B,YACAtgD,GAAAomH,EACA3rE,KAAAuqE,GAAAnmF,GACA+a,SAAA,EACA3jD,SAAA4oC,EAAA5oC,SACAwL,QAAAo9B,EAAAp9B,QACA00C,MAAAiwE,IAEAlmG,EAAAkmG,GAAArmG,IAMAmlG,EAAAt8G,GAAA,QAAAkQ,GAAAjc,KAAAyiD,KAYA9sB,UAAA,SAAA31B,EAAAyiD,GACA,IAAA5K,EAAA4K,EAAA5K,KACA6tC,EAAAjjC,EAAAijC,IACA+2B,EAAAh6D,EAAAg6D,WACA4L,EAAA5lE,EAAAgmE,eAAAzoH,GACAgpH,EAAAvmE,EAAAumE,eACA/xF,EAAAwrB,EAAA+hC,OAAAvtD,YACAuyF,EAAA/mE,EAAAimE,WAAA1oH,GACAgS,EAAAw3G,EAAAx3G,OACAqR,EAAAmmG,EAAAnmG,OACAgyF,EAAA5yD,EAAA4yD,qBAEA,QAAA1G,KAAA13E,EAAAj3B,GAKA,QAAAupH,KAJAv3G,EAAA28F,KACA38F,EAAA28F,OAGA13E,EAAAj3B,GAAA2uG,GACA,IAAA13E,EAAAj3B,GAAA2uG,GAAA4a,GAAAzxF,OAAA,CAYA,IAAAkK,EAAA/K,EAAAj3B,GAAA2uG,GAAA4a,GACAf,OAAA,EAeA,GAbA,QAAA/L,EACA+L,EAAA,IAA+BjjC,GAAcvjD,EAAAijD,YAAAS,EAAAsjC,GACpC,SAAAvM,IACT+L,EAAA,IAA+BtT,GAAkBlzE,EAAAhL,UAAA,GAAA0uD,EAAAsjC,EAAA3T,IAGjDrzE,EAAAm/C,GAAArzC,cACA3qC,GAAAomH,EACAf,kBACSxmF,GACT/iB,GAAAjf,KAAAgiC,EAAAwmF,eAAA/lE,GACAzwC,EAAA28F,GAAAl4G,KAAAurC,QAEA,IAAA3e,EAAAkmG,GAAA,CACA,IAAArmG,EAAA20B,EAAAO,oBACAj1C,GAAAomH,EACA3rE,KAAA,YACAh5C,QAAAo9B,EAAAp9B,SAAAo9B,EAAAzK,WACAn+B,SAAA4oC,EAAA5oC,SACAkgD,MAAAiwE,IACW,GAAArmG,MACXG,EAAAkmG,GAAArmG,GAMAmlG,EAAAt8G,GAAA,QAAAkQ,GAAAjc,KAAAyiD,KAYA/sB,kBAAA,SAAA11B,EAAAyiD,GACA,IAAA5K,EAAA4K,EAAA5K,KACA5gB,EAAAwrB,EAAA+hC,OAAAvtD,YACAwyF,EAAAhnE,EAAAimE,WAAA1oH,GACAgS,EAAAy3G,EAAAz3G,OACAqR,EAAAomG,EAAApmG,OAEA,QAAAsrF,KAAA13E,EAAAj3B,GAKA,QAAAupH,KAJAv3G,EAAA28F,KACA38F,EAAA28F,OAGA13E,EAAAj3B,GAAA2uG,GAAA,CACA,IAAA3sE,EAAA/K,EAAAj3B,GAAA2uG,GAAA4a,GAGA,GAAAvnF,EAAAtK,WAAAj2B,MAAA,UAMAuQ,EAAA28F,GAAAl4G,KAAA0qF,GAAArzC,cACA3qC,GAAAomH,GACSvnF,SAET,IAAA3e,EAAAkmG,IAAA,CACA,IAAArmG,EAAA20B,EAAAO,oBACAj1C,GAAA6+B,EAAAtK,WACAkmB,KAAA,WACAh5C,QAAAo9B,EAAAp9B,SAAAo9B,EAAAzK,WACAn+B,SAAA4oC,EAAA5oC,SACAkgD,MAAAiwE,IACW,GAAArmG,MACXG,EAAAkmG,GAAArmG,MAuDA0lG,IAaApzF,MAAA,SAAAx1B,EAAAyiD,GACA,kBACA,IAAAp/B,EAAAo/B,EAAAimE,WAAA1oH,GAAAqjB,OAEA,QAAAlgB,KAAAkgB,EACA,GAAAA,EAAAlgB,GAAA45C,QACA,OAAA15B,EAAAlgB,GAIA,cAgBAwyB,UAAA,SAAA31B,EAAAyiD,GACA,kBACA,IAAAp/B,EAAAo/B,EAAAimE,WAAA1oH,GAAAqjB,OAEA,QAAAlgB,KAAAkgB,EACA,eAAAA,EAAAlgB,GAAAyc,KACA,OAAAyD,EAAAlgB,GAIA,eAiCAumH,GAAA,SAAAjnE,IACA,uCAAA5+C,QAAA,SAAA7D,GACAmpH,GAAAnpH,KAAAyiD,KAEA,IAAAimE,EAAAjmE,EAAAimE,WACArT,EAAA5yD,EAAA4yD,qBACAx9D,EAAA4K,EAAA5K,KACA6tC,EAAAjjC,EAAAijC,KAEA,qBAAA7hF,QAAA,SAAA7D,GACA0oH,EAAA1oH,GAAA6oH,YA9HA,SAAA7oH,EAAAyiD,GACA,gBAAAv/B,GACA,IAAAmyF,EAAA5yD,EAAA4yD,qBACArjG,EAAAywC,EAAAimE,WAAA1oH,GAAAgS,OACAklB,EAAAm+E,EAAAn+E,QAEA,IAAAA,EACA,YAGA,IAAAyyF,EAAA,KAQA,OANAzyF,EAAAvE,WAAA3yB,KACA2pH,EAAA33G,EAAAklB,EAAAvE,WAAA3yB,KAGA2pH,KAAA33G,EAAAgtC,UAEA,IAAA97B,EACAymG,EAGA,OAAAzmG,EAGA,KAGAymG,EAAA5oH,OAAA,SAAA4D,GACA,OAAAA,EAAAxB,KAAA+f,EAAA/f,KACK,UAgGL0lH,CAAA7oH,EAAAyiD,GACAimE,EAAA1oH,GAAA4oH,eAAA5oH,KAAAyiD,GACAimE,EAAA1oH,GAAA4pH,eAtmBA,SAAA5pH,EAAAyiD,GACA,kBACA,IAAAonE,EAAApnE,EAAAgmE,eACAJ,EAAAwB,EAAA7pH,GACA8pH,EAAAD,EAAA7qE,KACAylC,EAAAhiC,EAAAimE,WAAA1oH,GACA4oH,EAAAnkC,EAAAmkC,cACAC,EAAApkC,EAAAokC,YAAAD,GACAmB,EAAAtlC,EAAA6jC,qBACAF,GAAAC,EAAA5jC,GAEAokC,IAKAA,EAAAL,gBAaAH,EAAAhJ,eACAkJ,GAAAM,EAAAL,eAAA/jC,IAbAslC,GAKAD,EAAAhL,oBAglBA8K,CAAA5pH,EAAAyiD,GACAimE,EAAA1oH,GAAA+oH,eAtjBA,SAAA/oH,EAAAyiD,GACA,kBACA,IAAAunE,EAAAvnE,EAAAgmE,eACAJ,EAAA2B,EAAAhqH,GACA8pH,EAAAE,EAAAhrE,KACAylC,EAAAhiC,EAAAimE,WAAA1oH,GACA4oH,EAAAnkC,EAAAmkC,cACAC,EAAApkC,EAAAokC,YAAAD,GACAmB,EAAAtlC,EAAA6jC,qBACAF,GAAAC,EAAA5jC,GAEAokC,IAKAA,EAAAL,eAQAuB,IAAAlB,EAAAL,gBAQAH,EAAAnlG,OAEAmlG,EAAAnlG,MAAA0lG,GAIAP,EAAAvJ,kBACAyJ,GAAAM,EAAAL,eAAA/jC,IAXA8jC,GAAAM,EAAAL,eAAA/jC,GARAqlC,EAAAhL,oBAkiBAiK,CAAA/oH,EAAAyiD,KAIA,IAAAisD,EAAAga,EAAAlzF,MAAAqzF,cACAla,GAAAD,EAAA3tG,OAAA,SAAAyP,GACA,OAAAA,EAAA5L,UACG,IAAA8pG,EAAA,IAAAvrG,GACHulH,EAAAlzF,MAAAnS,OAAAsrF,GAAA5xD,SAAA,EACA2rE,EAAAlzF,MAAAuzF,iBACA1T,EAAAtpG,GAAA,0BACA,qBAAAlI,QAAA,SAAA7D,GACA,OAAA0oH,EAAA1oH,GAAA4pH,qBAIA,IAAAK,EAAA,WACAvB,EAAAlzF,MAAAuzF,iBACAlxE,EAAA3oB,SACAlvB,KAAA,QACAvH,KAAA,sBAaA,QAAA0K,KATA00C,EAAA4pB,cAAAtrD,iBAAA,SAAA8zG,GACApyE,EAAA4P,mBAAAtxC,iBAAA,SAAAuyG,EAAA/yF,UAAAozF,gBACArjC,EAAA35E,GAAA,qBACA8rC,EAAA4pB,cAAAr6B,oBAAA,SAAA6iF,GACApyE,EAAA4P,mBAAArgB,oBAAA,SAAAshF,EAAA/yF,UAAAozF,kBAGAlxE,EAAA8O,YAAA,SAEA+hE,EAAAlzF,MAAAnS,OACAw0B,EAAA4pB,cAAAnlB,SAAAosE,EAAAlzF,MAAAnS,OAAAlgB,KAaA+mH,GAAA,WACA,IAAAxB,KAYA,OAXA,uCAAA7kH,QAAA,SAAA7D,GACA0oH,EAAA1oH,IACAgS,UACAqR,UACAilG,qBAAA,KACAO,YAAmB9R,GACnB6R,YAAmB7R,GACnB6S,eAAsB7S,GACtBgS,eAAsBhS,MAGtB2R,GAQA/+B,QAAA,EAGAwgC,IAAA,uIAEAC,GAAA,SAAAC,GACA,OAAAv/G,KAAAw/G,oBAAAD,GAAAv/G,KAAAy/G,mBAAAF,IAaIG,GAAwB,SAAA3a,GAG5B,SAAA4a,EAAA3hH,GACI26E,GAAc34E,KAAA2/G,GAElB,IAAAl4F,EAAgBqxD,GAAyB94E,MAAA2/G,EAAArsG,WAAAvd,OAAA8kF,eAAA8kC,IAAAnpH,KAAAwJ,OAEzCmO,EAAAnQ,EAAAmQ,IACA6sE,EAAAh9E,EAAAg9E,wBACA98D,EAAAlgB,EAAAkgB,gBACA6uB,EAAA/uC,EAAA+uC,KACAuxC,EAAAtgF,EAAAsgF,UACAshC,EAAA5hH,EAAA4hH,UACAC,EAAA7hH,EAAA6hH,WACA5H,EAAAj6G,EAAAi6G,kBACA6H,EAAA9hH,EAAA8hH,yBACAnO,EAAA3zG,EAAA2zG,WACApwB,EAAAvjF,EAAAujF,OAEA,IAAApzE,EACA,UAAAuB,MAAA,wCAGAmvE,GAAA+gC,EACAn4F,EAAAvJ,kBACAuJ,EAAA4vB,MAAAtK,EACAtlB,EAAAwzD,KAAAluC,EAAA6tC,IACAnzD,EAAAs4F,QAAAx+B,EACA95D,EAAAiqF,YAAAC,EACAlqF,EAAAu4F,YAAAH,EACAp4F,EAAAwwF,oBACAxwF,EAAAq4F,2BAEAr4F,EAAAu4F,cACAv4F,EAAAw4F,cAAAx4F,EAAA4vB,MAAA2F,aAAA,sBACAv1B,EAAAw4F,cAAA3Z,gCAAA,IAGA7+E,EAAAy4F,iBACAhiG,kBACA88D,0BACA3gE,QAAA,MAEAoN,EAAA04F,YAAAf,KACA33F,EAAAu9E,YAAA,IAAA3uB,GAAA8xB,YAEA1gF,EAAAu9E,YAAA35F,iBAAA,aAAAoc,EAAA24F,kBAAA3vG,KAAAgX,IAEAA,EAAAwpF,UAAA56B,GAAAjrC,mBAEA3jB,EAAAqpF,WAAA,WACA,UAGArpF,EAAA8qF,gBAAA,IAAgCoJ,GAAc39G,GAC9CypB,EAAA6pF,sBAAAvkE,EAAAO,oBACAwF,KAAA,WACAtE,MAAA,qBACK,GAAAp2B,MACLqP,EAAA6qF,WAAA,IAAA2K,GACAx1F,EAAA47D,qBACA,IAAAg9B,GACAzlC,IAAAnzD,EAAAwzD,KACA+pB,YAAAv9E,EAAAu9E,YACA5sD,YAAA3wB,EAAA4vB,MAAAe,YAAA3nC,KAAAgX,EAAA4vB,OACA2J,SAAA,WACA,OAAAv5B,EAAAu5B,YAEA4oB,QAAA,WACA,OAAAniD,EAAA4vB,MAAAuyB,WAEAl7E,SAAA,WACA,OAAA+4B,EAAAu9E,YAAAt2G,UAEAqiH,UAAA,WACA,OAAAtpF,EAAAqpF,cAEAW,iBAAA,WACA,OAAAhqF,EAAAgqF,oBAEAnzB,YACAk0B,eAAA/qF,EAAA8qF,gBACApE,UAAA1mF,EAAA6qF,WACAX,WAAAlqF,EAAAiqF,YACAE,iBAAAnqF,EAAA47D,mBA8BA,OA5BA57D,EAAAmjF,sBAAA,SAAAnjF,EAAAiqF,YAAA,IAAqEtH,GAAkBj8F,EAAAsZ,EAAAwzD,KAAAxzD,EAAAy4F,iBAAA,IAA+CzlC,GAActsE,EAAAsZ,EAAAwzD,KAAAxzD,EAAAy4F,iBAEpJz4F,EAAA64F,sCAIA74F,EAAAg4F,mBAAA,IAAmChP,GAAap6B,GAAArzC,aAAAq9E,GAChD9O,qBAAA9pF,EAAA6pF,sBACAF,WAAA,SACKpzG,GAELypB,EAAA+3F,oBAAA,IAAoC/O,GAAap6B,GAAArzC,aAAAq9E,GACjDjP,WAAA,UACKpzG,GACLypB,EAAA84F,uBAAA,IAAuCnH,GAAgB/iC,GAAArzC,aAAAq9E,GACvDjP,WAAA,QACKpzG,GAELypB,EAAA+4F,+BAGAnB,GAAAtmH,QAAA,SAAAwmH,GACA93F,EAAA83F,EAAA,KAAAD,GAAA7uG,KAAAgX,EAAA83F,KAEA93F,EAAA+kF,QAAAR,GAAA,OAEAvkF,EAAAmjF,sBAAA1xD,OAEAzxB,EAmlCA,OArsCEoxD,GAAQ8mC,EAAA5a,GA4HRnsB,GAAW+mC,IACbzpH,IAAA,sCACAE,MAAA,WACA,IAAA8xB,EAAAloB,KAEAA,KAAA4qG,sBAAA3pG,GAAA,4BACA,IAAAmrB,EAAAlE,EAAA0iF,sBAAAx+E,QAEAq0F,EAAA,IAAAr0F,EAAAgB,eAAA,IAGAswD,GAAAx1D,EAAA0iF,sBAAAlxB,OAAAxxD,EAAA0iF,sBAAAx+E,SACAlE,EAAAg4F,gBAAA7lG,QAAA,EAEA6N,EAAAg4F,gBAAA7lG,QAAAomG,EAKAr0F,EAAAb,SAAA,SAAArD,EAAAmvB,MAAAgqB,YACAn5C,EAAAu3F,mBAAAzzF,SAAAI,EAAAlE,EAAAg4F,iBAEAh4F,EAAAu3F,mBAAAvmE,QAGA0lE,IACAjN,WAAAzpF,EAAAwpF,YACAiM,gBACAjzF,MAAAxC,EAAAs3F,oBACA30F,UAAA3C,EAAAq4F,uBACArsE,KAAAhsB,EAAAu3F,oBAEA1yE,KAAA7kB,EAAAmvB,MACA6mE,eAAAh2F,EAAAg4F,gBACA3V,qBAAAriF,EAAA0iF,sBACAhwB,IAAA1yD,EAAA+yD,KACAvB,OAAAxxD,EAAAwxD,SACAkkC,WAAA11F,EAAAi4F,YACAtC,yBAAA31F,EAAA21F,yBAAAptG,KAAAyX,KAGAA,EAAAw4F,sBAAAx4F,EAAAwxD,SAAAttD,GAEA,IACAlE,EAAAy4F,sBACS,MAAAziH,GAET,OADAm4E,GAAAliD,IAAAj7B,KAAA,iCAAAgF,GACAgqB,EAAA88E,YAAAgQ,YAAA,UAGA9sF,EAAA04F,kBAEA14F,EAAAi4F,YAAAz1F,MAAA8yF,sBAAAt1F,EAAAi4F,YAAAz1F,MAAA8yF,qBAAApxF,QACAlE,EAAA9D,QAAA,wBAKA8D,EAAAi4F,YAAAz1F,MAAA8yF,qBAAA7+E,IAAA,4BACAzW,EAAA9D,QAAA,4BAIApkB,KAAA4qG,sBAAA3pG,GAAA,4BACA,IAAA4/G,EAAA34F,EAAA0iF,sBAAAx+E,QAEA,IAAAy0F,EAAA,CAGA34F,EAAA44F,8BAEA,IAAAC,OAAA,EAcA,OAZA74F,EAAA43F,2BACAiB,EAAA74F,EAAA84F,yBAGAD,IACAA,EAAA74F,EAAA+4F,kBAGA/4F,EAAAg5F,cAAAH,OAEA74F,EAAA0iF,sBAAAx+E,MAAAlE,EAAAg5F,eA4BA,GAvBAh5F,EAAA83F,aACA93F,EAAAi5F,cAAAN,GAOA34F,EAAAu3F,mBAAAzzF,SAAA60F,EAAA34F,EAAAg4F,iBAEAh4F,EAAAk5F,iBAKAl5F,EAAAmvB,MAAAvI,WACA5mB,EAAAu3F,mBAAAvmE,OAEAhxB,EAAAs3F,qBACAt3F,EAAAs3F,oBAAAtmE,SAIA2nE,EAAAt1F,QAAA,CACA,IAAA81F,EAAA,WACA,IAAAhK,EAAAnvF,EAAA84B,WAEA,IAAAq2D,EAAAzqH,QACAs7B,EAAA88E,YAAAsc,kBAAAjK,EAAA9pF,MAAA,GAAA8pF,EAAAliH,IAAA,KAIA,GAAA+yB,EAAAx5B,aAAAiK,IAAA,CASAuvB,EAAAmvB,MAAA1Y,IAAA,iBARA,SAAA4iF,IACAr5F,EAAAx5B,aAAAiK,IACA0oH,IAEAn5F,EAAAmvB,MAAA1Y,IAAA,iBAAA4iF,UAMAF,OAIArhH,KAAA4qG,sBAAA3pG,GAAA,mBACAinB,EAAA21F,yBAAA31F,EAAA0iF,sBAAAh8F,SAEA5O,KAAA4qG,sBAAA3pG,GAAA,2BACAinB,EAAAu3F,mBAAA/tG,QAEAwW,EAAAu3F,mBAAAzwE,UAEAhvC,KAAA4qG,sBAAA3pG,GAAA,yBACA,IAAAmrB,EAAAlE,EAAA0iF,sBAAAx+E,QAEAq0F,EAAA,IAAAr0F,EAAAgB,eAAA,IAGAswD,GAAAx1D,EAAA0iF,sBAAAlxB,OAAAxxD,EAAA0iF,sBAAAx+E,SACAlE,EAAAg4F,gBAAA7lG,QAAA,EAEA6N,EAAAg4F,gBAAA7lG,QAAAomG,EAOAv4F,EAAAu3F,mBAAAzzF,SAAAI,EAAAlE,EAAAg4F,iBAEAh4F,EAAAu3F,mBAAAvmE,OAEAhxB,EAAAmvB,MAAAjzB,SACAlvB,KAAA,cACAupC,SAAA,MAGAz+B,KAAA4qG,sBAAA3pG,GAAA,+BACA,IAAA4/G,EAAA34F,EAAA0iF,sBAAAx+E,QAEAlE,EAAAs5F,oBAAAX,KAOA34F,EAAA21F,0BACAzkH,QAAA,iCAIA8uB,EAAAmvB,MAAAjzB,QAAA,oBAGApkB,KAAA4qG,sBAAA3pG,GAAA,+BACAinB,EAAAmvB,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,6BAGAqS,KAAA4qG,sBAAA3pG,GAAA,8BACAinB,EAAAmvB,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,+BAWAuI,IAAA,wBACAE,MAAA,SAAAsjF,EAAAttD,GACA,IAAAD,EAAAutD,EAAAvtD,gBACAs1F,GAAA,EACAC,EAAA3rH,OAAAC,KAAAm2B,EAAAzB,OAEA,QAAAS,KAAAgB,EAAAzB,MACA,QAAA8jB,KAAAriB,EAAAzB,MAAAS,GAAA,CACAgB,EAAAzB,MAAAS,GAAAqjB,GAEAjzB,MACAkmG,GAAA,GAKAA,GACAzhH,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,gBAIAoI,OAAAC,KAAAm2B,EAAAtB,WAAAj+B,QACAoT,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,eAIAkxF,GAAAhB,SAAAK,MAAA9xD,IACApsB,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,YAIAkxF,GAAAhB,SAAAM,OAAA/xD,IACApsB,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,aAIA+zH,EAAA90H,QAAAmJ,OAAAC,KAAAm2B,EAAAzB,MAAAg3F,EAAA,KAAA90H,OAAA,GACAoT,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,wBAIAqS,KAAAggH,aACAhgH,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,6BAYAuI,IAAA,+BACAE,MAAA,WACA,IAAAyzB,EAAA7pB,KAEAA,KAAAy/G,mBAAAx+G,GAAA,6BACA,IAAA0gH,EAAA93F,EAAAo3F,iBAEAW,EAAA/3F,EAAA+gF,sBAAAx+E,QAEAkf,EAAAzhB,EAAAwtB,MAAA/L,WAEAu2E,EAAAv2E,EAAA1+C,OAAA0+C,EAAAn2C,IAAAm2C,EAAA1+C,OAAA,GAAAi9B,EAAAwtB,MAAAe,cAAA,EAEA0pE,EAAAj4F,EAAAi4F,uBAMAF,EAAAr2F,SAEA1B,EAAAn7B,WAAAw+G,GAAAO,2BACAkU,EAAA95F,WAAAuB,UAAAw4F,EAAA/5F,WAAAuB,WAEAy4F,GAAAC,IACAj4F,EAAA+gF,sBAAAx+E,MAAAu1F,GAGA93F,EAAAwtB,MAAAjzB,QAAA,qBAEApkB,KAAAy/G,mBAAAx+G,GAAA,sBACA4oB,EAAAzF,QAAA,cAEApkB,KAAAy/G,mBAAAx+G,GAAA,mBACA4oB,EAAAg0F,yBAAAh0F,EAAA41F,mBAAA7wG,WAEA5O,KAAAy/G,mBAAAx+G,GAAA,4BACA4oB,EAAAk4F,sBAEA/hH,KAAAy/G,mBAAAx+G,GAAA,6BACA4oB,EAAAwtB,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,2BAGAqS,KAAAw/G,oBAAAv+G,GAAA,4BACA4oB,EAAAk4F,sBAEA/hH,KAAAy/G,mBAAAx+G,GAAA,mBACA4oB,EAAAm4F,kBAEAhiH,KAAAy/G,mBAAAx+G,GAAA,wBACA4oB,EAAAg0F,0BACAzkH,QAAA,mGAtdA,OAydA4G,KAAAy/G,mBAAAx+G,GAAA,6BAGA4oB,EAAAwtB,MAAAjzB,QAAA,eAEApkB,KAAAy/G,mBAAAx+G,GAAA,8BAAAnB,GAGA+pB,EAAAwtB,MAAAjzB,SACAlvB,KAAA,2BACA+xG,QAAAnnG,EAAAmnG,YAGAjnG,KAAAw/G,oBAAAv+G,GAAA,mBACA4oB,EAAAm4F,qBAIA9rH,IAAA,sBACAE,MAAA,WACA,OAAAhE,KAAAwf,IAAA5R,KAAAw/G,oBAAApM,mBAAApzG,KAAAy/G,mBAAArM,uBAOAl9G,IAAA,OACAE,MAAA,WACA4J,KAAAy/G,mBAAAvmE,OAEAl5C,KAAAmgH,YAAAz1F,MAAA8yF,sBACAx9G,KAAAw/G,oBAAAtmE,OAGAl5C,KAAAmgH,YAAAt1F,UAAA2yF,sBACAx9G,KAAAugH,uBAAArnE,UAYAhjD,IAAA,uBACAE,MAAA,WACA,IAAAg2B,EAAApsB,KAAAihH,iBAEA70F,IAAApsB,KAAA4qG,sBAAAx+E,UACApsB,KAAA4qG,sBAAAx+E,SACApsB,KAAAy/G,mBAAAhL,kBAaAv+G,IAAA,qBACAE,MAAA,WACA,IAAAoyC,EAAAxoC,KAEAosB,EAAApsB,KAAAihH,iBAEA70F,IAAApsB,KAAA4qG,sBAAAx+E,UAIApsB,KAAA4qG,sBAAAx+E,SAOApsB,KAAAy/G,mBAAAzL,gBAAA,WAGA39B,GAAA1rC,QAAAN,YAAAgsC,GAAA1rC,QAAAT,QACA1B,EAAA6O,MAAA8E,eAAA3T,EAAA6O,MAAAe,cAAA,KAEA5P,EAAA6O,MAAA8E,eAAA3T,EAAA6O,MAAAe,qBASAliD,IAAA,OACAE,MAAA,WACA,IAAA4J,KAAA4gH,iBAAA,CAIA5gH,KAAAq3C,MAAA4qE,SACAjiH,KAAA+/G,QAAA,GAGA//G,KAAA8wG,cACA9wG,KAAAk5C,OAGA,IAAAm+D,EAAAr3G,KAAAq3C,MAAA2J,WAGA,OAAAhhD,KAAAq3C,MAAA3oD,aAAAiK,KACAqH,KAAAq3C,MAAAe,cAAAi/D,EAAA9pF,MAAA,GACAvtB,KAAA+/G,QAAA1I,EAAAliH,IAAAkiH,EAAAzqH,OAAA,SAFA,MAYAsJ,IAAA,iBACAE,MAAA,WACA,IAAAkmD,EAAAt8C,KAEAosB,EAAApsB,KAAA4qG,sBAAAx+E,QAMA,IAAAA,GAAApsB,KAAAq3C,MAAAvI,UAAA9uC,KAAA8wG,aACA,SAIA,IAAA1kF,EAAAb,QAAA,CACA,IAAA8rF,EAAAr3G,KAAAghD,WAEA,IAAAq2D,EAAAzqH,OAGA,SAGA,GAAAypF,GAAA1rC,QAAAN,YAAA,IAAArqC,KAAAq3C,MAAA55B,aAYA,OATAzd,KAAAq3C,MAAA1Y,IAAA,4BACA2d,EAAAl4B,QAAA,aAEAk4B,EAAAyjE,QAAA1I,EAAAliH,IAAA,IAEAmnD,EAAAw0D,WAAA,WACA,aAGA,EAIA9wG,KAAAokB,QAAA,aAEApkB,KAAA+/G,QAAA1I,EAAAliH,IAAA,IASA,OANA6K,KAAA8wG,WAAA,WACA,UAIA9wG,KAAAk5C,QACA,KASAhjD,IAAA,oBACAE,MAAA,WAIA,IACA4J,KAAA2gH,sBACO,MAAAziH,GAEP,OADAm4E,GAAAliD,IAAAj7B,KAAA,kCAAAgF,GACA8B,KAAAglG,YAAAgQ,YAAA,UAMA,GAAAh1G,KAAAq3C,MAAAgvB,WAAA,CACA,IAAA3e,EAAA1nD,KAAAq3C,MAAAlU,YAGA,IAAAukB,GAAA,mBAAAA,EAAAv7C,MACAu7C,EAAAv7C,KAAA,cAAAjO,MAIA8B,KAAAokB,QAAA,iBAYAluB,IAAA,gBACAE,MAAA,WACA,IAAA8rH,EAAAliH,KAAAy/G,mBAAA9M,OAeA,GAbA3yG,KAAAmgH,YAAAz1F,MAAA8yF,uBAMA0E,GAJAliH,KAAAy/G,mBAAApO,gBAAArxG,KAAAy/G,mBAAApO,eAAAwG,cAIAqK,GAAAliH,KAAAw/G,oBAAA7M,OAGA3yG,KAAAw/G,oBAAA7M,QAIAuP,EAAA,CAIAliH,KAAAwsG,QAAA,qCAGA,IACAxsG,KAAAglG,YAAAgQ,cACO,MAAA92G,GACPm4E,GAAAliD,IAAAj7B,KAAA,0CAAAgF,QAUAhI,IAAA,sBACAE,MAAA,SAAA41B,GAGA,IAFAhsB,KAAAghD,WAEAp0D,OAEA,SAGA,IAAAuvF,EAAAn8E,KAAAuyG,gBAAA4P,eAAAn2F,EAAAhsB,KAAAglG,YAAAt2G,UAEA,UAAAytF,EACA,SAKA,IAAAimC,EAAAvjC,GAAAhB,SAAAhB,YAAA7wD,EAAAmwD,GACA/jC,EAAAp4C,KAAAq3C,MAAAe,cACA9M,EAAAtrC,KAAAq3C,MAAA/L,WAEA,IAAAA,EAAA1+C,OAEA,OAAAw1H,EAAAhqE,GA51dAiqE,GA+1dA,IAAAv2D,EAAAxgB,EAAAn2C,IAAAm2C,EAAA1+C,OAAA,GAGA,OAAAk/D,EAAA1T,GAl2dAiqE,IAk2dAD,EAAAt2D,GAl2dAu2D,MAg3dAnsH,IAAA,2BACAE,MAAA,WACA,IAGAurH,EAHA/yG,EAAAmB,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MACAkoG,EAAAloG,UAAA,GACA6xG,OAAA,EAUA,GAJAA,EAAAhzG,EAAAod,UAAAhsB,KAAA4qG,sBAAAx+E,QACA6rF,KAAArpG,EAAAqpG,mBAAAj4G,KAAAi4G,mBAGA2J,EAAA,CACA5hH,KAAA4O,QAEA,IACA,OAAA5O,KAAAglG,YAAAgQ,YAAA,WACS,MAAA92G,GACT,OAAA8B,KAAAokB,QAAA,UAIA,IAAA43D,EAAA,IAAAh8E,KAAA4qG,sBAAAlxB,OAAAxtD,UAAAj2B,OAAAunF,IAAA5wF,OAEA,OAAAovF,GAEA3F,GAAAliD,IAAAj7B,KAAA,mGACA8G,KAAAq3C,MAAAjzB,QAAA,iBACApkB,KAAA4qG,sBAAA1xD,KAAA8iC,KAIA4lC,EAAAtkC,aAAAr0F,KAAA8kB,MAAA,IAAAkqG,EACAj4G,KAAAq3C,MAAAjzB,QAAA,qBACApkB,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,8BAGAg0H,EAAA3hH,KAAAihH,iBACA5qC,GAAAliD,IAAAj7B,KAAA,sDAAA0V,EAAAxV,QAAA,IAAAwV,EAAAxV,QAAA,uCACA4G,KAAA4qG,sBAAAx+E,MAAAu1F,OAOAzrH,IAAA,eACAE,MAAA,WACA4J,KAAAy/G,mBAAAzwE,QAEAhvC,KAAAmgH,YAAAz1F,MAAA8yF,sBACAx9G,KAAAw/G,oBAAAxwE,QAGAhvC,KAAAmgH,YAAAt1F,UAAA2yF,sBACAx9G,KAAAugH,uBAAAvxE,WAWA94C,IAAA,iBACAE,MAAA,SAAAgiD,GACA,IAAA9M,EAAAg3C,GAAAtiF,KAAAq3C,MAAA/L,WAAA8M,GAEA,OAAAp4C,KAAA4qG,uBAAA5qG,KAAA4qG,sBAAAx+E,SAOApsB,KAAA4qG,sBAAAx+E,QAAAjoB,SAQAmnC,KAAA1+C,OACAwrD,GAKAp4C,KAAAy/G,mBAAAzL,kBACAh0G,KAAAy/G,mBAAA/tG,QAEA1R,KAAAmgH,YAAAz1F,MAAA8yF,uBACAx9G,KAAAw/G,oBAAAxL,kBACAh0G,KAAAw/G,oBAAA9tG,SAGA1R,KAAAmgH,YAAAt1F,UAAA2yF,uBACAx9G,KAAAugH,uBAAAvM,kBACAh0G,KAAAugH,uBAAA7uG,cAIA1R,KAAAk5C,QAjCA,KA0CAhjD,IAAA,WACAE,MAAA,WACA,OAAA4J,KAAA4qG,sBAIA5qG,KAAAglG,YACAhlG,KAAAglG,YAAAt2G,SAGAmwF,GAAAhB,SAAAnvF,SAAAsR,KAAA4qG,sBAAAx+E,SAPA,KAgBAl2B,IAAA,WACAE,MAAA,WACA,OAAA4J,KAAAixG,aAGA/6G,IAAA,oBACAE,MAAA,WACA,IAAAksH,OAAA,EACAC,OAAA,EAEA,GAAAviH,KAAA4qG,sBAAA,CAIA,IAAAx+E,EAAApsB,KAAA4qG,sBAAAx+E,QAEA,GAAAA,EAAA,CAIA,IAAA+vD,EAAAn8E,KAAAuyG,gBAAA4P,eAAA/1F,EAAApsB,KAAAglG,YAAAt2G,UAEA,UAAAytF,GAOA,KAFAmmC,EAAAzjC,GAAAhB,SAAA78B,SAAA50B,EAAA+vD,IAEAvvF,OAAA,CAIA,GAAAoT,KAAAmgH,YAAAz1F,MAAA8yF,qBAAA,CAIA,GAHApxF,EAAApsB,KAAAmgH,YAAAz1F,MAAA8yF,qBAAApxF,QAGA,QAFA+vD,EAAAn8E,KAAAuyG,gBAAA4P,eAAA/1F,EAAApsB,KAAAglG,YAAAt2G,WAGA,OAKA,QAFA6zH,EAAA1jC,GAAAhB,SAAA78B,SAAA50B,EAAA+vD,IAEAvvF,OACA,OAIA,IAAA41H,OAAA,EACAC,OAAA,EAEAziH,KAAAixG,WAAAjxG,KAAAixG,UAAArkH,SACA41H,EAAAxiH,KAAAixG,UAAA97G,IAAA,GACAstH,EAAAziH,KAAAixG,UAAA1jF,MAAA,IAGAg1F,EAIOA,EAAAh1F,MAAA,GAAA+0F,EAAAntH,IAAA,IAAAmtH,EAAA/0F,MAAA,GAAAg1F,EAAAptH,IAAA,GAEP6K,KAAAixG,UAAAqR,EAEAtiH,KAAAixG,UAAA56B,GAAAjrC,mBAAAm3E,EAAAh1F,MAAA,GAAA+0F,EAAA/0F,MAAA,GAAAg1F,EAAAh1F,MAAA,GAAA+0F,EAAA/0F,MAAA,GAAAg1F,EAAAptH,IAAA,GAAAmtH,EAAAntH,IAAA,GAAAotH,EAAAptH,IAAA,GAAAmtH,EAAAntH,IAAA,MALA6K,KAAAixG,UAAAqR,EASAtiH,KAAAixG,WAAAjxG,KAAAixG,UAAArkH,QACAoT,KAAAixG,UAAA97G,IAAA,KAAAqtH,GAAAxiH,KAAAixG,UAAA1jF,MAAA,KAAAk1F,IAKAziH,KAAAwsG,QAAA,qBAAAhqB,GAAAxiF,KAAAixG,WAAA,KACAjxG,KAAAq3C,MAAAjzB,QAAA,0BAOAluB,IAAA,iBACAE,MAAA,WACA,IAAAqmD,EAAAz8C,KAEA0iH,EAAA1iH,KAAAglG,YAAAt2G,SACAi0H,EAAA9jC,GAAAhB,SAAAnvF,SAAAsR,KAAA4qG,sBAAAx+E,SACAkf,EAAAtrC,KAAAq3C,MAAA/L,WAEAs3E,EAAA,SAAAA,IAIAnmE,EAAA+vD,QAAA,yBAAA/vD,EAAAuoD,YAAAt2G,SAAA,OAAAi0H,GAEA,IACAlmE,EAAAuoD,YAAAt2G,SAAAi0H,EACS,MAAAzkH,GACTm4E,GAAAliD,IAAAj7B,KAAA,sCAAAgF,GAGAu+C,EAAApF,MAAAjzB,QAAA,kBAEAq4B,EAAAuoD,YAAA1oE,oBAAA,aAAAsmF,IAGAt3E,EAAA1+C,OAAA,IACA+1H,EAAAvwH,KAAAwf,IAAA+wG,EAAAr3E,EAAAn2C,IAAAm2C,EAAA1+C,OAAA,KAIA81H,IAAAC,IAEA,SAAA3iH,KAAAglG,YAAAvnF,WACAzd,KAAAglG,YAAA35F,iBAAA,aAAAu3G,GAEAA,QAUA1sH,IAAA,UACAE,MAAA,WACA,IAAAgnD,EAAAp9C,KAEAA,KAAAsyG,WAAA/sB,YACAvlF,KAAA4qG,sBAAAxjF,UACApnB,KAAAy/G,mBAAAr4F,WACA,qBAAAruB,QAAA,SAAA7D,GACA,IAAAgS,EAAAk2C,EAAA+iE,YAAAjrH,GAAAgS,OAEA,QAAA7O,KAAA6O,EACAA,EAAA7O,GAAAU,QAAA,SAAA2M,GACAA,EAAAg4G,gBACAh4G,EAAAg4G,eAAAt2F,cAKApnB,KAAAw/G,oBAAAp4F,UACApnB,KAAAugH,uBAAAn5F,aASAlxB,IAAA,SACAE,MAAA,WACA,OAAA4J,KAAA4qG,sBAAAlxB,UASAxjF,IAAA,QACAE,MAAA,WAEA,OAAA4J,KAAA4qG,sBAAAx+E,SAAApsB,KAAAkhH,iBASAhrH,IAAA,sBACAE,MAAA,WACA,IACAysH,EADAz2F,EAAApsB,KAAA4qG,sBAAAx+E,QAIA,GAAAA,GAAA,SAAApsB,KAAAglG,YAAAvnF,WAAA,CAMA,IAFAolG,EAAA1f,GAAAnjG,KAAA4qG,sBAAAlxB,OAAAttD,IAEAx/B,OAAA,EAEA,OADAoT,KAAA4O,MAAA,mEAAAwd,EAAA+tD,YACAn6E,KAAAglG,YAAAgQ,YAAA,UAGAh1G,KAAA8iH,0BAAAD,GAGA7iH,KAAA+iH,6BAAA32F,OAGAl2B,IAAA,4BACAE,MAAA,SAAAysH,GAKA,IAAA1W,EACA0W,EAAAj2H,OAAA,IACA,IAAAi2H,EAAA,GAAAtpH,QAAA,MAEAspH,EAAA,KAAAA,EAAA,GACA,IAAAxsC,GAAA11C,YAEA,KACA3gC,KAAAy/G,mBAAA7Y,SAAAic,EAAA,GAAA1W,GAEA0W,EAAA,IACA7iH,KAAAw/G,oBAAA5Y,SAAAic,EAAA,GAAA1W,MAQAj2G,IAAA,8BACAE,MAAA,WACA4J,KAAA05E,SAAAxtD,UAAAnzB,QAAA,SAAAiqH,GA5kQA,IAAAC,EA6kQAD,EAAAn7F,WAAA27E,QAAyChvE,EAAA/6B,EAAQ0uG,aAAgB3zE,EAAA/6B,EAAQ0uG,YAAAqB,kBAAiCh1E,EAAA/6B,EAAQ0uG,YAAAqB,gBAAA,uBA7kQlHyZ,EA6kQ0JD,EAAAn7F,WAAA27E,OA5kQ1Jyf,EAAArmH,QAAA,+BAAAjG,GACA,OAAA+rG,IAAA/rG,IAAA,MA2kQ0J,OAC1JqsH,EAAA1lC,aAAA3kF,UAoBAzC,IAAA,+BACAE,MAAA,SAAAg2B,GACA,IAAA42E,EAAA,EACAT,EAAA,KACAI,OAAA,EAEAv2E,EAAAvE,WAAA27E,SACAb,EAAAI,GAAA32E,EAAAvE,WAAA27E,QACAjB,EAAAI,EAAAJ,WACAS,EAAAL,EAAAK,YAGAhjG,KAAA05E,SAAAxtD,UAAAnzB,QAAA,SAAAiqH,GACA,IAAAE,GACAlgB,WAAA,EACAT,WAAA,MAGAygB,EAAAn7F,WAAA27E,SACA0f,EAAAngB,GAAAigB,EAAAn7F,WAAA27E,SAKA0f,EAAAlgB,iBACAggB,EAAA1lC,aAAA3kF,KAKAuqH,EAAA3gB,iBACAygB,EAAA1lC,aAAA3kF,UAKAzC,IAAA,gBACAE,MAAA,SAAAg2B,GACA,IAAAphC,EAAA,EACAqsH,EAAAr3G,KAAAghD,WAEAq2D,EAAAzqH,SACA5B,EAAAqsH,EAAA9pF,MAAA,IA7sGgB,SAAAnB,EAAAhU,GAChB,IAAAptB,EAAA+kB,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,KAEA,GAAAqc,EAAAjoB,SAOA,IAHA,IAAA42G,EAAA/vH,EACA4hD,OAAA,EAEA3hD,EAAA,EAAiBA,EAAAmhC,EAAAjoB,SAAAvX,OAA2B3B,IAAA,CAC5C,IAAAmZ,EAAAgoB,EAAAjoB,SAAAlZ,GAUA,GARA2hD,IAKAA,EAAAkuE,GAAA1iG,EAAA2iG,EAAA32G,EAAA1V,SAAA,IAGAk+C,EAAA,CACA,aAAAxoC,EAAA,CAEAwoC,EAAAC,QAAAkuE,EACAnuE,EAAAquE,UAAAF,EACAA,GAAA32G,EAAA1V,SACAk+C,EAAA,KACA,SAGA,GAAAmuE,EAAAnuE,EAAAC,QAAA,CAEAkuE,GAAA32G,EAAA1V,SACA,SAIAk+C,EAAAC,SAAAzoC,EAAA1V,cAWA,GATA,WAAA0V,KACAwoC,EAAA,IAAkBpY,EAAA/6B,EAAQ6+C,OAAAyiE,IAAA32G,EAAA1V,SAAA0V,EAAAwpB,SAC1BotF,YAAAD,EAGAnuE,EAAAquE,UAAAF,EAAAvyF,WAAApkB,EAAAwpB,QACAxV,EAAAm1B,OAAAX,IAGA,eAAAxoC,EAAA,CAEA,IAAA++G,EACAC,EAGAC,EAAAj/G,EAAA0pB,WAAA/2B,MAAA,KAAAlB,IAAA2yB,YAEA86F,EAAAvqC,GAAAsqC,EAAA,GAEAF,EAAAG,EAAA,GACAF,EAAAE,EAAA,IACA12E,EAAA,IAAkBpY,EAAA/6B,EAAQ6+C,OAAAyiE,IAAA32G,EAAA1V,SAAA,KAC1BssH,YAAAD,EAAAoI,EACAv2E,EAAAquE,UAAAruE,EAAAouE,YAAAoI,EACAhrG,EAAAm1B,OAAAX,GAIAmuE,GAAA32G,EAAA1V,UA4oGM60H,CAAYn3F,EAAApsB,KAAAigH,cAAAj1H,MASlBkL,IAAA,mBACAE,MAAA,WACA,IAAAgiD,EAAAp4C,KAAAq3C,MAAAe,cACA0hB,EAAAozC,GAAAC,mBACA39G,EAAA09G,GAAAG,wBACAz7F,EAAAxf,KAAAwf,IAAAkoD,EAAAozC,GAAAE,wBACA,OAAAh7G,KAAAwG,IAAAkhE,EAAA1hB,EAAA5oD,EAAAoiB,MASA1b,IAAA,qBACAE,MAAA,WACA,IAAAgiD,EAAAp4C,KAAAq3C,MAAAe,cACA0hB,EAAAozC,GAAAM,sBACAh+G,EAAA09G,GAAAQ,2BACA97F,EAAAxf,KAAAwf,IAAAkoD,EAAAozC,GAAAO,2BACA,OAAAr7G,KAAAwG,IAAAkhE,EAAA1hB,EAAA5oD,EAAAoiB,OAGA+tG,EAtsC4B,CAusC3BtpC,GAAA11C,aAsDD6iF,GAAA,SAAAA,EAAAC,EAAAz3F,EAAA3zB,GACEsgF,GAAc34E,KAAAwjH,GAChB,IAzCAE,EAAAC,EAAAC,EAyCAC,EAAAJ,EAAAK,0BAIAC,EAAAF,GAHAJ,EAAAngF,SAAA0gF,oBAEA,iBACA,kBAAAvzG,KAAAozG,GAEA,GAAA73F,EAAAnE,WAAAqB,WAAA,CACA,IAAAC,EAAA6C,EAAAnE,WAAAqB,WACAlpB,KAAA3V,MAAA8+B,EAAA9+B,MACA2V,KAAA1V,OAAA6+B,EAAA7+B,OAGA0V,KAAAs+E,UAAAtyD,EAAAnE,WAAAuB,UAGAppB,KAAA3H,KAGA2H,KAAAiyC,SA3DAyxE,EA2DAD,EAAAv3F,UA3DAy3F,EA2DA33F,EAAAzQ,IA3DAqoG,EA2DAG,EA1DA,SAAA3uF,GACA,IAAApJ,EAAA03F,EAAAhqC,OAAAxtD,UAAAy3F,GACAM,EAAA1mC,GAAAvxD,GACAk4F,EAAA1mC,GAAAxxD,GAEA,gBAAAoJ,EACA8uF,GAGA9uF,SACApJ,EAAAyQ,SAEAzQ,EAAAyQ,UAAA,EAGArH,IAAA8uF,GAAAD,IAEAL,IAEAxuF,EACAsuF,EAAAt/F,QAAA,oBAEAs/F,EAAAt/F,QAAA,sBAIAgR,MAiEA+uF,IAAA,8CAKIC,GAAe,WAMnB,SAAAC,EAAArmH,GACA,IAAAypB,EAAAznB,KAEI24E,GAAc34E,KAAAqkH,GAClBrkH,KAAAq3C,MAAAr5C,EAAA+uC,KACA/sC,KAAAghD,SAAAhjD,EAAAgjD,SACAhhD,KAAAuhF,OAAAvjF,EAAAujF,OACAvhF,KAAAskH,iCAAAtmH,EAAAsmH,iCACAtkH,KAAAosB,MAAApuB,EAAAouB,MACApsB,KAAAukH,mBAAA,EACAvkH,KAAAwkH,iBAAA,KACAxkH,KAAAykH,OAAA,KACAzkH,KAAA0kH,yBAAA,KACA1kH,KAAAwsG,QAAAR,GAAA,mBACAhsG,KAAAwsG,QAAA,cAEA,IAAAmY,EAAA,WACA,OAAAl9F,EAAAm9F,uBAGAC,EAAA,WACA,OAAAp9F,EAAAq9F,gBAGAC,EAAA,WACA,OAAAt9F,EAAAu9F,gBAGAC,EAAA,WACA,OAAAx9F,EAAAy9F,kBAGAllH,KAAAq3C,MAAAp2C,GAAA,kBAAAgkH,GACAjlH,KAAAq3C,MAAAp2C,GAAA,UAAA4jH,GACA7kH,KAAAq3C,MAAAp2C,GAAAkjH,GAAAY,GACA/kH,KAAAq3C,MAAAp2C,GAAA,UAAA0jH,GAEA3kH,KAAAonB,QAAA,WACAK,EAAA+kF,QAAA,WAEA/kF,EAAA4vB,MAAAnwB,IAAA,kBAAA+9F,GAEAx9F,EAAA4vB,MAAAnwB,IAAA,UAAA29F,GAEAp9F,EAAA4vB,MAAAnwB,IAAAi9F,GAAAY,GAEAt9F,EAAA4vB,MAAAnwB,IAAA,UAAAy9F,GAEAl9F,EAAAi9F,0BACQlwF,EAAA/6B,EAAQygB,aAAAuN,EAAAi9F,0BAGhBj9F,EAAAu9F,gBA4VA,OAlVEpsC,GAAWyrC,IACbnuH,IAAA,sBACAE,MAAA,WACA4J,KAAAmlH,oBAEAnlH,KAAA0kH,0BACQlwF,EAAA/6B,EAAQygB,aAAAla,KAAA0kH,0BAIhB1kH,KAAA0kH,yBAAsClwF,EAAA/6B,EAAQiZ,WAAA1S,KAAA4kH,oBAAAn0G,KAAAzQ,MAAA,QAW9C9J,IAAA,oBACAE,MAAA,WACA,GAAA4J,KAAAq3C,MAAAuyB,WAAA5pE,KAAAklH,iBAGA,OAFAllH,KAAAukH,mBAAA,OACAvkH,KAAAwkH,iBAAAxkH,KAAAq3C,MAAAe,eAIA,IAAAp4C,KAAAq3C,MAAAvI,WAAA9uC,KAAAq3C,MAAAuyB,UAAA,CAIA,IAAAxxB,EAAAp4C,KAAAq3C,MAAAe,cACA9M,EAAAtrC,KAAAq3C,MAAA/L,WAEA,GAAAtrC,KAAAwkH,mBAAApsE,KAAA9M,EAAA1+C,QAAAwrD,EA1hfAiqE,IA0hfA/2E,EAAAn2C,IAAAm2C,EAAA1+C,OAAA,IAMA,OAAAoT,KAAA8kH,eAGA9kH,KAAAukH,oBAAA,GAAAnsE,IAAAp4C,KAAAwkH,kBACAxkH,KAAAukH,qBACAvkH,KAAAolH,YACOhtE,IAAAp4C,KAAAwkH,iBACPxkH,KAAAukH,sBAEAvkH,KAAAukH,mBAAA,EACAvkH,KAAAwkH,iBAAApsE,OAWAliD,IAAA,eACAE,MAAA,WACA4J,KAAAukH,mBAAA,EAEAvkH,KAAAykH,SACAzkH,KAAAwsG,QAAA,gBACAtyF,aAAAla,KAAAykH,SAGAzkH,KAAAykH,OAAA,QAUAvuH,IAAA,iBACAE,MAAA,WAGA,IAFA4J,KAAAq3C,MAAAuyB,UAGA,SAGA,IAAA5oB,EAAAhhD,KAAAghD,WACA5I,EAAAp4C,KAAAq3C,MAAAe,cAEAmpC,OAAA,EADAvhF,KAAAqlH,qBAAArkE,EAAA5I,EAAAp4C,KAAAosB,QAAApsB,KAAAskH,oCAMA/iC,EAFAvgC,EAAA7rD,IAAA6rD,EAAAp0D,OAAA,IAKAoT,KAAAslH,sBAAAtkE,EAAA5I,KAIAmpC,EAHAvgC,EAAAzzB,MAAA,GA5lfA80F,IAkmfA,gBAAA9gC,IACAvhF,KAAAwsG,QAAA,8CAAAp0D,EAAA,wBAAAoqC,GAAAxhC,GAAA,gBAAAugC,EAAA,KACAvhF,KAAAuhF,WACA,MAYArrF,IAAA,WACAE,MAAA,WACA,IAAA4J,KAAA8kH,eAAA,CAKA,IAAA1sE,EAAAp4C,KAAAq3C,MAAAe,cACA9M,EAAAtrC,KAAAq3C,MAAA/L,WACAi6E,EAAAjjC,GAAAh3C,EAAA8M,GASA,OAAAmtE,EAAA34H,QAAAwrD,EAAA,GAAAmtE,EAAApwH,IAAA,IACA6K,KAAAglH,eACAhlH,KAAAuhF,OAAAnpC,GACAp4C,KAAAwsG,QAAA,cAAAp0D,EAAA,oCAAAmtE,EAAAh4F,MAAA,UAAAg4F,EAAApwH,IAAA,4EAEA6K,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,8BAPA,MAsBAuI,IAAA,eACAE,MAAA,WACA,IAAA4qD,EAAAhhD,KAAAghD,WACA5I,EAAAp4C,KAAAq3C,MAAAe,cAEA,GAAAp4C,KAAAq3C,MAAAuyB,WAAA5pE,KAAAklH,iBAEA,SAGA,GAAAllH,KAAAq3C,MAAAuyB,WAAA,OAAA5pE,KAAAykH,OAEA,SAGA,GAAAzkH,KAAAslH,sBAAAtkE,EAAA5I,GAAA,CACA,IAAAotE,EAAAxkE,EAAA7rD,IAAA6rD,EAAAp0D,OAAA,GASA,OARAoT,KAAAwsG,QAAA,mCAAAp0D,EAAA,0CAAAotE,GACAxlH,KAAAglH,eACAhlH,KAAAuhF,OAAAikC,GAEAxlH,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,qBAEA,EAGA,IAAA29C,EAAAtrC,KAAAq3C,MAAA/L,WACAm6E,EAAAljC,GAAAj3C,EAAA8M,GAEA,GAAAp4C,KAAA0lH,gBAAAD,EAAAn6E,EAAA8M,GAYA,OAPAp4C,KAAAglH,eACAhlH,KAAAuhF,OAAAnpC,GAEAp4C,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,yBAEA,EAIA,GAAA83H,EAAA74H,OAAA,GACA,IAAA+4H,EAAAF,EAAAl4F,MAAA,GAAA6qB,EAGA,OAFAp4C,KAAAwsG,QAAA,cAAAp0D,EAAA,uBAAAutE,EAAA,gBAAAF,EAAAl4F,MAAA,IACAvtB,KAAAykH,OAAA/xG,WAAA1S,KAAA4lH,YAAAn1G,KAAAzQ,MAAA,IAAA2lH,EAAAvtE,IACA,EAIA,YAGAliD,IAAA,uBACAE,MAAA,SAAA4qD,EAAA5I,EAAApsB,GACA,IAAAs4F,EAAAv0G,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,IAAAA,UAAA,GAEA,IAAAixC,EAAAp0D,OAEA,SAGA,IAAAi5H,EAAA7kE,EAAA7rD,IAAA6rD,EAAAp0D,OAAA,GA5tfAy1H,GAmufA,OANAr2F,EAAAT,SAEA+4F,IACAuB,EAAA7kE,EAAA7rD,IAAA6rD,EAAAp0D,OAAA,KAAAo/B,EAAAoB,gBAGAgrB,EAAAytE,KAOA3vH,IAAA,wBACAE,MAAA,SAAA4qD,EAAA5I,GACA,SAAA4I,EAAAp0D,QACAo0D,EAAAzzB,MAAA,MAAA6qB,EAAA4I,EAAAzzB,MAAA,GA7ufA80F,OAovfAnsH,IAAA,kBACAE,MAAA,SAAAqvH,EAAAn6E,EAAA8M,GACA,OAAAqtE,EAAA74H,OAAA,CAGA,IAAAk5H,EAAA9lH,KAAA+lH,uBAAAz6E,EAAA8M,GAEA,GAAA0tE,EAEA,OADA9lH,KAAAwsG,QAAA,mCAAAsZ,EAAAv4F,MAAA,OAAAu4F,EAAA3wH,IAAA,6BAAAijD,IACA,EAIA,YAUAliD,IAAA,cACAE,MAAA,SAAA4vH,GACA,IAAA16E,EAAAtrC,KAAAq3C,MAAA/L,WACA8M,EAAAp4C,KAAAq3C,MAAAe,cACAqtE,EAAAljC,GAAAj3C,EAAA8M,GACAp4C,KAAAglH,eAEA,IAAAS,EAAA74H,QAAAwrD,IAAA4tE,IAIAhmH,KAAAwsG,QAAA,8BAAAp0D,EAAA,yBAAA4tE,EAAA,mBAAAP,EAAAl4F,MAAA,IAEAvtB,KAAAuhF,OAAAkkC,EAAAl4F,MAAA,GA9xfA,MA+xfAvtB,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,qBAIAuI,IAAA,yBACAE,MAAA,SAAAk1C,EAAA8M,GAyBA,IAFA,IAAA6tE,EApwfA,SAAA36E,GACA,GAAAA,EAAA1+C,OAAA,EACA,OAAAypF,GAAAjrC,mBAKA,IAFA,IAAAL,KAEA9/C,EAAA,EAAiBA,EAAAqgD,EAAA1+C,OAAqB3B,IAAA,CACtC,IAAAsiC,EAAA+d,EAAAn2C,IAAAlK,EAAA,GACAkK,EAAAm2C,EAAA/d,MAAAtiC,GACA8/C,EAAAp/C,MAAA4hC,EAAAp4B,IAGA,OAAAkhF,GAAAjrC,iBAAAL,GAuvfAm7E,CAAA56E,GAEArgD,EAAA,EAAqBA,EAAAg7H,EAAAr5H,OAAiB3B,IAAA,CACtC,IAAAsiC,EAAA04F,EAAA14F,MAAAtiC,GACAkK,EAAA8wH,EAAA9wH,IAAAlK,GAEA,GAAAmtD,EAAA7qB,EAAA,GAAA6qB,EAAA7qB,EAAA,EACA,OACAA,QACAp4B,OAKA,gBAGAkvH,EAtZmB,GAyZnB8B,IACAC,cAAA,GACAC,UAAA,SAAA7gH,GAKA,OAAAA,EAJAxF,KAAA+sC,MACAu5E,0BAAA,IAEAhnE,kBA0HAinE,GAAA,SAAAvoH,IA9GA,SAAAwoH,EAAA/mF,EAAAzhC,GACA,IAAAyoH,EAAA,EACAllC,EAAA,EACAmlC,EAAArwC,GAAArzC,aAAAmjF,GAAAnoH,GACAyhC,EAAAtvB,MAAA,WACAsvB,EAAArb,SACAlvB,KAAA,QACAvH,KAAA,mCAUA,IAAAg5H,EAAA,WACAplC,GACA9hD,EAAA2Y,YAAAmpC,IAWApiC,EAAA,SAAAgtB,GACA,OAAAA,QAAAlwE,IAAAkwE,IAIAoV,EAAA9hD,EAAA/wC,aAAAiK,KAAA8mC,EAAA2Y,eAAA,EACA3Y,EAAAd,IAAA,iBAAAgoF,GACAlnF,EAAA0N,IAAAg/B,GACA1sC,EAAArb,SACAlvB,KAAA,QACAvH,KAAA,qBAEA8xC,EAAA0D,SAUAoU,EAAA,WAGA,GAAAtuD,KAAA8kB,MAAA04G,EAAA,IAAAC,EAAAN,cACA3mF,EAAArb,SACAlvB,KAAA,QACAvH,KAAA,kCAHA,CAQA,GAAA+4H,EAAAL,WAAA,mBAAAK,EAAAL,UAMA,OADAI,EAAAx9H,KAAA8kB,MACA24G,EAAAL,UAAA7vH,KAAAipC,EAAA0f,GALAk3B,GAAAliD,IAAAvlB,MAAA,2EAcAg4G,EAAA,SAAAA,IACAnnF,EAAAvY,IAAA,iBAAAy/F,GACAlnF,EAAAvY,IAAA,QAAAqwB,GACA9X,EAAAvY,IAAA,UAAA0/F,IAeAnnF,EAAAx+B,GAAA,QAAAs2C,GACA9X,EAAAx+B,GAAA,UAAA2lH,GAGAnnF,EAAA8mF,oBATA,SAAAznC,GACA8nC,IACAJ,EAAA/mF,EAAAq/C,IAkBA0nC,CAAAxmH,KAAAhC,IAKAq4E,GAAAvgE,IAAA,aAAA2pB,GACA,OACA0f,UAAA,SAAApB,EAAAv4C,GAEAA,EAAA,KAAAu4C,IAMA5B,eAAA,SAAAgN,GAKA,OAJA1pB,EAAAonF,KAAApnF,EAAA6sC,gBAAAn/B,MAAA1N,EAAAonF,IAAAC,QAAA35E,KACA1N,EAAAonF,IAAA1qE,eAAAgN,GAGAA,GAMAhmB,KAAA,WACA1D,EAAAonF,KAAApnF,EAAA6sC,gBAAAn/B,MAAA1N,EAAAonF,IAAAC,QAAA35E,KACA1N,EAAAonF,IAAA1qE,eAAA1c,EAAA4X,MAAAe,mBAYA,IAAA2uE,IACArsC,eAAkBD,GAClBoD,YACAlrD,UAAaD,EACbtB,YAAeA,EACflB,QAAWA,EACX5J,SACA0gG,2BAj5LA,WACA,OAlHkB,SAAAttC,EAAAutC,EAAAC,EAAAC,EAAAC,GAElB,IAAAC,EAAA3tC,EAAAxtD,UAAAr2B,IAAA,SAAAm2B,GACA,IAAA3hC,EACAC,EAMA,OAJAD,EAAA2hC,EAAAnE,WAAAqB,YAAA8C,EAAAnE,WAAAqB,WAAA7+B,MACAC,EAAA0hC,EAAAnE,WAAAqB,YAAA8C,EAAAnE,WAAAqB,WAAA5+B,QAIAg0F,UAHAtyD,EAAAnE,WAAAuB,WAC6BoL,EAAA/6B,EAAQi/D,OAAAklB,UAGrCvzF,QACAC,SACA0hC,cAGAikF,GAAAoX,EAAA,SAAAh6G,EAAAu/C,GACA,OAAAv/C,EAAAixE,UAAA1xB,EAAA0xB,YASA,IAAAgpC,GALAD,IAAApxH,OAAA,SAAAsxH,GACA,OAAA1pC,GAAAN,eAAAgqC,EAAAv7F,aAIA/1B,OAAA,SAAAsxH,GACA,OAAA1pC,GAAAL,UAAA+pC,EAAAv7F,YAGAs7F,EAAA16H,SAIA06H,EAAAD,EAAApxH,OAAA,SAAAsxH,GACA,OAAA1pC,GAAAI,WAAAspC,EAAAv7F,aAMA,IAAAw7F,EAAAF,EAAArxH,OAAA,SAAAsxH,GACA,OAAAA,EAAAjpC,UAAA4uB,GAAAK,mBAAA0Z,IAEAQ,EAAAD,IAAA56H,OAAA,GAGA86H,EAAAF,EAAAvxH,OAAA,SAAAsxH,GACA,OAAAA,EAAAjpC,YAAAmpC,EAAAnpC,YACG,GAEH,QAAA8oC,EAAA,CACA,IAAAO,EAAAD,GAAAJ,EAAA,IAAAD,EAAA,GAEA,OAAAM,IAAA37F,SAAA,KAIA,IAAA47F,EAAAJ,EAAAvxH,OAAA,SAAAsxH,GACA,OAAAA,EAAAl9H,OAAAk9H,EAAAj9H,SAGA2lH,GAAA2X,EAAA,SAAAv6G,EAAAu/C,GACA,OAAAv/C,EAAAhjB,MAAAuiE,EAAAviE,QAGA,IAAAw9H,EAAAD,EAAA3xH,OAAA,SAAAsxH,GACA,OAAAA,EAAAl9H,QAAA68H,GAAAK,EAAAj9H,SAAA68H,IAEAM,EAAAI,IAAAj7H,OAAA,GAEA,IAAAk7H,EAAAD,EAAA5xH,OAAA,SAAAsxH,GACA,OAAAA,EAAAjpC,YAAAmpC,EAAAnpC,YACG,GACHypC,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAH,IAKAE,GAJAD,EAAAH,EAAA3xH,OAAA,SAAAsxH,GACA,OAAAA,EAAAl9H,MAAA68H,GAAAK,EAAAj9H,OAAA68H,KAGAlxH,OAAA,SAAAsxH,GACA,OAAAA,EAAAl9H,QAAA09H,EAAA,GAAA19H,OAAAk9H,EAAAj9H,SAAAy9H,EAAA,GAAAz9H,SAIAm9H,EAAAO,IAAAp7H,OAAA,GACAq7H,EAAAD,EAAA/xH,OAAA,SAAAsxH,GACA,OAAAA,EAAAjpC,YAAAmpC,EAAAnpC,YACK,IAIL,IAAA4pC,EAAAD,GAAAH,GAAAJ,GAAAJ,EAAA,IAAAD,EAAA,GACA,OAAAa,IAAAl8F,SAAA,KAgBSm8F,CAAcnoH,KAAAksB,UAAAwtD,OAAA15E,KAAAooH,gBAAA1/F,SAAuDsnF,GAAoBhwG,KAAAq3C,MAAAvqC,KAAA,aAAA4b,SAA0CsnF,GAAoBhwG,KAAAq3C,MAAAvqC,KAAA,cAAA9M,KAAAonH,mCAi5LhKiB,0BA3yLA,WAGA,IAAAn8F,EAAAlsB,KAAAksB,UAAAwtD,OAAAxtD,UAAAj2B,OAAA4nF,GAAAL,WAaA,OAXAyyB,GAAA/jF,EAAA,SAAAzyB,EAAAC,GACA,OAAW22G,GAAwB52G,EAAAC,KAOnCwyB,EAAAj2B,OAAA,SAAA+1B,GACA,OAAA+2E,GAAA/2E,EAAAnE,WAAA27E,QAAAjB,aAEA,UA4xLA+lB,yBAA4BjY,GAC5BkY,0BA/iM6B,SAAAl7G,EAAAu/C,GAC7B,IAAA47D,OAAA,EACAC,OAAA,EAeA,OAbAp7G,EAAAwa,WAAAqB,YAAA7b,EAAAwa,WAAAqB,WAAA7+B,QACAm+H,EAAAn7G,EAAAwa,WAAAqB,WAAA7+B,OAGAm+H,KAA2Bh0F,EAAA/6B,EAAQi/D,OAAAklB,UAEnChxB,EAAA/kC,WAAAqB,YAAA0jC,EAAA/kC,WAAAqB,WAAA7+B,QACAo+H,EAAA77D,EAAA/kC,WAAAqB,WAAA7+B,OAMAm+H,KAHAC,KAA6Bj0F,EAAA/6B,EAAQi/D,OAAAklB,YAGrCvwE,EAAAwa,WAAAuB,WAAAwjC,EAAA/kC,WAAAuB,UACA/b,EAAAwa,WAAAuB,UAAAwjC,EAAA/kC,WAAAuB,UAGAo/F,EAAAC,GA2hMAnsG,IAAAoiE,OAGA,+KAAA3lF,QAAA,SAAAm9B,GACAngC,OAAAkN,eAAA8jH,GAAA7wF,GACAhzB,IAAA,WAEA,OADAmzE,GAAAliD,IAAAj7B,KAAA,aAAAg9B,EAAA,kDACAg3E,GAAAh3E,IAEA/d,IAAA,SAAA/hB,GACAigF,GAAAliD,IAAAj7B,KAAA,aAAAg9B,EAAA,kDAEA,iBAAA9/B,KAAA,EACAigF,GAAAliD,IAAAj7B,KAAA,gBAAAg9B,EAAA,uCAIAg3E,GAAAh3E,GAAA9/B,OAIA,IAEAsyH,GAAA,SAAAxzH,GAGA,GAFA,yDAEA8M,KAAA9M,GACA,YAKA,MAFA,2BAEA8M,KAAA9M,GACA,OAGA,MAWAyzH,GAAA,SAAAC,EAAAlL,GAIA,IAHA,IAAAzJ,EAAAyJ,EAAAtxF,QACA4tC,GAAA,EAEA/uE,EAAA,EAAiBA,EAAA29H,EAAAh8H,OAA0B3B,IAC3C,GAAA29H,EAAA39H,GAAAoN,KAAA47G,EAAA14F,IAAA,CACAy+C,EAAA/uE,EACA,MAIA29H,EAAAC,eAAA7uD,EACA4uD,EAAAxkG,SACA41C,gBACA9kE,KAAA,YAqBA6xH,GAAAjpE,cAAA,WACA,OAAAu4B,GAAAliD,IAAAj7B,KAAA,4EAGA,IA4BA4vH,GAAA,SAAArF,GACA,YAAAA,EAAAngF,SAAAquE,WAAA,CAIA,IAAAlyE,EAAA42C,GAAAptC,QAAAw6E,EAAApsE,MAAA/T,SAAA89B,UAEA,GAAA3hC,EAAAspF,IAAA,CACA,IAAAC,EApCA,SAAAC,EAAAC,EAAAC,GACA,IAAAF,EACA,OAAAA,EAIA,IAAAG,KAEA,QAAAC,KAAAJ,EACAG,EAAAC,IACAC,iBAAA,sBAAmCH,EAAAthG,WAAA27E,OAAA,IACnC+lB,iBAAA,sBAAmCL,EAAArhG,WAAA27E,OAAA,KAGnC0lB,EAAAM,mBAAAN,EAAAM,kBAAAH,IAAAH,EAAAM,kBAAAH,GAAAI,OACAL,EAAAC,GAAAI,KAAAP,EAAAM,kBAAAH,GAAAI,MAKA,iBAAAR,EAAAI,KACAD,EAAAC,GAAAl7G,IAAA86G,EAAAI,IAIA,OAAAhzC,GAAArzC,aAAAimF,EAAAG,GAWAM,CAAAjG,EAAAqD,QAAA6C,WAAAlG,EAAAv3F,UAAAE,QAAAq3F,EAAAK,0BAAA3D,YAAAz1F,MAAA8yF,qBAAApxF,SAEA48F,IACAvpF,EAAA6sC,gBAAAq9C,WAAAX,EAEAvpF,EAAAspF,IAAAa,qBACAnqF,EAAAspF,IAAAa,0BAMAC,GAAA,WACA,IAAAlmH,OAAAy2D,aACA,YAGA,IAAA0vD,EAAAnmH,OAAAy2D,aAAAC,QAtHA,eAwHA,IAAAyvD,EACA,YAGA,IACA,OAAAjzH,KAAAlN,MAAAmgI,GACG,MAAA5rH,GAEH,cA6BA6oH,GAAAgD,kBAAA,WACA,IAAAhyG,EAAc0e,EAAAh9B,EAAQ29B,cAAA,SAEtB,IAAAi/C,GAAAl4B,QAAA,SAAAuE,cACA,SAUA,OALA,gCACA,gBACA,kBACA,wBACA,yDACAnd,KAAA,SAAAykF,GACA,wBAAAhoH,KAAA+V,EAAA8lC,YAAAmsE,MAfA,GAmBAjD,GAAAkD,qBACA5zC,GAAAl4B,QAAA,SAAAuE,eAIA,kBAAA1gD,KAAgCy0B,EAAAh9B,EAAQ29B,cAAA,SAAAymB,YAAA,yBAGxCkpE,GAAAmD,qBAAA,SAAAh1H,GACA,cAAAA,EACA6xH,GAAAgD,kBAGA,SAAA70H,GACA6xH,GAAAkD,oBAWAlD,GAAArkE,YAAA,WACA,OAAA2zB,GAAAliD,IAAAj7B,KAAA,4EAGA,IAAAixH,GAAA9zC,GAAArxC,aAAA,aAYIolF,GAAU,SAAA18E,GAGd,SAAA28E,EAAAljH,EAAA4lC,EAAA/uC,GACI26E,GAAc34E,KAAAqqH,GAGlB,IAAA5iG,EAAgBqxD,GAAyB94E,MAAAqqH,EAAA/2G,WAAAvd,OAAA8kF,eAAAwvC,IAAA7zH,KAAAwJ,KAAA+sC,EAAA/uC,EAAA48E,MAEzC,GAAA7tC,EAAAzJ,UAAAyJ,EAAAzJ,SAAA89B,SAAA,CACA,IAAAgW,EAAAf,GAAAtpC,EAAAzJ,SAAA89B,UAEAgW,EAAA1sE,eAAA,QACA3U,OAAAkN,eAAAm0E,EAAA,OACAl0E,IAAA,WAMA,OALAmzE,GAAAliD,IAAAj7B,KAAA,4DACA6zC,EAAA3oB,SACAlvB,KAAA,QACAvH,KAAA,sBAEA85B,GAEAzS,cAAA,IASAoiE,EAAAyvC,IAAAp/F,EAEA2vD,EAAAkzC,KAAA7iG,EACAA,EAAA2b,QAAAg0C,EASA,GANA3vD,EAAA4vB,MAAAtK,EACAtlB,EAAAq/F,QAAA3/G,EACAsgB,EAAAqnF,SAEArnF,EAAA8iG,cAEA9iG,EAAA6b,SAAAknF,gBAAAz9E,EAAA4Q,2BAAA5Q,EAAA6Q,0BACA7Q,EAAA4Q,2BAAA,GACA5Q,EAAA6Q,2BAAA,QACK,GAAAn2B,EAAA6b,SAAAknF,iBAAAz9E,EAAA22B,2BAAA32B,EAAA42B,2BAGL,UAAAj0D,MAAA,4EA4BA,OAvBA+X,EAAAxmB,GAAaw1B,EAAAh9B,GAAQ,iGAAAqG,GACrB,IAAA6tE,EAA8Bl3C,EAAAh9B,EAAQk0E,mBAAsBl3C,EAAAh9B,EAAQgxH,yBAA4Bh0F,EAAAh9B,EAAQixH,sBAAyBj0F,EAAAh9B,EAAQkxH,oBAEzIh9C,KAAAt1C,SAAA5Q,EAAA4vB,MAAAvqC,OACA2a,EAAAq8F,0BAAA8G,yBAKAnjG,EAAAxmB,GAAAwmB,EAAA4vB,MAAA,qBACA,IAAAr3C,KAAAq3C,MAAAe,eAAAp4C,KAAAq3C,MAAAjU,QAAAgmC,QACAppE,KAAAm8C,eAAA,KAIA10B,EAAAxmB,GAAAwmB,EAAA4vB,MAAA,mBACAr3C,KAAA8jH,2BACA9jH,KAAA8jH,0BAAA+G,iBAIApjG,EAAAxmB,GAAAwmB,EAAA4vB,MAAA,OAAA5vB,EAAA0b,MAEA1b,EA4bA,OAxgBEoxD,GAAQwxC,EAygBTF,IA1bCvxC,GAAWyxC,IACbn0H,IAAA,cACAE,MAAA,WACA,IAAA8xB,EAAAloB,KAeA,GAZAA,KAAAsjC,SAAAplB,gBAAAle,KAAAsjC,SAAAplB,kBAAA,EACAle,KAAAsjC,SAAA03C,wBAAAh7E,KAAAsjC,SAAA03C,0BAAA,EACAh7E,KAAAsjC,SAAA8jF,kCAAA,IAAApnH,KAAAsjC,SAAA8jF,iCACApnH,KAAAsjC,SAAA0gF,oBAAAhkH,KAAAsjC,SAAA0gF,sBAAA,EACAhkH,KAAAsjC,SAAAwnF,kCAAA,IAAA9qH,KAAA8mH,QAAAgE,6BAAA9qH,KAAA8mH,QAAAgE,6BAAA9qH,KAAAsjC,SAAAwnF,+BAAA,EACA9qH,KAAAsjC,SAAA63C,iBAAAn7E,KAAAsjC,SAAA63C,qBACAn7E,KAAAsjC,SAAA83C,iBAAAp7E,KAAAsjC,SAAA83C,qBAEA,iBAAAp7E,KAAAsjC,SAAA20E,oBACAj4G,KAAAsjC,SAAA20E,kBAAA,KAGA,iBAAAj4G,KAAAsjC,SAAAg7C,WACAt+E,KAAAsjC,SAAAwnF,6BAAA,CACA,IAAAhB,EAAAD,KAEAC,KAAAxrC,YACAt+E,KAAAsjC,SAAAg7C,UAAAwrC,EAAAxrC,UACAt+E,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,sCAIAm8H,KAAAnZ,aACA3wG,KAAAsjC,SAAAqtE,WAAAmZ,EAAAnZ,WACA3wG,KAAAq3C,MAAAjzB,SACAlvB,KAAA,QACAvH,KAAA,uCAQA,iBAAAqS,KAAAsjC,SAAAg7C,YACAt+E,KAAAsjC,SAAAg7C,UAAA4uB,GAAAI,mBAKAttG,KAAAsjC,SAAAw8E,yBAAA9/G,KAAAsjC,SAAAw8E,0BAAA9/G,KAAAsjC,SAAAg7C,YAAA4uB,GAAAI,mBAEA,wJAAAv0G,QAAA,SAAAgyH,QACA,IAAA7iG,EAAA4+F,QAAAiE,KACA7iG,EAAAob,SAAAynF,GAAA7iG,EAAA4+F,QAAAiE,MAGA/qH,KAAAonH,iCAAApnH,KAAAsjC,SAAA8jF,oCASAlxH,IAAA,MACAE,MAAA,SAAAmqD,EAAArrD,GACA,IAAA20B,EAAA7pB,KAGAugD,IAIAvgD,KAAAuqH,cAEAvqH,KAAAsjC,SAAAn1B,IAAAnO,KAAA8mH,QAAA35E,IACAntC,KAAAsjC,SAAAyJ,KAAA/sC,KAAAq3C,MACAr3C,KAAAsjC,SAAAs8E,UAAAmH,GACA/mH,KAAAsjC,SAAAquE,WAAA+W,GAAAxzH,GAIA8K,KAAAsjC,SAAAi+C,OAAA,SAAAp4B,GACAt/B,EAAAwtB,MAAA8E,eAAAgN,GAEAt/B,EAAAsyB,eAAAgN,IAGAnpD,KAAA8jH,0BAAA,IAA2CpE,GAAwB1/G,KAAAsjC,UACnEtjC,KAAAgrH,iBAAA,IAAkC5G,GAAe/tC,GAAArzC,aAAAhjC,KAAAsjC,UACjD0d,SAAA,WACA,OAAAn3B,EAAAm3B,YAEA50B,MAAA,WACA,OAAAvC,EAAAi6F,0BAAA13F,YAGApsB,KAAA8jH,0BAAA7iH,GAAA,mBACAo1E,GAAAptC,QAAApf,EAAAwtB,MAAA/T,SAAA89B,UACAxyD,MAAAib,EAAAi6F,0BAAAl1G,SAIA5O,KAAA8jH,0BAAA7C,eAAAjhH,KAAAihH,eAAAjhH,KAAAihH,eAAAxwG,KAAAzQ,MAAA+mH,GAAAC,2BAAAv2G,KAAAzQ,MACAA,KAAA8jH,0BAAA9C,sBAAA+F,GAAAsB,0BAAA53G,KAAAzQ,MAEAA,KAAAksB,UAAAlsB,KAAA8jH,0BAAAlZ,sBACA5qG,KAAAglG,YAAAhlG,KAAA8jH,0BAAA9e,YAIAjvG,OAAA8f,iBAAA7V,MACAihH,gBACA/9G,IAAA,WACA,OAAAlD,KAAA8jH,0BAAA7C,gBAEA9oG,IAAA,SAAA8oG,GACAjhH,KAAA8jH,0BAAA7C,iBAAAxwG,KAAAzQ,QAGA2wG,YACAztG,IAAA,WACA,OAAAlD,KAAA8jH,0BAAArE,mBAAA9O,WAAAnhH,MAEA2oB,IAAA,SAAAw4F,GACA3wG,KAAA8jH,0BAAArE,mBAAA9O,WAAAnhH,KAAAmhH,EAGA3wG,KAAA8jH,0BAAArE,mBAAA9O,WAAAnxF,MAAA,IAGA8+D,WACAp7E,IAAA,WACA,OAAAlD,KAAA8jH,0BAAArE,mBAAAnhC,WAEAnmE,IAAA,SAAAmmE,GACAt+E,KAAA8jH,0BAAArE,mBAAAnhC,YAIAt+E,KAAA8jH,0BAAArE,mBAAA9O,YACAnhH,KAAA,EACAgwB,MAAA,KAcA4oG,iBACAllH,IAAA,WACA,IAAA+nH,EAAA,GAAAjrH,KAAAs+E,WAAA,GACA4sC,OAAA,EASA,OANAA,EADAlrH,KAAA2wG,WAAA,EACA,EAAA3wG,KAAA2wG,WAEA,EAGAv+G,KAAA+mB,MAAA,GAAA8xG,EAAAC,KAGA/yG,IAAA,WACAk+D,GAAAliD,IAAAvlB,MAAA,mDAKA5O,KAAAsjC,SAAAg7C,YACAt+E,KAAAs+E,UAAAt+E,KAAAsjC,SAAAg7C,WAGAt+E,KAAAsjC,SAAAqtE,aACA3wG,KAAA2wG,WAAA3wG,KAAAsjC,SAAAqtE,YAGA56G,OAAA8f,iBAAA7V,KAAA8uG,OACAxwB,WACAp7E,IAAA,WACA,OAAA2mB,EAAAy0D,WAAA,GAEAloE,YAAA,GAEA28F,eACA7vG,IAAA,WACA,OAAA2mB,EAAAi6F,0BAAAqH,kBAAA,GAEA/0G,YAAA,GAEA48F,sBACA9vG,IAAA,WACA,OAAA2mB,EAAAi6F,0BAAAsH,yBAAA,GAEAh1G,YAAA,GAEA68F,uBACA/vG,IAAA,WACA,OAAA2mB,EAAAi6F,0BAAAuH,0BAAA,GAEAj1G,YAAA,GAEA88F,sBACAhwG,IAAA,WACA,OAAA2mB,EAAAi6F,0BAAAwH,yBAAA,GAEAl1G,YAAA,GAEA+8F,uBACAjwG,IAAA,WACA,OAAA2mB,EAAAi6F,0BAAAyH,0BAAA,GAEAn1G,YAAA,GAEA08F,uBACA5vG,IAAA,WACA,OAAA2mB,EAAAi6F,0BAAA0H,0BAAA,GAEAp1G,YAAA,GAEAg9F,oBACAlwG,IAAA,WACA,OAAA2mB,EAAAi6F,0BAAA2H,uBAAA,GAEAr1G,YAAA,GAEAk1B,UACApoC,IAAA,WACA,OAAAw/E,GAAA74D,EAAAwtB,MAAA/L,aAEAl1B,YAAA,GAEAgiC,aACAl1C,IAAA,WACA,OAAA2mB,EAAAwtB,MAAAe,eAEAhiC,YAAA,GAEAk2D,eACAppE,IAAA,WACA,OAAA2mB,EAAAwtB,MAAAiI,gBAEAlpC,YAAA,GAEAs1G,aACAxoH,IAAA,WACA,OAAA2mB,EAAAwtB,MAAA7T,OAEAptB,YAAA,GAEA1nB,UACAwU,IAAA,WACA,OAAA2mB,EAAAwtB,MAAA3oD,YAEA0nB,YAAA,GAEAsjE,QACAx2E,IAAA,WACA,OAAA2mB,EAAAqC,UAAAwtD,QAEAtjE,YAAA,GAEAu1G,kBACAzoH,IAAA,WACA,OAAA2mB,EAAAwtB,MAAArQ,qBAEA5wB,YAAA,GAEA4qC,UACA99C,IAAA,WACA,OAAAw/E,GAAA74D,EAAAwtB,MAAA2J,aAEA5qC,YAAA,GAEAqM,WACAvf,IAAA,WACA,OAAAja,KAAA8kB,OAEAqI,YAAA,GAEAosD,sBACAt/D,IAAA,WACA,OAAA2mB,EAAAwtB,MAAAkG,2BAEAnnC,YAAA,KAGApW,KAAAq3C,MAAA1Y,IAAA,UAAA3+B,KAAA8jH,0BAAAlD,eAAAnwG,KAAAzQ,KAAA8jH,4BACA9jH,KAAAq3C,MAAAp2C,GAAA,6BACA4oB,EAAAyZ,SAAAwnF,8BA7cA,SAAA9sH,GACA,IAAA2F,OAAAy2D,aACA,SAGA,IAAAwxD,EAAA/B,KACA+B,IAAAv1C,GAAArzC,aAAA4oF,EAAA5tH,KAEA,IACA2F,OAAAy2D,aAAAE,QA7IA,cA6IAzjE,KAAAC,UAAA80H,IACG,MAAA1tH,GAKH,UA+bA2tH,EACAvtC,UAAAz0D,EAAAy0D,UACAqyB,WAAAv+G,KAAAgoC,MAAAvQ,EAAA8mF,gBAIA3wG,KAAA8jH,0BAAA7iH,GAAA,kCAttCA,IAAAwiH,EACAv3F,KADAu3F,EAwtCA55F,GAvtCAqC,UAEAu3F,EAAAqI,gBAAA,WACA,OAAA5/F,EAAAwtD,OAAAxtD,UAAAj2B,OAAA,SAAAm2B,GACA,OAAAmxD,GAAAnxD,KACKv2B,IAAA,SAAAqI,EAAAjT,GACL,WAAAu4H,GAAAC,EAAAvlH,IAAAqd,QAktCAutG,GAAAj/F,KAIA7pB,KAAAiB,GAAAjB,KAAA8jH,0BAAA,sBACA9jH,KAAAq3C,MAAAjzB,QAAA,cAEApkB,KAAAq3C,MAAAlnC,MAAA,WACA,OAAA0Z,EAAAkiG,wBAIA/rH,KAAAq3C,MAAAvqC,MAIA9M,KAAAq3C,MAAAlK,IAAAkpC,GAAAuO,IAAAoB,gBAAAhmF,KAAA8jH,0BAAA9e,kBAUA9uG,IAAA,sBACAE,MAAA,WACA,IAAAoyC,EAAAxoC,KAEAy/B,EAAA42C,GAAAptC,QAAAjpC,KAAAq3C,MAAA/T,SAAA89B,UAEA3hC,KAAAmpF,gBACA5oH,KAAAgsH,eAAAvsF,EAAAmpF,gBACA5oH,KAAA8jH,0BAAA7iH,GAAA,kCAzkBA,IAAA2nH,EAAAhuC,EAAAguC,EA0kBApgF,EAAAwjF,gBA1kBApxC,EA0kBApyC,GAzkBAsjF,kBAAA/yH,QAAA,SAAAwuH,GACAqB,EAAAqD,gBAAA1E,KAEAoB,GAAAC,EAAAhuC,EAAA1uD,aAwkBAlsB,KAAAksB,UAAAjrB,GAAA,yBACA0nH,GAAAngF,EAAAwjF,eAAAxjF,EAAAtc,iBASAh2B,IAAA,OACAE,MAAA,WACA4J,KAAA8jH,0BAAA3gF,UAOAjtC,IAAA,iBACAE,MAAA,SAAAgiD,GACAp4C,KAAA8jH,0BAAA3nE,eAAA/D,MAOAliD,IAAA,WACAE,MAAA,WACA,OAAA4J,KAAA8jH,0BAAAp1H,cAOAwH,IAAA,WACAE,MAAA,WACA,OAAA4J,KAAA8jH,0BAAA9iE,cAOA9qD,IAAA,UACAE,MAAA,WACA4J,KAAAgrH,kBACAhrH,KAAAgrH,iBAAA5jG,UAGApnB,KAAA8jH,2BACA9jH,KAAA8jH,0BAAA18F,UAGApnB,KAAAgsH,gBACAhsH,KAAAgsH,eAAA5kG,UAGApnB,KAAAojC,iBACApjC,KAAAojC,QAAAyjF,WACA7mH,KAAAojC,QAAAknF,YACAtqH,KAAAojC,QAAAw3C,KAGA56E,KAAAq3C,OAAAr3C,KAAAq3C,MAAAujC,YACA56E,KAAAq3C,MAAAujC,IAvilBA,SAAA13E,EAAAoT,EAAA4xF,EAAAgkB,GACA,OAAA51G,MAAAuD,SAAAvjB,WACA,IAAAo4C,EAAA34C,OAAAioE,yBAAA1nD,EAAA4xF,GAEA,QAAAjsG,IAAAyyC,EAAA,CACA,IAAAv0C,EAAApE,OAAA8kF,eAAAvkE,GAEA,cAAAnc,OACA,EAEA+I,EAAA/I,EAAA+tG,EAAAgkB,GAEG,aAAAx9E,EACH,OAAAA,EAAAt4C,MAEA,IAAA+1H,EAAAz9E,EAAAxrC,IAEA,YAAAjH,IAAAkwH,EAIAA,EAAA31H,KAAA01H,QAJA,EAyhlBAE,CAAA/B,EAAA/zH,UAAAgd,WAAAvd,OAAA8kF,eAAAwvC,EAAA/zH,WAAA,UAAA0J,MAAAxJ,KAAAwJ,SAGA9J,IAAA,uBACAE,MAAA,SAAA+yD,EAAA3tC,GACA,OAAAykE,IACAj0D,SAAAhsB,KAAA8jH,0BAAA13F,QACA+8B,OACA3tC,gBAKAtlB,IAAA,oBACAE,MAAA,SAAAyqF,EAAArlE,GACA,IAAAimE,IAAA1xE,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,KAAAA,UAAA,GACAuxE,EAAAvxE,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,KACA,OAAAqxE,IACAP,cACA70D,SAAAhsB,KAAA8jH,0BAAA13F,QACAk1D,aACAG,iBACAF,OAAAvhF,KAAAsjC,SAAAi+C,OACAx0C,KAAA/sC,KAAAsjC,SAAAyJ,KACAvxB,iBAIA6uG,EAzgBc,GAohBdgC,IACA1+H,KAAA,yBACA8nF,QApzBA,QAqzBA12B,gBAAA,SAAAhB,GACA,IAAA//C,EAAA+R,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MACA22G,EAAArwC,GAAArzC,aAAAqzC,GAAAr4E,WACA,OAAAquH,GAAAxuE,YAAAE,EAAA7oD,KAAAwxH,IAEAnnE,aAAA,SAAAp4C,EAAA4lC,GACA,IAAA/uC,EAAA+R,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MACA22G,EAAArwC,GAAArzC,aAAAqzC,GAAAr4E,WAIA,OAHA+uC,EAAA6tC,IAAA,IAAmBwvC,GAAUjjH,EAAA4lC,EAAA25E,GAC7B35E,EAAA6tC,IAAAt+D,IAAAoiE,KACA3xC,EAAA6tC,IAAAztC,IAAAhmC,EAAAgmC,IAAAhmC,EAAAjS,MACA63C,EAAA6tC,KAEA/8B,YAAA,SAAA3oD,GACA,IAAA8I,EAAA+R,UAAAnjB,OAAA,QAAAqP,IAAA8T,UAAA,GAAAA,UAAA,MAGAy6G,EADAn0C,GAAArzC,aAAAqzC,GAAAr4E,WACA48E,IAAA4vC,eAEA8B,EAAA5D,GAAAxzH,GAEA,OADAo3H,KAAAvF,GAAAmD,qBAAAoC,IAAA9B,GACA,kBAIA,IAAAn0C,GAAA8xB,kBAAA,IAAA9xB,GAAAuO,MACAvO,GAAA8xB,eACA9xB,GAAAuO,IAAA8kB,IAIAvB,GAAAsB,8BACApzB,GAAAl4B,QAAA,SAAAQ,sBAAA0tE,GAAA,GAGAh2C,GAAAg0C,WAAuBD,GACvB/zC,GAAAg2C,oBACAh2C,GAAAwI,IAAAkoC,GAEA1wC,GAAAvgE,KACAugE,GAAA1tC,kBAAA,MAAAo+E,IAGA1wC,GAAAr4E,QAAA48E,IAAAvE,GAAAr4E,QAAA48E,QAEAvE,GAAAV,eACAU,GAAAV,eAAA,sBAAA4wC,IAEAlwC,GAAAf,OAAA,sBAAAixC,IAGexwG,EAAA,2CCn+3Cf,SAAA2D;;;;;;AAOA,IAAA6yG,EAAAx2H,OAAA0I,WAIA,SAAA+tH,EAAAj3H,GACA,YAAA0G,IAAA1G,GAAA,OAAAA,EAGA,SAAA8M,EAAA9M,GACA,YAAA0G,IAAA1G,GAAA,OAAAA,EAGA,SAAAk3H,EAAAl3H,GACA,WAAAA,EAUA,SAAAm3H,EAAAt2H,GACA,MACA,iBAAAA,GACA,iBAAAA,GAEA,iBAAAA,GACA,kBAAAA,EASA,SAAAwW,EAAAtP,GACA,cAAAA,GAAA,iBAAAA,EAMA,IAAAqvH,EAAA52H,OAAAO,UAAAI,SAUA,SAAAk2H,EAAAtvH,GACA,0BAAAqvH,EAAAn2H,KAAA8G,GAGA,SAAAuvH,EAAAt3H,GACA,0BAAAo3H,EAAAn2H,KAAAjB,GAMA,SAAAu3H,EAAAtxH,GACA,IAAAiY,EAAA+U,WAAA56B,OAAA4N,IACA,OAAAiY,GAAA,GAAArhB,KAAA+mB,MAAA1F,QAAA5a,SAAA2C,GAGA,SAAAgxC,EAAAhxC,GACA,OACA6G,EAAA7G,IACA,mBAAAA,EAAA2Q,MACA,mBAAA3Q,EAAA6Q,MAOA,SAAA3V,EAAA8E,GACA,aAAAA,EACA,GACA7F,MAAAyH,QAAA5B,IAAAoxH,EAAApxH,MAAA9E,WAAAi2H,EACA91H,KAAAC,UAAA0E,EAAA,QACA5N,OAAA4N,GAOA,SAAAuxH,EAAAvxH,GACA,IAAAiY,EAAA+U,WAAAhtB,GACA,OAAAgyB,MAAA/Z,GAAAjY,EAAAiY,EAOA,SAAAu5G,EACAtwH,EACAuwH,GAIA,IAFA,IAAAp3H,EAAAE,OAAA0R,OAAA,MACAyN,EAAAxY,EAAA3F,MAAA,KACA9L,EAAA,EAAiBA,EAAAiqB,EAAAtoB,OAAiB3B,IAClC4K,EAAAqf,EAAAjqB,KAAA,EAEA,OAAAgiI,EACA,SAAAzxH,GAAsB,OAAA3F,EAAA2F,EAAAguB,gBACtB,SAAAhuB,GAAsB,OAAA3F,EAAA2F,IAMtB,IAAA0xH,EAAAF,EAAA,qBAKAG,EAAAH,EAAA,8BAKA,SAAAp0F,EAAAr0B,EAAAkW,GACA,GAAAlW,EAAA3X,OAAA,CACA,IAAAkJ,EAAAyO,EAAAhL,QAAAkhB,GACA,GAAA3kB,GAAA,EACA,OAAAyO,EAAA8E,OAAAvT,EAAA,IAQA,IAAA4U,EAAA3U,OAAAO,UAAAoU,eACA,SAAA0iH,EAAA9vH,EAAApH,GACA,OAAAwU,EAAAlU,KAAA8G,EAAApH,GAMA,SAAAm3H,EAAA/+G,GACA,IAAA7T,EAAA1E,OAAA0R,OAAA,MACA,gBAAA/K,GAEA,OADAjC,EAAAiC,KACAjC,EAAAiC,GAAA4R,EAAA5R,KAOA,IAAA4wH,EAAA,SACAC,EAAAF,EAAA,SAAA3wH,GACA,OAAAA,EAAAE,QAAA0wH,EAAA,SAAAtzH,EAAAsC,GAAkD,OAAAA,IAAAgK,cAAA,OAMlDknH,EAAAH,EAAA,SAAA3wH,GACA,OAAAA,EAAAsH,OAAA,GAAAsC,cAAA5J,EAAAnG,MAAA,KAMAk3H,EAAA,aACAC,EAAAL,EAAA,SAAA3wH,GACA,OAAAA,EAAAE,QAAA6wH,EAAA,OAAAjkG,gBA8BA,IAAA/Y,EAAAoJ,SAAAvjB,UAAAma,KAJA,SAAAnC,EAAAyoB,GACA,OAAAzoB,EAAAmC,KAAAsmB,IAfA,SAAAzoB,EAAAyoB,GACA,SAAA42F,EAAAl0H,GACA,IAAA2P,EAAA2G,UAAAnjB,OACA,OAAAwc,EACAA,EAAA,EACAkF,EAAA7V,MAAAs+B,EAAAhnB,WACAzB,EAAA9X,KAAAugC,EAAAt9B,GACA6U,EAAA9X,KAAAugC,GAIA,OADA42F,EAAAz8F,QAAA5iB,EAAA1hB,OACA+gI,GAcA,SAAAC,EAAA14G,EAAAqY,GACAA,KAAA,EAGA,IAFA,IAAAtiC,EAAAiqB,EAAAtoB,OAAA2gC,EACA+W,EAAA,IAAA3uC,MAAA1K,GACAA,KACAq5C,EAAAr5C,GAAAiqB,EAAAjqB,EAAAsiC,GAEA,OAAA+W,EAMA,SAAA9qC,EAAA+F,EAAAsuH,GACA,QAAA33H,KAAA23H,EACAtuH,EAAArJ,GAAA23H,EAAA33H,GAEA,OAAAqJ,EAMA,SAAAuuH,EAAAvpH,GAEA,IADA,IAAAvH,KACA/R,EAAA,EAAiBA,EAAAsZ,EAAA3X,OAAgB3B,IACjCsZ,EAAAtZ,IACAuO,EAAAwD,EAAAuH,EAAAtZ,IAGA,OAAA+R,EAUA,SAAAqmE,EAAA5pE,EAAAC,EAAA4C,IAKA,IAAAyxH,EAAA,SAAAt0H,EAAAC,EAAA4C,GAA6B,UAO7B0xH,EAAA,SAAAh0H,GAA6B,OAAAA,GAe7B,SAAAi0H,EAAAx0H,EAAAC,GACA,GAAAD,IAAAC,EAAgB,SAChB,IAAAw0H,EAAAthH,EAAAnT,GACA00H,EAAAvhH,EAAAlT,GACA,IAAAw0H,IAAAC,EAwBG,OAAAD,IAAAC,GACHvgI,OAAA6L,KAAA7L,OAAA8L,GAxBA,IACA,IAAA00H,EAAAz4H,MAAAyH,QAAA3D,GACA40H,EAAA14H,MAAAyH,QAAA1D,GACA,GAAA00H,GAAAC,EACA,OAAA50H,EAAA7M,SAAA8M,EAAA9M,QAAA6M,EAAAuF,MAAA,SAAAd,EAAAjT,GACA,OAAAgjI,EAAA/vH,EAAAxE,EAAAzO,MAEO,GAAAwO,aAAAxQ,MAAAyQ,aAAAzQ,KACP,OAAAwQ,EAAAsiC,YAAAriC,EAAAqiC,UACO,GAAAqyF,GAAAC,EAQP,SAPA,IAAAC,EAAAv4H,OAAAC,KAAAyD,GACA80H,EAAAx4H,OAAAC,KAAA0D,GACA,OAAA40H,EAAA1hI,SAAA2hI,EAAA3hI,QAAA0hI,EAAAtvH,MAAA,SAAA9I,GACA,OAAA+3H,EAAAx0H,EAAAvD,GAAAwD,EAAAxD,MAMK,MAAAgI,GAEL,UAcA,SAAAswH,EAAAjqH,EAAA/I,GACA,QAAAvQ,EAAA,EAAiBA,EAAAsZ,EAAA3X,OAAgB3B,IACjC,GAAAgjI,EAAA1pH,EAAAtZ,GAAAuQ,GAAkC,OAAAvQ,EAElC,SAMA,SAAA+jB,EAAAV,GACA,IAAAuB,GAAA,EACA,kBACAA,IACAA,GAAA,EACAvB,EAAA7V,MAAAuH,KAAA+P,aAKA,IAAA0+G,EAAA,uBAEAC,GACA,YACA,YACA,UAGAC,GACA,eACA,UACA,cACA,UACA,eACA,UACA,gBACA,YACA,YACA,cACA,gBACA,kBAOAhkI,GAKA0Y,sBAAAtN,OAAA0R,OAAA,MAKAmnH,QAAA,EAKAC,eAAiB,EAKjBC,UAAY,EAKZhhH,aAAA,EAKAypC,aAAA,KAKAw3E,YAAA,KAKAC,mBAMAC,SAAAl5H,OAAA0R,OAAA,MAMAynH,cAAAnB,EAMAoB,eAAApB,EAMAqB,iBAAArB,EAKAsB,gBAAAhsD,EAKAisD,qBAAAtB,EAMAuB,YAAAxB,EAMAyB,OAAA,EAKAC,gBAAAd,GAUAe,EAAA,8JAKA,SAAAC,EAAAjzH,GACA,IAAAJ,GAAAI,EAAA,IAAAH,WAAA,GACA,YAAAD,GAAA,KAAAA,EAMA,SAAAwS,EAAAxR,EAAApH,EAAAsF,EAAA4a,GACArgB,OAAAkN,eAAA3F,EAAApH,GACAE,MAAAoF,EACA4a,eACAI,UAAA,EACAxB,cAAA,IAOA,IAAA46G,EAAA,IAAA3qH,OAAA,KAAAyqH,EAAA,kBAkBA,IAmCAG,EAnCAC,EAAA,gBAGApsH,EAAA,oBAAAC,OACAosH,EAAA,oBAAAC,+BAAAC,SACAC,EAAAH,GAAAC,cAAAC,SAAAzmG,cACA2mG,EAAAzsH,GAAAC,OAAAgK,UAAAC,UAAA4b,cACA4mG,EAAAD,GAAA,eAAAnuH,KAAAmuH,GACAE,EAAAF,KAAA52H,QAAA,cACA+2H,EAAAH,KAAA52H,QAAA,WAEAg3H,IADAJ,KAAA52H,QAAA,WACA42H,GAAA,uBAAAnuH,KAAAmuH,IAAA,QAAAD,GAGAM,IAFAL,GAAA,cAAAnuH,KAAAmuH,GACAA,GAAA,YAAAnuH,KAAAmuH,GACAA,KAAAx5H,MAAA,mBAGA85H,MAAqBC,MAErBC,IAAA,EACA,GAAAjtH,EACA,IACA,IAAA8C,MACAzQ,OAAAkN,eAAAuD,GAAA,WACAtD,IAAA,WAEAytH,IAAA,KAGAhtH,OAAA0H,iBAAA,oBAAA7E,IACG,MAAAtI,IAMH,IAAA0yH,GAAA,WAWA,YAVA30H,IAAA4zH,IAOAA,GALAnsH,IAAAqsH,QAAA,IAAAr2G,IAGAA,EAAA,oBAAAA,EAAA,QAAAm3G,IAAAC,UAKAjB,GAIAf,GAAAprH,GAAAC,OAAAotH,6BAGA,SAAAC,GAAAC,GACA,yBAAAA,GAAA,cAAAjvH,KAAAivH,EAAAv6H,YAGA,IAIAw6H,GAJA/hH,GACA,oBAAAC,QAAA4hH,GAAA5hH,SACA,oBAAAqkB,SAAAu9F,GAAAv9F,QAAA09F,SAMAD,GAFA,oBAAAE,KAAAJ,GAAAI,KAEAA,IAGA,WACA,SAAAA,IACApxH,KAAAmY,IAAApiB,OAAA0R,OAAA,MAYA,OAVA2pH,EAAA96H,UAAAyiC,IAAA,SAAA7iC,GACA,WAAA8J,KAAAmY,IAAAjiB,IAEAk7H,EAAA96H,UAAAmiC,IAAA,SAAAviC,GACA8J,KAAAmY,IAAAjiB,IAAA,GAEAk7H,EAAA96H,UAAA4+B,MAAA,WACAl1B,KAAAmY,IAAApiB,OAAA0R,OAAA,OAGA2pH,EAdA,GAoBA,IAAAl4H,GAAAmqE,EA8FAnjC,GAAA,EAMAmxF,GAAA,WACArxH,KAAA3H,GAAA6nC,KACAlgC,KAAAsxH,SAGAD,GAAA/6H,UAAAi7H,OAAA,SAAAC,GACAxxH,KAAAsxH,KAAA3lI,KAAA6lI,IAGAH,GAAA/6H,UAAAm7H,UAAA,SAAAD,GACA54F,EAAA54B,KAAAsxH,KAAAE,IAGAH,GAAA/6H,UAAAo7H,OAAA,WACAL,GAAAzwH,QACAywH,GAAAzwH,OAAA+wH,OAAA3xH,OAIAqxH,GAAA/6H,UAAAs7H,OAAA,WAEA,IAAAN,EAAAtxH,KAAAsxH,KAAA/6H,QAOA,QAAAtL,EAAA,EAAAme,EAAAkoH,EAAA1kI,OAAkC3B,EAAAme,EAAOne,IACzCqmI,EAAArmI,GAAAw4D,UAOA4tE,GAAAzwH,OAAA,KACA,IAAAixH,MAEA,SAAAC,GAAAlxH,GACAixH,GAAAlmI,KAAAiV,GACAywH,GAAAzwH,SAGA,SAAAmxH,KACAF,GAAA3tH,MACAmtH,GAAAzwH,OAAAixH,MAAAjlI,OAAA,GAKA,IAAAolI,GAAA,SACArlI,EACA9C,EACAqQ,EACAwvB,EACAuoG,EACAn7F,EACAo7F,EACAC,GAEAnyH,KAAArT,MACAqT,KAAAnW,OACAmW,KAAA9F,WACA8F,KAAA0pB,OACA1pB,KAAAiyH,MACAjyH,KAAAoyH,QAAAn2H,EACA+D,KAAA82B,UACA92B,KAAAqyH,eAAAp2H,EACA+D,KAAAsyH,eAAAr2H,EACA+D,KAAAuyH,eAAAt2H,EACA+D,KAAA9J,IAAArM,KAAAqM,IACA8J,KAAAkyH,mBACAlyH,KAAAlE,uBAAAG,EACA+D,KAAA7F,YAAA8B,EACA+D,KAAAuJ,KAAA,EACAvJ,KAAAuB,UAAA,EACAvB,KAAAwyH,cAAA,EACAxyH,KAAAyyH,WAAA,EACAzyH,KAAA0yH,UAAA,EACA1yH,KAAA2yH,QAAA,EACA3yH,KAAAmyH,eACAnyH,KAAA4yH,eAAA32H,EACA+D,KAAA6yH,oBAAA,GAGA99G,IAA0B1T,OAAS2T,cAAA,IAInCD,GAAA1T,MAAA6B,IAAA,WACA,OAAAlD,KAAAlE,mBAGA/F,OAAA8f,iBAAAm8G,GAAA17H,UAAAye,IAEA,IAAA+9G,GAAA,SAAAppG,QACA,IAAAA,MAAA,IAEA,IAAA0R,EAAA,IAAA42F,GAGA,OAFA52F,EAAA1R,OACA0R,EAAAq3F,WAAA,EACAr3F,GAGA,SAAA23F,GAAAv3H,GACA,WAAAw2H,QAAA/1H,gBAAArO,OAAA4N,IAOA,SAAAw3H,GAAAn3H,GACA,IAAAo3H,EAAA,IAAAjB,GACAn2H,EAAAlP,IACAkP,EAAAhS,KAIAgS,EAAA3B,UAAA2B,EAAA3B,SAAA3D,QACAsF,EAAA6tB,KACA7tB,EAAAo2H,IACAp2H,EAAAi7B,QACAj7B,EAAAq2H,iBACAr2H,EAAAs2H,cAWA,OATAc,EAAAb,GAAAv2H,EAAAu2H,GACAa,EAAA1xH,SAAA1F,EAAA0F,SACA0xH,EAAA/8H,IAAA2F,EAAA3F,IACA+8H,EAAAR,UAAA52H,EAAA42H,UACAQ,EAAAZ,UAAAx2H,EAAAw2H,UACAY,EAAAX,UAAAz2H,EAAAy2H,UACAW,EAAAV,UAAA12H,EAAA02H,UACAU,EAAAL,UAAA/2H,EAAA+2H,UACAK,EAAAP,UAAA,EACAO,EAQA,IAAAC,GAAAv9H,MAAAW,UACA68H,GAAAp9H,OAAA0R,OAAAyrH,KAGA,OACA,MACA,QACA,UACA,SACA,OACA,WAMAn6H,QAAA,SAAAgkB,GAEA,IAAA85D,EAAAq8C,GAAAn2G,GACAjO,EAAAqkH,GAAAp2G,EAAA,WAEA,IADA,IAAAjN,KAAA/E,EAAAgF,UAAAnjB,OACAme,KAAA+E,EAAA/E,GAAAgF,UAAAhF,GAEA,IAEAqoH,EAFAloI,EAAA2rF,EAAAp+E,MAAAuH,KAAA8P,GACAujH,EAAArzH,KAAAszH,OAEA,OAAAv2G,GACA,WACA,cACAq2G,EAAAtjH,EACA,MACA,aACAsjH,EAAAtjH,EAAAvZ,MAAA,GAMA,OAHA68H,GAAmBC,EAAAE,aAAAH,GAEnBC,EAAAG,IAAA5B,SACA1mI,MAMA,IAAAuoI,GAAA19H,OAAAshC,oBAAA87F,IAMAO,IAAA,EAEA,SAAAC,GAAAv9H,GACAs9H,GAAAt9H,EASA,IAAAw9H,GAAA,SAAAx9H,GA4CA,IAAA+2C,EA3CAntC,KAAA5J,QACA4J,KAAAwzH,IAAA,IAAAnC,GACArxH,KAAA6zH,QAAA,EACA/kH,EAAA1Y,EAAA,SAAA4J,MACArK,MAAAyH,QAAAhH,IACA05H,GAsCA3iF,EArCAgmF,GAAA/8H,EAuCAkd,UAAA65B,GASA,SAAAvsC,EAAAusC,EAAAn3C,GACA,QAAA/K,EAAA,EAAAme,EAAApT,EAAApJ,OAAkC3B,EAAAme,EAAOne,IAAA,CACzC,IAAAiL,EAAAF,EAAA/K,GACA6jB,EAAAlO,EAAA1K,EAAAi3C,EAAAj3C,KAjDA49H,CAAA19H,EAAA+8H,GAAAM,IAEAzzH,KAAAuzH,aAAAn9H,IAEA4J,KAAA+zH,KAAA39H,IAsDA,SAAAklE,GAAAllE,EAAA49H,GAIA,IAAAX,EAHA,GAAAzmH,EAAAxW,mBAAA47H,IAkBA,OAdA5E,EAAAh3H,EAAA,WAAAA,EAAAk9H,kBAAAM,GACAP,EAAAj9H,EAAAk9H,OAEAI,KACA9C,OACAj7H,MAAAyH,QAAAhH,IAAAw2H,EAAAx2H,KACAL,OAAAk+H,aAAA79H,KACAA,EAAA89H,SAEAb,EAAA,IAAAO,GAAAx9H,IAEA49H,GAAAX,GACAA,EAAAQ,UAEAR,EAMA,SAAAc,GACA72H,EACApH,EACAsF,EACA44H,EACAC,GAEA,IAAAb,EAAA,IAAAnC,GAEAnpB,EAAAnyG,OAAAioE,yBAAA1gE,EAAApH,GACA,IAAAgyG,IAAA,IAAAA,EAAAlzF,aAAA,CAKA,IAAAm3G,EAAAjkB,KAAAhlG,IACAoxH,EAAApsB,KAAA/vF,IACAg0G,IAAAmI,GAAA,IAAAvkH,UAAAnjB,SACA4O,EAAA8B,EAAApH,IAGA,IAAAq+H,GAAAF,GAAA/4D,GAAA9/D,GACAzF,OAAAkN,eAAA3F,EAAApH,GACAkgB,YAAA,EACApB,cAAA,EACA9R,IAAA,WACA,IAAA9M,EAAA+1H,IAAA31H,KAAA8G,GAAA9B,EAUA,OATA61H,GAAAzwH,SACA4yH,EAAA9B,SACA6C,IACAA,EAAAf,IAAA9B,SACA/7H,MAAAyH,QAAAhH,IAsGA,SAAAo+H,EAAAp+H,GACA,QAAA8H,OAAA,EAAAjT,EAAA,EAAAme,EAAAhT,EAAAxJ,OAAiD3B,EAAAme,EAAOne,KACxDiT,EAAA9H,EAAAnL,KACAiT,EAAAo1H,QAAAp1H,EAAAo1H,OAAAE,IAAA9B,SACA/7H,MAAAyH,QAAAc,IACAs2H,EAAAt2H,GA1GAs2H,CAAAp+H,KAIAA,GAEA+hB,IAAA,SAAAs8G,GACA,IAAAr+H,EAAA+1H,IAAA31H,KAAA8G,GAAA9B,EAEAi5H,IAAAr+H,GAAAq+H,MAAAr+H,MAQA+1H,IAAAmI,IACAA,EACAA,EAAA99H,KAAA8G,EAAAm3H,GAEAj5H,EAAAi5H,EAEAF,GAAAF,GAAA/4D,GAAAm5D,GACAjB,EAAA5B,cAUA,SAAAz5G,GAAAvX,EAAA1K,EAAAsF,GAMA,GAAA7F,MAAAyH,QAAAwD,IAAAksH,EAAA52H,GAGA,OAFA0K,EAAAhU,OAAAwF,KAAAwf,IAAAhR,EAAAhU,OAAAsJ,GACA0K,EAAAyI,OAAAnT,EAAA,EAAAsF,GACAA,EAEA,GAAAtF,KAAA0K,KAAA1K,KAAAH,OAAAO,WAEA,OADAsK,EAAA1K,GAAAsF,EACAA,EAEA,IAAA63H,EAAA,EAAAC,OACA,OAAA1yH,EAAAszH,QAAAb,KAAAQ,QAKAr4H,EAEA63H,GAIAc,GAAAd,EAAAj9H,MAAAF,EAAAsF,GACA63H,EAAAG,IAAA5B,SACAp2H,IALAoF,EAAA1K,GAAAsF,EACAA,GAUA,SAAAk5H,GAAA9zH,EAAA1K,GAMA,GAAAP,MAAAyH,QAAAwD,IAAAksH,EAAA52H,GACA0K,EAAAyI,OAAAnT,EAAA,OADA,CAIA,IAAAm9H,EAAA,EAAAC,OACA1yH,EAAAszH,QAAAb,KAAAQ,SAOAzG,EAAAxsH,EAAA1K,YAGA0K,EAAA1K,GACAm9H,GAGAA,EAAAG,IAAA5B,WApMAgC,GAAAt9H,UAAAy9H,KAAA,SAAAz2H,GAEA,IADA,IAAAtH,EAAAD,OAAAC,KAAAsH,GACArS,EAAA,EAAiBA,EAAA+K,EAAApJ,OAAiB3B,IAClCkpI,GAAA72H,EAAAtH,EAAA/K,KAOA2oI,GAAAt9H,UAAAi9H,aAAA,SAAAzgE,GACA,QAAA7nE,EAAA,EAAAme,EAAA0pD,EAAAlmE,OAAmC3B,EAAAme,EAAOne,IAC1CqwE,GAAAxI,EAAA7nE,KAgNA,IAAAmY,GAAAzY,EAAA0Y,sBAoBA,SAAAsxH,GAAAp1H,EAAAmM,GACA,IAAAA,EAAc,OAAAnM,EAOd,IANA,IAAArJ,EAAA0+H,EAAAC,EAEA7+H,EAAAmZ,GACAskB,QAAA09F,QAAAzlH,GACA3V,OAAAC,KAAA0V,GAEAzgB,EAAA,EAAiBA,EAAA+K,EAAApJ,OAAiB3B,IAGlC,YAFAiL,EAAAF,EAAA/K,MAGA2pI,EAAAr1H,EAAArJ,GACA2+H,EAAAnpH,EAAAxV,GACAk3H,EAAA7tH,EAAArJ,GAGA0+H,IAAAC,GACAjI,EAAAgI,IACAhI,EAAAiI,IAEAF,GAAAC,EAAAC,GANA18G,GAAA5Y,EAAArJ,EAAA2+H,IASA,OAAAt1H,EAMA,SAAAu1H,GACAC,EACAC,EACAz5H,GAEA,OAAAA,EAoBA,WAEA,IAAA05H,EAAA,mBAAAD,EACAA,EAAAx+H,KAAA+E,KACAy5H,EACAE,EAAA,mBAAAH,EACAA,EAAAv+H,KAAA+E,KACAw5H,EACA,OAAAE,EACAN,GAAAM,EAAAC,GAEAA,GA7BAF,EAGAD,EAQA,WACA,OAAAJ,GACA,mBAAAK,IAAAx+H,KAAAwJ,WAAAg1H,EACA,mBAAAD,IAAAv+H,KAAAwJ,WAAA+0H,IAVAC,EAHAD,EA2DA,SAAAI,GACAJ,EACAC,GAEA,IAAAh4H,EAAAg4H,EACAD,EACAA,EAAA78H,OAAA88H,GACAr/H,MAAAyH,QAAA43H,GACAA,GACAA,GACAD,EACA,OAAA/3H,EAKA,SAAAw5E,GAEA,IADA,IAAAx5E,KACA/R,EAAA,EAAiBA,EAAAurF,EAAA5pF,OAAkB3B,KACnC,IAAA+R,EAAAzD,QAAAi9E,EAAAvrF,KACA+R,EAAArR,KAAA6qF,EAAAvrF,IAGA,OAAA+R,EAXAo4H,CAAAp4H,GACAA,EAwBA,SAAAq4H,GACAN,EACAC,EACAz5H,EACArF,GAEA,IAAA8G,EAAAjH,OAAA0R,OAAAstH,GAAA,MACA,OAAAC,EAEAx7H,EAAAwD,EAAAg4H,GAEAh4H,EAzEAoG,GAAAvZ,KAAA,SACAkrI,EACAC,EACAz5H,GAEA,OAAAA,EAcAu5H,GAAAC,EAAAC,EAAAz5H,GAbAy5H,GAAA,mBAAAA,EAQAD,EAEAD,GAAAC,EAAAC,IAmCArG,EAAA51H,QAAA,SAAA4C,GACAyH,GAAAzH,GAAAw5H,KAyBAzG,EAAA31H,QAAA,SAAA7D,GACAkO,GAAAlO,EAAA,KAAAmgI,KASAjyH,GAAAstH,MAAA,SACAqE,EACAC,EACAz5H,EACArF,GAMA,GAHA6+H,IAAAtE,KAAkCsE,OAAA94H,GAClC+4H,IAAAvE,KAAiCuE,OAAA/4H,IAEjC+4H,EAAkB,OAAAj/H,OAAA0R,OAAAstH,GAAA,MAIlB,IAAAA,EAAmB,OAAAC,EACnB,IAAA1wF,KAEA,QAAAgxF,KADA97H,EAAA8qC,EAAAywF,GACAC,EAAA,CACA,IAAA76H,EAAAmqC,EAAAgxF,GACAj0H,EAAA2zH,EAAAM,GACAn7H,IAAAxE,MAAAyH,QAAAjD,KACAA,OAEAmqC,EAAAgxF,GAAAn7H,EACAA,EAAAjC,OAAAmJ,GACA1L,MAAAyH,QAAAiE,SAEA,OAAAijC,GAMAlhC,GAAAvJ,MACAuJ,GAAAo0E,QACAp0E,GAAAmyH,OACAnyH,GAAAoyH,SAAA,SACAT,EACAC,EACAz5H,EACArF,GAKA,IAAA6+H,EAAmB,OAAAC,EACnB,IAAA1wF,EAAAvuC,OAAA0R,OAAA,MAGA,OAFAjO,EAAA8qC,EAAAywF,GACAC,GAAiBx7H,EAAA8qC,EAAA0wF,GACjB1wF,GAEAlhC,GAAAqyH,QAAAX,GAKA,IAAAY,GAAA,SAAAX,EAAAC,GACA,YAAA/4H,IAAA+4H,EACAD,EACAC,GAyHA,SAAAhyF,GACA7oC,EACAkH,EACA9F,GAkBA,GAZA,mBAAA8F,IACAA,IAAArD,SApGA,SAAAA,EAAAzC,GACA,IAAA1B,EAAAmE,EAAAnE,MACA,GAAAA,EAAA,CACA,IACA5O,EAAAuQ,EADAwB,KAEA,GAAArH,MAAAyH,QAAAvD,GAEA,IADA5O,EAAA4O,EAAAjN,OACA3B,KAEA,iBADAuQ,EAAA3B,EAAA5O,MAGA+R,EADAuwH,EAAA/xH,KACqBtG,KAAA,YAKlB,GAAA03H,EAAA/yH,GACH,QAAA3D,KAAA2D,EACA2B,EAAA3B,EAAA3D,GAEA8G,EADAuwH,EAAAr3H,IACA02H,EAAApxH,GACAA,GACWtG,KAAAsG,GASXwC,EAAAnE,MAAAmD,GAwEA24H,CAAAt0H,GAlEA,SAAArD,EAAAzC,GACA,IAAAg6H,EAAAv3H,EAAAu3H,OACA,GAAAA,EAAA,CACA,IAAAK,EAAA53H,EAAAu3H,UACA,GAAA5/H,MAAAyH,QAAAm4H,GACA,QAAAtqI,EAAA,EAAmBA,EAAAsqI,EAAA3oI,OAAmB3B,IACtC2qI,EAAAL,EAAAtqI,KAA+BygB,KAAA6pH,EAAAtqI,SAE5B,GAAA2hI,EAAA2I,GACH,QAAAr/H,KAAAq/H,EAAA,CACA,IAAA/5H,EAAA+5H,EAAAr/H,GACA0/H,EAAA1/H,GAAA02H,EAAApxH,GACAhC,GAAkBkS,KAAAxV,GAAYsF,IACnBkQ,KAAAlQ,KAsDXq6H,CAAAx0H,GAxCA,SAAArD,GACA,IAAA83H,EAAA93H,EAAA+3H,WACA,GAAAD,EACA,QAAA5/H,KAAA4/H,EAAA,CACA,IAAAE,EAAAF,EAAA5/H,GACA,mBAAA8/H,IACAF,EAAA5/H,IAAqBua,KAAAulH,EAAAvyE,OAAAuyE,KAmCrBC,CAAA50H,IAMAA,EAAA60H,QACA70H,EAAA80H,UACAh8H,EAAA6oC,GAAA7oC,EAAAkH,EAAA80H,QAAA56H,IAEA8F,EAAA+0H,QACA,QAAAnrI,EAAA,EAAAme,EAAA/H,EAAA+0H,OAAAxpI,OAA8C3B,EAAAme,EAAOne,IACrDkP,EAAA6oC,GAAA7oC,EAAAkH,EAAA+0H,OAAAnrI,GAAAsQ,GAKA,IACArF,EADA8H,KAEA,IAAA9H,KAAAiE,EACAk8H,EAAAngI,GAEA,IAAAA,KAAAmL,EACA+rH,EAAAjzH,EAAAjE,IACAmgI,EAAAngI,GAGA,SAAAmgI,EAAAngI,GACA,IAAAogI,EAAAlzH,GAAAlN,IAAAw/H,GACA13H,EAAA9H,GAAAogI,EAAAn8H,EAAAjE,GAAAmL,EAAAnL,GAAAqF,EAAArF,GAEA,OAAA8H,EAQA,SAAAu4H,GACAv4H,EACA9I,EACAmD,EACAm+H,GAGA,oBAAAn+H,EAAA,CAGA,IAAAo+H,EAAAz4H,EAAA9I,GAEA,GAAAk4H,EAAAqJ,EAAAp+H,GAA2B,OAAAo+H,EAAAp+H,GAC3B,IAAAq+H,EAAAnJ,EAAAl1H,GACA,GAAA+0H,EAAAqJ,EAAAC,GAAoC,OAAAD,EAAAC,GACpC,IAAAC,EAAAnJ,EAAAkJ,GACA,OAAAtJ,EAAAqJ,EAAAE,GAAqCF,EAAAE,GAErCF,EAAAp+H,IAAAo+H,EAAAC,IAAAD,EAAAE,IAcA,SAAAC,GACA1gI,EACA2gI,EACAC,EACAv7H,GAEA,IAAA26B,EAAA2gG,EAAA3gI,GACA6gI,GAAA3J,EAAA0J,EAAA5gI,GACAE,EAAA0gI,EAAA5gI,GAEA8gI,EAAAC,GAAAv3H,QAAAw2B,EAAAhhC,MACA,GAAA8hI,GAAA,EACA,GAAAD,IAAA3J,EAAAl3F,EAAA,WACA9/B,GAAA,OACK,QAAAA,OAAAs3H,EAAAx3H,GAAA,CAGL,IAAAghI,EAAAD,GAAArpI,OAAAsoC,EAAAhhC,OACAgiI,EAAA,GAAAF,EAAAE,KACA9gI,GAAA,GAKA,QAAA6F,IAAA7F,EAAA,CACAA,EAqBA,SAAAmF,EAAA26B,EAAAhgC,GAEA,IAAAk3H,EAAAl3F,EAAA,WACA,OAEA,IAAApnB,EAAAonB,EAAAp8B,QAEM,EAUN,GAAAyB,KAAAiH,SAAAs0H,gBACA76H,IAAAV,EAAAiH,SAAAs0H,UAAA5gI,SACA+F,IAAAV,EAAA47H,OAAAjhI,GAEA,OAAAqF,EAAA47H,OAAAjhI,GAIA,yBAAA4Y,GAAA,aAAAsoH,GAAAlhG,EAAAhhC,MACA4Z,EAAAtY,KAAA+E,GACAuT,EAhDAuoH,CAAA97H,EAAA26B,EAAAhgC,GAGA,IAAAohI,EAAA5D,GACAC,IAAA,GACAr4D,GAAAllE,GACAu9H,GAAA2D,GASA,OAAAlhI,EAsHA,SAAAghI,GAAA9oH,GACA,IAAA3X,EAAA2X,KAAA5X,WAAAC,MAAA,sBACA,OAAAA,IAAA,MAGA,SAAA4gI,GAAA99H,EAAAC,GACA,OAAA09H,GAAA39H,KAAA29H,GAAA19H,GAGA,SAAAu9H,GAAA/hI,EAAAsiI,GACA,IAAA7hI,MAAAyH,QAAAo6H,GACA,OAAAD,GAAAC,EAAAtiI,GAAA,KAEA,QAAAjK,EAAA,EAAA8f,EAAAysH,EAAA5qI,OAA6C3B,EAAA8f,EAAS9f,IACtD,GAAAssI,GAAAC,EAAAvsI,GAAAiK,GACA,OAAAjK,EAGA,SAgDA,SAAAwsI,GAAAn+H,EAAAiC,EAAA+nB,GAGAwuG,KACA,IACA,GAAAv2H,EAEA,IADA,IAAAm8H,EAAAn8H,EACAm8H,IAAAz8H,SAAA,CACA,IAAAu7E,EAAAkhD,EAAAl1H,SAAAm1H,cACA,GAAAnhD,EACA,QAAAvrF,EAAA,EAAyBA,EAAAurF,EAAA5pF,OAAkB3B,IAC3C,IAEA,IADA,IAAAurF,EAAAvrF,GAAAuL,KAAAkhI,EAAAp+H,EAAAiC,EAAA+nB,GAC4B,OACf,MAAAplB,GACb05H,GAAA15H,EAAAw5H,EAAA,uBAMAE,GAAAt+H,EAAAiC,EAAA+nB,GACG,QACHyuG,MAIA,SAAA8F,GACA92H,EACA+1B,EACAhnB,EACAvU,EACA+nB,GAEA,IAAAtmB,EACA,KACAA,EAAA8S,EAAA/O,EAAAtI,MAAAq+B,EAAAhnB,GAAA/O,EAAAvK,KAAAsgC,MACA95B,EAAAk3H,QAAA1nF,EAAAxvC,OAAA86H,WACA96H,EAAAqP,MAAA,SAAAnO,GAA8B,OAAAu5H,GAAAv5H,EAAA3C,EAAA+nB,EAAA,sBAG9BtmB,EAAA86H,UAAA,GAEG,MAAA55H,GACHu5H,GAAAv5H,EAAA3C,EAAA+nB,GAEA,OAAAtmB,EAGA,SAAA46H,GAAAt+H,EAAAiC,EAAA+nB,GACA,GAAA34B,EAAA4sD,aACA,IACA,OAAA5sD,EAAA4sD,aAAA/gD,KAAA,KAAA8C,EAAAiC,EAAA+nB,GACK,MAAAplB,GAGLA,IAAA5E,GACAy+H,GAAA75H,EAAA,4BAIA65H,GAAAz+H,EAAAiC,EAAA+nB,GAGA,SAAAy0G,GAAAz+H,EAAAiC,EAAA+nB,GAKA,IAAA5f,IAAAqsH,GAAA,oBAAAp+G,QAGA,MAAArY,EAFAqY,QAAA/C,MAAAtV,GAQA,IAyBA0+H,GAzBAC,IAAA,EAEA9wG,MACAxY,IAAA,EAEA,SAAAupH,KACAvpH,IAAA,EACA,IAAAwpH,EAAAhxG,GAAA5wB,MAAA,GACA4wB,GAAAv6B,OAAA,EACA,QAAA3B,EAAA,EAAiBA,EAAAktI,EAAAvrI,OAAmB3B,IACpCktI,EAAAltI,KAwBA,uBAAAojF,SAAA2iD,GAAA3iD,SAAA,CACA,IAAAh7C,GAAAg7C,QAAAnuE,UACA83H,GAAA,WACA3kG,GAAAlnB,KAAA+rH,IAMA3H,IAAgB79G,WAAA2wD,IAEhB40D,IAAA,OACC,GAAA7H,GAAA,oBAAAgI,mBACDpH,GAAAoH,mBAEA,yCAAAA,iBAAA1hI,WAoBAshI,GAJC,oBAAA/8G,cAAA+1G,GAAA/1G,cAID,WACAA,aAAAi9G,KAIA,WACAxlH,WAAAwlH,GAAA,QAzBA,CAIA,IAAAG,GAAA,EACAC,GAAA,IAAAF,iBAAAF,IACAK,GAAAxrH,SAAAouB,eAAAvtC,OAAAyqI,KACAC,GAAAh9D,QAAAi9D,IACAC,eAAA,IAEAR,GAAA,WACAK,OAAA,KACAE,GAAA1uI,KAAA+D,OAAAyqI,KAEAJ,IAAA,EAeA,SAAAQ,GAAAlqH,EAAAwoB,GACA,IAAA2hG,EAiBA,GAhBAvxG,GAAAx7B,KAAA,WACA,GAAA4iB,EACA,IACAA,EAAA/X,KAAAugC,GACO,MAAA74B,GACPu5H,GAAAv5H,EAAA64B,EAAA,iBAEK2hG,GACLA,EAAA3hG,KAGApoB,KACAA,IAAA,EACAqpH,OAGAzpH,GAAA,oBAAA8/D,QACA,WAAAA,QAAA,SAAAnuE,GACAw4H,EAAAx4H,IAwHA,IAAAy4H,GAAA,IAAAzH,GAOA,SAAA0H,GAAAp9H,IAKA,SAAAq9H,EAAAr9H,EAAAs9H,GACA,IAAA7tI,EAAA+K,EACA,IAAA+iI,EAAApjI,MAAAyH,QAAA5B,GACA,IAAAu9H,IAAAnsH,EAAApR,IAAAzF,OAAAijI,SAAAx9H,iBAAAw2H,GACA,OAEA,GAAAx2H,EAAA83H,OAAA,CACA,IAAA2F,EAAAz9H,EAAA83H,OAAAE,IAAAn7H,GACA,GAAAygI,EAAA//F,IAAAkgG,GACA,OAEAH,EAAArgG,IAAAwgG,GAEA,GAAAF,EAEA,IADA9tI,EAAAuQ,EAAA5O,OACA3B,KAAiB4tI,EAAAr9H,EAAAvQ,GAAA6tI,QAIjB,IAFA9iI,EAAAD,OAAAC,KAAAwF,GACAvQ,EAAA+K,EAAApJ,OACA3B,KAAiB4tI,EAAAr9H,EAAAxF,EAAA/K,IAAA6tI,GAvBjBD,CAAAr9H,EAAAm9H,IACAA,GAAAzjG,QA4BA,IAAAgkG,GAAA7L,EAAA,SAAA1/H,GACA,IAAAwwC,EAAA,MAAAxwC,EAAAqW,OAAA,GAEAm1H,EAAA,OADAxrI,EAAAwwC,EAAAxwC,EAAA4I,MAAA,GAAA5I,GACAqW,OAAA,GAEAyB,EAAA,OADA9X,EAAAwrI,EAAAxrI,EAAA4I,MAAA,GAAA5I,GACAqW,OAAA,GAEA,OACArW,KAFAA,EAAA8X,EAAA9X,EAAA4I,MAAA,GAAA5I,EAGAqhB,KAAAmqH,EACA1zH,UACA04B,aAIA,SAAAi7F,GAAAC,EAAA99H,GACA,SAAA+9H,IACA,IAAAC,EAAAxpH,UAEAspH,EAAAC,EAAAD,IACA,IAAA1jI,MAAAyH,QAAAi8H,GAOA,OAAAxB,GAAAwB,EAAA,KAAAtpH,UAAAxU,EAAA,gBALA,IADA,IAAA03H,EAAAoG,EAAA9iI,QACAtL,EAAA,EAAqBA,EAAAgoI,EAAArmI,OAAmB3B,IACxC4sI,GAAA5E,EAAAhoI,GAAA,KAAAsuI,EAAAh+H,EAAA,gBAQA,OADA+9H,EAAAD,MACAC,EAGA,SAAAE,GACAv4H,EACAw4H,EACAhhG,EACAihG,EACAC,EACAp+H,GAEA,IAAA5N,EAAA+pI,EAAA36F,EAAAj9B,EACA,IAAAnS,KAAAsT,EACAy2H,EAAAz2H,EAAAtT,GACAovC,EAAA08F,EAAA9rI,GACAmS,EAAAo5H,GAAAvrI,GACA6+H,EAAAkL,KAKKlL,EAAAzvF,IACLyvF,EAAAkL,EAAA2B,OACA3B,EAAAz2H,EAAAtT,GAAAyrI,GAAA1B,EAAAn8H,IAEAkxH,EAAA3sH,EAAAkP,QACA0oH,EAAAz2H,EAAAtT,GAAAgsI,EAAA75H,EAAAnS,KAAA+pI,EAAA53H,EAAA2F,UAEAgzB,EAAA34B,EAAAnS,KAAA+pI,EAAA53H,EAAA2F,QAAA3F,EAAAq+B,QAAAr+B,EAAA9D,SACK07H,IAAA36F,IACLA,EAAAs8F,IAAA3B,EACAz2H,EAAAtT,GAAAovC,IAGA,IAAApvC,KAAA8rI,EACAjN,EAAAvrH,EAAAtT,KAEA+rI,GADA55H,EAAAo5H,GAAAvrI,IACAA,KAAA8rI,EAAA9rI,GAAAmS,EAAA2F,SAOA,SAAAm0H,GAAA9qH,EAAA+qH,EAAAl+H,GAIA,IAAA29H,EAHAxqH,aAAAkjH,KACAljH,IAAAjlB,KAAA8R,OAAAmT,EAAAjlB,KAAA8R,UAGA,IAAAm+H,EAAAhrH,EAAA+qH,GAEA,SAAAE,IACAp+H,EAAAlD,MAAAuH,KAAA+P,WAGA6oB,EAAA0gG,EAAAD,IAAAU,GAGAvN,EAAAsN,GAEAR,EAAAF,IAAAW,IAGA13H,EAAAy3H,EAAAT,MAAA5M,EAAAqN,EAAAE,SAEAV,EAAAQ,GACAT,IAAA1tI,KAAAouI,GAGAT,EAAAF,IAAAU,EAAAC,IAIAT,EAAAU,QAAA,EACAlrH,EAAA+qH,GAAAP,EA8CA,SAAAW,GACAj9H,EACAoB,EACAlI,EACAuL,EACAy4H,GAEA,GAAA73H,EAAAjE,GAAA,CACA,GAAAgvH,EAAAhvH,EAAAlI,GAKA,OAJA8G,EAAA9G,GAAAkI,EAAAlI,GACAgkI,UACA97H,EAAAlI,IAEA,EACK,GAAAk3H,EAAAhvH,EAAAqD,GAKL,OAJAzE,EAAA9G,GAAAkI,EAAAqD,GACAy4H,UACA97H,EAAAqD,IAEA,EAGA,SA8BA,SAAA04H,GAAAjgI,GACA,OAAAwyH,EAAAxyH,IACA64H,GAAA74H,IACAvE,MAAAyH,QAAAlD,GASA,SAAAkgI,EAAAlgI,EAAAmgI,GACA,IAAAr9H,KACA,IAAA/R,EAAAqR,EAAAg+H,EAAAj6F,EACA,IAAAp1C,EAAA,EAAaA,EAAAiP,EAAAtN,OAAqB3B,IAElCuhI,EADAlwH,EAAApC,EAAAjP,KACA,kBAAAqR,IACAg+H,EAAAt9H,EAAApQ,OAAA,EACAyzC,EAAArjC,EAAAs9H,GAEA3kI,MAAAyH,QAAAd,GACAA,EAAA1P,OAAA,IAGAmuC,IAFAz+B,EAAA89H,EAAA99H,GAAA+9H,GAAA,QAAApvI,IAEA,KAAA8vC,GAAAsF,KACArjC,EAAAs9H,GAAAvH,GAAA1yF,EAAA3W,KAAAptB,EAAA,GAAAotB,MACAptB,EAAAa,SAEAH,EAAArR,KAAA8M,MAAAuE,EAAAV,IAEKowH,EAAApwH,GACLy+B,GAAAsF,GAIArjC,EAAAs9H,GAAAvH,GAAA1yF,EAAA3W,KAAAptB,GACO,KAAAA,GAEPU,EAAArR,KAAAonI,GAAAz2H,IAGAy+B,GAAAz+B,IAAAy+B,GAAAsF,GAEArjC,EAAAs9H,GAAAvH,GAAA1yF,EAAA3W,KAAAptB,EAAAotB,OAGA+iG,EAAAvyH,EAAAqgI,WACAl4H,EAAA/F,EAAA3P,MACA6/H,EAAAlwH,EAAApG,MACAmM,EAAAg4H,KACA/9H,EAAApG,IAAA,UAAAmkI,EAAA,IAAApvI,EAAA,MAEA+R,EAAArR,KAAA2Q,KAIA,OAAAU,EArDAo9H,CAAAlgI,QACA+B,EAGA,SAAA8+B,GAAAK,GACA,OAAA/4B,EAAA+4B,IAAA/4B,EAAA+4B,EAAA1R,QA5yEA,IA4yEA0R,EAAAq3F,UAqFA,SAAA+H,GAAAjF,EAAAh6H,GACA,GAAAg6H,EAAA,CAOA,IALA,IAAArqI,EAAA6K,OAAA0R,OAAA,MACAzR,EAAAmZ,GACAskB,QAAA09F,QAAAoE,GACAx/H,OAAAC,KAAAu/H,GAEAtqI,EAAA,EAAmBA,EAAA+K,EAAApJ,OAAiB3B,IAAA,CACpC,IAAAiL,EAAAF,EAAA/K,GAEA,cAAAiL,EAAA,CAGA,IAFA,IAAAukI,EAAAlF,EAAAr/H,GAAAwV,KACAvE,EAAA5L,EACA4L,GAAA,CACA,GAAAA,EAAAuzH,WAAAtN,EAAAjmH,EAAAuzH,UAAAD,GAAA,CACAvvI,EAAAgL,GAAAiR,EAAAuzH,UAAAD,GACA,MAEAtzH,IAAAlM,QAEA,IAAAkM,EACA,eAAAouH,EAAAr/H,GAAA,CACA,IAAAykI,EAAApF,EAAAr/H,GAAA4D,QACA5O,EAAAgL,GAAA,mBAAAykI,EACAA,EAAAnkI,KAAA+E,GACAo/H,OACmB,GAKnB,OAAAzvI,GAWA,SAAA0vI,GACA1gI,EACA48B,GAEA,IAAA58B,MAAAtN,OACA,SAGA,IADA,IAAAiuI,KACA5vI,EAAA,EAAAme,EAAAlP,EAAAtN,OAAsC3B,EAAAme,EAAOne,IAAA,CAC7C,IAAAoW,EAAAnH,EAAAjP,GACApB,EAAAwX,EAAAxX,KAOA,GALAA,KAAAsS,OAAAtS,EAAAsS,MAAA2+H,aACAjxI,EAAAsS,MAAA2+H,KAIAz5H,EAAAy1B,aAAAz1B,EAAAgxH,YAAAv7F,IACAjtC,GAAA,MAAAA,EAAAixI,MAUAD,EAAA/gI,UAAA+gI,EAAA/gI,aAAAnO,KAAA0V,OATA,CACA,IAAA1T,EAAA9D,EAAAixI,KACAA,EAAAD,EAAAltI,KAAAktI,EAAAltI,OACA,aAAA0T,EAAA1U,IACAmuI,EAAAnvI,KAAA8M,MAAAqiI,EAAAz5H,EAAAnH,cAEA4gI,EAAAnvI,KAAA0V,IAOA,QAAA05H,KAAAF,EACAA,EAAAE,GAAA/7H,MAAAg8H,YACAH,EAAAE,GAGA,OAAAF,EAGA,SAAAG,GAAA5/F,GACA,OAAAA,EAAAq3F,YAAAr3F,EAAA+2F,cAAA,MAAA/2F,EAAA1R,KAKA,SAAAuxG,GACAJ,EACAK,EACAC,GAEA,IAAAn+H,EACAo+H,EAAArlI,OAAAC,KAAAklI,GAAAtuI,OAAA,EACAyuI,EAAAR,MAAAS,SAAAF,EACAllI,EAAA2kI,KAAAU,KACA,GAAAV,EAEG,IAAAA,EAAArxH,YAEH,OAAAqxH,EAAArxH,YACG,GACH6xH,GACAF,GACAA,IAAA5O,GACAr2H,IAAAilI,EAAAI,OACAH,IACAD,EAAAK,WAIA,OAAAL,EAGA,QAAA7F,KADAt4H,KACA69H,EACAA,EAAAvF,IAAA,MAAAA,EAAA,KACAt4H,EAAAs4H,GAAAmG,GAAAP,EAAA5F,EAAAuF,EAAAvF,UAnBAt4H,KAwBA,QAAA0+H,KAAAR,EACAQ,KAAA1+H,IACAA,EAAA0+H,GAAAC,GAAAT,EAAAQ,IAWA,OANAb,GAAA9kI,OAAAk+H,aAAA4G,KACA,EAAArxH,YAAAxM,GAEA8R,EAAA9R,EAAA,UAAAq+H,GACAvsH,EAAA9R,EAAA,OAAA9G,GACA4Y,EAAA9R,EAAA,aAAAo+H,GACAp+H,EAGA,SAAAy+H,GAAAP,EAAAhlI,EAAAoY,GACA,IAAAsnH,EAAA,WACA,IAAA54H,EAAA+S,UAAAnjB,OAAA0hB,EAAA7V,MAAA,KAAAsX,WAAAzB,MAIA,OAHAtR,KAAA,iBAAAA,IAAArH,MAAAyH,QAAAJ,IACAA,GACAm9H,GAAAn9H,MAEA,IAAAA,EAAApQ,QACA,IAAAoQ,EAAApQ,QAAAoQ,EAAA,GAAAy1H,gBACAx2H,EACAe,GAYA,OAPAsR,EAAAstH,OACA7lI,OAAAkN,eAAAi4H,EAAAhlI,GACAgN,IAAA0yH,EACAx/G,YAAA,EACApB,cAAA,IAGA4gH,EAGA,SAAA+F,GAAAd,EAAA3kI,GACA,kBAAsB,OAAA2kI,EAAA3kI,IAQtB,SAAA2lI,GACArgI,EACAzB,GAEA,IAAAuqC,EAAAr5C,EAAAme,EAAApT,EAAAE,EACA,GAAAP,MAAAyH,QAAA5B,IAAA,iBAAAA,EAEA,IADA8oC,EAAA,IAAA3uC,MAAA6F,EAAA5O,QACA3B,EAAA,EAAAme,EAAA5N,EAAA5O,OAA+B3B,EAAAme,EAAOne,IACtCq5C,EAAAr5C,GAAA8O,EAAAyB,EAAAvQ,WAEG,oBAAAuQ,EAEH,IADA8oC,EAAA,IAAA3uC,MAAA6F,GACAvQ,EAAA,EAAeA,EAAAuQ,EAASvQ,IACxBq5C,EAAAr5C,GAAA8O,EAAA9O,EAAA,EAAAA,QAEG,GAAA2hB,EAAApR,GACH,GAAA2T,IAAA3T,EAAA4T,OAAAgD,UAAA,CACAkyB,KAGA,IAFA,IAAAlyB,EAAA5W,EAAA4T,OAAAgD,YACAlnB,EAAAknB,EAAA5M,QACAta,EAAA0nC,MACA0R,EAAA34C,KAAAoO,EAAA7O,EAAAkL,MAAAkuC,EAAA13C,SACA1B,EAAAknB,EAAA5M,YAKA,IAFAxP,EAAAD,OAAAC,KAAAwF,GACA8oC,EAAA,IAAA3uC,MAAAK,EAAApJ,QACA3B,EAAA,EAAAme,EAAApT,EAAApJ,OAAkC3B,EAAAme,EAAOne,IACzCiL,EAAAF,EAAA/K,GACAq5C,EAAAr5C,GAAA8O,EAAAyB,EAAAtF,KAAAjL,GAQA,OAJAoX,EAAAiiC,KACAA,MAEA,EAAAi2F,UAAA,EACAj2F,EAQA,SAAAw3F,GACAnuI,EACAqmB,EACAna,EACAkiI,GAEA,IACAr8D,EADAs8D,EAAAh8H,KAAAi8H,aAAAtuI,GAEAquI,GACAniI,QACAkiI,IAOAliI,EAAAL,OAA8BuiI,GAAAliI,IAE9B6lE,EAAAs8D,EAAAniI,IAAAma,GAEA0rD,EAAA1/D,KAAAsB,OAAA3T,IAAAqmB,EAGA,IAAApT,EAAA/G,KAAAihI,KACA,OAAAl6H,EACAZ,KAAA1F,eAAA,YAA4CwgI,KAAAl6H,GAAe8+D,GAE3DA,EASA,SAAAw8D,GAAA7jI,GACA,OAAAk+H,GAAAv2H,KAAAwC,SAAA,UAAAnK,IAAA21H,EAKA,SAAAmO,GAAAC,EAAAC,GACA,OAAA1mI,MAAAyH,QAAAg/H,IACA,IAAAA,EAAA7iI,QAAA8iI,GAEAD,IAAAC,EASA,SAAAC,GACAC,EACArmI,EACAsmI,EACAC,EACAC,GAEA,IAAAC,EAAAhyI,EAAAskI,SAAA/4H,IAAAsmI,EACA,OAAAE,GAAAD,IAAA9xI,EAAAskI,SAAA/4H,GACAimI,GAAAO,EAAAD,GACGE,EACHR,GAAAQ,EAAAJ,GACGE,EACH/O,EAAA+O,KAAAvmI,OADG,EAUH,SAAA0mI,GACA/yI,EACA8C,EACAyJ,EACAymI,EACAC,GAEA,GAAA1mI,EACA,GAAAwW,EAAAxW,GAKK,CAIL,IAAAgI,EAHAzI,MAAAyH,QAAAhH,KACAA,EAAA03H,EAAA13H,IAGA,IAAAgzE,EAAA,SAAAlzE,GACA,GACA,UAAAA,GACA,UAAAA,GACAi3H,EAAAj3H,GAEAkI,EAAAvU,MACS,CACT,IAAAqL,EAAArL,EAAAsS,OAAAtS,EAAAsS,MAAAjH,KACAkJ,EAAAy+H,GAAAlyI,EAAA4kI,YAAA5iI,EAAAuI,EAAAgB,GACArM,EAAAkzI,WAAAlzI,EAAAkzI,aACAlzI,EAAAsS,QAAAtS,EAAAsS,UAEA,IAAA6gI,EAAAzP,EAAAr3H,GACA+mI,EAAAvP,EAAAx3H,GACA8mI,KAAA5+H,GAAA6+H,KAAA7+H,IACAA,EAAAlI,GAAAE,EAAAF,GAEA4mI,KACAjzI,EAAAoX,KAAApX,EAAAoX,QACA,UAAA/K,GAAA,SAAAgnI,GACA9mI,EAAAF,GAAAgnI,MAMA,QAAAhnI,KAAAE,EAAAgzE,EAAAlzE,QAGA,OAAArM,EAQA,SAAAszI,GACArnI,EACAsnI,GAEA,IAAA/P,EAAArtH,KAAAq9H,eAAAr9H,KAAAq9H,iBACAC,EAAAjQ,EAAAv3H,GAGA,OAAAwnI,IAAAF,EACAE,GAQAC,GALAD,EAAAjQ,EAAAv3H,GAAAkK,KAAAwC,SAAAg7H,gBAAA1nI,GAAAU,KACAwJ,KAAAy9H,aACA,KACAz9H,MAEA,aAAAlK,GAAA,GACAwnI,GAOA,SAAAI,GACAJ,EACAxnI,EACAI,GAGA,OADAqnI,GAAAD,EAAA,WAAAxnI,GAAAI,EAAA,IAAAA,EAAA,QACAonI,EAGA,SAAAC,GACAD,EACApnI,EACAy8H,GAEA,GAAAh9H,MAAAyH,QAAAkgI,GACA,QAAAryI,EAAA,EAAmBA,EAAAqyI,EAAA1wI,OAAiB3B,IACpCqyI,EAAAryI,IAAA,iBAAAqyI,EAAAryI,IACA0yI,GAAAL,EAAAryI,GAAAiL,EAAA,IAAAjL,EAAA0nI,QAIAgL,GAAAL,EAAApnI,EAAAy8H,GAIA,SAAAgL,GAAAviG,EAAAllC,EAAAy8H,GACAv3F,EAAA75B,UAAA,EACA65B,EAAAllC,MACAklC,EAAAu3F,SAKA,SAAAiL,GAAA/zI,EAAAuM,GACA,GAAAA,EACA,GAAAw2H,EAAAx2H,GAKK,CACL,IAAA6K,EAAApX,EAAAoX,GAAApX,EAAAoX,GAAAzH,KAA4C3P,EAAAoX,OAC5C,QAAA/K,KAAAE,EAAA,CACA,IAAAynI,EAAA58H,EAAA/K,GACA4nI,EAAA1nI,EAAAF,GACA+K,EAAA/K,GAAA2nI,KAAA3lI,OAAA2lI,EAAAC,WAIA,OAAAj0I,EAKA,SAAAk0I,GACA1E,EACAr8H,EAEAghI,EACAC,GAEAjhI,MAAgBs+H,SAAA0C,GAChB,QAAA/yI,EAAA,EAAiBA,EAAAouI,EAAAzsI,OAAgB3B,IAAA,CACjC,IAAA6vI,EAAAzB,EAAApuI,GACA0K,MAAAyH,QAAA09H,GACAiD,GAAAjD,EAAA99H,EAAAghI,GACKlD,IAELA,EAAAc,QACAd,EAAAxsH,GAAAstH,OAAA,GAEA5+H,EAAA89H,EAAA5kI,KAAA4kI,EAAAxsH,IAMA,OAHA2vH,IACA,EAAA1C,KAAA0C,GAEAjhI,EAKA,SAAAkhI,GAAAC,EAAAjkE,GACA,QAAAjvE,EAAA,EAAiBA,EAAAivE,EAAAttE,OAAmB3B,GAAA,GACpC,IAAAiL,EAAAgkE,EAAAjvE,GACA,iBAAAiL,OACAioI,EAAAjkE,EAAAjvE,IAAAivE,EAAAjvE,EAAA,IASA,OAAAkzI,EAMA,SAAAC,GAAAhoI,EAAAioI,GACA,uBAAAjoI,EAAAioI,EAAAjoI,IAKA,SAAAkoI,GAAA19H,GACAA,EAAA29H,GAAAb,GACA98H,EAAAq4E,GAAA8zC,EACAnsH,EAAAw4E,GAAA1iF,EACAkK,EAAA49H,GAAA3C,GACAj7H,EAAA69H,GAAA3C,GACAl7H,EAAA89H,GAAAzQ,EACArtH,EAAAuwB,GAAAq9F,EACA5tH,EAAA+9H,GAAAxB,GACAv8H,EAAAg+H,GAAA1C,GACAt7H,EAAAi+H,GAAAvC,GACA17H,EAAAk+H,GAAAlC,GACAh8H,EAAAm+H,GAAAhM,GACAnyH,EAAAu4E,GAAA25C,GACAlyH,EAAAo+H,GAAAjB,GACAn9H,EAAAq+H,GAAArB,GACAh9H,EAAAs4E,GAAAglD,GACAt9H,EAAAs+H,GAAAd,GAKA,SAAAe,GACAt1I,EACAgQ,EACAK,EACAC,EACA82H,GAEA,IAKAmO,EALAr/H,EAAAC,KAEAhC,EAAAizH,EAAAjzH,QAIAovH,EAAAjzH,EAAA,SACAilI,EAAArpI,OAAA0R,OAAAtN,IAEAklI,UAAAllI,GAKAilI,EAAAjlI,EAEAA,IAAAklI,WAEA,IAAAC,EAAA7S,EAAAzuH,EAAAuhI,WACAC,GAAAF,EAEAt/H,KAAAnW,OACAmW,KAAAnG,QACAmG,KAAA9F,WACA8F,KAAA7F,SACA6F,KAAA+mB,UAAAl9B,EAAAoX,IAAAsrH,EACAvsH,KAAAy/H,WAAAjF,GAAAx8H,EAAAu3H,OAAAp7H,GACA6F,KAAA66H,MAAA,WAOA,OANA96H,EAAAuB,QACA25H,GACApxI,EAAA61I,YACA3/H,EAAAuB,OAAAs5H,GAAA1gI,EAAAC,IAGA4F,EAAAuB,QAGAvL,OAAAkN,eAAAjD,KAAA,eACAoW,YAAA,EACAlT,IAAA,WACA,OAAA+3H,GAAApxI,EAAA61I,YAAA1/H,KAAA66H,YAKAyE,IAEAt/H,KAAAwC,SAAAxE,EAEAgC,KAAAsB,OAAAtB,KAAA66H,QACA76H,KAAAi8H,aAAAhB,GAAApxI,EAAA61I,YAAA1/H,KAAAsB,SAGAtD,EAAA2hI,SACA3/H,KAAA4/H,GAAA,SAAAnmI,EAAAC,EAAA4C,EAAA6yB,GACA,IAAAtzB,EAAAu7B,GAAAgoG,EAAA3lI,EAAAC,EAAA4C,EAAA6yB,EAAAqwG,GAKA,OAJA3jI,IAAAlG,MAAAyH,QAAAvB,KACAA,EAAA02H,UAAAv0H,EAAA2hI,SACA9jI,EAAAw2H,UAAAl4H,GAEA0B,GAGAmE,KAAA4/H,GAAA,SAAAnmI,EAAAC,EAAA4C,EAAA6yB,GAAqC,OAAAiI,GAAAgoG,EAAA3lI,EAAAC,EAAA4C,EAAA6yB,EAAAqwG,IA+CrC,SAAAK,GAAAhkI,EAAAhS,EAAAu1I,EAAAphI,EAAA8hI,GAIA,IAAA7hI,EAAA+0H,GAAAn3H,GASA,OARAoC,EAAAo0H,UAAA+M,EACAnhI,EAAAq0H,UAAAt0H,EAIAnU,EAAAixI,QACA78H,EAAApU,OAAAoU,EAAApU,UAAmCixI,KAAAjxI,EAAAixI,MAEnC78H,EAGA,SAAA8hI,GAAAxgI,EAAAmM,GACA,QAAAxV,KAAAwV,EACAnM,EAAAguH,EAAAr3H,IAAAwV,EAAAxV,GA7DAooI,GAAAa,GAAA7oI,WA0EA,IAAA0pI,IACA7nI,KAAA,SAAA0D,EAAAokI,GACA,GACApkI,EAAAC,oBACAD,EAAAC,kBAAAokI,cACArkI,EAAAhS,KAAAkR,UACA,CAEA,IAAAolI,EAAAtkI,EACAmkI,GAAApkI,SAAAukI,SACK,EACLtkI,EAAAC,kBA0JA,SACAD,EACA1B,GAEA,IAAA6D,GACAoiI,cAAA,EACA39H,aAAA5G,EACA1B,UAGAkmI,EAAAxkI,EAAAhS,KAAAw2I,eACAh+H,EAAAg+H,KACAriI,EAAAjE,OAAAsmI,EAAAtmI,OACAiE,EAAAw/H,gBAAA6C,EAAA7C,iBAEA,WAAA3hI,EAAAq2H,iBAAAjB,KAAAjzH,GAzKAsiI,CACAzkI,EACA0kI,KAEAC,OAAAP,EAAApkI,EAAAo2H,SAAAh2H,EAAAgkI,KAIArkI,SAAA,SAAA6kI,EAAA5kI,GACA,IAAAmC,EAAAnC,EAAAq2H,kBAk8BA,SACA32H,EACAu7H,EACA/vG,EACA25G,EACAC,GAEM,EAUN,IAAAC,EAAAF,EAAA72I,KAAA61I,YACAmB,EAAAtlI,EAAA0gI,aACA6E,KACAF,MAAAtF,SACAuF,IAAAtU,IAAAsU,EAAAvF,SACAsF,GAAArlI,EAAA0gI,aAAAV,OAAAqF,EAAArF,MAMAwF,KACAJ,GACAplI,EAAAiH,SAAAw+H,iBACAF,GAGAvlI,EAAAiH,SAAAC,aAAAi+H,EACAnlI,EAAAT,OAAA4lI,EAEAnlI,EAAA0lI,SACA1lI,EAAA0lI,OAAA9mI,OAAAumI,GAWA,GATAnlI,EAAAiH,SAAAw+H,gBAAAL,EAKAplI,EAAA2lI,OAAAR,EAAA72I,KAAAsS,OAAAowH,EACAhxH,EAAA4lI,WAAAp6G,GAAAwlG,EAGAuK,GAAAv7H,EAAAiH,SAAA3I,MAAA,CACA85H,IAAA,GAGA,IAFA,IAAA95H,EAAA0B,EAAA47H,OACAiK,EAAA7lI,EAAAiH,SAAA6+H,cACAp2I,EAAA,EAAmBA,EAAAm2I,EAAAx0I,OAAqB3B,IAAA,CACxC,IAAAiL,EAAAkrI,EAAAn2I,GACA4rI,EAAAt7H,EAAAiH,SAAA3I,MACAA,EAAA3D,GAAA0gI,GAAA1gI,EAAA2gI,EAAAC,EAAAv7H,GAEAo4H,IAAA,GAEAp4H,EAAAiH,SAAAs0H,YAIA/vG,KAAAwlG,EACA,IAAA+U,EAAA/lI,EAAAiH,SAAA++H,iBACAhmI,EAAAiH,SAAA++H,iBAAAx6G,EACAy6G,GAAAjmI,EAAAwrB,EAAAu6G,GAGAP,IACAxlI,EAAA+F,OAAAs5H,GAAA+F,EAAAD,EAAA5pG,SACAv7B,EAAAkmI,gBAGM,EA3gCNC,CADA7lI,EAAAC,kBAAA2kI,EAAA3kI,kBAGAkC,EAAA84H,UACA94H,EAAA+oB,UACAlrB,EACAmC,EAAA9D,WAIAynI,OAAA,SAAA9lI,GACA,IAmsCAN,EAnsCAu7B,EAAAj7B,EAAAi7B,QACAh7B,EAAAD,EAAAC,kBACAA,EAAA8lI,aACA9lI,EAAA8lI,YAAA,EACAC,GAAA/lI,EAAA,YAEAD,EAAAhS,KAAAkR,YACA+7B,EAAA8qG,aA4rCArmI,EAtrCAO,GAyrCAd,WAAA,EACA8mI,GAAAn2I,KAAA4P,IAxrCAwmI,GAAAjmI,GAAA,KAKAkmI,QAAA,SAAAnmI,GACA,IAAAC,EAAAD,EAAAC,kBACAA,EAAAokI,eACArkI,EAAAhS,KAAAkR,UAwgCA,SAAAknI,EAAA1mI,EAAA2mI,GACA,GAAAA,IACA3mI,EAAA4mI,iBAAA,EACAC,GAAA7mI,IACA,OAGA,IAAAA,EAAAP,UAAA,CACAO,EAAAP,WAAA,EACA,QAAA/P,EAAA,EAAmBA,EAAAsQ,EAAA8mI,UAAAz1I,OAAyB3B,IAC5Cg3I,EAAA1mI,EAAA8mI,UAAAp3I,IAEA42I,GAAAtmI,EAAA,gBAjhCA0mI,CAAAnmI,GAAA,GAFAA,EAAAwmI,cAQAC,GAAAxsI,OAAAC,KAAAgqI,IAEA,SAAAwC,GACAvR,EACApnI,EACAitC,EACA58B,EACAvN,GAEA,IAAA6/H,EAAAyE,GAAA,CAIA,IAAAwR,EAAA3rG,EAAAt0B,SAAA0zH,MASA,GANAtpH,EAAAqkH,KACAA,EAAAwR,EAAAjpI,OAAAy3H,IAKA,mBAAAA,EAAA,CAQA,IAAAkB,EACA,GAAA3F,EAAAyE,EAAAliH,WAGA9S,KADAg1H,EAyZA,SACAyR,EACAD,GAEA,GAAAhW,EAAAiW,EAAA9zH,QAAAvM,EAAAqgI,EAAAC,WACA,OAAAD,EAAAC,UAGA,GAAAtgI,EAAAqgI,EAAApzH,UACA,OAAAozH,EAAApzH,SAGA,IAAAwmF,EAAA8sC,GACA9sC,GAAAzzF,EAAAqgI,EAAAG,UAAA,IAAAH,EAAAG,OAAAtpI,QAAAu8F,IAEA4sC,EAAAG,OAAAl3I,KAAAmqG,GAGA,GAAA22B,EAAAiW,EAAAI,UAAAzgI,EAAAqgI,EAAAK,aACA,OAAAL,EAAAK,YAGA,GAAAjtC,IAAAzzF,EAAAqgI,EAAAG,QAAA,CACA,IAAAA,EAAAH,EAAAG,QAAA/sC,GACAx4E,GAAA,EACA0lH,EAAA,KACAC,EAAA,KAEK,EAAAC,IAAA,4BAA2C,OAAAtqG,EAAAiqG,EAAA/sC,KAEhD,IAAAqtC,EAAA,SAAAC,GACA,QAAAn4I,EAAA,EAAAme,EAAAy5H,EAAAj2I,OAAwC3B,EAAAme,EAAOne,IAC/C43I,EAAA53I,GAAAw2I,eAGA2B,IACAP,EAAAj2I,OAAA,EACA,OAAAo2I,IACA9oH,aAAA8oH,GACAA,EAAA,MAEA,OAAAC,IACA/oH,aAAA+oH,GACAA,EAAA,QAKA/iI,EAAA8O,EAAA,SAAAhS,GAEA0lI,EAAApzH,SAAA+zH,GAAArmI,EAAAylI,GAGAnlH,EAGAulH,EAAAj2I,OAAA,EAFAu2I,GAAA,KAMA5zH,EAAAP,EAAA,SAAAQ,GAKAnN,EAAAqgI,EAAAC,aACAD,EAAA9zH,OAAA,EACAu0H,GAAA,MAIAnmI,EAAA0lI,EAAAxiI,EAAAqP,GA+CA,OA7CA3C,EAAA5P,KACAwvC,EAAAxvC,GAEAwvH,EAAAkW,EAAApzH,WACAtS,EAAAmP,KAAAjM,EAAAqP,GAEOi9B,EAAAxvC,EAAA5B,aACP4B,EAAA5B,UAAA+Q,KAAAjM,EAAAqP,GAEAlN,EAAArF,EAAA4R,SACA8zH,EAAAC,UAAAU,GAAArmI,EAAA4R,MAAA6zH,IAGApgI,EAAArF,EAAA8lI,WACAJ,EAAAK,YAAAM,GAAArmI,EAAA8lI,QAAAL,GACA,IAAAzlI,EAAAs0B,MACAoxG,EAAAI,SAAA,EAEAE,EAAAtwH,WAAA,WACAswH,EAAA,KACAxW,EAAAkW,EAAApzH,WAAAk9G,EAAAkW,EAAA9zH,SACA8zH,EAAAI,SAAA,EACAK,GAAA,KAEanmI,EAAAs0B,OAAA,MAIbjvB,EAAArF,EAAAqd,WACA4oH,EAAAvwH,WAAA,WACAuwH,EAAA,KACAzW,EAAAkW,EAAApzH,WACAC,EAGA,OAGWvS,EAAAqd,YAKXiD,GAAA,EAEAolH,EAAAI,QACAJ,EAAAK,YACAL,EAAApzH,UAjhBAg0H,CADAnR,EAAAlB,EACAwR,IAKA,OAuYA,SACAC,EACA74I,EACAitC,EACA58B,EACAvN,GAEA,IAAAyuC,EAAA03F,KAGA,OAFA13F,EAAA+2F,aAAAuQ,EACAtnG,EAAAw3F,WAAoB/oI,OAAAitC,UAAA58B,WAAAvN,OACpByuC,EAjZAmoG,CACApR,EACAtoI,EACAitC,EACA58B,EACAvN,GAKA9C,QAIA25I,GAAAvS,GAGA5uH,EAAAxY,EAAA45I,QAwFA,SAAAzlI,EAAAnU,GACA,IAAAqsC,EAAAl4B,EAAAylI,OAAAzlI,EAAAylI,MAAAvtG,MAAA,QACAp2B,EAAA9B,EAAAylI,OAAAzlI,EAAAylI,MAAA3jI,OAAA,SACGjW,EAAAsS,QAAAtS,EAAAsS,WAA+B+5B,GAAArsC,EAAA45I,MAAArtI,MAClC,IAAA6K,EAAApX,EAAAoX,KAAApX,EAAAoX,OACA48H,EAAA58H,EAAAnB,GACA0b,EAAA3xB,EAAA45I,MAAAjoH,SACAnZ,EAAAw7H,IAEAloI,MAAAyH,QAAAygI,IACA,IAAAA,EAAAtkI,QAAAiiB,GACAqiH,IAAAriH,KAEAva,EAAAnB,IAAA0b,GAAAtjB,OAAA2lI,IAGA58H,EAAAnB,GAAA0b,EAvGAkoH,CAAAzS,EAAAjzH,QAAAnU,GAIA,IAAAitI,EAr8BA,SACAjtI,EACAonI,EACAtkI,GAKA,IAAAkqI,EAAA5F,EAAAjzH,QAAAnE,MACA,IAAA2yH,EAAAqK,GAAA,CAGA,IAAA75H,KACAb,EAAAtS,EAAAsS,MACAtC,EAAAhQ,EAAAgQ,MACA,GAAAwI,EAAAlG,IAAAkG,EAAAxI,GACA,QAAA3D,KAAA2gI,EAAA,CACA,IAAAp1H,EAAAisH,EAAAx3H,GAiBA+jI,GAAAj9H,EAAAnD,EAAA3D,EAAAuL,GAAA,IACAw4H,GAAAj9H,EAAAb,EAAAjG,EAAAuL,GAAA,GAGA,OAAAzE,GA+5BA2mI,CAAA95I,EAAAonI,GAGA,GAAAxE,EAAAwE,EAAAjzH,QAAApE,YACA,OAxMA,SACAq3H,EACA6F,EACAjtI,EACAu1I,EACAllI,GAEA,IAAA8D,EAAAizH,EAAAjzH,QACAnE,KACAg9H,EAAA74H,EAAAnE,MACA,GAAAwI,EAAAw0H,GACA,QAAA3gI,KAAA2gI,EACAh9H,EAAA3D,GAAA0gI,GAAA1gI,EAAA2gI,EAAAC,GAAAvK,QAGAlqH,EAAAxY,EAAAsS,QAA4B4jI,GAAAlmI,EAAAhQ,EAAAsS,OAC5BkG,EAAAxY,EAAAgQ,QAA4BkmI,GAAAlmI,EAAAhQ,EAAAgQ,OAG5B,IAAAimI,EAAA,IAAAX,GACAt1I,EACAgQ,EACAK,EACAklI,EACAnO,GAGAp1H,EAAAmC,EAAAjE,OAAAvD,KAAA,KAAAspI,EAAAF,GAAAE,GAEA,GAAAjkI,aAAAm2H,GACA,OAAA6N,GAAAhkI,EAAAhS,EAAAi2I,EAAA3lI,OAAA6D,GACG,GAAArI,MAAAyH,QAAAvB,GAAA,CAGH,IAFA,IAAA+nI,EAAAzJ,GAAAt+H,OACAmB,EAAA,IAAArH,MAAAiuI,EAAAh3I,QACA3B,EAAA,EAAmBA,EAAA24I,EAAAh3I,OAAmB3B,IACtC+R,EAAA/R,GAAA40I,GAAA+D,EAAA34I,GAAApB,EAAAi2I,EAAA3lI,OAAA6D,GAEA,OAAAhB,GAmKA6mI,CAAA5S,EAAA6F,EAAAjtI,EAAAitC,EAAA58B,GAKA,IAAA6sB,EAAAl9B,EAAAoX,GAKA,GAFApX,EAAAoX,GAAApX,EAAAi6I,SAEArX,EAAAwE,EAAAjzH,QAAA+lI,UAAA,CAKA,IAAAjJ,EAAAjxI,EAAAixI,KACAjxI,KACAixI,IACAjxI,EAAAixI,SAqCA,SAAAjxI,GAEA,IADA,IAAA2sF,EAAA3sF,EAAA8R,OAAA9R,EAAA8R,SACA1Q,EAAA,EAAiBA,EAAAs3I,GAAA31I,OAAyB3B,IAAA,CAC1C,IAAAiL,EAAAqsI,GAAAt3I,GACA4yI,EAAArnD,EAAAtgF,GACA8tI,EAAAhE,GAAA9pI,GACA2nI,IAAAmG,GAAAnG,KAAAoG,UACAztD,EAAAtgF,GAAA2nI,EAAAqG,GAAAF,EAAAnG,GAAAmG,IAvCAG,CAAAt6I,GAGA,IAAA8D,EAAAsjI,EAAAjzH,QAAArQ,MAAAhB,EAQA,OAPA,IAAAqlI,GACA,iBAAAf,EAAA,KAAAtjI,EAAA,IAAAA,EAAA,IACA9D,OAAAoS,gBAAA66B,GACKm6F,OAAA6F,YAAA/vG,YAAAp6B,MAAAuN,YACLi4H,KAoCA,SAAA+R,GAAAE,EAAAC,GACA,IAAArK,EAAA,SAAAvgI,EAAAC,GAEA0qI,EAAA3qI,EAAAC,GACA2qI,EAAA5qI,EAAAC,IAGA,OADAsgI,EAAAiK,SAAA,EACAjK,EA2BA,IAAAsK,GAAA,EACAC,GAAA,EAIA,SAAAntG,GACAN,EACAnqC,EACA9C,EACAqQ,EACAsqI,EACAC,GAUA,OARA9uI,MAAAyH,QAAAvT,IAAA6iI,EAAA7iI,MACA26I,EAAAtqI,EACAA,EAAArQ,EACAA,OAAAoS,GAEAwwH,EAAAgY,KACAD,EAAAD,IAKA,SACAztG,EACAnqC,EACA9C,EACAqQ,EACAsqI,GAEA,GAAAniI,EAAAxY,IAAAwY,EAAA,EAAAixH,QAMA,OAAAR,KAGAzwH,EAAAxY,IAAAwY,EAAAxY,EAAA66I,MACA/3I,EAAA9C,EAAA66I,IAEA,IAAA/3I,EAEA,OAAAmmI,KAGM,EAYNn9H,MAAAyH,QAAAlD,IACA,mBAAAA,EAAA,MAEArQ,SACA61I,aAAwB5lI,QAAAI,EAAA,IACxBA,EAAAtN,OAAA,GAEA43I,IAAAD,GACArqI,EAAAigI,GAAAjgI,GACGsqI,IAAAF,KACHpqI,EApiCA,SAAAA,GACA,QAAAjP,EAAA,EAAiBA,EAAAiP,EAAAtN,OAAqB3B,IACtC,GAAA0K,MAAAyH,QAAAlD,EAAAjP,IACA,OAAA0K,MAAAW,UAAA4B,OAAAO,SAAAyB,GAGA,OAAAA,EA8hCAyqI,CAAAzqI,IAEA,IAAA2B,EAAAu2H,EACA,oBAAAzlI,EAAA,CACA,IAAAskI,EACAmB,EAAAt7F,EAAAh8B,QAAAg8B,EAAAh8B,OAAAs3H,IAAAznI,EAAA0kI,gBAAA1iI,GAGAkP,EAFAlR,EAAAukI,cAAAviI,GAEA,IAAAqlI,GACArnI,EAAA2kI,qBAAA3iI,GAAA9C,EAAAqQ,OACA+B,SAAA66B,GAEKjtC,KAAA+6I,MAAAviI,EAAA4uH,EAAAsF,GAAAz/F,EAAAt0B,SAAA,aAAA7V,IAOL,IAAAqlI,GACArlI,EAAA9C,EAAAqQ,OACA+B,SAAA66B,GAPA0rG,GAAAvR,EAAApnI,EAAAitC,EAAA58B,EAAAvN,QAYAkP,EAAA2mI,GAAA71I,EAAA9C,EAAAitC,EAAA58B,GAEA,OAAAvE,MAAAyH,QAAAvB,GACAA,EACGwG,EAAAxG,IACHwG,EAAA+vH,IAQA,SAAAyS,EAAAhpI,EAAAu2H,EAAA0S,GACAjpI,EAAAu2H,KACA,kBAAAv2H,EAAAlP,MAEAylI,OAAAn2H,EACA6oI,GAAA,GAEA,GAAAziI,EAAAxG,EAAA3B,UACA,QAAAjP,EAAA,EAAAme,EAAAvN,EAAA3B,SAAAtN,OAA8C3B,EAAAme,EAAOne,IAAA,CACrD,IAAAoW,EAAAxF,EAAA3B,SAAAjP,GACAoX,EAAAhB,EAAA1U,OACA6/H,EAAAnrH,EAAA+wH,KAAA3F,EAAAqY,IAAA,QAAAzjI,EAAA1U,MACAk4I,EAAAxjI,EAAA+wH,EAAA0S,IApBoBD,CAAAhpI,EAAAu2H,GACpB/vH,EAAAxY,IA4BA,SAAAA,GACA+iB,EAAA/iB,EAAAi2C,QACA84F,GAAA/uI,EAAAi2C,OAEAlzB,EAAA/iB,EAAAsX,QACAy3H,GAAA/uI,EAAAsX,OAjCsB4jI,CAAAl7I,GACtBgS,GAEAi3H,KApFAkS,CAAAluG,EAAAnqC,EAAA9C,EAAAqQ,EAAAsqI,GA2JA,IAkQA5jI,GAlQAgiI,GAAA,KA4EA,SAAAS,GAAA1zH,EAAA7L,GAOA,OALA6L,EAAAT,YACAC,IAAA,WAAAQ,EAAAP,OAAAC,gBAEAM,IAAA7V,SAEA8S,EAAA+C,GACA7L,EAAAtK,OAAAmW,GACAA,EA8IA,SAAAkjH,GAAAz3F,GACA,OAAAA,EAAAq3F,WAAAr3F,EAAA+2F,aAKA,SAAA8S,GAAA/qI,GACA,GAAAvE,MAAAyH,QAAAlD,GACA,QAAAjP,EAAA,EAAmBA,EAAAiP,EAAAtN,OAAqB3B,IAAA,CACxC,IAAAqR,EAAApC,EAAAjP,GACA,GAAAoX,EAAA/F,KAAA+F,EAAA/F,EAAA41H,mBAAAW,GAAAv2H,IACA,OAAAA,GAsBA,SAAAm8B,GAAA34B,EAAAwO,GACA1N,GAAAsiI,IAAApjI,EAAAwO,GAGA,SAAA42H,GAAAplI,EAAAwO,GACA1N,GAAAukI,KAAArlI,EAAAwO,GAGA,SAAAqrH,GAAA75H,EAAAwO,GACA,IAAA82H,EAAAxkI,GACA,gBAAAykI,IAEA,OADA/2H,EAAA7V,MAAA,KAAAsX,YAEAq1H,EAAAD,KAAArlI,EAAAulI,IAKA,SAAA7D,GACAjmI,EACAwrB,EACAu6G,GAEA1gI,GAAArF,EACAi+H,GAAAzyG,EAAAu6G,MAA+C7oG,GAAAysG,GAAAvL,GAAAp+H,GAC/CqF,QAAA3E,EAkGA,IAAAskI,GAAA,KAGA,SAAA+E,GAAA/pI,GACA,IAAAgqI,EAAAhF,GAEA,OADAA,GAAAhlI,EACA,WACAglI,GAAAgF,GA2QA,SAAAnD,GAAA7mI,GACA,KAAAA,QAAAN,UACA,GAAAM,EAAAP,UAAuB,SAEvB,SAGA,SAAA+mI,GAAAxmI,EAAA2mI,GACA,GAAAA,GAEA,GADA3mI,EAAA4mI,iBAAA,EACAC,GAAA7mI,GACA,YAEG,GAAAA,EAAA4mI,gBACH,OAEA,GAAA5mI,EAAAP,WAAA,OAAAO,EAAAP,UAAA,CACAO,EAAAP,WAAA,EACA,QAAA/P,EAAA,EAAmBA,EAAAsQ,EAAA8mI,UAAAz1I,OAAyB3B,IAC5C82I,GAAAxmI,EAAA8mI,UAAAp3I,IAEA42I,GAAAtmI,EAAA,cAoBA,SAAAsmI,GAAAtmI,EAAAI,GAEAm2H,KACA,IAAAz1F,EAAA9gC,EAAAiH,SAAA7G,GACA2nB,EAAA3nB,EAAA,QACA,GAAA0gC,EACA,QAAApxC,EAAA,EAAA2b,EAAAy1B,EAAAzvC,OAAwC3B,EAAA2b,EAAO3b,IAC/C4sI,GAAAx7F,EAAApxC,GAAAsQ,EAAA,KAAAA,EAAA+nB,GAGA/nB,EAAAiqI,eACAjqI,EAAAkqI,MAAA,QAAA9pI,GAEAo2H,KAKA,IAEA1jH,MACAyzH,MACA/oG,MAEA2sG,IAAA,EACAC,IAAA,EACA7vI,GAAA,EAmBA,IAAA8vI,GAAA,EAGAC,GAAA58I,KAAA8kB,IAQA,GAAArK,IAAA0sH,EAAA,CACA,IAAAtiH,GAAAnK,OAAAmK,YAEAA,IACA,mBAAAA,GAAAC,KACA83H,KAAA94H,SAAA4nD,YAAA,SAAAwhC,YAMA0vC,GAAA,WAA0B,OAAA/3H,GAAAC,QAO1B,SAAA+3H,KAGA,IAAAC,EAAA1tI,EAcA,IAhBAutI,GAAAC,KACAF,IAAA,EAWAt3H,GAAA8uD,KAAA,SAAA1jE,EAAAC,GAA8B,OAAAD,EAAApB,GAAAqB,EAAArB,KAI9BvC,GAAA,EAAiBA,GAAAuY,GAAAzhB,OAAsBkJ,MACvCiwI,EAAA13H,GAAAvY,KACAq/E,QACA4wD,EAAA5wD,SAEA98E,EAAA0tI,EAAA1tI,GACA0gC,GAAA1gC,GAAA,KACA0tI,EAAA1qB,MAmBA,IAAA2qB,EAAAlE,GAAAvrI,QACA0vI,EAAA53H,GAAA9X,QAtFAT,GAAAuY,GAAAzhB,OAAAk1I,GAAAl1I,OAAA,EACAmsC,MAIA2sG,GAAAC,IAAA,EAsHA,SAAAt3H,GACA,QAAApjB,EAAA,EAAiBA,EAAAojB,EAAAzhB,OAAkB3B,IACnCojB,EAAApjB,GAAA+P,WAAA,EACA+mI,GAAA1zH,EAAApjB,IAAA,GAnCAi7I,CAAAF,GAUA,SAAA33H,GACA,IAAApjB,EAAAojB,EAAAzhB,OACA,KAAA3B,KAAA,CACA,IAAA86I,EAAA13H,EAAApjB,GACAsQ,EAAAwqI,EAAAxqI,GACAA,EAAA4qI,WAAAJ,GAAAxqI,EAAAqmI,aAAArmI,EAAA2kI,cACA2B,GAAAtmI,EAAA,YAfA6qI,CAAAH,GAIAnX,IAAAnkI,EAAAmkI,UACAA,GAAAuX,KAAA,SAsEA,IAAAC,GAAA,EAOAC,GAAA,SACAhrI,EACAirI,EACAj4H,EACAvQ,EACAyoI,GAEAzmI,KAAAzE,KACAkrI,IACAlrI,EAAA4qI,SAAAnmI,MAEAzE,EAAAmrI,UAAA/6I,KAAAqU,MAEAhC,GACAgC,KAAA2mI,OAAA3oI,EAAA2oI,KACA3mI,KAAA4mI,OAAA5oI,EAAA4oI,KACA5mI,KAAA6mI,OAAA7oI,EAAA6oI,KACA7mI,KAAAsd,OAAAtf,EAAAsf,KACAtd,KAAAm1E,OAAAn3E,EAAAm3E,QAEAn1E,KAAA2mI,KAAA3mI,KAAA4mI,KAAA5mI,KAAA6mI,KAAA7mI,KAAAsd,MAAA,EAEAtd,KAAAuO,KACAvO,KAAA3H,KAAAiuI,GACAtmI,KAAA+a,QAAA,EACA/a,KAAA8mI,MAAA9mI,KAAA6mI,KACA7mI,KAAA+mI,QACA/mI,KAAAgnI,WACAhnI,KAAAinI,OAAA,IAAA/V,GACAlxH,KAAAknI,UAAA,IAAAhW,GACAlxH,KAAA8pB,WAEA,GAEA,mBAAA08G,EACAxmI,KAAAmsH,OAAAqa,GAEAxmI,KAAAmsH,OAl3HA,SAAAp0H,GACA,IAAA63H,EAAA5tH,KAAAjK,GAAA,CAGA,IAAAoM,EAAApM,EAAAhB,MAAA,KACA,gBAAAuG,GACA,QAAArS,EAAA,EAAmBA,EAAAkZ,EAAAvX,OAAqB3B,IAAA,CACxC,IAAAqS,EAAiB,OACjBA,IAAA6G,EAAAlZ,IAEA,OAAAqS,IAw2HAuM,CAAA28H,GACAxmI,KAAAmsH,SACAnsH,KAAAmsH,OAAA9oD,IASArjE,KAAA5J,MAAA4J,KAAA6mI,UACA5qI,EACA+D,KAAAkD,OAMAqjI,GAAAjwI,UAAA4M,IAAA,WAEA,IAAA9M,EADA07H,GAAA9xH,MAEA,IAAAzE,EAAAyE,KAAAzE,GACA,IACAnF,EAAA4J,KAAAmsH,OAAA31H,KAAA+E,KACG,MAAA2C,GACH,IAAA8B,KAAA4mI,KAGA,MAAA1oI,EAFAu5H,GAAAv5H,EAAA3C,EAAA,uBAAAyE,KAAA,gBAIG,QAGHA,KAAA2mI,MACA/N,GAAAxiI,GAEA27H,KACA/xH,KAAAmnI,cAEA,OAAA/wI,GAMAmwI,GAAAjwI,UAAAq7H,OAAA,SAAA6B,GACA,IAAAn7H,EAAAm7H,EAAAn7H,GACA2H,KAAAknI,UAAAnuG,IAAA1gC,KACA2H,KAAAknI,UAAAzuG,IAAApgC,GACA2H,KAAAgnI,QAAAr7I,KAAA6nI,GACAxzH,KAAAinI,OAAAluG,IAAA1gC,IACAm7H,EAAAjC,OAAAvxH,QAQAumI,GAAAjwI,UAAA6wI,YAAA,WAEA,IADA,IAAAl8I,EAAA+U,KAAA+mI,KAAAn6I,OACA3B,KAAA,CACA,IAAAuoI,EAAAxzH,KAAA+mI,KAAA97I,GACA+U,KAAAknI,UAAAnuG,IAAAy6F,EAAAn7H,KACAm7H,EAAA/B,UAAAzxH,MAGA,IAAA6vB,EAAA7vB,KAAAinI,OACAjnI,KAAAinI,OAAAjnI,KAAAknI,UACAlnI,KAAAknI,UAAAr3G,EACA7vB,KAAAknI,UAAAhyG,QACArF,EAAA7vB,KAAA+mI,KACA/mI,KAAA+mI,KAAA/mI,KAAAgnI,QACAhnI,KAAAgnI,QAAAn3G,EACA7vB,KAAAgnI,QAAAp6I,OAAA,GAOA25I,GAAAjwI,UAAAmtD,OAAA,WAEAzjD,KAAA6mI,KACA7mI,KAAA8mI,OAAA,EACG9mI,KAAAsd,KACHtd,KAAAq7G,MAnKA,SAAA0qB,GACA,IAAA1tI,EAAA0tI,EAAA1tI,GACA,SAAA0gC,GAAA1gC,GAAA,CAEA,GADA0gC,GAAA1gC,IAAA,EACAstI,GAEK,CAIL,IADA,IAAA16I,EAAAojB,GAAAzhB,OAAA,EACA3B,EAAA6K,IAAAuY,GAAApjB,GAAAoN,GAAA0tI,EAAA1tI,IACApN,IAEAojB,GAAAhF,OAAApe,EAAA,IAAA86I,QARA13H,GAAA1iB,KAAAo6I,GAWAL,KACAA,IAAA,EAMAjN,GAAAqN,MA8IAsB,CAAApnI,OAQAumI,GAAAjwI,UAAA+kH,IAAA,WACA,GAAAr7G,KAAA+a,OAAA,CACA,IAAA3kB,EAAA4J,KAAAkD,MACA,GACA9M,IAAA4J,KAAA5J,OAIAwW,EAAAxW,IACA4J,KAAA2mI,KACA,CAEA,IAAAU,EAAArnI,KAAA5J,MAEA,GADA4J,KAAA5J,QACA4J,KAAA4mI,KACA,IACA5mI,KAAAuO,GAAA/X,KAAAwJ,KAAAzE,GAAAnF,EAAAixI,GACS,MAAAnpI,GACTu5H,GAAAv5H,EAAA8B,KAAAzE,GAAA,yBAAAyE,KAAA,qBAGAA,KAAAuO,GAAA/X,KAAAwJ,KAAAzE,GAAAnF,EAAAixI,MAUAd,GAAAjwI,UAAAgxI,SAAA,WACAtnI,KAAA5J,MAAA4J,KAAAkD,MACAlD,KAAA8mI,OAAA,GAMAP,GAAAjwI,UAAAo7H,OAAA,WAEA,IADA,IAAAzmI,EAAA+U,KAAA+mI,KAAAn6I,OACA3B,KACA+U,KAAA+mI,KAAA97I,GAAAymI,UAOA6U,GAAAjwI,UAAAixI,SAAA,WACA,GAAAvnI,KAAA+a,OAAA,CAIA/a,KAAAzE,GAAAkX,mBACAmmB,EAAA54B,KAAAzE,GAAAmrI,UAAA1mI,MAGA,IADA,IAAA/U,EAAA+U,KAAA+mI,KAAAn6I,OACA3B,KACA+U,KAAA+mI,KAAA97I,GAAAwmI,UAAAzxH,MAEAA,KAAA+a,QAAA,IAMA,IAAAysH,IACApxH,YAAA,EACApB,cAAA,EACA9R,IAAAmgE,EACAlrD,IAAAkrD,GAGA,SAAAu4D,GAAAh7H,EAAA6mI,EAAAvxI,GACAsxI,GAAAtkI,IAAA,WACA,OAAAlD,KAAAynI,GAAAvxI,IAEAsxI,GAAArvH,IAAA,SAAA3c,GACAwE,KAAAynI,GAAAvxI,GAAAsF,GAEAzF,OAAAkN,eAAArC,EAAA1K,EAAAsxI,IAGA,SAAAE,GAAAnsI,GACAA,EAAAmrI,aACA,IAAAlgI,EAAAjL,EAAAiH,SACAgE,EAAA3M,OAaA,SAAA0B,EAAAosI,GACA,IAAA7Q,EAAAv7H,EAAAiH,SAAAs0H,cACAj9H,EAAA0B,EAAA47H,UAGAnhI,EAAAuF,EAAAiH,SAAA6+H,aACAuG,GAAArsI,EAAAN,QAEA2sI,GACAjU,IAAA,GAEA,IAAAvqD,EAAA,SAAAlzE,GACAF,EAAArK,KAAAuK,GACA,IAAAE,EAAAwgI,GAAA1gI,EAAAyxI,EAAA7Q,EAAAv7H,GAuBA44H,GAAAt6H,EAAA3D,EAAAE,GAKAF,KAAAqF,GACAqgI,GAAArgI,EAAA,SAAArF,IAIA,QAAAA,KAAAyxI,EAAAv+D,EAAAlzE,GACAy9H,IAAA,GA5DmBkU,CAAAtsI,EAAAiL,EAAA3M,OACnB2M,EAAAgxE,SAoNA,SAAAj8E,EAAAi8E,GACAj8E,EAAAiH,SAAA3I,MACA,QAAA3D,KAAAshF,EAsBAj8E,EAAArF,GAAA,mBAAAshF,EAAAthF,GAAAmtE,EAAA5yD,EAAA+mE,EAAAthF,GAAAqF,GA5OqBusI,CAAAvsI,EAAAiL,EAAAgxE,SACrBhxE,EAAA3c,KA6DA,SAAA0R,GACA,IAAA1R,EAAA0R,EAAAiH,SAAA3Y,KAIA+iI,EAHA/iI,EAAA0R,EAAAwsI,MAAA,mBAAAl+I,EAwCA,SAAAA,EAAA0R,GAEAu2H,KACA,IACA,OAAAjoI,EAAA2M,KAAA+E,KACG,MAAA2C,GAEH,OADAu5H,GAAAv5H,EAAA3C,EAAA,aAEG,QACHw2H,MAhDA/1F,CAAAnyC,EAAA0R,GACA1R,SAEAA,MAQA,IAAAmM,EAAAD,OAAAC,KAAAnM,GACAgQ,EAAA0B,EAAAiH,SAAA3I,MAEA5O,GADAsQ,EAAAiH,SAAAg1E,QACAxhF,EAAApJ,QACA,KAAA3B,KAAA,CACA,IAAAiL,EAAAF,EAAA/K,GACQ,EAQR4O,GAAAuzH,EAAAvzH,EAAA3D,IAMKy5H,EAAAz5H,IACL0lI,GAAArgI,EAAA,QAAArF,GAIAolE,GAAAzxE,GAAA,GAnGAm+I,CAAAzsI,GAEA+/D,GAAA//D,EAAAwsI,UAAyB,GAEzBvhI,EAAAgvH,UAiHA,SAAAj6H,EAAAi6H,GAEA,IAAAyS,EAAA1sI,EAAA2sI,kBAAAnyI,OAAA0R,OAAA,MAEA0gI,EAAAvX,KAEA,QAAA16H,KAAAs/H,EAAA,CACA,IAAA4S,EAAA5S,EAAAt/H,GACAi2H,EAAA,mBAAAic,MAAAllI,IACQ,EAORilI,IAEAF,EAAA/xI,GAAA,IAAAqwI,GACAhrI,EACA4wH,GAAA9oD,EACAA,EACAglE,KAOAnyI,KAAAqF,GACA+sI,GAAA/sI,EAAArF,EAAAkyI,IA/IsBG,CAAAhtI,EAAAiL,EAAAgvH,UACtBhvH,EAAAkqH,OAAAlqH,EAAAkqH,QAAAD,IAyOA,SAAAl1H,EAAAm1H,GACA,QAAAx6H,KAAAw6H,EAAA,CACA,IAAA3vH,EAAA2vH,EAAAx6H,GACA,GAAAP,MAAAyH,QAAA2D,GACA,QAAA9V,EAAA,EAAqBA,EAAA8V,EAAAnU,OAAoB3B,IACzCu9I,GAAAjtI,EAAArF,EAAA6K,EAAA9V,SAGAu9I,GAAAjtI,EAAArF,EAAA6K,IAhPA0nI,CAAAltI,EAAAiL,EAAAkqH,OA6GA,IAAA2X,IAA8BxB,MAAA,GA2C9B,SAAAyB,GACA1nI,EACA1K,EACAkyI,GAEA,IAAAM,GAAA9X,KACA,mBAAAwX,GACAZ,GAAAtkI,IAAAwlI,EACAC,GAAAzyI,GACA0yI,GAAAR,GACAZ,GAAArvH,IAAAkrD,IAEAmkE,GAAAtkI,IAAAklI,EAAAllI,IACAwlI,IAAA,IAAAN,EAAA3tI,MACAkuI,GAAAzyI,GACA0yI,GAAAR,EAAAllI,KACAmgE,EACAmkE,GAAArvH,IAAAiwH,EAAAjwH,KAAAkrD,GAWAttE,OAAAkN,eAAArC,EAAA1K,EAAAsxI,IAGA,SAAAmB,GAAAzyI,GACA,kBACA,IAAA6vI,EAAA/lI,KAAAkoI,mBAAAloI,KAAAkoI,kBAAAhyI,GACA,GAAA6vI,EAOA,OANAA,EAAAe,OACAf,EAAAuB,WAEAjW,GAAAzwH,QACAmlI,EAAArU,SAEAqU,EAAA3vI,OAKA,SAAAwyI,GAAAt6H,GACA,kBACA,OAAAA,EAAA9X,KAAAwJ,YA6CA,SAAAwoI,GACAjtI,EACAirI,EACAzlI,EACA/C,GASA,OAPA4uH,EAAA7rH,KACA/C,EAAA+C,EACAA,aAEA,iBAAAA,IACAA,EAAAxF,EAAAwF,IAEAxF,EAAAstI,OAAArC,EAAAzlI,EAAA/C,GAwDA,IAAA8qI,GAAA,EAgFA,SAAAtF,GAAAvS,GACA,IAAAjzH,EAAAizH,EAAAjzH,QACA,GAAAizH,EAAA8X,MAAA,CACA,IAAAC,EAAAxF,GAAAvS,EAAA8X,OAEA,GAAAC,IADA/X,EAAA+X,aACA,CAGA/X,EAAA+X,eAEA,IAAAC,EAcA,SAAAhY,GACA,IAAAiY,EACAC,EAAAlY,EAAAjzH,QACAorI,EAAAnY,EAAAoY,cACA,QAAAnzI,KAAAizI,EACAA,EAAAjzI,KAAAkzI,EAAAlzI,KACAgzI,IAAsBA,MACtBA,EAAAhzI,GAAAizI,EAAAjzI,IAGA,OAAAgzI,EAxBAI,CAAArY,GAEAgY,GACAzvI,EAAAy3H,EAAAsY,cAAAN,IAEAjrI,EAAAizH,EAAAjzH,QAAAglC,GAAAgmG,EAAA/X,EAAAsY,gBACA57I,OACAqQ,EAAA3C,WAAA2C,EAAArQ,MAAAsjI,IAIA,OAAAjzH,EAgBA,SAAAmE,GAAAnE,GAMAgC,KAAAwpI,MAAAxrI,GA0CA,SAAAyrI,GAAAtnI,GAMAA,EAAA4M,IAAA,EACA,IAAAA,EAAA,EAKA5M,EAAA3I,OAAA,SAAA+vI,GACAA,QACA,IAAAG,EAAA1pI,KACA2pI,EAAAD,EAAA36H,IACA66H,EAAAL,EAAAM,QAAAN,EAAAM,UACA,GAAAD,EAAAD,GACA,OAAAC,EAAAD,GAGA,IAAAh8I,EAAA47I,EAAA57I,MAAA+7I,EAAA1rI,QAAArQ,KAKA,IAAAm8I,EAAA,SAAA9rI,GACAgC,KAAAwpI,MAAAxrI,IA6CA,OA3CA8rI,EAAAxzI,UAAAP,OAAA0R,OAAAiiI,EAAApzI,YACAid,YAAAu2H,EACAA,EAAA/6H,QACA+6H,EAAA9rI,QAAAglC,GACA0mG,EAAA1rI,QACAurI,GAEAO,EAAA,MAAAJ,EAKAI,EAAA9rI,QAAAnE,OAmCA,SAAAkwI,GACA,IAAAlwI,EAAAkwI,EAAA/rI,QAAAnE,MACA,QAAA3D,KAAA2D,EACA+hI,GAAAmO,EAAAzzI,UAAA,SAAAJ,GArCA8zI,CAAAF,GAEAA,EAAA9rI,QAAAw3H,UAuCA,SAAAuU,GACA,IAAAvU,EAAAuU,EAAA/rI,QAAAw3H,SACA,QAAAt/H,KAAAs/H,EACA8S,GAAAyB,EAAAzzI,UAAAJ,EAAAs/H,EAAAt/H,IAzCA+zI,CAAAH,GAIAA,EAAAtwI,OAAAkwI,EAAAlwI,OACAswI,EAAApnI,MAAAgnI,EAAAhnI,MACAonI,EAAAh0H,IAAA4zH,EAAA5zH,IAIA44G,EAAA31H,QAAA,SAAA7D,GACA40I,EAAA50I,GAAAw0I,EAAAx0I,KAGAvH,IACAm8I,EAAA9rI,QAAA3C,WAAA1N,GAAAm8I,GAMAA,EAAAd,aAAAU,EAAA1rI,QACA8rI,EAAAP,gBACAO,EAAAT,cAAA7vI,KAAiCswI,EAAA9rI,SAGjC4rI,EAAAD,GAAAG,EACAA,GAsDA,SAAAI,GAAA1jI,GACA,OAAAA,MAAAyqH,KAAAjzH,QAAArQ,MAAA6Y,EAAA7Z,KAGA,SAAA4Z,GAAAP,EAAArY,GACA,OAAAgI,MAAAyH,QAAA4I,GACAA,EAAAzM,QAAA5L,IAAA,EACG,iBAAAqY,EACHA,EAAAjP,MAAA,KAAAwC,QAAA5L,IAAA,IACGk/H,EAAA7mH,IACHA,EAAAhE,KAAArU,GAMA,SAAAw8I,GAAAC,EAAAn0I,GACA,IAAAwE,EAAA2vI,EAAA3vI,MACAzE,EAAAo0I,EAAAp0I,KACAirI,EAAAmJ,EAAAnJ,OACA,QAAA/qI,KAAAuE,EAAA,CACA,IAAA4vI,EAAA5vI,EAAAvE,GACA,GAAAm0I,EAAA,CACA,IAAA18I,EAAAu8I,GAAAG,EAAAnY,kBACAvkI,IAAAsI,EAAAtI,IACA28I,GAAA7vI,EAAAvE,EAAAF,EAAAirI,KAMA,SAAAqJ,GACA7vI,EACAvE,EACAF,EACAyF,GAEA,IAAA8uI,EAAA9vI,EAAAvE,IACAq0I,GAAA9uI,GAAA8uI,EAAA59I,MAAA8O,EAAA9O,KACA49I,EAAAzuI,kBAAAwmI,WAEA7nI,EAAAvE,GAAA,KACA0iC,EAAA5iC,EAAAE,IA3UA,SAAAiM,GACAA,EAAA7L,UAAAkzI,MAAA,SAAAxrI,GACA,IAAAzC,EAAAyE,KAEAzE,EAAAivI,KAAA1B,KAWAvtI,EAAA24H,QAAA,EAEAl2H,KAAAoiI,aA0CA,SAAA7kI,EAAAyC,GACA,IAAAwI,EAAAjL,EAAAiH,SAAAzM,OAAA0R,OAAAlM,EAAAgY,YAAAvV,SAEA0iI,EAAA1iI,EAAAyE,aACA+D,EAAArM,OAAA6D,EAAA7D,OACAqM,EAAA/D,aAAAi+H,EAEA,IAAA+J,EAAA/J,EAAAxO,iBACA1rH,EAAAswH,UAAA2T,EAAA3T,UACAtwH,EAAA+6H,iBAAAkJ,EAAA1jH,UACAvgB,EAAAw6H,gBAAAyJ,EAAAvwI,SACAsM,EAAAkkI,cAAAD,EAAA99I,IAEAqR,EAAAjE,SACAyM,EAAAzM,OAAAiE,EAAAjE,OACAyM,EAAAg3H,gBAAAx/H,EAAAw/H,iBArDAmN,CAAApvI,EAAAyC,GAEAzC,EAAAiH,SAAAwgC,GACAwgG,GAAAjoI,EAAAgY,aACAvV,MACAzC,GAOAA,EAAAkiI,aAAAliI,EAGAA,EAAAqvI,MAAArvI,EApkCA,SAAAA,GACA,IAAAyC,EAAAzC,EAAAiH,SAGArI,EAAA6D,EAAA7D,OACA,GAAAA,IAAA6D,EAAA+lI,SAAA,CACA,KAAA5pI,EAAAqI,SAAAuhI,UAAA5pI,EAAAc,SACAd,IAAAc,QAEAd,EAAAkoI,UAAA12I,KAAA4P,GAGAA,EAAAN,QAAAd,EACAoB,EAAAsvI,MAAA1wI,IAAA0wI,MAAAtvI,EAEAA,EAAA8mI,aACA9mI,EAAAuvI,SAEAvvI,EAAA4qI,SAAA,KACA5qI,EAAAP,UAAA,KACAO,EAAA4mI,iBAAA,EACA5mI,EAAAqmI,YAAA,EACArmI,EAAA2kI,cAAA,EACA3kI,EAAAkX,mBAAA,EA8iCAs4H,CAAAxvI,GAvtCA,SAAAA,GACAA,EAAAyvI,QAAAj1I,OAAA0R,OAAA,MACAlM,EAAAiqI,eAAA,EAEA,IAAAz+G,EAAAxrB,EAAAiH,SAAA++H,iBACAx6G,GACAy6G,GAAAjmI,EAAAwrB,GAktCAkkH,CAAA1vI,GAn/CA,SAAAA,GACAA,EAAA0lI,OAAA,KACA1lI,EAAA8hI,aAAA,KACA,IAAAr/H,EAAAzC,EAAAiH,SACAk+H,EAAAnlI,EAAAT,OAAAkD,EAAAyE,aACAq9H,EAAAY,KAAA5pG,QACAv7B,EAAA+F,OAAAs5H,GAAA58H,EAAAgjI,gBAAAlB,GACAvkI,EAAA0gI,aAAA1P,EAKAhxH,EAAAqkI,GAAA,SAAAnmI,EAAAC,EAAA4C,EAAA6yB,GAAiC,OAAAiI,GAAA77B,EAAA9B,EAAAC,EAAA4C,EAAA6yB,GAAA,IAGjC5zB,EAAAjB,eAAA,SAAAb,EAAAC,EAAA4C,EAAA6yB,GAA6C,OAAAiI,GAAA77B,EAAA9B,EAAAC,EAAA4C,EAAA6yB,GAAA,IAI7C,IAAA+7G,EAAAxK,KAAA72I,KAWAsqI,GAAA54H,EAAA,SAAA2vI,KAAA/uI,OAAAowH,EAAA,SACA4H,GAAA54H,EAAA,aAAAyC,EAAAujI,kBAAAhV,EAAA,SAq9CA4e,CAAA5vI,GACAsmI,GAAAtmI,EAAA,gBA5gFA,SAAAA,GACA,IAAArQ,EAAAsvI,GAAAj/H,EAAAiH,SAAA+yH,OAAAh6H,GACArQ,IACAyoI,IAAA,GACA59H,OAAAC,KAAA9K,GAAA6N,QAAA,SAAA7C,GAYAi+H,GAAA54H,EAAArF,EAAAhL,EAAAgL,MAGAy9H,IAAA,IA0/EAyX,CAAA7vI,GACAmsI,GAAAnsI,GAvhFA,SAAAA,GACA,IAAAk6H,EAAAl6H,EAAAiH,SAAAizH,QACAA,IACAl6H,EAAAm/H,UAAA,mBAAAjF,EACAA,EAAAj/H,KAAA+E,GACAk6H,GAmhFA4V,CAAA9vI,GACAsmI,GAAAtmI,EAAA,WASAA,EAAAiH,SAAAsK,IACAvR,EAAAilI,OAAAjlI,EAAAiH,SAAAsK,KAsEAw+H,CAAAnpI,IAnLA,SAAAA,GAIA,IAAAopI,GACAroI,IAAA,WAA6B,OAAAlD,KAAA+nI,QAC7ByD,GACAtoI,IAAA,WAA8B,OAAAlD,KAAAm3H,SAa9BphI,OAAAkN,eAAAd,EAAA7L,UAAA,QAAAi1I,GACAx1I,OAAAkN,eAAAd,EAAA7L,UAAA,SAAAk1I,GAEArpI,EAAA7L,UAAAm1I,KAAAtzH,GACAhW,EAAA7L,UAAAo1I,QAAAhX,GAEAvyH,EAAA7L,UAAAuyI,OAAA,SACArC,EACAj4H,EACAvQ,GAGA,GAAA4uH,EAAAr+G,GACA,OAAAi6H,GAFAxoI,KAEAwmI,EAAAj4H,EAAAvQ,IAEAA,SACA4oI,MAAA,EACA,IAAAb,EAAA,IAAAQ,GANAvmI,KAMAwmI,EAAAj4H,EAAAvQ,GACA,GAAAA,EAAAuiC,UACA,IACAhyB,EAAA/X,KATAwJ,KASA+lI,EAAA3vI,OACO,MAAAwY,GACP6oH,GAAA7oH,EAXA5O,KAWA,mCAAA+lI,EAAA,gBAGA,kBACAA,EAAAwB,aAsIAoE,CAAAxpI,IAvwCA,SAAAA,GACA,IAAAypI,EAAA,SACAzpI,EAAA7L,UAAA4sI,IAAA,SAAApjI,EAAAwO,GACA,IAAA/S,EAAAyE,KACA,GAAArK,MAAAyH,QAAA0C,GACA,QAAA7U,EAAA,EAAAme,EAAAtJ,EAAAlT,OAAuC3B,EAAAme,EAAOne,IAC9CsQ,EAAA2nI,IAAApjI,EAAA7U,GAAAqjB,QAGA/S,EAAAyvI,QAAAlrI,KAAAvE,EAAAyvI,QAAAlrI,QAAAnU,KAAA2iB,GAGAs9H,EAAA5pI,KAAAlC,KACAvE,EAAAiqI,eAAA,GAGA,OAAAjqI,GAGA4G,EAAA7L,UAAA6e,MAAA,SAAArV,EAAAwO,GACA,IAAA/S,EAAAyE,KACA,SAAAiB,IACA1F,EAAA4pI,KAAArlI,EAAAmB,GACAqN,EAAA7V,MAAA8C,EAAAwU,WAIA,OAFA9O,EAAAqN,KACA/S,EAAA2nI,IAAApjI,EAAAmB,GACA1F,GAGA4G,EAAA7L,UAAA6uI,KAAA,SAAArlI,EAAAwO,GACA,IAAA/S,EAAAyE,KAEA,IAAA+P,UAAAnjB,OAEA,OADA2O,EAAAyvI,QAAAj1I,OAAA0R,OAAA,MACAlM,EAGA,GAAA5F,MAAAyH,QAAA0C,GAAA,CACA,QAAA+rI,EAAA,EAAAziI,EAAAtJ,EAAAlT,OAAyCi/I,EAAAziI,EAASyiI,IAClDtwI,EAAA4pI,KAAArlI,EAAA+rI,GAAAv9H,GAEA,OAAA/S,EAGA,IASAgT,EATA+D,EAAA/W,EAAAyvI,QAAAlrI,GACA,IAAAwS,EACA,OAAA/W,EAEA,IAAA+S,EAEA,OADA/S,EAAAyvI,QAAAlrI,GAAA,KACAvE,EAKA,IADA,IAAAtQ,EAAAqnB,EAAA1lB,OACA3B,KAEA,IADAsjB,EAAA+D,EAAArnB,MACAqjB,GAAAC,EAAAD,OAAA,CACAgE,EAAAjJ,OAAApe,EAAA,GACA,MAGA,OAAAsQ,GAGA4G,EAAA7L,UAAAmvI,MAAA,SAAA3lI,GACA,IAAAvE,EAAAyE,KAaAsS,EAAA/W,EAAAyvI,QAAAlrI,GACA,GAAAwS,EAAA,CACAA,IAAA1lB,OAAA,EAAAghI,EAAAt7G,KAGA,IAFA,IAAAxC,EAAA89G,EAAA79G,UAAA,GACAuT,EAAA,sBAAAxjB,EAAA,IACA7U,EAAA,EAAAme,EAAAkJ,EAAA1lB,OAAqC3B,EAAAme,EAAOne,IAC5C4sI,GAAAvlH,EAAArnB,GAAAsQ,EAAAuU,EAAAvU,EAAA+nB,GAGA,OAAA/nB,GA+qCAuwI,CAAA3pI,IApoCA,SAAAA,GACAA,EAAA7L,UAAAy1I,QAAA,SAAAlwI,EAAAokI,GACA,IAAA1kI,EAAAyE,KACAgsI,EAAAzwI,EAAA0wI,IACAC,EAAA3wI,EAAA0lI,OACAkL,EAAA7G,GAAA/pI,GACAA,EAAA0lI,OAAAplI,EAQAN,EAAA0wI,IALAC,EAKA3wI,EAAA6wI,UAAAF,EAAArwI,GAHAN,EAAA6wI,UAAA7wI,EAAA0wI,IAAApwI,EAAAokI,GAAA,GAKAkM,IAEAH,IACAA,EAAAK,QAAA,MAEA9wI,EAAA0wI,MACA1wI,EAAA0wI,IAAAI,QAAA9wI,GAGAA,EAAAT,QAAAS,EAAAN,SAAAM,EAAAT,SAAAS,EAAAN,QAAAgmI,SACA1lI,EAAAN,QAAAgxI,IAAA1wI,EAAA0wI,MAMA9pI,EAAA7L,UAAAmrI,aAAA,WACAzhI,KACAmmI,UADAnmI,KAEAmmI,SAAA1iF,UAIAthD,EAAA7L,UAAAgsI,SAAA,WACA,IAAA/mI,EAAAyE,KACA,IAAAzE,EAAAkX,kBAAA,CAGAovH,GAAAtmI,EAAA,iBACAA,EAAAkX,mBAAA,EAEA,IAAAtY,EAAAoB,EAAAN,SACAd,KAAAsY,mBAAAlX,EAAAiH,SAAAuhI,UACAnrG,EAAAz+B,EAAAkoI,UAAA9mI,GAGAA,EAAA4qI,UACA5qI,EAAA4qI,SAAAoB,WAGA,IADA,IAAAt8I,EAAAsQ,EAAAmrI,UAAA95I,OACA3B,KACAsQ,EAAAmrI,UAAAz7I,GAAAs8I,WAIAhsI,EAAAwsI,MAAAzU,QACA/3H,EAAAwsI,MAAAzU,OAAAO,UAGAt4H,EAAA2kI,cAAA,EAEA3kI,EAAA6wI,UAAA7wI,EAAA0lI,OAAA,MAEAY,GAAAtmI,EAAA,aAEAA,EAAA4pI,OAEA5pI,EAAA0wI,MACA1wI,EAAA0wI,IAAAI,QAAA,MAGA9wI,EAAAT,SACAS,EAAAT,OAAAX,OAAA,QAujCAmyI,CAAAnqI,IAviDA,SAAAA,GAEAm8H,GAAAn8H,EAAA7L,WAEA6L,EAAA7L,UAAAyV,UAAA,SAAAuC,GACA,OAAAmqH,GAAAnqH,EAAAtO,OAGAmC,EAAA7L,UAAAi2I,QAAA,WACA,IAiBA1wI,EAjBAN,EAAAyE,KACA/F,EAAAsB,EAAAiH,SACAzI,EAAAE,EAAAF,OACA0I,EAAAxI,EAAAwI,aAEAA,IACAlH,EAAA0gI,aAAAhB,GACAx4H,EAAA5Y,KAAA61I,YACAnkI,EAAA+F,OACA/F,EAAA0gI,eAMA1gI,EAAAT,OAAA2H,EAGA,IAIAmgI,GAAArnI,EACAM,EAAA9B,EAAAvD,KAAA+E,EAAAkiI,aAAAliI,EAAAjB,gBACK,MAAA4D,GACLu5H,GAAAv5H,EAAA3C,EAAA,UAYAM,EAAAN,EAAA0lI,OAEK,QACL2B,GAAA,KAmBA,OAhBAjtI,MAAAyH,QAAAvB,IAAA,IAAAA,EAAAjP,SACAiP,IAAA,IAGAA,aAAAm2H,KAQAn2H,EAAAi3H,MAGAj3H,EAAA1B,OAAAsI,EACA5G,GAo+CA2wI,CAAArqI,IA8MA,IAAAsqI,IAAA7+I,OAAAqX,OAAAtP,OAiFA+2I,IACAC,WA/EAh/I,KAAA,aACAo2I,UAAA,EAEAlqI,OACA+yI,QAAAH,GACAI,QAAAJ,GACA76H,KAAAhkB,OAAA8qE,SAGAj1D,QAAA,WACAzD,KAAAvF,MAAA1E,OAAA0R,OAAA,MACAzH,KAAAhK,SAGAgN,UAAA,WACA,QAAA9M,KAAA8J,KAAAvF,MACA6vI,GAAAtqI,KAAAvF,MAAAvE,EAAA8J,KAAAhK,OAIA82I,QAAA,WACA,IAAA/sI,EAAAC,KAEAA,KAAA6oI,OAAA,mBAAArtI,GACA2uI,GAAApqI,EAAA,SAAApS,GAA0C,OAAA4Y,GAAA/K,EAAA7N,OAE1CqS,KAAA6oI,OAAA,mBAAArtI,GACA2uI,GAAApqI,EAAA,SAAApS,GAA0C,OAAA4Y,GAAA/K,EAAA7N,QAI1CoM,OAAA,WACA,IAAA+gI,EAAA96H,KAAAsB,OAAAxH,QACA+B,EAAAopI,GAAAnK,GACA5I,EAAAr2H,KAAAq2H,iBACA,GAAAA,EAAA,CAEA,IAAAvkI,EAAAu8I,GAAAhY,GAEA0a,EADA5sI,KACA4sI,QACAC,EAFA7sI,KAEA6sI,QACA,GAEAD,KAAAj/I,IAAA4Y,GAAAqmI,EAAAj/I,KAEAk/I,GAAAl/I,GAAA4Y,GAAAsmI,EAAAl/I,GAEA,OAAAkO,EAGA,IACApB,EADAuF,KACAvF,MACAzE,EAFAgK,KAEAhK,KACAE,EAAA,MAAA2F,EAAA3F,IAGAg8H,EAAAjB,KAAAliH,KAAAmjH,EAAAvlI,IAAA,KAAAulI,EAAA,QACAr2H,EAAA3F,IACAuE,EAAAvE,IACA2F,EAAAC,kBAAArB,EAAAvE,GAAA4F,kBAEA88B,EAAA5iC,EAAAE,GACAF,EAAArK,KAAAuK,KAEAuE,EAAAvE,GAAA2F,EACA7F,EAAArK,KAAAuK,GAEA8J,KAAA4R,KAAA5b,EAAApJ,OAAA87B,SAAA1oB,KAAA4R,MACA04H,GAAA7vI,EAAAzE,EAAA,GAAAA,EAAAgK,KAAAihI,SAIAplI,EAAAhS,KAAAkR,WAAA,EAEA,OAAAc,GAAAi/H,KAAA,OAUA,SAAA34H,GAEA,IAAA4qI,GACA7pI,IAAA,WAA+B,OAAAvY,IAQ/BoL,OAAAkN,eAAAd,EAAA,SAAA4qI,GAKA5qI,EAAAU,MACA3J,QACAM,SACAwpC,gBACAlgC,eAAAqxH,IAGAhyH,EAAAgW,OACAhW,EAAA++B,OAAAwzF,GACAvyH,EAAAs2H,YAGAt2H,EAAA6qI,WAAA,SAAA1vI,GAEA,OADAg+D,GAAAh+D,GACAA,GAGA6E,EAAAnE,QAAAjI,OAAA0R,OAAA,MACAinH,EAAA31H,QAAA,SAAA7D,GACAiN,EAAAnE,QAAA9I,EAAA,KAAAa,OAAA0R,OAAA,QAKAtF,EAAAnE,QAAAk4H,MAAA/zH,EAEA3I,EAAA2I,EAAAnE,QAAA3C,WAAAqxI,IA3UA,SAAAvqI,GACAA,EAAA2T,IAAA,SAAAw/D,GACA,IAAA23D,EAAAjtI,KAAAktI,oBAAAltI,KAAAktI,sBACA,GAAAD,EAAA1zI,QAAA+7E,IAAA,EACA,OAAAt1E,KAIA,IAAA8P,EAAA89G,EAAA79G,UAAA,GAQA,OAPAD,EAAAvR,QAAAyB,MACA,mBAAAs1E,EAAApzE,QACAozE,EAAApzE,QAAAzJ,MAAA68E,EAAAxlE,GACK,mBAAAwlE,GACLA,EAAA78E,MAAA,KAAAqX,GAEAm9H,EAAAthJ,KAAA2pF,GACAt1E,MA6TAmtI,CAAAhrI,GAvTA,SAAAA,GACAA,EAAAO,MAAA,SAAAA,GAEA,OADA1C,KAAAhC,QAAAglC,GAAAhjC,KAAAhC,QAAA0E,GACA1C,MAqTAotI,CAAAjrI,GACAsnI,GAAAtnI,GApNA,SAAAA,GAIAusH,EAAA31H,QAAA,SAAA7D,GACAiN,EAAAjN,GAAA,SACAmD,EACAg1I,GAEA,OAAAA,GAOA,cAAAn4I,GAAA03H,EAAAygB,KACAA,EAAA1/I,KAAA0/I,EAAA1/I,MAAA0K,EACAg1I,EAAArtI,KAAAhC,QAAAk4H,MAAA18H,OAAA6zI,IAEA,cAAAn4I,GAAA,mBAAAm4I,IACAA,GAAwB58H,KAAA48H,EAAA5pF,OAAA4pF,IAExBrtI,KAAAhC,QAAA9I,EAAA,KAAAmD,GAAAg1I,EACAA,GAdArtI,KAAAhC,QAAA9I,EAAA,KAAAmD,MA2MAi1I,CAAAnrI,GAGAorI,CAAAprI,IAEApM,OAAAkN,eAAAd,GAAA7L,UAAA,aACA4M,IAAA0tH,KAGA76H,OAAAkN,eAAAd,GAAA7L,UAAA,eACA4M,IAAA,WAEA,OAAAlD,KAAAlF,QAAAkF,KAAAlF,OAAA0yI,cAKAz3I,OAAAkN,eAAAd,GAAA,2BACA/L,MAAA+oI,KAGAh9H,GAAAhW,QAAA,SAMA,IAAAgjI,GAAAnC,EAAA,eAGAygB,GAAAzgB,EAAA,yCACAuC,GAAA,SAAA5iI,EAAAuI,EAAA4yB,GACA,MACA,UAAAA,GAAA2lH,GAAA9gJ,IAAA,WAAAuI,GACA,aAAA4yB,GAAA,WAAAn7B,GACA,YAAAm7B,GAAA,UAAAn7B,GACA,UAAAm7B,GAAA,UAAAn7B,GAIA+gJ,GAAA1gB,EAAA,wCAEA2gB,GAAA3gB,EAAA,sCAEA4gB,GAAA,SAAA13I,EAAAE,GACA,OAAAy3I,GAAAz3I,IAAA,UAAAA,EACA,QAEA,oBAAAF,GAAAy3I,GAAAv3I,GACAA,EACA,QAGA03I,GAAA9gB,EACA,wYAQA+gB,GAAA,+BAEAC,GAAA,SAAArgJ,GACA,YAAAA,EAAAqW,OAAA,cAAArW,EAAA4I,MAAA,MAGA03I,GAAA,SAAAtgJ,GACA,OAAAqgJ,GAAArgJ,KAAA4I,MAAA,EAAA5I,EAAAf,QAAA,IAGAihJ,GAAA,SAAAryI,GACA,aAAAA,IAAA,IAAAA,GAKA,SAAA0yI,GAAAryI,GAIA,IAHA,IAAAhS,EAAAgS,EAAAhS,KACA8vC,EAAA99B,EACAsyI,EAAAtyI,EACAwG,EAAA8rI,EAAAryI,qBACAqyI,IAAAryI,kBAAAmlI,SACAkN,EAAAtkJ,OACAA,EAAAukJ,GAAAD,EAAAtkJ,SAGA,KAAAwY,EAAAs3B,IAAAx/B,SACAw/B,KAAA9vC,OACAA,EAAAukJ,GAAAvkJ,EAAA8vC,EAAA9vC,OAGA,OAYA,SACAwkJ,EACAC,GAEA,GAAAjsI,EAAAgsI,IAAAhsI,EAAAisI,GACA,OAAAp2I,GAAAm2I,EAAAE,GAAAD,IAGA,SApBAE,CAAA3kJ,EAAAwkJ,YAAAxkJ,EAAAsX,OAGA,SAAAitI,GAAA/sI,EAAAlH,GACA,OACAk0I,YAAAn2I,GAAAmJ,EAAAgtI,YAAAl0I,EAAAk0I,aACAltI,MAAAkB,EAAAhB,EAAAF,QACAE,EAAAF,MAAAhH,EAAAgH,OACAhH,EAAAgH,OAeA,SAAAjJ,GAAAuB,EAAAC,GACA,OAAAD,EAAAC,EAAAD,EAAA,IAAAC,EAAAD,EAAAC,GAAA,GAGA,SAAA60I,GAAAn4I,GACA,OAAAT,MAAAyH,QAAAhH,GAaA,SAAAA,GAGA,IAFA,IACAq4I,EADAzxI,EAAA,GAEA/R,EAAA,EAAAme,EAAAhT,EAAAxJ,OAAmC3B,EAAAme,EAAOne,IAC1CoX,EAAAosI,EAAAF,GAAAn4I,EAAAnL,MAAA,KAAAwjJ,IACAzxI,IAAgBA,GAAA,KAChBA,GAAAyxI,GAGA,OAAAzxI,EArBA0xI,CAAAt4I,GAEAwW,EAAAxW,GAsBA,SAAAA,GACA,IAAA4G,EAAA,GACA,QAAA9G,KAAAE,EACAA,EAAAF,KACA8G,IAAgBA,GAAA,KAChBA,GAAA9G,GAGA,OAAA8G,EA7BA2xI,CAAAv4I,GAEA,iBAAAA,EACAA,EAGA,GA4BA,IAAAw4I,IACA3sF,IAAA,6BACA4sF,KAAA,sCAGAC,GAAA9hB,EACA,snBAeA+hB,GAAA/hB,EACA,kNAGA,GAKAkC,GAAA,SAAAviI,GACA,OAAAmiJ,GAAAniJ,IAAAoiJ,GAAApiJ,IAGA,SAAA0iI,GAAA1iI,GACA,OAAAoiJ,GAAApiJ,GACA,MAIA,SAAAA,EACA,YADA,EAKA,IAAAqiJ,GAAAj5I,OAAA0R,OAAA,MA0BA,IAAAwnI,GAAAjiB,EAAA,6CAOA,SAAAjwH,GAAA+P,GACA,oBAAAA,EAAA,CACA,IAAAylC,EAAAxlC,SAAAC,cAAAF,GACA,OAAAylC,GAIAxlC,SAAAqqB,cAAA,OAIA,OAAAtqB,EA8DA,IAAAoiI,GAAAn5I,OAAA0I,QACA24B,cAzDA,SAAAH,EAAAp7B,GACA,IAAAo2H,EAAAllH,SAAAqqB,cAAAH,GACA,iBAAAA,EACAg7F,GAGAp2H,EAAAhS,MAAAgS,EAAAhS,KAAAsS,YAAAF,IAAAJ,EAAAhS,KAAAsS,MAAAgzI,UACAld,EAAAz6F,aAAA,uBAEAy6F,IAiDAmd,gBA9CA,SAAAC,EAAAp4G,GACA,OAAAlqB,SAAAqiI,gBAAAR,GAAAS,GAAAp4G,IA8CAkE,eA3CA,SAAAzR,GACA,OAAA3c,SAAAouB,eAAAzR,IA2CA4lH,cAxCA,SAAA5lH,GACA,OAAA3c,SAAAuiI,cAAA5lH,IAwCAqO,aArCA,SAAA4B,EAAA41G,EAAAC,GACA71G,EAAA5B,aAAAw3G,EAAAC,IAqCAv0G,YAlCA,SAAAG,EAAA/5B,GACA+5B,EAAAH,YAAA55B,IAkCA22B,YA/BA,SAAAoD,EAAA/5B,GACA+5B,EAAApD,YAAA32B,IA+BAs4B,WA5BA,SAAAyB,GACA,OAAAA,EAAAzB,YA4BAkW,YAzBA,SAAAzU,GACA,OAAAA,EAAAyU,aAyBA5Y,QAtBA,SAAAmE,GACA,OAAAA,EAAAnE,SAsBA8I,eAnBA,SAAA3E,EAAA1R,GACA0R,EAAA3D,YAAA/N,GAmBA+lH,cAhBA,SAAAr0G,EAAAs0G,GACAt0G,EAAA5D,aAAAk4G,EAAA,OAoBAz1I,IACAwN,OAAA,SAAAzN,EAAA6B,GACA8zI,GAAA9zI,IAEA4nD,OAAA,SAAAg9E,EAAA5kI,GACA4kI,EAAA52I,KAAAoQ,MAAA4B,EAAAhS,KAAAoQ,MACA01I,GAAAlP,GAAA,GACAkP,GAAA9zI,KAGAmmI,QAAA,SAAAnmI,GACA8zI,GAAA9zI,GAAA,KAIA,SAAA8zI,GAAA9zI,EAAA+zI,GACA,IAAA15I,EAAA2F,EAAAhS,KAAAoQ,IACA,GAAAoI,EAAAnM,GAAA,CAEA,IAAAqF,EAAAM,EAAAi7B,QACA78B,EAAA4B,EAAAC,mBAAAD,EAAAo2H,IACA4d,EAAAt0I,EAAAuvI,MACA8E,EACAj6I,MAAAyH,QAAAyyI,EAAA35I,IACA0iC,EAAAi3G,EAAA35I,GAAA+D,GACK41I,EAAA35I,KAAA+D,IACL41I,EAAA35I,QAAA+F,GAGAJ,EAAAhS,KAAAimJ,SACAn6I,MAAAyH,QAAAyyI,EAAA35I,IAEO25I,EAAA35I,GAAAqD,QAAAU,GAAA,GAEP41I,EAAA35I,GAAAvK,KAAAsO,GAHA41I,EAAA35I,IAAA+D,GAMA41I,EAAA35I,GAAA+D,GAiBA,IAAA81I,GAAA,IAAA/d,GAAA,UAEAx7C,IAAA,iDAEA,SAAAw5D,GAAAv2I,EAAAC,GACA,OACAD,EAAAvD,MAAAwD,EAAAxD,MAEAuD,EAAA9M,MAAA+M,EAAA/M,KACA8M,EAAAg5H,YAAA/4H,EAAA+4H,WACApwH,EAAA5I,EAAA5P,QAAAwY,EAAA3I,EAAA7P,OAWA,SAAA4P,EAAAC,GACA,aAAAD,EAAA9M,IAA0B,SAC1B,IAAA1B,EACAglJ,EAAA5tI,EAAApX,EAAAwO,EAAA5P,OAAAwY,EAAApX,IAAAkR,QAAAlR,EAAAiK,KACAg7I,EAAA7tI,EAAApX,EAAAyO,EAAA7P,OAAAwY,EAAApX,IAAAkR,QAAAlR,EAAAiK,KACA,OAAA+6I,IAAAC,GAAAjB,GAAAgB,IAAAhB,GAAAiB,GAfAC,CAAA12I,EAAAC,IAEA+yH,EAAAhzH,EAAAo5H,qBACAp5H,EAAA04H,eAAAz4H,EAAAy4H,cACA3F,EAAA9yH,EAAAy4H,aAAAvjH,QAcA,SAAAwhI,GAAAl2I,EAAAm2I,EAAAC,GACA,IAAArlJ,EAAAiL,EACAL,KACA,IAAA5K,EAAAolJ,EAAoBplJ,GAAAqlJ,IAAarlJ,EAEjCoX,EADAnM,EAAAgE,EAAAjP,GAAAiL,OACqBL,EAAAK,GAAAjL,GAErB,OAAA4K,EAqtBA,IAAAkgI,IACAtuH,OAAA8oI,GACA9sF,OAAA8sF,GACAvO,QAAA,SAAAnmI,GACA00I,GAAA10I,EAAAk0I,MAIA,SAAAQ,GAAA9P,EAAA5kI,IACA4kI,EAAA52I,KAAAksI,YAAAl6H,EAAAhS,KAAAksI,aAKA,SAAA0K,EAAA5kI,GACA,IAQA3F,EAAAs6I,EAAArpF,EARAspF,EAAAhQ,IAAAsP,GACAW,EAAA70I,IAAAk0I,GACAY,EAAAC,GAAAnQ,EAAA52I,KAAAksI,WAAA0K,EAAA3pG,SACA+5G,EAAAD,GAAA/0I,EAAAhS,KAAAksI,WAAAl6H,EAAAi7B,SAEAg6G,KACAC,KAGA,IAAA76I,KAAA26I,EACAL,EAAAG,EAAAz6I,GACAixD,EAAA0pF,EAAA36I,GACAs6I,GAQArpF,EAAAkgF,SAAAmJ,EAAAp6I,MACA+wD,EAAA6pF,OAAAR,EAAA/vF,IACAwwF,GAAA9pF,EAAA,SAAAtrD,EAAA4kI,GACAt5E,EAAAr4C,KAAAq4C,EAAAr4C,IAAAoiI,kBACAH,EAAAplJ,KAAAw7D,KAVA8pF,GAAA9pF,EAAA,OAAAtrD,EAAA4kI,GACAt5E,EAAAr4C,KAAAq4C,EAAAr4C,IAAAskH,UACA0d,EAAAnlJ,KAAAw7D,IAaA,GAAA2pF,EAAAlkJ,OAAA,CACA,IAAAukJ,EAAA,WACA,QAAAlmJ,EAAA,EAAqBA,EAAA6lJ,EAAAlkJ,OAA2B3B,IAChDgmJ,GAAAH,EAAA7lJ,GAAA,WAAA4Q,EAAA4kI,IAGAgQ,EACA7W,GAAA/9H,EAAA,SAAAs1I,GAEAA,IAIAJ,EAAAnkJ,QACAgtI,GAAA/9H,EAAA,uBACA,QAAA5Q,EAAA,EAAqBA,EAAA8lJ,EAAAnkJ,OAA8B3B,IACnDgmJ,GAAAF,EAAA9lJ,GAAA,mBAAA4Q,EAAA4kI,KAKA,IAAAgQ,EACA,IAAAv6I,KAAAy6I,EACAE,EAAA36I,IAEA+6I,GAAAN,EAAAz6I,GAAA,SAAAuqI,IAAAiQ,GA3DA3E,CAAAtL,EAAA5kI,GAiEA,IAAAu1I,GAAAr7I,OAAA0R,OAAA,MAEA,SAAAmpI,GACA9a,EACAv6H,GAEA,IAKAtQ,EAAAk8D,EALAnqD,EAAAjH,OAAA0R,OAAA,MACA,IAAAquH,EAEA,OAAA94H,EAGA,IAAA/R,EAAA,EAAaA,EAAA6qI,EAAAlpI,OAAiB3B,KAC9Bk8D,EAAA2uE,EAAA7qI,IACAomJ,YAEAlqF,EAAAkqF,UAAAD,IAEAp0I,EAAAs0I,GAAAnqF,MACAA,EAAAr4C,IAAAynH,GAAAh7H,EAAAiH,SAAA,aAAA2kD,EAAAx5D,MAGA,OAAAqP,EAGA,SAAAs0I,GAAAnqF,GACA,OAAAA,EAAAoqF,SAAApqF,EAAA,SAAApxD,OAAAC,KAAAmxD,EAAAkqF,eAA4Ez7I,KAAA,KAG5E,SAAAq7I,GAAA9pF,EAAAxrD,EAAAE,EAAA4kI,EAAAiQ,GACA,IAAApiI,EAAA64C,EAAAr4C,KAAAq4C,EAAAr4C,IAAAnT,GACA,GAAA2S,EACA,IACAA,EAAAzS,EAAAo2H,IAAA9qE,EAAAtrD,EAAA4kI,EAAAiQ,GACK,MAAAxyI,GACLu5H,GAAAv5H,EAAArC,EAAAi7B,QAAA,aAAAqwB,EAAA,SAAAxrD,EAAA,UAKA,IAAA61I,IACAv3I,GACA87H,IAKA,SAAA0b,GAAAhR,EAAA5kI,GACA,IAAA2K,EAAA3K,EAAAq2H,iBACA,KAAA7vH,EAAAmE,KAAA,IAAAA,EAAAyqH,KAAAjzH,QAAA0zI,cAGAllB,EAAAiU,EAAA52I,KAAAsS,QAAAqwH,EAAA3wH,EAAAhS,KAAAsS,QAAA,CAGA,IAAAjG,EAAAwhI,EACAzF,EAAAp2H,EAAAo2H,IACA0f,EAAAlR,EAAA52I,KAAAsS,UACAA,EAAAN,EAAAhS,KAAAsS,UAMA,IAAAjG,KAJAmM,EAAAlG,EAAAm3H,UACAn3H,EAAAN,EAAAhS,KAAAsS,MAAA3C,KAAwC2C,IAGxCA,EACAu7H,EAAAv7H,EAAAjG,GACAy7I,EAAAz7I,KACAwhI,GACAka,GAAA3f,EAAA/7H,EAAAwhI,GASA,IAAAxhI,KAHAk6H,GAAAE,IAAAn0H,EAAA/F,QAAAu7I,EAAAv7I,OACAw7I,GAAA3f,EAAA,QAAA91H,EAAA/F,OAEAu7I,EACAnlB,EAAArwH,EAAAjG,MACA83I,GAAA93I,GACA+7H,EAAA4f,kBAAA9D,GAAAE,GAAA/3I,IACOw3I,GAAAx3I,IACP+7H,EAAA/4F,gBAAAhjC,KAMA,SAAA07I,GAAA9kI,EAAA5W,EAAAE,GACA0W,EAAAmqB,QAAA19B,QAAA,QACAu4I,GAAAhlI,EAAA5W,EAAAE,GACG03I,GAAA53I,GAGH23I,GAAAz3I,GACA0W,EAAAosB,gBAAAhjC,IAIAE,EAAA,oBAAAF,GAAA,UAAA4W,EAAAmqB,QACA,OACA/gC,EACA4W,EAAA0qB,aAAAthC,EAAAE,IAEGs3I,GAAAx3I,GACH4W,EAAA0qB,aAAAthC,EAAA03I,GAAA13I,EAAAE,IACG43I,GAAA93I,GACH23I,GAAAz3I,GACA0W,EAAA+kI,kBAAA9D,GAAAE,GAAA/3I,IAEA4W,EAAAilI,eAAAhE,GAAA73I,EAAAE,GAGA07I,GAAAhlI,EAAA5W,EAAAE,GAIA,SAAA07I,GAAAhlI,EAAA5W,EAAAE,GACA,GAAAy3I,GAAAz3I,GACA0W,EAAAosB,gBAAAhjC,OACG,CAKH,GACAk6H,IAAAC,GACA,aAAAvjH,EAAAmqB,SACA,gBAAA/gC,GAAA,KAAAE,IAAA0W,EAAAklI,OACA,CACA,IAAAC,EAAA,SAAA/zI,GACAA,EAAAq/B,2BACAzwB,EAAAwvB,oBAAA,QAAA21G,IAEAnlI,EAAAzB,iBAAA,QAAA4mI,GAEAnlI,EAAAklI,QAAA,EAEAllI,EAAA0qB,aAAAthC,EAAAE,IAIA,IAAA+F,IACAsL,OAAAgqI,GACAhuF,OAAAguF,IAKA,SAAAS,GAAAzR,EAAA5kI,GACA,IAAAiR,EAAAjR,EAAAo2H,IACApoI,EAAAgS,EAAAhS,KACAsoJ,EAAA1R,EAAA52I,KACA,KACA2iI,EAAA3iI,EAAAwkJ,cACA7hB,EAAA3iI,EAAAsX,SACAqrH,EAAA2lB,IACA3lB,EAAA2lB,EAAA9D,cACA7hB,EAAA2lB,EAAAhxI,SALA,CAYA,IAAAixI,EAAAlE,GAAAryI,GAGAw2I,EAAAvlI,EAAAwlI,mBACAjwI,EAAAgwI,KACAD,EAAAl6I,GAAAk6I,EAAA7D,GAAA8D,KAIAD,IAAAtlI,EAAAylI,aACAzlI,EAAA0qB,aAAA,QAAA46G,GACAtlI,EAAAylI,WAAAH,IAIA,IA4YArnI,GAAArO,GAAA81I,GAAAC,GAAAC,GAAAC,GA5YAC,IACAnrI,OAAAyqI,GACAzuF,OAAAyuF,IAKAW,GAAA,gBAEA,SAAAC,GAAAC,GACA,IAQAz2I,EAAAwW,EAAA7nB,EAAA6+B,EAAAkpH,EARAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAGA,IAAAvoJ,EAAA,EAAaA,EAAA8nJ,EAAAnmJ,OAAgB3B,IAG7B,GAFA6nB,EAAAxW,EACAA,EAAAy2I,EAAAx2I,WAAAtR,GACAgoJ,EACA,KAAA32I,GAAA,KAAAwW,IAAwCmgI,GAAA,QACnC,GAAAC,EACL,KAAA52I,GAAA,KAAAwW,IAAwCogI,GAAA,QACnC,GAAAC,EACL,KAAA72I,GAAA,KAAAwW,IAAwCqgI,GAAA,QACnC,GAAAC,EACL,KAAA92I,GAAA,KAAAwW,IAAwCsgI,GAAA,QACnC,GACL,MAAA92I,GACA,MAAAy2I,EAAAx2I,WAAAtR,EAAA,IACA,MAAA8nJ,EAAAx2I,WAAAtR,EAAA,IACAooJ,GAAAC,GAAAC,EASK,CACL,OAAAj3I,GACA,QAAA42I,GAAA,EAAmC,MACnC,QAAAD,GAAA,EAAmC,MACnC,QAAAE,GAAA,EAA2C,MAC3C,QAAAI,IAA2B,MAC3B,QAAAA,IAA2B,MAC3B,QAAAD,IAA4B,MAC5B,QAAAA,IAA4B,MAC5B,SAAAD,IAA2B,MAC3B,SAAAA,IAEA,QAAA/2I,EAAA,CAIA,IAHA,IAAAsK,EAAA3b,EAAA,EACAooC,OAAA,EAEczsB,GAAA,GAEd,OADAysB,EAAA0/G,EAAA/uI,OAAA4C,IADsBA,KAItBysB,GAAAw/G,GAAA7wI,KAAAqxB,KACA+/G,GAAA,cA5BAn3I,IAAA6tB,GAEA0pH,EAAAvoJ,EAAA,EACA6+B,EAAAipH,EAAAx8I,MAAA,EAAAtL,GAAAyM,QAEA+7I,IAmCA,SAAAA,KACAT,WAAArnJ,KAAAonJ,EAAAx8I,MAAAi9I,EAAAvoJ,GAAAyM,QACA87I,EAAAvoJ,EAAA,EAGA,QAXAgR,IAAA6tB,EACAA,EAAAipH,EAAAx8I,MAAA,EAAAtL,GAAAyM,OACG,IAAA87I,GACHC,IAQAT,EACA,IAAA/nJ,EAAA,EAAeA,EAAA+nJ,EAAApmJ,OAAoB3B,IACnC6+B,EAAA4pH,GAAA5pH,EAAAkpH,EAAA/nJ,IAIA,OAAA6+B,EAGA,SAAA4pH,GAAAX,EAAA98I,GACA,IAAAhL,EAAAgL,EAAAsD,QAAA,KACA,GAAAtO,EAAA,EAEA,aAAAgL,EAAA,MAAA88I,EAAA,IAEA,IAAAplJ,EAAAsI,EAAAM,MAAA,EAAAtL,GACA6kB,EAAA7Z,EAAAM,MAAAtL,EAAA,GACA,aAAA0C,EAAA,MAAAolJ,GAAA,MAAAjjI,EAAA,IAAAA,KASA,SAAA6jI,GAAAlkI,EAAA8vE,GACA5tE,QAAA/C,MAAA,mBAAAa,GAIA,SAAAmkI,GACAC,EACA39I,GAEA,OAAA29I,EACAA,EAAAh+I,IAAA,SAAAyP,GAAgC,OAAAA,EAAApP,KAAiBD,OAAA,SAAA+D,GAAuB,OAAAA,OAIxE,SAAA85I,GAAAhnI,EAAAnf,EAAAyI,EAAAmpF,EAAAw0D,IACAjnI,EAAAjT,QAAAiT,EAAAjT,WAAAlO,KAAAqoJ,IAAmDrmJ,OAAAyI,QAAA29I,WAA6Cx0D,IAChGzyE,EAAAmnI,OAAA,EAGA,SAAAC,GAAApnI,EAAAnf,EAAAyI,EAAAmpF,EAAAw0D,IACAA,EACAjnI,EAAAqnI,eAAArnI,EAAAqnI,iBACArnI,EAAA3Q,QAAA2Q,EAAA3Q,WACAxQ,KAAAqoJ,IAA2BrmJ,OAAAyI,QAAA29I,WAA6Cx0D,IACxEzyE,EAAAmnI,OAAA,EAIA,SAAAG,GAAAtnI,EAAAnf,EAAAyI,EAAAmpF,GACAzyE,EAAAunI,SAAA1mJ,GAAAyI,EACA0W,EAAAwnI,UAAA3oJ,KAAAqoJ,IAAkCrmJ,OAAAyI,SAA2BmpF,IAG7D,SAAAg1D,GACAznI,EACAnf,EACA4jJ,EACAn7I,EACAqqD,EACA+zF,EACAnD,EACA9xD,IAEAzyE,EAAAipH,aAAAjpH,EAAAipH,gBAAApqI,KAAAqoJ,IACArmJ,OACA4jJ,UACAn7I,QACAqqD,MACA+zF,eACAnD,aACG9xD,IACHzyE,EAAAmnI,OAAA,EAGA,SAAAQ,GAAApW,EAAA1wI,EAAAomJ,GACA,OAAAA,EACA,MAAApmJ,EAAA,KAAA0wI,EAAA,KACAA,EAAA1wI,EAGA,SAAA+mJ,GACA5nI,EACAnf,EACAyI,EACAi7I,EACAsD,EACAz7I,EACAqmF,EACAw0D,GAiDA,IAAAa,GA/CAvD,KAAA9kB,GAiBA3/D,MACAmnF,EACApmJ,EAAA,IAAAA,EAAA,8BAAAA,EAAA,IACK,UAAAA,IACLA,EAAA,qBACA0jJ,EAAAzkF,OAEGykF,EAAAp3C,SACH85C,EACApmJ,EAAA,IAAAA,EAAA,0BAAAA,EAAA,IACK,UAAAA,IACLA,EAAA,YAKA0jJ,EAAA5rI,iBACA4rI,EAAA5rI,QACA9X,EAAA8mJ,GAAA,IAAA9mJ,EAAAomJ,IAEA1C,EAAAriI,cACAqiI,EAAAriI,KACArhB,EAAA8mJ,GAAA,IAAA9mJ,EAAAomJ,IAGA1C,EAAAlzG,iBACAkzG,EAAAlzG,QACAxwC,EAAA8mJ,GAAA,IAAA9mJ,EAAAomJ,IAIA1C,EAAAwD,eACAxD,EAAAwD,OACAD,EAAA9nI,EAAAgoI,eAAAhoI,EAAAgoI,kBAEAF,EAAA9nI,EAAA8nI,SAAA9nI,EAAA8nI,WAGA,IAAAG,EAAAf,IAAiC59I,QAAAsB,OAAAq8I,WAAwCx0D,GACzE8xD,IAAA9kB,IACAwoB,EAAA1D,aAGA,IAAAh1G,EAAAu4G,EAAAjnJ,GAEAgI,MAAAyH,QAAAi/B,GACAs4G,EAAAt4G,EAAA99B,QAAAw2I,GAAA14G,EAAA1wC,KAAAopJ,GAEAH,EAAAjnJ,GADG0uC,EACHs4G,GAAAI,EAAA14G,MAAA04G,GAEAA,EAGAjoI,EAAAmnI,OAAA,EAGA,SAAAe,GACAloI,EACAnf,GAEA,OAAAmf,EAAAmoI,YAAA,IAAAtnJ,IACAmf,EAAAmoI,YAAA,UAAAtnJ,IACAmf,EAAAmoI,YAAAtnJ,GAGA,SAAAunJ,GACApoI,EACAnf,EACAwnJ,GAEA,IAAAC,EACAC,GAAAvoI,EAAA,IAAAnf,IACA0nJ,GAAAvoI,EAAA,UAAAnf,GACA,SAAAynJ,EACA,OAAAtC,GAAAsC,GACG,QAAAD,EAAA,CACH,IAAAG,EAAAD,GAAAvoI,EAAAnf,GACA,SAAA2nJ,EACA,OAAAz+I,KAAAC,UAAAw+I,IASA,SAAAD,GACAvoI,EACAnf,EACA4nJ,GAEA,IAAA/5I,EACA,UAAAA,EAAAsR,EAAAunI,SAAA1mJ,IAEA,IADA,IAAAunB,EAAApI,EAAAwnI,UACArpJ,EAAA,EAAAme,EAAA8L,EAAAtoB,OAAoC3B,EAAAme,EAAOne,IAC3C,GAAAiqB,EAAAjqB,GAAA0C,SAAA,CACAunB,EAAA7L,OAAApe,EAAA,GACA,MAOA,OAHAsqJ,UACAzoI,EAAAunI,SAAA1mJ,GAEA6N,EAGA,SAAAg6I,GACA1oI,EACAnf,GAGA,IADA,IAAAunB,EAAApI,EAAAwnI,UACArpJ,EAAA,EAAAme,EAAA8L,EAAAtoB,OAAkC3B,EAAAme,EAAOne,IAAA,CACzC,IAAA68B,EAAA5S,EAAAjqB,GACA,GAAA0C,EAAAqU,KAAA8lB,EAAAn6B,MAEA,OADAunB,EAAA7L,OAAApe,EAAA,GACA68B,GAKA,SAAAksH,GACAv5H,EACA8kE,GAUA,OARAA,IACA,MAAAA,EAAAhyD,QACA9S,EAAA8S,MAAAgyD,EAAAhyD,OAEA,MAAAgyD,EAAApqF,MACAslB,EAAAtlB,IAAAoqF,EAAApqF,MAGAslB,EAQA,SAAAg7H,GACA3oI,EACA1W,EACAi7I,GAEA,IAAAp3I,EAAAo3I,MACA1oH,EAAA1uB,EAAA0uB,OAIA+sH,EADA,MAFAz7I,EAAAvC,OAKAg+I,EACA,8CAIA/sH,IACA+sH,EAAA,MAAAA,EAAA,KAEA,IAAAC,EAAAC,GAAAx/I,EAAAs/I,GAEA5oI,EAAA22H,OACArtI,MAAA,IAAAA,EAAA,IACA0zB,WAAAjzB,KAAAC,UAAAV,GACAolB,SAAA,mBAAwDm6H,EAAA,KAOxD,SAAAC,GACAx/I,EACAu/I,GAEA,IAAA34I,EA2BA,SAAAxB,GAMA,GAHAA,IAAA9D,OACAqT,GAAAvP,EAAA5O,OAEA4O,EAAAjC,QAAA,QAAAiC,EAAAq6I,YAAA,KAAA9qI,GAAA,EAEA,OADA0nI,GAAAj3I,EAAAq6I,YAAA,OACA,GAEA9C,IAAAv3I,EAAAjF,MAAA,EAAAk8I,IACAv8I,IAAA,IAAAsF,EAAAjF,MAAAk8I,GAAA,SAIAM,IAAAv3I,EACAtF,IAAA,MAKAwG,GAAAlB,EACAi3I,GAAAC,GAAAC,GAAA,EAEA,MAAAmD,MAGAC,GAFAvD,GAAAhtI,MAGAwwI,GAAAxD,IACK,KAAAA,IACLyD,GAAAzD,IAIA,OACAO,IAAAv3I,EAAAjF,MAAA,EAAAm8I,IACAx8I,IAAAsF,EAAAjF,MAAAm8I,GAAA,EAAAC,KA/DAuD,CAAA9/I,GACA,cAAA4G,EAAA9G,IACAE,EAAA,IAAAu/I,EAEA,QAAA34I,EAAA,SAAAA,EAAA,SAAA24I,EAAA,IA+DA,SAAAnwI,KACA,OAAA9I,GAAAH,aAAAk2I,IAGA,SAAAqD,KACA,OAAArD,IAAA1nI,GAGA,SAAAgrI,GAAAvD,GACA,YAAAA,GAAA,KAAAA,EAGA,SAAAyD,GAAAzD,GACA,IAAA2D,EAAA,EAEA,IADAzD,GAAAD,IACAqD,MAEA,GAAAC,GADAvD,EAAAhtI,MAEAwwI,GAAAxD,QAKA,GAFA,KAAAA,GAAuB2D,IACvB,KAAA3D,GAAuB2D,IACvB,IAAAA,EAAA,CACAxD,GAAAF,GACA,OAKA,SAAAuD,GAAAxD,GAEA,IADA,IAAA4D,EAAA5D,GACAsD,OACAtD,EAAAhtI,QACA4wI,KAYA,IAgMAC,GAhMAC,GAAA,MACAC,GAAA,MAiMA,SAAAC,GAAA12I,EAAAiB,EAAA0E,GACA,IAAA2/H,EAAAiR,GACA,gBAAAhR,IAEA,OADAtkI,EAAAtI,MAAA,KAAAsX,YAEA0mI,GAAA32I,EAAAulI,EAAA5/H,EAAA2/H,IAQA,IAAAsR,GAAAze,MAAAzH,IAAA93D,OAAA83D,GAAA,SAEA,SAAAmmB,GACAhpJ,EACAoT,EACA0E,EACA04B,GAQA,GAAAu4G,GAAA,CACA,IAAAE,EAAAhR,GACA/uD,EAAA91E,EACAA,EAAA81E,EAAAggE,SAAA,SAAA34I,GACA,GAIAA,EAAA0C,SAAA1C,EAAA4D,eAEA5D,EAAAi4F,WAAAygD,GAIA14I,EAAAi4F,WAAA,GAIAj4F,EAAA0C,OAAA49B,gBAAAzxB,SAEA,OAAA8pE,EAAAp+E,MAAAuH,KAAA+P,YAIAsmI,GAAAhrI,iBACA1d,EACAoT,EACA4vH,IACSlrH,UAAA04B,WACT14B,GAIA,SAAAgxI,GACA9oJ,EACAoT,EACA0E,EACA2/H,IAEAA,GAAAiR,IAAA/5G,oBACA3uC,EACAoT,EAAA81I,UAAA91I,EACA0E,GAIA,SAAAqxI,GAAArW,EAAA5kI,GACA,IAAA2wH,EAAAiU,EAAA52I,KAAAoX,MAAAurH,EAAA3wH,EAAAhS,KAAAoX,IAAA,CAGA,IAAAA,EAAApF,EAAAhS,KAAAoX,OACAw4H,EAAAgH,EAAA52I,KAAAoX,OACAo1I,GAAAx6I,EAAAo2H,IAlGA,SAAAhxH,GAEA,GAAAoB,EAAApB,EAAAq1I,KAAA,CAEA,IAAAx2I,EAAAswH,EAAA,iBACAnvH,EAAAnB,MAAA5H,OAAA+I,EAAAq1I,IAAAr1I,EAAAnB,eACAmB,EAAAq1I,IAKAj0I,EAAApB,EAAAs1I,OACAt1I,EAAA4wC,UAAA35C,OAAA+I,EAAAs1I,IAAAt1I,EAAA4wC,mBACA5wC,EAAAs1I,KAsFAQ,CAAA91I,GACAu4H,GAAAv4H,EAAAw4H,EAAAkd,GAAAF,GAAAD,GAAA36I,EAAAi7B,SACAu/G,QAAAp6I,GAGA,IAOA+6I,GAPApC,IACAntI,OAAAqvI,GACArzF,OAAAqzF,IAOA,SAAAG,GAAAxW,EAAA5kI,GACA,IAAA2wH,EAAAiU,EAAA52I,KAAAkzI,YAAAvQ,EAAA3wH,EAAAhS,KAAAkzI,UAAA,CAGA,IAAA7mI,EAAAwhI,EACAzF,EAAAp2H,EAAAo2H,IACAilB,EAAAzW,EAAA52I,KAAAkzI,aACAljI,EAAAgC,EAAAhS,KAAAkzI,aAMA,IAAA7mI,KAJAmM,EAAAxI,EAAAy5H,UACAz5H,EAAAgC,EAAAhS,KAAAkzI,SAAAvjI,KAA2CK,IAG3Cq9I,EACAhhJ,KAAA2D,IACAo4H,EAAA/7H,GAAA,IAIA,IAAAA,KAAA2D,EAAA,CAKA,GAJA69H,EAAA79H,EAAA3D,GAIA,gBAAAA,GAAA,cAAAA,EAAA,CAEA,GADA2F,EAAA3B,WAA2B2B,EAAA3B,SAAAtN,OAAA,GAC3B8qI,IAAAwf,EAAAhhJ,GAAkC,SAGlC,IAAA+7H,EAAAr0D,WAAAhxE,QACAqlI,EAAAh3F,YAAAg3F,EAAAr0D,WAAA,IAIA,aAAA1nE,GAAA,aAAA+7H,EAAAh7F,QAAA,CAGAg7F,EAAAklB,OAAAzf,EAEA,IAAA0f,EAAA5qB,EAAAkL,GAAA,GAAA9pI,OAAA8pI,GACA2f,GAAAplB,EAAAmlB,KACAnlB,EAAA77H,MAAAghJ,QAEK,iBAAAlhJ,GAAA64I,GAAA9c,EAAAh7F,UAAAu1F,EAAAyF,EAAAz8E,WAAA,EAELwhG,OAAAjqI,SAAAqqB,cAAA,QACAoe,UAAA,QAAAkiF,EAAA,SAEA,IADA,IAAAz1E,EAAA+0F,GAAAl/G,WACAm6F,EAAAn6F,YACAm6F,EAAAh3F,YAAAg3F,EAAAn6F,YAEA,KAAAmqB,EAAAnqB,YACAm6F,EAAAj6F,YAAAiqB,EAAAnqB,iBAEK,GAKL4/F,IAAAwf,EAAAhhJ,GAIA,IACA+7H,EAAA/7H,GAAAwhI,EACO,MAAAx5H,OAQP,SAAAm5I,GAAAplB,EAAAqlB,GACA,OAAArlB,EAAAslB,YACA,WAAAtlB,EAAAh7F,SAMA,SAAAg7F,EAAAqlB,GAGA,IAAAE,GAAA,EAGA,IAAOA,EAAAzqI,SAAAmjC,gBAAA+hF,EAA+C,MAAA/zH,IACtD,OAAAs5I,GAAAvlB,EAAA77H,QAAAkhJ,EAZAG,CAAAxlB,EAAAqlB,IAeA,SAAArlB,EAAAwC,GACA,IAAAr+H,EAAA67H,EAAA77H,MACAi7I,EAAApf,EAAAylB,YACA,GAAAr1I,EAAAgvI,GAAA,CACA,GAAAA,EAAA1oH,OACA,OAAAokG,EAAA32H,KAAA22H,EAAA0H,GAEA,GAAA4c,EAAA35I,KACA,OAAAtB,EAAAsB,SAAA+8H,EAAA/8H,OAGA,OAAAtB,IAAAq+H,EAzBAkjB,CAAA1lB,EAAAqlB,IA4BA,IAAAva,IACAt1H,OAAAwvI,GACAxzF,OAAAwzF,IAKAW,GAAAvqB,EAAA,SAAAptF,GACA,IAAAjjC,KAEA66I,EAAA,QAOA,OANA53G,EAAAlpC,MAFA,iBAEAgC,QAAA,SAAA0hB,GACA,GAAAA,EAAA,CACA,IAAAoV,EAAApV,EAAA1jB,MAAA8gJ,GACAhoH,EAAAjjC,OAAA,IAAAoQ,EAAA6yB,EAAA,GAAAn4B,QAAAm4B,EAAA,GAAAn4B,WAGAsF,IAIA,SAAA86I,GAAAjuJ,GACA,IAAAi2C,EAAAi4G,GAAAluJ,EAAAi2C,OAGA,OAAAj2C,EAAAmuJ,YACAx+I,EAAA3P,EAAAmuJ,YAAAl4G,GACAA,EAIA,SAAAi4G,GAAAE,GACA,OAAAtiJ,MAAAyH,QAAA66I,GACAnqB,EAAAmqB,GAEA,iBAAAA,EACAL,GAAAK,GAEAA,EAuCA,IAyBAC,GAzBAC,GAAA,MACAC,GAAA,iBACAC,GAAA,SAAAvrI,EAAAnf,EAAA6N,GAEA,GAAA28I,GAAAn2I,KAAArU,GACAmf,EAAAgzB,MAAAw4G,YAAA3qJ,EAAA6N,QACG,GAAA48I,GAAAp2I,KAAAxG,GACHsR,EAAAgzB,MAAAw4G,YAAA5qB,EAAA//H,GAAA6N,EAAAoB,QAAAw7I,GAAA,qBACG,CACH,IAAA7xH,EAAAgyH,GAAA5qJ,GACA,GAAAgI,MAAAyH,QAAA5B,GAIA,QAAAvQ,EAAA,EAAA8f,EAAAvP,EAAA5O,OAAuC3B,EAAA8f,EAAS9f,IAChD6hB,EAAAgzB,MAAAvZ,GAAA/qB,EAAAvQ,QAGA6hB,EAAAgzB,MAAAvZ,GAAA/qB,IAKAg9I,IAAA,qBAGAD,GAAAlrB,EAAA,SAAAn3F,GAGA,GAFAgiH,OAAAnrI,SAAAqqB,cAAA,OAAA0I,MAEA,YADA5J,EAAAq3F,EAAAr3F,KACAA,KAAAgiH,GACA,OAAAhiH,EAGA,IADA,IAAAuiH,EAAAviH,EAAAlyB,OAAA,GAAAsC,cAAA4vB,EAAA3/B,MAAA,GACAtL,EAAA,EAAiBA,EAAAutJ,GAAA5rJ,OAAwB3B,IAAA,CACzC,IAAA0C,EAAA6qJ,GAAAvtJ,GAAAwtJ,EACA,GAAA9qJ,KAAAuqJ,GACA,OAAAvqJ,KAKA,SAAA+qJ,GAAAjY,EAAA5kI,GACA,IAAAhS,EAAAgS,EAAAhS,KACAsoJ,EAAA1R,EAAA52I,KAEA,KAAA2iI,EAAA3iI,EAAAmuJ,cAAAxrB,EAAA3iI,EAAAi2C,QACA0sF,EAAA2lB,EAAA6F,cAAAxrB,EAAA2lB,EAAAryG,QADA,CAMA,IAAA43F,EAAA/pI,EACAmf,EAAAjR,EAAAo2H,IACA0mB,EAAAxG,EAAA6F,YACAY,EAAAzG,EAAA0G,iBAAA1G,EAAAryG,UAGAg5G,EAAAH,GAAAC,EAEA94G,EAAAi4G,GAAAl8I,EAAAhS,KAAAi2C,WAKAjkC,EAAAhS,KAAAgvJ,gBAAAx2I,EAAAy9B,EAAAwzF,QACA95H,KAAesmC,GACfA,EAEA,IAAAi5G,EApGA,SAAAl9I,EAAAm9I,GACA,IACAC,EADAj8I,KAGA,GAAAg8I,EAEA,IADA,IAAA7K,EAAAtyI,EACAsyI,EAAAryI,oBACAqyI,IAAAryI,kBAAAmlI,SAEAkN,EAAAtkJ,OACAovJ,EAAAnB,GAAA3J,EAAAtkJ,QAEA2P,EAAAwD,EAAAi8I,IAKAA,EAAAnB,GAAAj8I,EAAAhS,QACA2P,EAAAwD,EAAAi8I,GAIA,IADA,IAAAt/G,EAAA99B,EACA89B,IAAAx/B,QACAw/B,EAAA9vC,OAAAovJ,EAAAnB,GAAAn+G,EAAA9vC,QACA2P,EAAAwD,EAAAi8I,GAGA,OAAAj8I,EAyEAk8I,CAAAr9I,GAAA,GAEA,IAAAlO,KAAAmrJ,EACAtsB,EAAAusB,EAAAprJ,KACA0qJ,GAAAvrI,EAAAnf,EAAA,IAGA,IAAAA,KAAAorJ,GACArhB,EAAAqhB,EAAAprJ,MACAmrJ,EAAAnrJ,IAEA0qJ,GAAAvrI,EAAAnf,EAAA,MAAA+pI,EAAA,GAAAA,IAKA,IAAA53F,IACAr4B,OAAAixI,GACAj1F,OAAAi1F,IAKAS,GAAA,MAMA,SAAA5gH,GAAAzrB,EAAAslI,GAEA,GAAAA,QAAA16I,QAKA,GAAAoV,EAAAsrB,UACAg6G,EAAA74I,QAAA,QACA64I,EAAAr7I,MAAAoiJ,IAAApgJ,QAAA,SAAAuD,GAAoD,OAAAwQ,EAAAsrB,UAAAK,IAAAn8B,KAEpDwQ,EAAAsrB,UAAAK,IAAA25G,OAEG,CACH,IAAA1a,EAAA,KAAA5qH,EAAA/K,aAAA,kBACA21H,EAAAn+H,QAAA,IAAA64I,EAAA,QACAtlI,EAAA0qB,aAAA,SAAAkgG,EAAA0a,GAAA16I,SASA,SAAAghC,GAAA5rB,EAAAslI,GAEA,GAAAA,QAAA16I,QAKA,GAAAoV,EAAAsrB,UACAg6G,EAAA74I,QAAA,QACA64I,EAAAr7I,MAAAoiJ,IAAApgJ,QAAA,SAAAuD,GAAoD,OAAAwQ,EAAAsrB,UAAAQ,OAAAt8B,KAEpDwQ,EAAAsrB,UAAAQ,OAAAw5G,GAEAtlI,EAAAsrB,UAAAxrC,QACAkgB,EAAAosB,gBAAA,aAEG,CAGH,IAFA,IAAAw+F,EAAA,KAAA5qH,EAAA/K,aAAA,kBACAq3I,EAAA,IAAAhH,EAAA,IACA1a,EAAAn+H,QAAA6/I,IAAA,GACA1hB,IAAA96H,QAAAw8I,EAAA,MAEA1hB,IAAAhgI,QAEAoV,EAAA0qB,aAAA,QAAAkgG,GAEA5qH,EAAAosB,gBAAA,UAOA,SAAAmgH,GAAArjB,GACA,GAAAA,EAAA,CAIA,oBAAAA,EAAA,CACA,IAAAh5H,KAKA,OAJA,IAAAg5H,EAAAsjB,KACA9/I,EAAAwD,EAAAu8I,GAAAvjB,EAAAroI,MAAA,MAEA6L,EAAAwD,EAAAg5H,GACAh5H,EACG,uBAAAg5H,EACHujB,GAAAvjB,QADG,GAKH,IAAAujB,GAAAlsB,EAAA,SAAA1/H,GACA,OACA6rJ,WAAA7rJ,EAAA,SACA8rJ,aAAA9rJ,EAAA,YACA+rJ,iBAAA/rJ,EAAA,gBACAgsJ,WAAAhsJ,EAAA,SACAisJ,aAAAjsJ,EAAA,YACAksJ,iBAAAlsJ,EAAA,mBAIAmsJ,GAAAp2I,IAAA2sH,EACA0pB,GAAA,aACAC,GAAA,YAGAC,GAAA,aACAC,GAAA,gBACAC,GAAA,YACAC,GAAA,eACAN,UAEA79I,IAAA0H,OAAA02I,sBACAp+I,IAAA0H,OAAA22I,wBAEAL,GAAA,mBACAC,GAAA,4BAEAj+I,IAAA0H,OAAA42I,qBACAt+I,IAAA0H,OAAA62I,uBAEAL,GAAA,kBACAC,GAAA,uBAKA,IAAAK,GAAA/2I,EACAC,OAAA4kC,sBACA5kC,OAAA4kC,sBAAA93B,KAAA9M,QACA+O,WACA,SAAApE,GAA8C,OAAAA,KAE9C,SAAAosI,GAAApsI,GACAmsI,GAAA,WACAA,GAAAnsI,KAIA,SAAAqsI,GAAA7tI,EAAAslI,GACA,IAAAwI,EAAA9tI,EAAAwlI,qBAAAxlI,EAAAwlI,uBACAsI,EAAArhJ,QAAA64I,GAAA,IACAwI,EAAAjvJ,KAAAymJ,GACA75G,GAAAzrB,EAAAslI,IAIA,SAAAyI,GAAA/tI,EAAAslI,GACAtlI,EAAAwlI,oBACA15G,EAAA9rB,EAAAwlI,mBAAAF,GAEA15G,GAAA5rB,EAAAslI,GAGA,SAAA0I,GACAhuI,EACAiuI,EACAxsI,GAEA,IAAAtU,EAAA+gJ,GAAAluI,EAAAiuI,GACA7lJ,EAAA+E,EAAA/E,KACAmlB,EAAApgB,EAAAogB,QACA4gI,EAAAhhJ,EAAAghJ,UACA,IAAA/lJ,EAAc,OAAAqZ,IACd,IAAAzO,EAAA5K,IAAA6kJ,GAAAG,GAAAE,GACAn4B,EAAA,EACA9sH,EAAA,WACA2X,EAAAwvB,oBAAAx8B,EAAAo7I,GACA3sI,KAEA2sI,EAAA,SAAAh9I,GACAA,EAAA0C,SAAAkM,KACAm1G,GAAAg5B,GACA9lJ,KAIAud,WAAA,WACAuvG,EAAAg5B,GACA9lJ,KAEGklB,EAAA,GACHvN,EAAAzB,iBAAAvL,EAAAo7I,GAGA,IAAAC,GAAA,yBAEA,SAAAH,GAAAluI,EAAAiuI,GACA,IASA7lJ,EATAkmJ,EAAAz3I,OAAAwyB,iBAAArpB,GAEAuuI,GAAAD,EAAAnB,GAAA,cAAAljJ,MAAA,MACAukJ,GAAAF,EAAAnB,GAAA,iBAAAljJ,MAAA,MACAwkJ,EAAAC,GAAAH,EAAAC,GACAG,GAAAL,EAAAjB,GAAA,cAAApjJ,MAAA,MACA2kJ,GAAAN,EAAAjB,GAAA,iBAAApjJ,MAAA,MACA4kJ,EAAAH,GAAAC,EAAAC,GAGArhI,EAAA,EACA4gI,EAAA,EA8BA,OA5BAF,IAAAhB,GACAwB,EAAA,IACArmJ,EAAA6kJ,GACA1/H,EAAAkhI,EACAN,EAAAK,EAAA1uJ,QAEGmuJ,IAAAf,GACH2B,EAAA,IACAzmJ,EAAA8kJ,GACA3/H,EAAAshI,EACAV,EAAAS,EAAA9uJ,QASAquJ,GALA/lJ,GADAmlB,EAAAjoB,KAAAwf,IAAA2pI,EAAAI,IACA,EACAJ,EAAAI,EACA5B,GACAC,GACA,MAEA9kJ,IAAA6kJ,GACAuB,EAAA1uJ,OACA8uJ,EAAA9uJ,OACA,GAMAsI,OACAmlB,UACA4gI,YACAW,aANA1mJ,IAAA6kJ,IACAoB,GAAAn5I,KAAAo5I,EAAAnB,GAAA,cASA,SAAAuB,GAAAK,EAAAp/D,GAEA,KAAAo/D,EAAAjvJ,OAAA6vF,EAAA7vF,QACAivJ,IAAA3jJ,OAAA2jJ,GAGA,OAAAzpJ,KAAAwf,IAAAnZ,MAAA,KAAAgkF,EAAA5mF,IAAA,SAAAs5B,EAAAlkC,GACA,OAAA6wJ,GAAA3sH,GAAA2sH,GAAAD,EAAA5wJ,OAQA,SAAA6wJ,GAAAvsH,GACA,WAAAmpC,OAAAnpC,EAAAh5B,MAAA,MAAAqG,QAAA,UAKA,SAAAm/I,GAAAlgJ,EAAAkpD,GACA,IAAAj4C,EAAAjR,EAAAo2H,IAGA5vH,EAAAyK,EAAAkvI,YACAlvI,EAAAkvI,SAAAC,WAAA,EACAnvI,EAAAkvI,YAGA,IAAAnyJ,EAAAwvJ,GAAAx9I,EAAAhS,KAAAqyJ,YACA,IAAA1vB,EAAA3iI,KAKAwY,EAAAyK,EAAAqvI,WAAA,IAAArvI,EAAA6pB,SAAA,CA4BA,IAxBA,IAAA2iH,EAAAzvJ,EAAAyvJ,IACApkJ,EAAArL,EAAAqL,KACAskJ,EAAA3vJ,EAAA2vJ,WACAC,EAAA5vJ,EAAA4vJ,aACAC,EAAA7vJ,EAAA6vJ,iBACA0C,EAAAvyJ,EAAAuyJ,YACAC,EAAAxyJ,EAAAwyJ,cACAC,EAAAzyJ,EAAAyyJ,kBACAvzI,EAAAlf,EAAAkf,YACAgzI,EAAAlyJ,EAAAkyJ,MACAQ,EAAA1yJ,EAAA0yJ,WACAC,EAAA3yJ,EAAA2yJ,eACAC,EAAA5yJ,EAAA4yJ,aACAC,EAAA7yJ,EAAA6yJ,OACAC,EAAA9yJ,EAAA8yJ,YACAC,EAAA/yJ,EAAA+yJ,gBACAluJ,EAAA7E,EAAA6E,SAMAooC,EAAAypG,GACAsc,EAAAtc,GAAAzlI,OACA+hJ,KAAA1iJ,QACA28B,EAAA+lH,EAAA/lH,QACA+lH,IAAA1iJ,OAGA,IAAA2iJ,GAAAhmH,EAAA8qG,aAAA/lI,EAAA22H,aAEA,IAAAsqB,GAAAJ,GAAA,KAAAA,EAAA,CAIA,IAAAK,EAAAD,GAAAV,EACAA,EACA5C,EACA55I,EAAAk9I,GAAAR,EACAA,EACA5C,EACAsD,EAAAF,GAAAT,EACAA,EACA5C,EAEAwD,EAAAH,GACAL,GACA1zI,EACAm0I,EAAAJ,GACA,mBAAAJ,IACAX,EACAoB,EAAAL,GACAH,GACAJ,EACAa,EAAAN,GACAF,GACAJ,EAEAa,EAAAtwB,EACAngH,EAAAle,GACAA,EAAAqtJ,MACArtJ,GAGM,EAIN,IAAA4uJ,GAAA,IAAAhE,IAAAjpB,EACAktB,EAAAC,GAAAN,GAEA3uI,EAAAzB,EAAAqvI,SAAAntI,EAAA,WACAsuI,IACAzC,GAAA/tI,EAAAkwI,GACAnC,GAAA/tI,EAAAlN,IAEA2O,EAAA0tI,WACAqB,GACAzC,GAAA/tI,EAAAiwI,GAEAK,KAAAtwI,IAEAqwI,KAAArwI,GAEAA,EAAAqvI,SAAA,OAGAtgJ,EAAAhS,KAAAo8C,MAEA2zF,GAAA/9H,EAAA,oBACA,IAAA1B,EAAA2S,EAAA6sB,WACA8jH,EAAAtjJ,KAAAujJ,UAAAvjJ,EAAAujJ,SAAA7hJ,EAAA3F,KACAunJ,GACAA,EAAA9wJ,MAAAkP,EAAAlP,KACA8wJ,EAAAxrB,IAAA+pB,UAEAyB,EAAAxrB,IAAA+pB,WAEAkB,KAAApwI,EAAAyB,KAKA0uI,KAAAnwI,GACAwwI,IACA3C,GAAA7tI,EAAAiwI,GACApC,GAAA7tI,EAAAlN,GACA86I,GAAA,WACAG,GAAA/tI,EAAAiwI,GACAxuI,EAAA0tI,YACAtB,GAAA7tI,EAAAkwI,GACAO,IACAI,GAAAN,GACA3qI,WAAAnE,EAAA8uI,GAEAvC,GAAAhuI,EAAA5X,EAAAqZ,QAOA1S,EAAAhS,KAAAo8C,OACA8e,OACAm4F,KAAApwI,EAAAyB,IAGA+uI,GAAAC,GACAhvI,MAIA,SAAAqvI,GAAA/hJ,EAAAgiJ,GACA,IAAA/wI,EAAAjR,EAAAo2H,IAGA5vH,EAAAyK,EAAAqvI,YACArvI,EAAAqvI,SAAAF,WAAA,EACAnvI,EAAAqvI,YAGA,IAAAtyJ,EAAAwvJ,GAAAx9I,EAAAhS,KAAAqyJ,YACA,GAAA1vB,EAAA3iI,IAAA,IAAAijB,EAAA6pB,SACA,OAAAknH,IAIA,IAAAx7I,EAAAyK,EAAAkvI,UAAA,CAIA,IAAA1C,EAAAzvJ,EAAAyvJ,IACApkJ,EAAArL,EAAAqL,KACAykJ,EAAA9vJ,EAAA8vJ,WACAC,EAAA/vJ,EAAA+vJ,aACAC,EAAAhwJ,EAAAgwJ,iBACAiE,EAAAj0J,EAAAi0J,YACAF,EAAA/zJ,EAAA+zJ,MACAG,EAAAl0J,EAAAk0J,WACAC,EAAAn0J,EAAAm0J,eACAC,EAAAp0J,EAAAo0J,WACAvvJ,EAAA7E,EAAA6E,SAEA4uJ,GAAA,IAAAhE,IAAAjpB,EACAktB,EAAAC,GAAAI,GAEAM,EAAAnxB,EACAngH,EAAAle,GACAA,EAAAkvJ,MACAlvJ,GAGM,EAIN,IAAA6f,EAAAzB,EAAAkvI,SAAAhtI,EAAA,WACAlC,EAAA6sB,YAAA7sB,EAAA6sB,WAAA+jH,WACA5wI,EAAA6sB,WAAA+jH,SAAA7hJ,EAAA3F,KAAA,MAEAonJ,IACAzC,GAAA/tI,EAAA8sI,GACAiB,GAAA/tI,EAAA+sI,IAEAtrI,EAAA0tI,WACAqB,GACAzC,GAAA/tI,EAAA6sI,GAEAqE,KAAAlxI,KAEA+wI,IACAE,KAAAjxI,IAEAA,EAAAkvI,SAAA,OAGAiC,EACAA,EAAAE,GAEAA,IAGA,SAAAA,IAEA5vI,EAAA0tI,aAIApgJ,EAAAhS,KAAAo8C,MAAAn5B,EAAA6sB,cACA7sB,EAAA6sB,WAAA+jH,WAAA5wI,EAAA6sB,WAAA+jH,cAA6D7hJ,EAAA,KAAAA,GAE7DiiJ,KAAAhxI,GACAwwI,IACA3C,GAAA7tI,EAAA6sI,GACAgB,GAAA7tI,EAAA+sI,GACAa,GAAA,WACAG,GAAA/tI,EAAA6sI,GACAprI,EAAA0tI,YACAtB,GAAA7tI,EAAA8sI,GACA2D,IACAI,GAAAO,GACAxrI,WAAAnE,EAAA2vI,GAEApD,GAAAhuI,EAAA5X,EAAAqZ,QAMAqvI,KAAA9wI,EAAAyB,GACA+uI,GAAAC,GACAhvI,MAsBA,SAAAovI,GAAAniJ,GACA,uBAAAA,IAAAgyB,MAAAhyB,GASA,SAAAgiJ,GAAAlvI,GACA,GAAAk+G,EAAAl+G,GACA,SAEA,IAAA8vI,EAAA9vI,EAAA+qH,IACA,OAAAh3H,EAAA+7I,GAEAZ,GACA7nJ,MAAAyH,QAAAghJ,GACAA,EAAA,GACAA,IAGA9vI,EAAA4iB,SAAA5iB,EAAA1hB,QAAA,EAIA,SAAAyxJ,GAAArkJ,EAAA6B,IACA,IAAAA,EAAAhS,KAAAo8C,MACA81G,GAAAlgJ,GAIA,IA4BAyiJ,GA9iFA,SAAAC,GACA,IAAAtzJ,EAAA2b,EACA0L,KAEAuhI,EAAA0K,EAAA1K,QACA3E,EAAAqP,EAAArP,QAEA,IAAAjkJ,EAAA,EAAaA,EAAAurF,GAAA5pF,SAAkB3B,EAE/B,IADAqnB,EAAAkkE,GAAAvrF,OACA2b,EAAA,EAAeA,EAAAitI,EAAAjnJ,SAAoBga,EACnCvE,EAAAwxI,EAAAjtI,GAAA4vE,GAAAvrF,MACAqnB,EAAAkkE,GAAAvrF,IAAAU,KAAAkoJ,EAAAjtI,GAAA4vE,GAAAvrF,KAmBA,SAAAuzJ,EAAA1xI,GACA,IAAA3S,EAAA+0I,EAAAv1G,WAAA7sB,GAEAzK,EAAAlI,IACA+0I,EAAAj0G,YAAA9gC,EAAA2S,GAsBA,SAAA2xI,EACA5iJ,EACA6iJ,EACAC,EACAC,EACAC,EACAC,EACAhpJ,GAYA,GAVAuM,EAAAxG,EAAAo2H,MAAA5vH,EAAAy8I,KAMAjjJ,EAAAijJ,EAAAhpJ,GAAAk9H,GAAAn3H,IAGAA,EAAA22H,cAAAqsB,GAiDA,SAAAhjJ,EAAA6iJ,EAAAC,EAAAC,GACA,IAAA3zJ,EAAA4Q,EAAAhS,KACA,GAAAwY,EAAApX,GAAA,CACA,IAAA8zJ,EAAA18I,EAAAxG,EAAAC,oBAAA7Q,EAAA8P,UAQA,GAPAsH,EAAApX,IAAA0Q,OAAA0G,EAAApX,IAAAkN,OACAlN,EAAA4Q,GAAA,GAMAwG,EAAAxG,EAAAC,mBAMA,OALAkjJ,EAAAnjJ,EAAA6iJ,GACA/c,EAAAgd,EAAA9iJ,EAAAo2H,IAAA2sB,GACAnyB,EAAAsyB,IA0BA,SAAAljJ,EAAA6iJ,EAAAC,EAAAC,GAOA,IANA,IAAA3zJ,EAKAg0J,EAAApjJ,EACAojJ,EAAAnjJ,mBAEA,GADAmjJ,IAAAnjJ,kBAAAmlI,OACA5+H,EAAApX,EAAAg0J,EAAAp1J,OAAAwY,EAAApX,IAAAixJ,YAAA,CACA,IAAAjxJ,EAAA,EAAmBA,EAAAqnB,EAAA4sI,SAAAtyJ,SAAyB3B,EAC5CqnB,EAAA4sI,SAAAj0J,GAAA8kJ,GAAAkP,GAEAP,EAAA/yJ,KAAAszJ,GACA,MAKAtd,EAAAgd,EAAA9iJ,EAAAo2H,IAAA2sB,GA5CAO,CAAAtjJ,EAAA6iJ,EAAAC,EAAAC,IAEA,GAjEApc,CAAA3mI,EAAA6iJ,EAAAC,EAAAC,GAAA,CAIA,IAAA/0J,EAAAgS,EAAAhS,KACAqQ,EAAA2B,EAAA3B,SACAvN,EAAAkP,EAAAlP,IACA0V,EAAA1V,IAeAkP,EAAAo2H,IAAAp2H,EAAAu2H,GACA8c,EAAAE,gBAAAvzI,EAAAu2H,GAAAzlI,GACAuiJ,EAAA93G,cAAAzqC,EAAAkP,GACAujJ,EAAAvjJ,GAIAwjJ,EAAAxjJ,EAAA3B,EAAAwkJ,GACAr8I,EAAAxY,IACAy1J,EAAAzjJ,EAAA6iJ,GAEA/c,EAAAgd,EAAA9iJ,EAAAo2H,IAAA2sB,IAMKnyB,EAAA5wH,EAAA42H,YACL52H,EAAAo2H,IAAAid,EAAAI,cAAAzzI,EAAA6tB,MACAi4G,EAAAgd,EAAA9iJ,EAAAo2H,IAAA2sB,KAEA/iJ,EAAAo2H,IAAAid,EAAA/zG,eAAAt/B,EAAA6tB,MACAi4G,EAAAgd,EAAA9iJ,EAAAo2H,IAAA2sB,KA0BA,SAAAI,EAAAnjJ,EAAA6iJ,GACAr8I,EAAAxG,EAAAhS,KAAA01J,iBACAb,EAAA/yJ,KAAA8M,MAAAimJ,EAAA7iJ,EAAAhS,KAAA01J,eACA1jJ,EAAAhS,KAAA01J,cAAA,MAEA1jJ,EAAAo2H,IAAAp2H,EAAAC,kBAAAmwI,IACAuT,EAAA3jJ,IACAyjJ,EAAAzjJ,EAAA6iJ,GACAU,EAAAvjJ,KAIA8zI,GAAA9zI,GAEA6iJ,EAAA/yJ,KAAAkQ,IA0BA,SAAA8lI,EAAAxnI,EAAA83H,EAAAwtB,GACAp9I,EAAAlI,KACAkI,EAAAo9I,GACAvQ,EAAAv1G,WAAA8lH,KAAAtlJ,GACA+0I,EAAAn3G,aAAA59B,EAAA83H,EAAAwtB,GAGAvQ,EAAAl3G,YAAA79B,EAAA83H,IAKA,SAAAotB,EAAAxjJ,EAAA3B,EAAAwkJ,GACA,GAAA/oJ,MAAAyH,QAAAlD,GAIA,QAAAjP,EAAA,EAAqBA,EAAAiP,EAAAtN,SAAqB3B,EAC1CwzJ,EAAAvkJ,EAAAjP,GAAAyzJ,EAAA7iJ,EAAAo2H,IAAA,QAAA/3H,EAAAjP,QAEKyhI,EAAA7wH,EAAA6tB,OACLwlH,EAAAl3G,YAAAn8B,EAAAo2H,IAAAid,EAAA/zG,eAAAvtC,OAAAiO,EAAA6tB,QAIA,SAAA81H,EAAA3jJ,GACA,KAAAA,EAAAC,mBACAD,IAAAC,kBAAAmlI,OAEA,OAAA5+H,EAAAxG,EAAAlP,KAGA,SAAA2yJ,EAAAzjJ,EAAA6iJ,GACA,QAAA7S,EAAA,EAAqBA,EAAAv5H,EAAA7K,OAAA7a,SAAyBi/I,EAC9Cv5H,EAAA7K,OAAAokI,GAAAkE,GAAAl0I,GAGAwG,EADApX,EAAA4Q,EAAAhS,KAAA8R,QAEA0G,EAAApX,EAAAwc,SAA4Bxc,EAAAwc,OAAAsoI,GAAAl0I,GAC5BwG,EAAApX,EAAA02I,SAA4B+c,EAAA/yJ,KAAAkQ,IAO5B,SAAAujJ,EAAAvjJ,GACA,IAAA5Q,EACA,GAAAoX,EAAApX,EAAA4Q,EAAA02H,WACA2c,EAAAO,cAAA5zI,EAAAo2H,IAAAhnI,QAGA,IADA,IAAAy0J,EAAA7jJ,EACA6jJ,GACAr9I,EAAApX,EAAAy0J,EAAA5oH,UAAAz0B,EAAApX,IAAAuX,SAAAm9H,WACAuP,EAAAO,cAAA5zI,EAAAo2H,IAAAhnI,GAEAy0J,IAAAvlJ,OAIAkI,EAAApX,EAAAs1I,KACAt1I,IAAA4Q,EAAAi7B,SACA7rC,IAAA4Q,EAAAw2H,WACAhwH,EAAApX,IAAAuX,SAAAm9H,WAEAuP,EAAAO,cAAA5zI,EAAAo2H,IAAAhnI,GAIA,SAAA00J,EAAAhB,EAAAC,EAAAhb,EAAAgc,EAAAtP,EAAAoO,GACA,KAAUkB,GAAAtP,IAAoBsP,EAC9BnB,EAAA7a,EAAAgc,GAAAlB,EAAAC,EAAAC,GAAA,EAAAhb,EAAAgc,GAIA,SAAAC,EAAAhkJ,GACA,IAAA5Q,EAAA2b,EACA/c,EAAAgS,EAAAhS,KACA,GAAAwY,EAAAxY,GAEA,IADAwY,EAAApX,EAAApB,EAAA8R,OAAA0G,EAAApX,IAAA+2I,UAAyD/2I,EAAA4Q,GACzD5Q,EAAA,EAAiBA,EAAAqnB,EAAA0vH,QAAAp1I,SAAwB3B,EAAOqnB,EAAA0vH,QAAA/2I,GAAA4Q,GAEhD,GAAAwG,EAAApX,EAAA4Q,EAAA3B,UACA,IAAA0M,EAAA,EAAiBA,EAAA/K,EAAA3B,SAAAtN,SAA2Bga,EAC5Ci5I,EAAAhkJ,EAAA3B,SAAA0M,IAKA,SAAAk5I,EAAAnB,EAAA/a,EAAAgc,EAAAtP,GACA,KAAUsP,GAAAtP,IAAoBsP,EAAA,CAC9B,IAAAG,EAAAnc,EAAAgc,GACAv9I,EAAA09I,KACA19I,EAAA09I,EAAApzJ,MACAqzJ,EAAAD,GACAF,EAAAE,IAEAvB,EAAAuB,EAAA9tB,OAMA,SAAA+tB,EAAAnkJ,EAAAgiJ,GACA,GAAAx7I,EAAAw7I,IAAAx7I,EAAAxG,EAAAhS,MAAA,CACA,IAAAoB,EACA87B,EAAAzU,EAAAsmB,OAAAhsC,OAAA,EAaA,IAZAyV,EAAAw7I,GAGAA,EAAA92H,aAGA82H,EAtRA,SAAAoC,EAAAl5H,GACA,SAAA2yG,IACA,KAAAA,EAAA3yG,WACAy3H,EAAAyB,GAIA,OADAvmB,EAAA3yG,YACA2yG,EA+QAwmB,CAAArkJ,EAAAo2H,IAAAlrG,GAGA1kB,EAAApX,EAAA4Q,EAAAC,oBAAAuG,EAAApX,IAAAg2I,SAAA5+H,EAAApX,EAAApB,OACAm2J,EAAA/0J,EAAA4yJ,GAEA5yJ,EAAA,EAAiBA,EAAAqnB,EAAAsmB,OAAAhsC,SAAuB3B,EACxCqnB,EAAAsmB,OAAA3tC,GAAA4Q,EAAAgiJ,GAEAx7I,EAAApX,EAAA4Q,EAAAhS,KAAA8R,OAAA0G,EAAApX,IAAA2tC,QACA3tC,EAAA4Q,EAAAgiJ,GAEAA,SAGAW,EAAA3iJ,EAAAo2H,KA8FA,SAAAkuB,EAAA/kH,EAAAglH,EAAA7yH,EAAAp4B,GACA,QAAAlK,EAAAsiC,EAAuBtiC,EAAAkK,EAASlK,IAAA,CAChC,IAAAqR,EAAA8jJ,EAAAn1J,GACA,GAAAoX,EAAA/F,IAAA0zI,GAAA50G,EAAA9+B,GAA2C,OAAArR,GAI3C,SAAAo1J,EACA5f,EACA5kI,EACA6iJ,EACAI,EACAhpJ,EACAwqJ,GAEA,GAAA7f,IAAA5kI,EAAA,CAIAwG,EAAAxG,EAAAo2H,MAAA5vH,EAAAy8I,KAEAjjJ,EAAAijJ,EAAAhpJ,GAAAk9H,GAAAn3H,IAGA,IAAAo2H,EAAAp2H,EAAAo2H,IAAAwO,EAAAxO,IAEA,GAAAxF,EAAAgU,EAAA5N,oBACAxwH,EAAAxG,EAAAs2H,aAAA7iH,UACAixI,EAAA9f,EAAAxO,IAAAp2H,EAAA6iJ,GAEA7iJ,EAAAg3H,oBAAA,OASA,GAAApG,EAAA5wH,EAAA0F,WACAkrH,EAAAgU,EAAAl/H,WACA1F,EAAA3F,MAAAuqI,EAAAvqI,MACAu2H,EAAA5wH,EAAA62H,WAAAjG,EAAA5wH,EAAA82H,SAEA92H,EAAAC,kBAAA2kI,EAAA3kI,sBALA,CASA,IAAA7Q,EACApB,EAAAgS,EAAAhS,KACAwY,EAAAxY,IAAAwY,EAAApX,EAAApB,EAAA8R,OAAA0G,EAAApX,IAAA2Q,WACA3Q,EAAAw1I,EAAA5kI,GAGA,IAAAukJ,EAAA3f,EAAAvmI,SACA6lJ,EAAAlkJ,EAAA3B,SACA,GAAAmI,EAAAxY,IAAA21J,EAAA3jJ,GAAA,CACA,IAAA5Q,EAAA,EAAiBA,EAAAqnB,EAAAmxC,OAAA72D,SAAuB3B,EAAOqnB,EAAAmxC,OAAAx4D,GAAAw1I,EAAA5kI,GAC/CwG,EAAApX,EAAApB,EAAA8R,OAAA0G,EAAApX,IAAAw4D,SAAwDx4D,EAAAw1I,EAAA5kI,GAExD2wH,EAAA3wH,EAAA6tB,MACArnB,EAAA+9I,IAAA/9I,EAAA09I,GACAK,IAAAL,GAxJA,SAAApB,EAAAyB,EAAAI,EAAA9B,EAAA4B,GAoBA,IAnBA,IAQAG,EAAAC,EAAAC,EARAC,EAAA,EACAC,EAAA,EACAC,EAAAV,EAAAxzJ,OAAA,EACAm0J,EAAAX,EAAA,GACAY,EAAAZ,EAAAU,GACAG,EAAAT,EAAA5zJ,OAAA,EACAs0J,EAAAV,EAAA,GACAW,EAAAX,EAAAS,GAMAG,GAAAd,EAMAM,GAAAE,GAAAD,GAAAI,GACAz0B,EAAAu0B,GACAA,EAAAX,IAAAQ,GACOp0B,EAAAw0B,GACPA,EAAAZ,IAAAU,GACO9Q,GAAA+Q,EAAAG,IACPb,EAAAU,EAAAG,EAAAxC,EAAA8B,EAAAK,GACAE,EAAAX,IAAAQ,GACAM,EAAAV,IAAAK,IACO7Q,GAAAgR,EAAAG,IACPd,EAAAW,EAAAG,EAAAzC,EAAA8B,EAAAS,GACAD,EAAAZ,IAAAU,GACAK,EAAAX,IAAAS,IACOjR,GAAA+Q,EAAAI,IACPd,EAAAU,EAAAI,EAAAzC,EAAA8B,EAAAS,GACAG,GAAAlS,EAAAn3G,aAAA4mH,EAAAoC,EAAA9uB,IAAAid,EAAAr/F,YAAAmxG,EAAA/uB,MACA8uB,EAAAX,IAAAQ,GACAO,EAAAX,IAAAS,IACOjR,GAAAgR,EAAAE,IACPb,EAAAW,EAAAE,EAAAxC,EAAA8B,EAAAK,GACAO,GAAAlS,EAAAn3G,aAAA4mH,EAAAqC,EAAA/uB,IAAA8uB,EAAA9uB,KACA+uB,EAAAZ,IAAAU,GACAI,EAAAV,IAAAK,KAEAr0B,EAAAi0B,KAAmCA,EAAArQ,GAAAgQ,EAAAQ,EAAAE,IAInCt0B,EAHAk0B,EAAAr+I,EAAA6+I,EAAAhrJ,KACAuqJ,EAAAS,EAAAhrJ,KACAiqJ,EAAAe,EAAAd,EAAAQ,EAAAE,IAEArC,EAAAyC,EAAAxC,EAAAC,EAAAoC,EAAA9uB,KAAA,EAAAuuB,EAAAK,GAGA7Q,GADA2Q,EAAAP,EAAAM,GACAQ,IACAb,EAAAM,EAAAO,EAAAxC,EAAA8B,EAAAK,GACAT,EAAAM,QAAAzkJ,EACAmlJ,GAAAlS,EAAAn3G,aAAA4mH,EAAAgC,EAAA1uB,IAAA8uB,EAAA9uB,MAGAwsB,EAAAyC,EAAAxC,EAAAC,EAAAoC,EAAA9uB,KAAA,EAAAuuB,EAAAK,GAGAK,EAAAV,IAAAK,IAGAD,EAAAE,EAEAnB,EAAAhB,EADAnyB,EAAAg0B,EAAAS,EAAA,SAAAT,EAAAS,EAAA,GAAAhvB,IACAuuB,EAAAK,EAAAI,EAAAvC,GACKmC,EAAAI,GACLnB,EAAAnB,EAAAyB,EAAAQ,EAAAE,GAoF2BO,CAAApvB,EAAAmuB,EAAAL,EAAArB,EAAA4B,GACpBj+I,EAAA09I,IAIP19I,EAAAo+H,EAAA/2G,OAAmCwlH,EAAAnvG,eAAAkyF,EAAA,IACnC0tB,EAAA1tB,EAAA,KAAA8tB,EAAA,EAAAA,EAAAnzJ,OAAA,EAAA8xJ,IACOr8I,EAAA+9I,GACPN,EAAA7tB,EAAAmuB,EAAA,EAAAA,EAAAxzJ,OAAA,GACOyV,EAAAo+H,EAAA/2G,OACPwlH,EAAAnvG,eAAAkyF,EAAA,IAEKwO,EAAA/2G,OAAA7tB,EAAA6tB,MACLwlH,EAAAnvG,eAAAkyF,EAAAp2H,EAAA6tB,MAEArnB,EAAAxY,IACAwY,EAAApX,EAAApB,EAAA8R,OAAA0G,EAAApX,IAAAq2J,YAA2Dr2J,EAAAw1I,EAAA5kI,KAI3D,SAAA0lJ,EAAA1lJ,EAAAwS,EAAAyrD,GAGA,GAAA2yD,EAAA3yD,IAAAz3D,EAAAxG,EAAA1B,QACA0B,EAAA1B,OAAAtQ,KAAA01J,cAAAlxI,OAEA,QAAApjB,EAAA,EAAqBA,EAAAojB,EAAAzhB,SAAkB3B,EACvCojB,EAAApjB,GAAApB,KAAA8R,KAAAgmI,OAAAtzH,EAAApjB,IAKA,IAKAu2J,EAAAx0B,EAAA,2CAGA,SAAAuzB,EAAAtuB,EAAAp2H,EAAA6iJ,EAAA+C,GACA,IAAAx2J,EACA0B,EAAAkP,EAAAlP,IACA9C,EAAAgS,EAAAhS,KACAqQ,EAAA2B,EAAA3B,SAIA,GAHAunJ,KAAA53J,KAAA+6I,IACA/oI,EAAAo2H,MAEAxF,EAAA5wH,EAAA42H,YAAApwH,EAAAxG,EAAAs2H,cAEA,OADAt2H,EAAAg3H,oBAAA,GACA,EAQA,GAAAxwH,EAAAxY,KACAwY,EAAApX,EAAApB,EAAA8R,OAAA0G,EAAApX,IAAAkN,OAAsDlN,EAAA4Q,GAAA,GACtDwG,EAAApX,EAAA4Q,EAAAC,oBAGA,OADAkjJ,EAAAnjJ,EAAA6iJ,IACA,EAGA,GAAAr8I,EAAA1V,GAAA,CACA,GAAA0V,EAAAnI,GAEA,GAAA+3H,EAAAxyD,gBAIA,GAAAp9D,EAAApX,EAAApB,IAAAwY,EAAApX,IAAA8xI,WAAA16H,EAAApX,IAAAuqD,YACA,GAAAvqD,IAAAgnI,EAAAz8E,UAWA,aAEW,CAIX,IAFA,IAAAksG,GAAA,EACAvT,EAAAlc,EAAAn6F,WACA+zG,EAAA,EAA6BA,EAAA3xI,EAAAtN,OAAuBi/I,IAAA,CACpD,IAAAsC,IAAAoS,EAAApS,EAAAj0I,EAAA2xI,GAAA6S,EAAA+C,GAAA,CACAC,GAAA,EACA,MAEAvT,IAAAt+F,YAIA,IAAA6xG,GAAAvT,EAUA,cAxCAkR,EAAAxjJ,EAAA3B,EAAAwkJ,GA6CA,GAAAr8I,EAAAxY,GAAA,CACA,IAAA83J,GAAA,EACA,QAAAzrJ,KAAArM,EACA,IAAA23J,EAAAtrJ,GAAA,CACAyrJ,GAAA,EACArC,EAAAzjJ,EAAA6iJ,GACA,OAGAiD,GAAA93J,EAAA,OAEA+uI,GAAA/uI,EAAA,aAGKooI,EAAApoI,OAAAgS,EAAA6tB,OACLuoG,EAAApoI,KAAAgS,EAAA6tB,MAEA,SAcA,gBAAA+2G,EAAA5kI,EAAAokI,EAAAqgB,GACA,IAAA9zB,EAAA3wH,GAAA,CAKA,IA7lBAo2H,EA6lBA2vB,GAAA,EACAlD,KAEA,GAAAlyB,EAAAiU,GAEAmhB,GAAA,EACAnD,EAAA5iJ,EAAA6iJ,OACK,CACL,IAAAmD,EAAAx/I,EAAAo+H,EAAA9pG,UACA,IAAAkrH,GAAA7R,GAAAvP,EAAA5kI,GAEAwkJ,EAAA5f,EAAA5kI,EAAA6iJ,EAAA,UAAA4B,OACO,CACP,GAAAuB,EAAA,CAQA,GAJA,IAAAphB,EAAA9pG,UAAA8pG,EAAA5vF,aAAA49E,KACAgS,EAAAvnG,gBAAAu1F,GACAwR,GAAA,GAEAxT,EAAAwT,IACAsgB,EAAA9f,EAAA5kI,EAAA6iJ,GAEA,OADA6C,EAAA1lJ,EAAA6iJ,GAAA,GACAje,EArnBAxO,EAkoBAwO,IAjoBA,IAAAzO,GAAAkd,EAAAj4G,QAAAg7F,GAAAzoG,yBAA2DvtB,EAAAg2H,GAqoB3D,IAAA6vB,EAAArhB,EAAAxO,IACA0sB,EAAAzP,EAAAv1G,WAAAmoH,GAcA,GAXArD,EACA5iJ,EACA6iJ,EAIAoD,EAAA9F,SAAA,KAAA2C,EACAzP,EAAAr/F,YAAAiyG,IAIAz/I,EAAAxG,EAAA1B,QAGA,IAFA,IAAAulJ,EAAA7jJ,EAAA1B,OACA4nJ,EAAAvC,EAAA3jJ,GACA6jJ,GAAA,CACA,QAAAz0J,EAAA,EAA2BA,EAAAqnB,EAAA0vH,QAAAp1I,SAAwB3B,EACnDqnB,EAAA0vH,QAAA/2I,GAAAy0J,GAGA,GADAA,EAAAztB,IAAAp2H,EAAAo2H,IACA8vB,EAAA,CACA,QAAAlW,EAAA,EAA+BA,EAAAv5H,EAAA7K,OAAA7a,SAAyBi/I,EACxDv5H,EAAA7K,OAAAokI,GAAAkE,GAAA2P,GAKA,IAAA/d,EAAA+d,EAAA71J,KAAA8R,KAAAgmI,OACA,GAAAA,EAAA3H,OAEA,QAAAgoB,EAAA,EAAiCA,EAAArgB,EAAAtI,IAAAzsI,OAAyBo1J,IAC1DrgB,EAAAtI,IAAA2oB,UAIArS,GAAA+P,GAEAA,IAAAvlJ,OAKAkI,EAAAs8I,GACAmB,EAAAnB,GAAAle,GAAA,KACSp+H,EAAAo+H,EAAA9zI,MACTkzJ,EAAApf,IAMA,OADA8gB,EAAA1lJ,EAAA6iJ,EAAAkD,GACA/lJ,EAAAo2H,IAnGA5vH,EAAAo+H,IAA4Bof,EAAApf,IAq8D5BwhB,EAAiC/S,WAAA2E,SAdjC13I,GACAy2I,GACAgC,GACA7X,GACAj9F,GAlBAp8B,GACA+D,OAAA42I,GACAa,SAAAb,GACAzlH,OAAA,SAAA/8B,EAAAgiJ,IAEA,IAAAhiJ,EAAAhS,KAAAo8C,KACA23G,GAAA/hJ,EAAAgiJ,GAEAA,UAkBA3lJ,OAAAs5I,MAUAnhB,GAEAtjH,SAAA1B,iBAAA,6BACA,IAAAyB,EAAAC,SAAAmjC,cACApjC,KAAAo1I,QACA99H,GAAAtX,EAAA,WAKA,IAAAq1I,IACA/uB,SAAA,SAAAtmH,EAAAs1I,EAAAvmJ,EAAA4kI,GACA,WAAA5kI,EAAAlP,KAEA8zI,EAAAxO,MAAAwO,EAAAxO,IAAAowB,UACAzoB,GAAA/9H,EAAA,uBACAsmJ,GAAAjR,iBAAApkI,EAAAs1I,EAAAvmJ,KAGAymJ,GAAAx1I,EAAAs1I,EAAAvmJ,EAAAi7B,SAEAhqB,EAAAu1I,aAAAxsJ,IAAAW,KAAAsW,EAAA9O,QAAAukJ,MACK,aAAA1mJ,EAAAlP,KAAAsiJ,GAAAniI,EAAA5X,SACL4X,EAAA4qI,YAAA0K,EAAA/Q,UACA+Q,EAAA/Q,UAAAxK,OACA/5H,EAAAzB,iBAAA,mBAAAm3I,IACA11I,EAAAzB,iBAAA,iBAAAo3I,IAKA31I,EAAAzB,iBAAA,SAAAo3I,IAEApyB,IACAvjH,EAAAo1I,QAAA,MAMAhR,iBAAA,SAAApkI,EAAAs1I,EAAAvmJ,GACA,cAAAA,EAAAlP,IAAA,CACA21J,GAAAx1I,EAAAs1I,EAAAvmJ,EAAAi7B,SAKA,IAAA4rH,EAAA51I,EAAAu1I,UACAM,EAAA71I,EAAAu1I,aAAAxsJ,IAAAW,KAAAsW,EAAA9O,QAAAukJ,IACA,GAAAI,EAAAp9G,KAAA,SAAAnS,EAAAnoC,GAA2C,OAAAgjI,EAAA76F,EAAAsvH,EAAAz3J,OAG3C6hB,EAAAqiI,SACAiT,EAAAhsJ,MAAAmvC,KAAA,SAAAhwC,GAA6C,OAAAqtJ,GAAArtJ,EAAAotJ,KAC7CP,EAAAhsJ,QAAAgsJ,EAAA/a,UAAAub,GAAAR,EAAAhsJ,MAAAusJ,KAEAv+H,GAAAtX,EAAA,aAOA,SAAAw1I,GAAAx1I,EAAAs1I,EAAA7mJ,GACAsnJ,GAAA/1I,EAAAs1I,EAAA7mJ,IAEA60H,GAAAE,IACA59G,WAAA,WACAmwI,GAAA/1I,EAAAs1I,EAAA7mJ,IACK,GAIL,SAAAsnJ,GAAA/1I,EAAAs1I,EAAA7mJ,GACA,IAAAnF,EAAAgsJ,EAAAhsJ,MACA0sJ,EAAAh2I,EAAAqiI,SACA,IAAA2T,GAAAntJ,MAAAyH,QAAAhH,GAAA,CASA,IADA,IAAAm8C,EAAAw4E,EACA9/H,EAAA,EAAAme,EAAA0D,EAAA9O,QAAApR,OAAwC3B,EAAAme,EAAOne,IAE/C,GADA8/H,EAAAj+G,EAAA9O,QAAA/S,GACA63J,EACAvwG,EAAAi8E,EAAAp4H,EAAAmsJ,GAAAx3B,KAAA,EACAA,EAAAx4E,eACAw4E,EAAAx4E,iBAGA,GAAA07E,EAAAs0B,GAAAx3B,GAAA30H,GAIA,YAHA0W,EAAAktD,gBAAA/uE,IACA6hB,EAAAktD,cAAA/uE,IAMA63J,IACAh2I,EAAAktD,eAAA,IAIA,SAAA4oF,GAAAxsJ,EAAA4H,GACA,OAAAA,EAAAgB,MAAA,SAAAo0B,GAAqC,OAAA66F,EAAA76F,EAAAh9B,KAGrC,SAAAmsJ,GAAAx3B,GACA,iBAAAA,EACAA,EAAAosB,OACApsB,EAAA30H,MAGA,SAAAosJ,GAAAtkJ,GACAA,EAAA0C,OAAA22I,WAAA,EAGA,SAAAkL,GAAAvkJ,GAEAA,EAAA0C,OAAA22I,YACAr5I,EAAA0C,OAAA22I,WAAA,EACAnzH,GAAAlmB,EAAA0C,OAAA,UAGA,SAAAwjB,GAAAtX,EAAA5X,GACA,IAAAgJ,EAAA6O,SAAA4nD,YAAA,cACAz2D,EAAA02D,UAAA1/D,GAAA,MACA4X,EAAAg0B,cAAA5iC,GAMA,SAAA6kJ,GAAAlnJ,GACA,OAAAA,EAAAC,mBAAAD,EAAAhS,MAAAgS,EAAAhS,KAAAqyJ,WAEArgJ,EADAknJ,GAAAlnJ,EAAAC,kBAAAmlI,QAIA,IAuDA+hB,IACAvf,MAAA0e,GACAl8G,MAxDAx1B,KAAA,SAAA3D,EAAA7S,EAAA4B,GACA,IAAAzF,EAAA6D,EAAA7D,MAGA6sJ,GADApnJ,EAAAknJ,GAAAlnJ,IACAhS,MAAAgS,EAAAhS,KAAAqyJ,WACAgH,EAAAp2I,EAAAq2I,mBACA,SAAAr2I,EAAAgzB,MAAAsjH,QAAA,GAAAt2I,EAAAgzB,MAAAsjH,QACAhtJ,GAAA6sJ,GACApnJ,EAAAhS,KAAAo8C,MAAA,EACA81G,GAAAlgJ,EAAA,WACAiR,EAAAgzB,MAAAsjH,QAAAF,KAGAp2I,EAAAgzB,MAAAsjH,QAAAhtJ,EAAA8sJ,EAAA,QAIAz/F,OAAA,SAAA32C,EAAA7S,EAAA4B,GACA,IAAAzF,EAAA6D,EAAA7D,OAIAA,IAHA6D,EAAAotI,YAIAxrI,EAAAknJ,GAAAlnJ,IACAhS,MAAAgS,EAAAhS,KAAAqyJ,YAEArgJ,EAAAhS,KAAAo8C,MAAA,EACA7vC,EACA2lJ,GAAAlgJ,EAAA,WACAiR,EAAAgzB,MAAAsjH,QAAAt2I,EAAAq2I,qBAGAvF,GAAA/hJ,EAAA,WACAiR,EAAAgzB,MAAAsjH,QAAA,UAIAt2I,EAAAgzB,MAAAsjH,QAAAhtJ,EAAA0W,EAAAq2I,mBAAA,SAIAE,OAAA,SACAv2I,EACAs1I,EACAvmJ,EACA4kI,EACAiQ,GAEAA,IACA5jI,EAAAgzB,MAAAsjH,QAAAt2I,EAAAq2I,uBAYAG,IACA31J,KAAAC,OACA8uJ,OAAAh9I,QACA45I,IAAA55I,QACAoV,KAAAlnB,OACAsH,KAAAtH,OACA4rJ,WAAA5rJ,OACA+rJ,WAAA/rJ,OACA6rJ,aAAA7rJ,OACAgsJ,aAAAhsJ,OACA8rJ,iBAAA9rJ,OACAisJ,iBAAAjsJ,OACAwuJ,YAAAxuJ,OACA0uJ,kBAAA1uJ,OACAyuJ,cAAAzuJ,OACAc,UAAAgqE,OAAA9qE,OAAAmI,SAKA,SAAAwtJ,GAAA1nJ,GACA,IAAA2nJ,EAAA3nJ,KAAAq2H,iBACA,OAAAsxB,KAAAvyB,KAAAjzH,QAAA+lI,SACAwf,GAAAte,GAAAue,EAAAtpJ,WAEA2B,EAIA,SAAA4nJ,GAAA9zI,GACA,IAAA9lB,KACAmU,EAAA2R,EAAAnN,SAEA,QAAAtM,KAAA8H,EAAA84H,UACAjtI,EAAAqM,GAAAyZ,EAAAzZ,GAIA,IAAA6wB,EAAA/oB,EAAAujI,iBACA,QAAAjM,KAAAvuG,EACAl9B,EAAA0jI,EAAA+H,IAAAvuG,EAAAuuG,GAEA,OAAAzrI,EAGA,SAAA65J,GAAArpJ,EAAAspJ,GACA,oBAAA3hJ,KAAA2hJ,EAAAh3J,KACA,OAAA0N,EAAA,cACAR,MAAA8pJ,EAAAzxB,iBAAA4E,YAiBA,IAAA8sB,GAAA,SAAAtnJ,GAAkC,OAAAA,EAAA3P,KAAAkmI,GAAAv2H,IAElCunJ,GAAA,SAAA10H,GAAqC,eAAAA,EAAAxhC,MAErCm2J,IACAn2J,KAAA,aACAkM,MAAAypJ,GACAvf,UAAA,EAEAhqI,OAAA,SAAAM,GACA,IAAA0F,EAAAC,KAEA9F,EAAA8F,KAAAsB,OAAAxH,QACA,GAAAI,IAKAA,IAAAjE,OAAA2tJ,KAEAh3J,OAAA,CAKQ,EAQR,IAAAkoB,EAAA9U,KAAA8U,KAGQ,EASR,IAAA6uI,EAAAzpJ,EAAA,GAIA,GA7DA,SAAA2B,GACA,KAAAA,IAAA1B,QACA,GAAA0B,EAAAhS,KAAAqyJ,WACA,SA0DA6H,CAAA/jJ,KAAAlF,QACA,OAAA6oJ,EAKA,IAAAtiJ,EAAAkiJ,GAAAI,GAEA,IAAAtiJ,EACA,OAAAsiJ,EAGA,GAAA3jJ,KAAAgkJ,SACA,OAAAN,GAAArpJ,EAAAspJ,GAMA,IAAAtrJ,EAAA,gBAAA2H,KAAA,SACAqB,EAAAnL,IAAA,MAAAmL,EAAAnL,IACAmL,EAAAoxH,UACAp6H,EAAA,UACAA,EAAAgJ,EAAA1U,IACA+/H,EAAArrH,EAAAnL,KACA,IAAAtI,OAAAyT,EAAAnL,KAAAqD,QAAAlB,GAAAgJ,EAAAnL,IAAAmC,EAAAgJ,EAAAnL,IACAmL,EAAAnL,IAEA,IAAArM,GAAAwX,EAAAxX,OAAAwX,EAAAxX,UAA8CqyJ,WAAAuH,GAAAzjJ,MAC9CikJ,EAAAjkJ,KAAAihI,OACAijB,EAAAX,GAAAU,GAQA,GAJA5iJ,EAAAxX,KAAAksI,YAAA10H,EAAAxX,KAAAksI,WAAAxwF,KAAAs+G,MACAxiJ,EAAAxX,KAAAo8C,MAAA,GAIAi+G,GACAA,EAAAr6J,OA7FA,SAAAwX,EAAA6iJ,GACA,OAAAA,EAAAhuJ,MAAAmL,EAAAnL,KAAAguJ,EAAAv3J,MAAA0U,EAAA1U,IA6FAw3J,CAAA9iJ,EAAA6iJ,KACArxB,GAAAqxB,MAEAA,EAAApoJ,oBAAAooJ,EAAApoJ,kBAAAmlI,OAAAxO,WACA,CAGA,IAAA0f,EAAA+R,EAAAr6J,KAAAqyJ,WAAA1iJ,KAAwD3P,GAExD,cAAAirB,EAOA,OALA9U,KAAAgkJ,UAAA,EACApqB,GAAAuY,EAAA,wBACApyI,EAAAikJ,UAAA,EACAjkJ,EAAA0hI,iBAEAiiB,GAAArpJ,EAAAspJ,GACO,cAAA7uI,EAAA,CACP,GAAA+9G,GAAAxxH,GACA,OAAA4iJ,EAEA,IAAAG,EACAjG,EAAA,WAAwCiG,KACxCxqB,GAAA/vI,EAAA,aAAAs0J,GACAvkB,GAAA/vI,EAAA,iBAAAs0J,GACAvkB,GAAAuY,EAAA,sBAAAyL,GAAgEwG,EAAAxG,KAIhE,OAAA+F,KAMA9pJ,GAAAL,GACA7M,IAAAiB,OACAy2J,UAAAz2J,QACC01J,IAwID,SAAAgB,GAAAhoJ,GAEAA,EAAA21H,IAAAsyB,SACAjoJ,EAAA21H,IAAAsyB,UAGAjoJ,EAAA21H,IAAAkqB,UACA7/I,EAAA21H,IAAAkqB,WAIA,SAAAqI,GAAAloJ,GACAA,EAAAzS,KAAA46J,OAAAnoJ,EAAA21H,IAAA9kH,wBAGA,SAAAu3I,GAAApoJ,GACA,IAAAqoJ,EAAAroJ,EAAAzS,KAAA+6J,IACAH,EAAAnoJ,EAAAzS,KAAA46J,OACAI,EAAAF,EAAAt3I,KAAAo3I,EAAAp3I,KACAy3I,EAAAH,EAAAr3I,IAAAm3I,EAAAn3I,IACA,GAAAu3I,GAAAC,EAAA,CACAxoJ,EAAAzS,KAAAk7J,OAAA,EACA,IAAAx1H,EAAAjzB,EAAA21H,IAAAnyF,MACAvQ,EAAAy1H,UAAAz1H,EAAA01H,gBAAA,aAAAJ,EAAA,MAAAC,EAAA,MACAv1H,EAAA21H,mBAAA,aA9JArrJ,GAAAib,KAkKA,IAAAqwI,IACArB,cACAsB,iBAjKAvrJ,SAEAwrJ,YAAA,WACA,IAAAtlJ,EAAAC,KAEAyjD,EAAAzjD,KAAA+rI,QACA/rI,KAAA+rI,QAAA,SAAAlwI,EAAAokI,GACA,IAAAkM,EAAA7G,GAAAvlI,GAEAA,EAAAqsI,UACArsI,EAAAkhI,OACAlhI,EAAAulJ,MACA,GACA,GAEAvlJ,EAAAkhI,OAAAlhI,EAAAulJ,KACAnZ,IACA1oF,EAAAjtD,KAAAuJ,EAAAlE,EAAAokI,KAIAlmI,OAAA,SAAAM,GAQA,IAPA,IAAA1N,EAAAqT,KAAArT,KAAAqT,KAAAlF,OAAAjR,KAAA8C,KAAA,OACAkJ,EAAAE,OAAA0R,OAAA,MACA89I,EAAAvlJ,KAAAulJ,aAAAvlJ,KAAA9F,SACAsrJ,EAAAxlJ,KAAAsB,OAAAxH,YACAI,EAAA8F,KAAA9F,YACAurJ,EAAAhC,GAAAzjJ,MAEA/U,EAAA,EAAmBA,EAAAu6J,EAAA54J,OAAwB3B,IAAA,CAC3C,IAAAqR,EAAAkpJ,EAAAv6J,GACA,GAAAqR,EAAA3P,IACA,SAAA2P,EAAApG,KAAA,IAAAtI,OAAA0O,EAAApG,KAAAqD,QAAA,WACAW,EAAAvO,KAAA2Q,GACAzG,EAAAyG,EAAApG,KAAAoG,GACWA,EAAAzS,OAAAyS,EAAAzS,UAAuBqyJ,WAAAuJ,QASlC,GAAAF,EAAA,CAGA,IAFA,IAAAD,KACAI,KACA7Z,EAAA,EAAuBA,EAAA0Z,EAAA34J,OAA2Bi/I,IAAA,CAClD,IAAA8Z,EAAAJ,EAAA1Z,GACA8Z,EAAA97J,KAAAqyJ,WAAAuJ,EACAE,EAAA97J,KAAA+6J,IAAAe,EAAA1zB,IAAA9kH,wBACAtX,EAAA8vJ,EAAAzvJ,KACAovJ,EAAA35J,KAAAg6J,GAEAD,EAAA/5J,KAAAg6J,GAGA3lJ,KAAAslJ,KAAAjrJ,EAAA1N,EAAA,KAAA24J,GACAtlJ,KAAA0lJ,UAGA,OAAArrJ,EAAA1N,EAAA,KAAAuN,IAGA2X,QAAA,WACA,IAAA3X,EAAA8F,KAAAulJ,aACAlB,EAAArkJ,KAAAqkJ,YAAArkJ,KAAArS,MAAA,aACAuM,EAAAtN,QAAAoT,KAAA4lJ,QAAA1rJ,EAAA,GAAA+3H,IAAAoyB,KAMAnqJ,EAAAnB,QAAAurJ,IACApqJ,EAAAnB,QAAAyrJ,IACAtqJ,EAAAnB,QAAA2rJ,IAKA1kJ,KAAA6lJ,QAAA94I,SAAA6O,KAAA6e,aAEAvgC,EAAAnB,QAAA,SAAAuD,GACA,GAAAA,EAAAzS,KAAAk7J,MAAA,CACA,IAAAj4I,EAAAxQ,EAAA21H,IACA1iG,EAAAziB,EAAAgzB,MACA66G,GAAA7tI,EAAAu3I,GACA90H,EAAAy1H,UAAAz1H,EAAA01H,gBAAA11H,EAAA21H,mBAAA,GACAp4I,EAAAzB,iBAAA6uI,GAAAptI,EAAAy3I,QAAA,SAAAh2I,EAAArQ,GACAA,KAAA0C,SAAAkM,GAGA5O,IAAA,aAAA8D,KAAA9D,EAAA4nJ,gBACAh5I,EAAAwvB,oBAAA49G,GAAA3rI,GACAzB,EAAAy3I,QAAA,KACA1J,GAAA/tI,EAAAu3I,WAOA7sE,SACAouE,QAAA,SAAA94I,EAAAu3I,GAEA,IAAAvK,GACA,SAGA,GAAA95I,KAAA+lJ,SACA,OAAA/lJ,KAAA+lJ,SAOA,IAAA9nJ,EAAA6O,EAAA0wD,YACA1wD,EAAAwlI,oBACAxlI,EAAAwlI,mBAAAv5I,QAAA,SAAAq5I,GAAsD15G,GAAAz6B,EAAAm0I,KAEtD75G,GAAAt6B,EAAAomJ,GACApmJ,EAAA6hC,MAAAsjH,QAAA,OACApjJ,KAAAisI,IAAAj0G,YAAA/5B,GACA,IAAAqlB,EAAA03H,GAAA/8I,GAEA,OADA+B,KAAAisI,IAAAhxG,YAAAh9B,GACA+B,KAAA+lJ,SAAAziI,EAAAs4H,iBAyCAz5I,GAAAxX,OAAA4kI,eACAptH,GAAAxX,OAAAukI,iBACA/sH,GAAAxX,OAAAwkI,kBACAhtH,GAAAxX,OAAA0kI,mBACAltH,GAAAxX,OAAAykI,iBA10GA,SAAAziI,GAEA,IAAA+W,EACA,SAEA,GAAAwrH,GAAAviI,GACA,SAIA,GAFAA,IAAA68B,cAEA,MAAAwlH,GAAAriJ,GACA,OAAAqiJ,GAAAriJ,GAEA,IAAAmgB,EAAAC,SAAAqqB,cAAAzqC,GACA,OAAAA,EAAA4M,QAAA,QAEAy1I,GAAAriJ,GACAmgB,EAAAyG,cAAA5P,OAAAqiJ,oBACAl5I,EAAAyG,cAAA5P,OAAAsiJ,YAGAjX,GAAAriJ,GAAA,qBAAAqV,KAAA8K,EAAApW,aAwzGA8C,EAAA2I,GAAAnE,QAAA+3H,WAAAitB,IACAxpJ,EAAA2I,GAAAnE,QAAA3C,WAAA8pJ,IAGAhjJ,GAAA7L,UAAA81I,UAAA1oI,EAAA46I,GAAAj7E,EAGAlhE,GAAA7L,UAAAkqI,OAAA,SACA1zH,EACAmzH,GAGA,OA76JA,SACA1kI,EACAuR,EACAmzH,GAoEA,OAlEA1kI,EAAA0wI,IAAAn/H,EACAvR,EAAAiH,SAAAzI,SACAwB,EAAAiH,SAAAzI,OAAA+4H,IAmBA+O,GAAAtmI,EAAA,eA8BA,IAAAgrI,GAAAhrI,EARA,WACAA,EAAAwwI,QAAAxwI,EAAAgxI,UAAAtM,IAOA58D,GACA8R,OAAA,WACA55E,EAAAqmI,aAAArmI,EAAA2kI,cACA2B,GAAAtmI,EAAA,mBAGG,GACH0kI,GAAA,EAIA,MAAA1kI,EAAAT,SACAS,EAAAqmI,YAAA,EACAC,GAAAtmI,EAAA,YAEAA,EAs2JA2qJ,CAAAlmJ,KADA8M,KAAApJ,EAAA3G,GAAA+P,QAAA7Q,EACAgkI,IAKAv8H,GACAgP,WAAA,WACA/nB,EAAAmkI,UACAA,IACAA,GAAAuX,KAAA,OAAAlkI,KAsBG,GAKH,IAAAgkJ,GAAA,2BACAC,GAAA,yBAEAC,GAAAh5B,EAAA,SAAAi5B,GACA,IAAAvoI,EAAAuoI,EAAA,GAAA1pJ,QAAAwpJ,GAAA,QACA9rI,EAAAgsI,EAAA,GAAA1pJ,QAAAwpJ,GAAA,QACA,WAAAnhJ,OAAA8Y,EAAA,gBAAAzD,EAAA,OAKA,SAAAisI,GACA78H,EACA48H,GAEA,IAAAE,EAAAF,EAAAD,GAAAC,GAAAH,GACA,GAAAK,EAAAxkJ,KAAA0nB,GAAA,CAOA,IAJA,IAGA/yB,EAAAb,EAAA2wJ,EAHAvhJ,KACAwhJ,KACApsB,EAAAksB,EAAAlsB,UAAA,EAEA3jI,EAAA6vJ,EAAAnhJ,KAAAqkB,IAAA,EACA5zB,EAAAa,EAAAb,OAEAwkI,IACAosB,EAAA/6J,KAAA86J,EAAA/8H,EAAAnzB,MAAA+jI,EAAAxkI,IACAoP,EAAAvZ,KAAAkL,KAAAC,UAAA2vJ,KAGA,IAAA1T,EAAAD,GAAAn8I,EAAA,GAAAe,QACAwN,EAAAvZ,KAAA,MAAAonJ,EAAA,KACA2T,EAAA/6J,MAAoBg7J,WAAA5T,IACpBzY,EAAAxkI,EAAAa,EAAA,GAAA/J,OAMA,OAJA0tI,EAAA5wG,EAAA98B,SACA85J,EAAA/6J,KAAA86J,EAAA/8H,EAAAnzB,MAAA+jI,IACAp1H,EAAAvZ,KAAAkL,KAAAC,UAAA2vJ,MAGA38H,WAAA5kB,EAAAtP,KAAA,KACAsP,OAAAwhJ,IAyCA,IAAAE,IACAC,YAAA,eACAC,cArCA,SAAAh6I,EAAA9O,GACAA,EAAA9E,KAAA,IACAm1I,EAAAgH,GAAAvoI,EAAA,SAaAuhI,IACAvhI,EAAAuhI,YAAAx3I,KAAAC,UAAAu3I,IAEA,IAAA0Y,EAAA7R,GAAApoI,EAAA,YACAi6I,IACAj6I,EAAAi6I,iBAkBAC,QAdA,SAAAl6I,GACA,IAAAjjB,EAAA,GAOA,OANAijB,EAAAuhI,cACAxkJ,GAAA,eAAAijB,EAAA,iBAEAA,EAAAi6I,eACAl9J,GAAA,SAAAijB,EAAA,kBAEAjjB,IAgDA,IAQAowH,GARAljC,IACA8vE,YAAA,eACAC,cAvCA,SAAAh6I,EAAA9O,GACAA,EAAA9E,KAAA,IACA8+I,EAAA3C,GAAAvoI,EAAA,SACAkrI,IAcAlrI,EAAAkrI,YAAAnhJ,KAAAC,UAAA8gJ,GAAAI,KAGA,IAAAiP,EAAA/R,GAAApoI,EAAA,YACAm6I,IACAn6I,EAAAm6I,iBAkBAD,QAdA,SAAAl6I,GACA,IAAAjjB,EAAA,GAOA,OANAijB,EAAAkrI,cACAnuJ,GAAA,eAAAijB,EAAA,iBAEAA,EAAAm6I,eACAp9J,GAAA,UAAAijB,EAAA,mBAEAjjB,IAaAq9J,GACA,SAAAC,GAGA,OAFAltC,OAAAltG,SAAAqqB,cAAA,QACAoe,UAAA2xG,EACAltC,GAAAxiF,aAMA2vH,GAAAp6B,EACA,6FAMAq6B,GAAAr6B,EACA,2DAKAs6B,GAAAt6B,EACA,mSAYA1zF,GAAA,4EACAiuH,GAAA,wGACAC,GAAA,6BAAA93B,EAAA,YACA+3B,GAAA,OAAAD,GAAA,QAAAA,GAAA,IACAE,GAAA,IAAAziJ,OAAA,KAAAwiJ,IACAE,GAAA,aACAC,GAAA,IAAA3iJ,OAAA,QAAAwiJ,GAAA,UACAI,GAAA,qBAEA35H,GAAA,SACA45H,GAAA,QAGAC,GAAA/6B,EAAA,4BACAg7B,MAEAC,IACAC,OAAO,IACPC,OAAO,IACPC,SAAS,IACTC,QAAQ,IACRC,QAAQ,KACRC,OAAO,KACPC,QAAQ,KAERC,GAAA,4BACAC,GAAA,mCAGAC,GAAA37B,EAAA,mBACA47B,GAAA,SAAAj8J,EAAAw6J,GAAqD,OAAAx6J,GAAAg8J,GAAAh8J,IAAA,OAAAw6J,EAAA,IAErD,SAAA0B,GAAAzyJ,EAAA0yJ,GACA,IAAAhiJ,EAAAgiJ,EAAAJ,GAAAD,GACA,OAAAryJ,EAAAwG,QAAAkK,EAAA,SAAAnQ,GAA6C,OAAAsxJ,GAAAtxJ,KAmQ7C,IAuBAoyJ,GACAzC,GACA0C,GACAC,GACAC,GACAC,GACAC,GACAC,GA9BAC,GAAA,YACAC,GAAA,YACAC,GAAA,qCACAC,GAAA,iCACAC,GAAA,WACAC,GAAA,WAEAC,GAAA,SACAC,GAAA,kBACAC,GAAA,wBAEAC,GAAA,kBAEAC,GAAA,SACAC,GAAA,OAIAC,GAAA78B,EAAA65B,IAEAiD,GAAA,UAaA,SAAAC,GACAz9J,EACAwP,EACAhC,GAEA,OACAjF,KAAA,EACAvI,MACA2nJ,UAAAn4I,EACAk4I,SA00BA,SAAAl4I,GAEA,IADA,IAAAtG,KACA5K,EAAA,EAAAme,EAAAjN,EAAAvP,OAAmC3B,EAAAme,EAAOne,IAO1C4K,EAAAsG,EAAAlR,GAAA0C,MAAAwO,EAAAlR,GAAAmL,MAEA,OAAAP,EAr1BAw0J,CAAAluJ,GACA84I,eACA96I,SACAD,aAOA,SAAAvQ,GACA2gK,EACAtsJ,GAEA+qJ,GAAA/qJ,EAAA9E,MAAAy6I,GAEAwV,GAAAnrJ,EAAAusJ,UAAAx8B,EACAq7B,GAAAprJ,EAAAuxH,aAAAxB,EACAs7B,GAAArrJ,EAAAqxH,iBAAAtB,EACA,IAAAmB,EAAAlxH,EAAAkxH,eAAAnB,GACA,SAAAjhH,GAAkC,QAAAA,EAAA1R,YAAA8zH,EAAApiH,EAAAngB,OAElCq8J,GAAApV,GAAA51I,EAAA61I,QAAA,iBACAoV,GAAArV,GAAA51I,EAAA61I,QAAA,oBACAqV,GAAAtV,GAAA51I,EAAA61I,QAAA,qBAEAyS,GAAAtoJ,EAAAsoJ,WAEA,IAGAkE,EACAC,EAJAxmJ,KACAymJ,GAAA,IAAA1sJ,EAAA0sJ,mBACAC,EAAA3sJ,EAAA4sJ,WAGAnJ,GAAA,EACAoJ,GAAA,EAUA,SAAAC,EAAA5yH,GAyBA,GAxBA6yH,EAAA7yH,GACAupH,GAAAvpH,EAAA8yH,YACA9yH,EAAA+yH,GAAA/yH,EAAAl6B,IAGAiG,EAAArX,QAAAsrC,IAAAsyH,GAEAA,EAAAU,KAAAhzH,EAAAizH,QAAAjzH,EAAAkzH,OAIAC,GAAAb,GACAzX,IAAA76G,EAAAizH,OACAG,MAAApzH,IAWAuyH,IAAAvyH,EAAAqzH,UACA,GAAArzH,EAAAizH,QAAAjzH,EAAAkzH,KAqZAt+I,EApZAorB,GAqZAplB,EAeA,SAAA5Y,GACA,IAAAjP,EAAAiP,EAAAtN,OACA,KAAA3B,KAAA,CACA,OAAAiP,EAAAjP,GAAAiK,KACA,OAAAgF,EAAAjP,GASAiP,EAAAgK,OA5BAsnJ,CArZAf,EAqZAvwJ,YACA4Y,EAAAo4I,IACAG,GAAAv4I,GACAigI,IAAAjmI,EAAAq+I,OACAG,MAAAx+I,QAxZO,CACP,GAAAorB,EAAAuzH,UAAA,CAIA,IAAA99J,EAAAuqC,EAAAwzH,YAAA,aACWjB,EAAA/qB,cAAA+qB,EAAA/qB,iBAA6D/xI,GAAAuqC,EAExEuyH,EAAAvwJ,SAAAvO,KAAAusC,GACAA,EAAA/9B,OAAAswJ,EA0YA,IAAA39I,EACAgG,EArYAolB,EAAAh+B,SAAAg+B,EAAAh+B,SAAAjE,OAAA,SAAAqG,GAA6D,SAAAmvJ,YAE7DV,EAAA7yH,GAGAA,EAAA0sG,MACA6c,GAAA,GAEA0H,GAAAjxH,EAAAvrC,OACAk+J,GAAA,GAGA,QAAA5/J,EAAA,EAAmBA,EAAAi+J,GAAAt8J,OAA2B3B,IAC9Ci+J,GAAAj+J,GAAAitC,EAAAl6B,GAIA,SAAA+sJ,EAAAj+I,GAEA,IAAA+9I,EAEA,IADA,IAAAc,GAEAA,EAAA7+I,EAAA5S,SAAA4S,EAAA5S,SAAAtN,OAAA,KACA,IAAA++J,EAAAz2J,MACA,MAAAy2J,EAAAjiI,MAEA5c,EAAA5S,SAAAgK,MAyNA,OApnBA,SAAAijJ,EAAAnpJ,GAOA,IANA,IAKAqiC,EAAAurH,EALA3nJ,KACA4nJ,EAAA7tJ,EAAA6tJ,WACAC,EAAA9tJ,EAAAopJ,YAAAr5B,EACAg+B,EAAA/tJ,EAAAqpJ,kBAAAt5B,EACAj4H,EAAA,EAEAqxJ,GAAA,CAGA,GAFA9mH,EAAA8mH,EAEAyE,GAAA7D,GAAA6D,GAkFK,CACL,IAAAI,EAAA,EACAC,EAAAL,EAAApiI,cACA0iI,EAAAlE,GAAAiE,KAAAjE,GAAAiE,GAAA,IAAAhnJ,OAAA,kBAAAgnJ,EAAA,gBACAE,EAAAhF,EAAAvqJ,QAAAsvJ,EAAA,SAAAp3H,EAAApL,EAAAk+H,GAaA,OAZAoE,EAAApE,EAAAh7J,OACAm7J,GAAAkE,IAAA,aAAAA,IACAviI,IACA9sB,QAAA,4BACAA,QAAA,mCAEAgsJ,GAAAqD,EAAAviI,KACAA,IAAAnzB,MAAA,IAEAyH,EAAAouJ,OACApuJ,EAAAouJ,MAAA1iI,GAEA,KAEA5zB,GAAAqxJ,EAAAv6J,OAAAu/J,EAAAv/J,OACAu6J,EAAAgF,EACAE,EAAAJ,EAAAn2J,EAAAk2J,EAAAl2J,OAvGA,CACA,IAAAw2J,EAAAnF,EAAA5tJ,QAAA,KACA,OAAA+yJ,EAAA,CAEA,GAAAp+H,GAAAlsB,KAAAmlJ,GAAA,CACA,IAAAoF,EAAApF,EAAA5tJ,QAAA,UAEA,GAAAgzJ,GAAA,GACAvuJ,EAAAwuJ,mBACAxuJ,EAAAkwB,QAAAi5H,EAAAx/H,UAAA,EAAA4kI,GAAAz2J,IAAAy2J,EAAA,GAEAE,EAAAF,EAAA,GACA,UAKA,GAAAzE,GAAA9lJ,KAAAmlJ,GAAA,CACA,IAAAuF,EAAAvF,EAAA5tJ,QAAA,MAEA,GAAAmzJ,GAAA,GACAD,EAAAC,EAAA,GACA,UAKA,IAAAC,EAAAxF,EAAAxwJ,MAAAkxJ,IACA,GAAA8E,EAAA,CACAF,EAAAE,EAAA,GAAA//J,QACA,SAIA,IAAAggK,EAAAzF,EAAAxwJ,MAAAixJ,IACA,GAAAgF,EAAA,CACA,IAAAC,EAAA/2J,EACA22J,EAAAG,EAAA,GAAAhgK,QACAy/J,EAAAO,EAAA,GAAAC,EAAA/2J,GACA,SAIA,IAAAg3J,EAAAC,IACA,GAAAD,EAAA,CACAE,EAAAF,GACAlE,GAAAkE,EAAA71H,QAAAkwH,IACAsF,EAAA,GAEA,UAIA,IAAA/iI,OAAA,EAAAujI,OAAA,EAAAznJ,OAAA,EACA,GAAA8mJ,GAAA,GAEA,IADAW,EAAA9F,EAAA5wJ,MAAA+1J,KAEA1E,GAAA5lJ,KAAAirJ,IACAvF,GAAA1lJ,KAAAirJ,IACA/+H,GAAAlsB,KAAAirJ,IACAnF,GAAA9lJ,KAAAirJ,KAGAznJ,EAAAynJ,EAAA1zJ,QAAA,QACA,IACA+yJ,GAAA9mJ,EACAynJ,EAAA9F,EAAA5wJ,MAAA+1J,GAEA5iI,EAAAy9H,EAAAx/H,UAAA,EAAA2kI,GAGAA,EAAA,IACA5iI,EAAAy9H,GAGAz9H,GACA+iI,EAAA/iI,EAAA98B,QAGAoR,EAAAouJ,OAAA1iI,GACA1rB,EAAAouJ,MAAA1iI,EAAA5zB,EAAA4zB,EAAA98B,OAAAkJ,GA0BA,GAAAqxJ,IAAA9mH,EAAA,CACAriC,EAAAouJ,OAAApuJ,EAAAouJ,MAAAjF,GAIA,OAOA,SAAAsF,EAAAh5I,GACA3d,GAAA2d,EACA0zI,IAAAx/H,UAAAlU,GAGA,SAAAs5I,IACA,IAAAx/H,EAAA45H,EAAAxwJ,MAAA+wJ,IACA,GAAAn6H,EAAA,CACA,IAMAp4B,EAAA2yB,EANAnxB,GACAsgC,QAAA1J,EAAA,GACApxB,SACAoxB,MAAAz3B,GAIA,IAFA22J,EAAAl/H,EAAA,GAAA3gC,UAEAuI,EAAAgyJ,EAAAxwJ,MAAAgxJ,OAAA7/H,EAAAq/H,EAAAxwJ,MAAA4wJ,KAAAJ,EAAAxwJ,MAAA2iC,MACAxR,EAAAyF,MAAAz3B,EACA22J,EAAA3kI,EAAA,GAAAl7B,QACAk7B,EAAA3yB,IAAAW,EACAa,EAAAwF,MAAAxQ,KAAAm8B,GAEA,GAAA3yB,EAIA,OAHAwB,EAAAu2J,WAAA/3J,EAAA,GACAs3J,EAAAt3J,EAAA,GAAAvI,QACA+J,EAAAxB,IAAAW,EACAa,GAKA,SAAAq2J,EAAAr2J,GACA,IAAAsgC,EAAAtgC,EAAAsgC,QACAi2H,EAAAv2J,EAAAu2J,WAEArB,IACA,MAAAD,GAAAtE,GAAArwH,IACAo1H,EAAAT,GAEAG,EAAA90H,IAAA20H,IAAA30H,GACAo1H,EAAAp1H,IAQA,IAJA,IAAAk2H,EAAArB,EAAA70H,MAAAi2H,EAEA9jJ,EAAAzS,EAAAwF,MAAAvP,OACAuP,EAAA,IAAAxG,MAAAyT,GACAne,EAAA,EAAmBA,EAAAme,EAAOne,IAAA,CAC1B,IAAA6kB,EAAAnZ,EAAAwF,MAAAlR,GACAmL,EAAA0Z,EAAA,IAAAA,EAAA,IAAAA,EAAA,OACAg5I,EAAA,MAAA7xH,GAAA,SAAAnnB,EAAA,GACA9R,EAAAovJ,4BACApvJ,EAAA8qJ,qBACA3sJ,EAAAlR,IACA0C,KAAAmiB,EAAA,GACA1Z,MAAAyyJ,GAAAzyJ,EAAA0yJ,IAQAqE,IACAlpJ,EAAAtY,MAAkBgB,IAAAsqC,EAAAo2H,cAAAp2H,EAAAzN,cAAArtB,QAAAoxB,MAAA52B,EAAA42B,MAAAp4B,IAAAwB,EAAAxB,MAClBy2J,EAAA30H,GAGAj5B,EAAAuvB,OACAvvB,EAAAuvB,MAAA0J,EAAA96B,EAAAgxJ,EAAAx2J,EAAA42B,MAAA52B,EAAAxB,KAIA,SAAAk3J,EAAAp1H,EAAA1J,EAAAp4B,GACA,IAAAyvJ,EAAA0I,EAKA,GAJA,MAAA//H,IAAwBA,EAAAz3B,GACxB,MAAAX,IAAsBA,EAAAW,GAGtBmhC,EAEA,IADAq2H,EAAAr2H,EAAAzN,cACAo7H,EAAA3gJ,EAAArX,OAAA,EAAkCg4J,GAAA,GAClC3gJ,EAAA2gJ,GAAAyI,gBAAAC,EAD4C1I,UAO5CA,EAAA,EAGA,GAAAA,GAAA,GAEA,QAAA35J,EAAAgZ,EAAArX,OAAA,EAAoC3B,GAAA25J,EAAU35J,IAU9C+S,EAAA7I,KACA6I,EAAA7I,IAAA8O,EAAAhZ,GAAA0B,IAAA4gC,EAAAp4B,GAKA8O,EAAArX,OAAAg4J,EACAgH,EAAAhH,GAAA3gJ,EAAA2gJ,EAAA,GAAAj4J,QACK,OAAA2gK,EACLtvJ,EAAAuvB,OACAvvB,EAAAuvB,MAAA0J,MAAA,EAAA1J,EAAAp4B,GAEK,MAAAm4J,IACLtvJ,EAAAuvB,OACAvvB,EAAAuvB,MAAA0J,MAAA,EAAA1J,EAAAp4B,GAEA6I,EAAA7I,KACA6I,EAAA7I,IAAA8hC,EAAA1J,EAAAp4B,IA1HAk3J,IAmTAkB,CAAAjD,GACApxJ,KAAA6vJ,GACA8C,WAAA7tJ,EAAA6tJ,WACAzE,WAAAppJ,EAAAopJ,WACAC,iBAAArpJ,EAAAqpJ,iBACAyB,qBAAA9qJ,EAAA8qJ,qBACAsE,4BAAApvJ,EAAAovJ,4BACAZ,kBAAAxuJ,EAAAwvJ,SACAC,kBAAAzvJ,EAAAyvJ,kBACAlgI,MAAA,SAAA5gC,EAAAwP,EAAAgxJ,EAAAO,EAAAv4J,GAGA,IAAAi9H,EAAAq4B,KAAAr4B,IAAAi3B,GAAA18J,GAIAyjI,GAAA,QAAAgC,IACAj2H,EAmtBA,SAAAA,GAEA,IADA,IAAAa,KACA/R,EAAA,EAAiBA,EAAAkR,EAAAvP,OAAkB3B,IAAA,CACnC,IAAA68B,EAAA3rB,EAAAlR,GACA0iK,GAAA3rJ,KAAA8lB,EAAAn6B,QACAm6B,EAAAn6B,KAAAm6B,EAAAn6B,KAAAiP,QAAAgxJ,GAAA,IACA5wJ,EAAArR,KAAAm8B,IAGA,OAAA9qB,EA5tBA6wJ,CAAA1xJ,IAGA,IAksBA2Q,EAlsBAorB,EAAAkyH,GAAAz9J,EAAAwP,EAAAsuJ,GACAr4B,IACAl6F,EAAAk6F,MAksBA,WAFAtlH,EAtqBAorB,GAwqBAvrC,MACA,WAAAmgB,EAAAngB,KACAmgB,EAAAunI,SAAAn/I,MACA,oBAAA4X,EAAAunI,SAAAn/I,OA3qBA07H,OACA14F,EAAAqzH,WAAA,GAUA,QAAAtgK,EAAA,EAAqBA,EAAAg+J,GAAAr8J,OAA0B3B,IAC/CitC,EAAA+wH,GAAAh+J,GAAAitC,EAAAl6B,IAAAk6B,EAGAupH,KAuIA,SAAA30I,GACA,MAAAuoI,GAAAvoI,EAAA,WACAA,EAAA83H,KAAA,GAxIAkpB,CAAA51H,GACAA,EAAA0sG,MACA6c,GAAA,IAGA0H,GAAAjxH,EAAAvrC,OACAk+J,GAAA,GAEApJ,EAoIA,SAAA30I,GACA,IAAAoI,EAAApI,EAAAwnI,UACAvpI,EAAAmK,EAAAtoB,OACA,GAAAme,EAEA,IADA,IAAA5O,EAAA2Q,EAAA3Q,MAAA,IAAAxG,MAAAoV,GACA9f,EAAA,EAAmBA,EAAA8f,EAAS9f,IAC5BkR,EAAAlR,IACA0C,KAAAunB,EAAAjqB,GAAA0C,KACAyI,MAAAS,KAAAC,UAAAoe,EAAAjqB,GAAAmL,QAEA,MAAA8e,EAAAjqB,GAAAsiC,QACApxB,EAAAlR,GAAAsiC,MAAArY,EAAAjqB,GAAAsiC,MACApxB,EAAAlR,GAAAkK,IAAA+f,EAAAjqB,GAAAkK,UAGG2X,EAAA83H,MAEH93H,EAAAmnI,OAAA,GApJA8Z,CAAA71H,GACOA,EAAA8yH,YAEPgD,GAAA91H,GAqPA,SAAAprB,GACA,IAAAimI,EAAAsC,GAAAvoI,EAAA,QACA,GAAAimI,EACAjmI,EAAAo+I,GAAAnY,EACAsY,GAAAv+I,GACAimI,MACAuY,MAAAx+I,QAEG,CACH,MAAAuoI,GAAAvoI,EAAA,YACAA,EAAAs+I,MAAA,GAEA,IAAAD,EAAA9V,GAAAvoI,EAAA,aACAq+I,IACAr+I,EAAAq+I,WAlQA8C,CAAA/1H,GAgTA,SAAAprB,GAEA,MADAuoI,GAAAvoI,EAAA,YAEAA,EAAAkC,MAAA,GAlTAk/I,CAAAh2H,IAGAsyH,IACAA,EAAAtyH,GAMAi1H,EAIArC,EAAA5yH,IAHAuyH,EAAAvyH,EACAj0B,EAAAtY,KAAAusC,KAMA/iC,IAAA,SAAAxI,EAAA4gC,EAAA4gI,GACA,IAAAj2H,EAAAj0B,IAAArX,OAAA,GAEAqX,EAAArX,QAAA,EACA69J,EAAAxmJ,IAAArX,OAAA,GAIAk+J,EAAA5yH,IAGAk0H,MAAA,SAAA1iI,EAAA6D,EAAAp4B,GACA,GAAAs1J,KAkBAr6B,GACA,aAAAq6B,EAAA99J,KACA89J,EAAApW,SAAAqP,cAAAh6H,GAFA,CAMA,IA8kBA5c,EAxjBA9P,EACAqE,EAvBAnH,EAAAuwJ,EAAAvwJ,SAiBA,GAfAwvB,EADAmhI,GAAAnhI,EAAAhyB,OA8kBA,YADAoV,EA5kBA29I,GA6kBA99J,KAAA,UAAAmgB,EAAAngB,IA7kBA+8B,EAAAwgI,GAAAxgI,GACOxvB,EAAAtN,OAGA+9J,EACP,aAAAA,GAGAX,GAAAhoJ,KAAA0nB,GAAA,GAEA,IAGAghI,EAAA,OAVA,GAaAG,GAAA,aAAAF,IAEAjhI,IAAA9sB,QAAAqtJ,GAAA,OAIAxI,GAAA,MAAA/3H,IAAA1sB,EAAAupJ,GAAA78H,EAAA48H,KACAjlJ,GACAnM,KAAA,EACA40B,WAAA9sB,EAAA8sB,WACA5kB,OAAAlI,EAAAkI,OACAwkB,QAES,MAAAA,GAAAxvB,EAAAtN,QAAA,MAAAsN,IAAAtN,OAAA,GAAA88B,OACTroB,GACAnM,KAAA,EACAw0B,SAGAroB,GAKAnH,EAAAvO,KAAA0V,KAIA6sB,QAAA,SAAAxE,EAAA6D,EAAAp4B,GAGA,GAAAs1J,EAAA,CACA,IAAAppJ,GACAnM,KAAA,EACAw0B,OACA+oG,WAAA,GAEY,EAIZg4B,EAAAvwJ,SAAAvO,KAAA0V,OAIAmpJ,EA8BA,SAAAS,GACA/yH,EACAl6B,GAkDA,IAAA8O,EACA7S,GA5BA,SAAA6S,GACA,IAAAimI,EAAAmC,GAAApoI,EAAA,OACA,GAAAimI,EAAA,CAqBAjmI,EAAA5W,IAAA68I,GA5CAqb,CAAAl2H,GAIAA,EAAA+7G,OACA/7G,EAAAhiC,MACAgiC,EAAAwnG,cACAxnG,EAAAo8G,UAAA1nJ,QA0CAqN,EAAAi7I,GADApoI,EAtCAorB,EAuCA,UAEAprB,EAAA7S,MACA6S,EAAAgjI,SAsZA,SAAAhjI,GAEA,IADA,IAAA3S,EAAA2S,EACA3S,GAAA,CACA,QAAA8B,IAAA9B,EAAAk0J,IACA,SAEAl0J,WAEA,SA9ZAm0J,CAAAxhJ,IA6GA,SAAAA,GACA,IAAA2+I,EACA,aAAA3+I,EAAAngB,KACA8+J,EAAApW,GAAAvoI,EAAA,SAYAA,EAAA2+I,aAAApW,GAAAvoI,EAAA,gBACG2+I,EAAApW,GAAAvoI,EAAA,iBAWHA,EAAA2+I,aAIA,IAAAC,EAAAxW,GAAApoI,EAAA,QACA4+I,IACA5+I,EAAA4+I,WAAA,OAAAA,EAAA,YAAAA,EACA5+I,EAAAyhJ,qBAAAzhJ,EAAAunI,SAAA,WAAAvnI,EAAAunI,SAAA,gBAGA,aAAAvnI,EAAAngB,KAAAmgB,EAAA2+I,WACAvX,GAAApnI,EAAA,OAAA4+I,EAAA1W,GAAAloI,EAAA,UAMA,gBAAAA,EAAAngB,IAAA,CAEA,IAAA6hK,EAAAhZ,GAAA1oI,EAAAi9I,IACA,GAAAyE,EAAA,CACY,EAeZ,IAAAv0J,EAAAw0J,GAAAD,GACA7gK,EAAAsM,EAAAtM,KACAomJ,EAAA95I,EAAA85I,QACAjnI,EAAA4+I,WAAA/9J,EACAmf,EAAAyhJ,kBAAAxa,EACAjnI,EAAA2+I,UAAA+C,EAAAp4J,OAAA+zJ,QAEK,CAEL,IAAAuE,EAAAlZ,GAAA1oI,EAAAi9I,IACA,GAAA2E,EAAA,CACY,EAsBZ,IAAA7zB,EAAA/tH,EAAA4yH,cAAA5yH,EAAA4yH,gBACAivB,EAAAF,GAAAC,GACA3zB,EAAA4zB,EAAAhhK,KACAihK,EAAAD,EAAA5a,QACA8a,EAAAh0B,EAAAE,GAAAqvB,GAAA,cAAAt9I,GACA+hJ,EAAAnD,WAAA3wB,EACA8zB,EAAAN,kBAAAK,EACAC,EAAA30J,SAAA4S,EAAA5S,SAAAjE,OAAA,SAAAqG,GACA,IAAAA,EAAAmvJ,UAEA,OADAnvJ,EAAAnC,OAAA00J,GACA,IAGAA,EAAApD,UAAAiD,EAAAt4J,OAAA+zJ,GAEAr9I,EAAA5S,YAEA4S,EAAAmnI,OAAA,IAvQA6a,CAAA52H,GAiSA,SAAAprB,GACA,SAAAA,EAAAngB,MACAmgB,EAAAiiJ,SAAA7Z,GAAApoI,EAAA,SAlSAkiJ,CAAA92H,GA8SA,SAAAprB,GACA,IAAAs1I,GACAA,EAAAlN,GAAApoI,EAAA,SACAA,EAAA1R,UAAAgnJ,GAEA,MAAA/M,GAAAvoI,EAAA,qBACAA,EAAAuzH,gBAAA,GAnTA4uB,CAAA/2H,GACA,QAAAjtC,EAAA,EAAiBA,EAAA+9J,GAAAp8J,OAAuB3B,IACxCitC,EAAA8wH,GAAA/9J,GAAAitC,EAAAl6B,IAAAk6B,EAGA,OAkTA,SAAAprB,GACA,IACA7hB,EAAAme,EAAAzb,EAAA4jJ,EAAAn7I,EAAAi7I,EAAA6d,EAAAC,EADAj6I,EAAApI,EAAAwnI,UAEA,IAAArpJ,EAAA,EAAAme,EAAA8L,EAAAtoB,OAA8B3B,EAAAme,EAAOne,IAAA,CAGrC,GAFA0C,EAAA4jJ,EAAAr8H,EAAAjqB,GAAA0C,KACAyI,EAAA8e,EAAAjqB,GAAAmL,MACAmzJ,GAAAvnJ,KAAArU,GASA,GAPAmf,EAAAsiJ,aAAA,GAEA/d,EAAAge,GAAA1hK,EAAAiP,QAAA2sJ,GAAA,QAGA57J,IAAAiP,QAAAktJ,GAAA,KAEAD,GAAA7nJ,KAAArU,GACAA,IAAAiP,QAAAitJ,GAAA,IACAzzJ,EAAA08I,GAAA18I,IACA+4J,EAAAxF,GAAA3nJ,KAAArU,MAEAA,IAAA4I,MAAA,OAUA86I,IACAA,EAAAn7G,OAAAi5H,GAEA,eADAxhK,EAAA4/H,EAAA5/H,MACuCA,EAAA,aAEvC0jJ,EAAAie,QAAAH,IACAxhK,EAAA4/H,EAAA5/H,IAEA0jJ,EAAA/zH,OACA4xI,EAAAtZ,GAAAx/I,EAAA,UACA+4J,EAuBAza,GACA5nI,EACA,cAAAnf,EAAA,IACAuhK,EACA,MACA,EACAnG,EACA7zI,EAAAjqB,IACA,IA9BAypJ,GACA5nI,EACA,UAAAygH,EAAA5/H,GACAuhK,EACA,MACA,EACAnG,EACA7zI,EAAAjqB,IAEAyiI,EAAA//H,KAAA4/H,EAAA5/H,IACA+mJ,GACA5nI,EACA,UAAA4gH,EAAA//H,GACAuhK,EACA,MACA,EACAnG,EACA7zI,EAAAjqB,OAkBAomJ,KAAAn7G,OACAppB,EAAA1R,WAAAguJ,GAAAt8I,EAAAngB,IAAAmgB,EAAAunI,SAAAn/I,KAAAvH,GAEAmmJ,GAAAhnI,EAAAnf,EAAAyI,EAAA8e,EAAAjqB,GAAAkkK,GAEAjb,GAAApnI,EAAAnf,EAAAyI,EAAA8e,EAAAjqB,GAAAkkK,QAEO,GAAA7F,GAAAtnJ,KAAArU,GACPA,IAAAiP,QAAA0sJ,GAAA,KACA6F,EAAAxF,GAAA3nJ,KAAArU,MAEAA,IAAA4I,MAAA,OAEAm+I,GAAA5nI,EAAAnf,EAAAyI,EAAAi7I,GAAA,EAAA0X,EAAA7zI,EAAAjqB,GAAAkkK,OACO,CAGP,IAAAI,GAFA5hK,IAAAiP,QAAA2sJ,GAAA,KAEA5yJ,MAAAizJ,IACAnpG,EAAA8uG,KAAA,GACAJ,GAAA,EACA1uG,IACA9yD,IAAA4I,MAAA,IAAAkqD,EAAA7zD,OAAA,IACA+8J,GAAA3nJ,KAAAy+C,KACAA,IAAAlqD,MAAA,MACA44J,GAAA,IAGA5a,GAAAznI,EAAAnf,EAAA4jJ,EAAAn7I,EAAAqqD,EAAA0uG,EAAA9d,EAAAn8H,EAAAjqB,SAmBAipJ,GAAApnI,EAAAnf,EAAAkJ,KAAAC,UAAAV,GAAA8e,EAAAjqB,KAGA6hB,EAAA1R,WACA,UAAAzN,GACAy7J,GAAAt8I,EAAAngB,IAAAmgB,EAAAunI,SAAAn/I,KAAAvH,IACAmmJ,GAAAhnI,EAAAnf,EAAA,OAAAunB,EAAAjqB,KAnbAukK,CAAAt3H,GACAA,EAsCA,SAAA81H,GAAAlhJ,GACA,IAAAimI,EACA,GAAAA,EAAAsC,GAAAvoI,EAAA,UACA,IAAA9P,EAcA,SAAA+1I,GACA,IAAA0c,EAAA1c,EAAAp8I,MAAA6yJ,IACA,IAAAiG,EAAiB,OACjB,IAAAzyJ,KACAA,EAAAqxJ,IAAAoB,EAAA,GAAA/3J,OACA,IAAAuR,EAAAwmJ,EAAA,GAAA/3J,OAAAkF,QAAA8sJ,GAAA,IACAgG,EAAAzmJ,EAAAtS,MAAA8yJ,IACAiG,GACA1yJ,EAAAiM,QAAArM,QAAA6sJ,GAAA,IAAA/xJ,OACAsF,EAAA2yJ,UAAAD,EAAA,GAAAh4J,OACAg4J,EAAA,KACA1yJ,EAAA4yJ,UAAAF,EAAA,GAAAh4J,SAGAsF,EAAAiM,QAEA,OAAAjM,EA9BA6yJ,CAAA9c,GACA/1I,GACAxD,EAAAsT,EAAA9P,IAoFA,SAAAquJ,GAAAv+I,EAAA3T,GACA2T,EAAAgjJ,eACAhjJ,EAAAgjJ,iBAEAhjJ,EAAAgjJ,aAAAnkK,KAAAwN,GAmIA,SAAAs1J,GAAArM,GACA,IAAAz0J,EAAAy0J,EAAAz0J,KAAAiP,QAAAmtJ,GAAA,IAWA,OAVAp8J,GACA,MAAAy0J,EAAAz0J,KAAA,KACAA,EAAA,WAQAg8J,GAAA3nJ,KAAArU,IAEOA,OAAA4I,MAAA,MAAAw9I,SAAA,IAEApmJ,KAAA,IAAAA,EAAA,IAAAomJ,SAAA,GA6KP,SAAAsb,GAAA1hK,GACA,IAAAgJ,EAAAhJ,EAAAgJ,MAAAmzJ,IACA,GAAAnzJ,EAAA,CACA,IAAA2tC,KAEA,OADA3tC,EAAAoC,QAAA,SAAAuM,GAAgCg/B,EAAAh/B,EAAA/O,MAAA,SAChC+tC,GAiCA,IAAAqpH,GAAA,eACAC,GAAA,UAgGA,SAAAmC,GAAAjjJ,GACA,OAAAs9I,GAAAt9I,EAAAngB,IAAAmgB,EAAAwnI,UAAA/9I,QAAAuW,EAAA3S,QAGA,IAIA61J,IACApJ,GACA7vE,IALAk5E,iBAnEA,SAAAnjJ,EAAA9O,GACA,aAAA8O,EAAAngB,IAAA,CACA,IAKAujK,EALAr6J,EAAAiX,EAAAunI,SACA,IAAAx+I,EAAA,WACA,OAWA,IAPAA,EAAA,UAAAA,EAAA,kBACAq6J,EAAAhb,GAAApoI,EAAA,SAEAjX,EAAAX,MAAAg7J,IAAAr6J,EAAA,YACAq6J,EAAA,IAAAr6J,EAAA,oBAGAq6J,EAAA,CACA,IAAAC,EAAA9a,GAAAvoI,EAAA,WACAsjJ,EAAAD,EAAA,MAAAA,EAAA,OACAE,EAAA,MAAAhb,GAAAvoI,EAAA,aACAwjJ,EAAAjb,GAAAvoI,EAAA,gBAEAyjJ,EAAAR,GAAAjjJ,GAEAkhJ,GAAAuC,GACAnc,GAAAmc,EAAA,mBACAtF,GAAAsF,EAAAvyJ,GACAuyJ,EAAAvF,WAAA,EACAuF,EAAArF,GAAA,IAAAgF,EAAA,iBAAAE,EACA/E,GAAAkF,GACAxd,IAAAwd,EAAArF,GACAI,MAAAiF,IAGA,IAAAC,EAAAT,GAAAjjJ,GACAuoI,GAAAmb,EAAA,YACApc,GAAAoc,EAAA,gBACAvF,GAAAuF,EAAAxyJ,GACAqtJ,GAAAkF,GACAxd,IAAA,IAAAmd,EAAA,cAAAE,EACA9E,MAAAkF,IAGA,IAAAC,EAAAV,GAAAjjJ,GAeA,OAdAuoI,GAAAob,EAAA,YACArc,GAAAqc,EAAA,QAAAP,GACAjF,GAAAwF,EAAAzyJ,GACAqtJ,GAAAkF,GACAxd,IAAAod,EACA7E,MAAAmF,IAGAJ,EACAE,EAAAnF,MAAA,EACOkF,IACPC,EAAApF,OAAAmF,GAGAC,OAmCA,IAuBAG,GACAC,GAhBAv8E,IACAy3E,YAAA,EACAhY,QAAAmc,GACAj6B,YAVA0N,MAhtGA,SACA32H,EACAq6C,EACAypG,GAEAA,EACA,IAAAx6J,EAAA+wD,EAAA/wD,MACAi7I,EAAAlqF,EAAAkqF,UACA1kJ,EAAAmgB,EAAAngB,IACAuI,EAAA4X,EAAAunI,SAAAn/I,KAcA,GAAA4X,EAAA1R,UAGA,OAFAq6I,GAAA3oI,EAAA1W,EAAAi7I,IAEA,EACG,cAAA1kJ,GAqEH,SACAmgB,EACA1W,EACAi7I,GAEA,IAOAlzH,EAAA,8KAPAkzH,KAAA1oH,OAIA,uBAIAxK,IAAA,IAAAy3H,GAAAx/I,EAFA,6DAGAs+I,GAAA5nI,EAAA,SAAAqR,EAAA,SAlFA0yI,CAAA/jJ,EAAA1W,EAAAi7I,QACG,aAAA1kJ,GAAA,aAAAuI,GAwBH,SACA4X,EACA1W,EACAi7I,GAEA,IAAA1oH,EAAA0oH,KAAA1oH,OACAmoI,EAAA5b,GAAApoI,EAAA,iBACAikJ,EAAA7b,GAAApoI,EAAA,sBACAkkJ,EAAA9b,GAAApoI,EAAA,wBACAgnI,GAAAhnI,EAAA,UACA,iBAAA1W,EAAA,QACAA,EAAA,IAAA06J,EAAA,QACA,SAAAC,EACA,KAAA36J,EAAA,IACA,OAAAA,EAAA,IAAA26J,EAAA,MAGArc,GAAA5nI,EAAA,SACA,WAAA1W,EAAA,yCAEA26J,EAAA,MAAAC,EAAA,qCAEAroI,EAAA,MAAAmoI,EAAA,IAAAA,GAAA,6CAEwBlb,GAAAx/I,EAAA,wCACZw/I,GAAAx/I,EAAA,wDACDw/I,GAAAx/I,EAAA,WACX,SAlDA66J,CAAAnkJ,EAAA1W,EAAAi7I,QACG,aAAA1kJ,GAAA,UAAAuI,GAqDH,SACA4X,EACA1W,EACAi7I,GAEA,IAAA1oH,EAAA0oH,KAAA1oH,OACAmoI,EAAA5b,GAAApoI,EAAA,iBAEAgnI,GAAAhnI,EAAA,gBAAA1W,EAAA,KADA06J,EAAAnoI,EAAA,MAAAmoI,EAAA,IAAAA,GACA,KACApc,GAAA5nI,EAAA,SAAA8oI,GAAAx/I,EAAA06J,GAAA,SA7DAI,CAAApkJ,EAAA1W,EAAAi7I,QACG,aAAA1kJ,GAAA,aAAAA,GAgFH,SACAmgB,EACA1W,EACAi7I,GAEA,IAAAn8I,EAAA4X,EAAAunI,SAAAn/I,KAiBA+E,EAAAo3I,MACAxK,EAAA5sI,EAAA4sI,KACAl+G,EAAA1uB,EAAA0uB,OACAjxB,EAAAuC,EAAAvC,KACAy5J,GAAAtqB,GAAA,UAAA3xI,EACA4K,EAAA+mI,EACA,SACA,UAAA3xI,EACAohJ,GACA,QAEAZ,EAAA,sBACAh+I,IACAg+I,EAAA,8BAEA/sH,IACA+sH,EAAA,MAAAA,EAAA,KAGA,IAAAv3H,EAAAy3H,GAAAx/I,EAAAs/I,GACAyb,IACAhzI,EAAA,qCAA8CA,GAG9C21H,GAAAhnI,EAAA,YAAA1W,EAAA,KACAs+I,GAAA5nI,EAAAhN,EAAAqe,EAAA,UACAzmB,GAAAixB,IACA+rH,GAAA5nI,EAAA,yBAhIAskJ,CAAAtkJ,EAAA1W,EAAAi7I,QACG,IAAA1mJ,EAAAukI,cAAAviI,GAGH,OAFA8oJ,GAAA3oI,EAAA1W,EAAAi7I,IAEA,EAYA,UA+pGA3nH,KAhBA,SAAA5c,EAAAq6C,GACAA,EAAA/wD,OACA09I,GAAAhnI,EAAA,oBAAAq6C,EAAA,UAAAA,IAeAggG,KATA,SAAAr6I,EAAAq6C,GACAA,EAAA/wD,OACA09I,GAAAhnI,EAAA,kBAAAq6C,EAAA,UAAAA,KAgBAojG,SA93JA,SAAA59J,GAA+B,cAAAA,GA+3J/By6J,cACA73B,eACA83B,oBACAn4B,iBACAG,mBACAw3B,WAlmUA,SAAAhT,GACA,OAAAA,EAAAz7I,OAAA,SAAApC,EAAAsP,GACA,OAAAtP,EAAAkC,OAAAoN,EAAAuhJ,qBACGjxJ,KAAA,KA+lUHy7J,CAAArB,KAQAsB,GAAAjkC,EAuBA,SAAAr3H,GACA,OAAAg3H,EACA,iFACAh3H,EAAA,IAAAA,EAAA,OAbA,SAAAu7J,GAAA/G,EAAAxsJ,GACAwsJ,IACAkG,GAAAY,GAAAtzJ,EAAA6oJ,YAAA,IACA8J,GAAA3yJ,EAAAkxH,eAAAnB,EAcA,SAAAyjC,EAAAp2H,GACAA,EAAAq2H,OA6DA,SAAAr2H,GACA,OAAAA,EAAAlmC,KACA,SAEA,OAAAkmC,EAAAlmC,KACA,SAEA,SAAAkmC,EAAAwpG,MACAxpG,EAAAg0H,aACAh0H,EAAA8vH,IAAA9vH,EAAAizH,KACAnhC,EAAA9xF,EAAAzuC,OACAgkK,GAAAv1H,EAAAzuC,MAMA,SAAAyuC,GACA,KAAAA,EAAAjhC,QAAA,CAEA,iBADAihC,IAAAjhC,QACAxN,IACA,SAEA,GAAAyuC,EAAAizH,IACA,SAGA,SAfAqD,CAAAt2H,KACArlC,OAAAC,KAAAolC,GAAAp8B,MAAA0xJ,MA1EAnvJ,CAAA65B,GACA,OAAAA,EAAAlmC,KAAA,CAIA,IACAy7J,GAAAv1H,EAAAzuC,MACA,SAAAyuC,EAAAzuC,KACA,MAAAyuC,EAAAi5G,SAAA,mBAEA,OAEA,QAAAppJ,EAAA,EAAAme,EAAAgyB,EAAAlhC,SAAAtN,OAA6C3B,EAAAme,EAAOne,IAAA,CACpD,IAAAoW,EAAA+5B,EAAAlhC,SAAAjP,GACAumK,EAAAnwJ,GACAA,EAAAowJ,SACAr2H,EAAAq2H,QAAA,GAGA,GAAAr2H,EAAA00H,aACA,QAAAjkB,EAAA,EAAA8lB,EAAAv2H,EAAA00H,aAAAljK,OAAuDi/I,EAAA8lB,EAAW9lB,IAAA,CAClE,IAAAyf,EAAAlwH,EAAA00H,aAAAjkB,GAAAyf,MACAkG,EAAAlG,GACAA,EAAAmG,SACAr2H,EAAAq2H,QAAA,KArCAD,CAAAhH,GA4CA,SAAAoH,EAAAx2H,EAAAgiG,GACA,OAAAhiG,EAAAlmC,KAAA,CAOA,IANAkmC,EAAAq2H,QAAAr2H,EAAApsB,QACAosB,EAAAy2H,YAAAz0B,GAKAhiG,EAAAq2H,QAAAr2H,EAAAlhC,SAAAtN,SACA,IAAAwuC,EAAAlhC,SAAAtN,QACA,IAAAwuC,EAAAlhC,SAAA,GAAAhF,MAGA,YADAkmC,EAAA02H,YAAA,GAKA,GAFA12H,EAAA02H,YAAA,EAEA12H,EAAAlhC,SACA,QAAAjP,EAAA,EAAAme,EAAAgyB,EAAAlhC,SAAAtN,OAA+C3B,EAAAme,EAAOne,IACtD2mK,EAAAx2H,EAAAlhC,SAAAjP,GAAAmyI,KAAAhiG,EAAAizH,KAGA,GAAAjzH,EAAA00H,aACA,QAAAjkB,EAAA,EAAA8lB,EAAAv2H,EAAA00H,aAAAljK,OAAuDi/I,EAAA8lB,EAAW9lB,IAClE+lB,EAAAx2H,EAAA00H,aAAAjkB,GAAAyf,MAAAluB,IAlEAw0B,CAAApH,GAAA,IAwGA,IAAAuH,GAAA,0DACAC,GAAA,gBACAC,GAAA,+FAGAhjC,IACAijC,IAAA,GACAC,IAAA,EACApW,MAAA,GACAqW,MAAA,GACAC,GAAA,GACAhlJ,KAAA,GACAu/C,MAAA,GACA0lG,KAAA,GACApxH,QAAA,OAIAqxH,IAEAL,KAAA,gBACAC,IAAA,MACApW,MAAA,QAEAqW,OAAA,gBAEAC,IAAA,gBACAhlJ,MAAA,oBACAu/C,OAAA,sBACA0lG,MAAA,oBAEApxH,QAAA,6BAMAsxH,GAAA,SAAAr5J,GAAqC,YAAAA,EAAA,iBAErCs5J,IACAC,KAAA,4BACAC,QAAA,2BACA/4I,KAAA44I,GAAA,0CACAI,KAAAJ,GAAA,mBACAr1J,MAAAq1J,GAAA,oBACAK,IAAAL,GAAA,kBACAr0J,KAAAq0J,GAAA,mBACAnlJ,KAAAmlJ,GAAA,6CACAv4D,OAAAu4D,GAAA,6CACA5lG,MAAA4lG,GAAA,8CAGA,SAAAM,GACAle,EACA5jB,GAEA,IAAA76H,EAAA66H,EAAA,kBACA+hC,EAAA,GACAC,EAAA,GACA,QAAArlK,KAAAinJ,EAAA,CACA,IAAAqe,EAAAC,GAAAte,EAAAjnJ,IACAinJ,EAAAjnJ,IAAAinJ,EAAAjnJ,GAAAomJ,QACAif,GAAArlK,EAAA,IAAAslK,EAAA,IAEAF,GAAA,IAAAplK,EAAA,KAAAslK,EAAA,IAIA,OADAF,EAAA,IAAqBA,EAAAx8J,MAAA,UACrBy8J,EACA78J,EAAA,MAAA48J,EAAA,KAAAC,EAAAz8J,MAAA,WAEAJ,EAAA48J,EAIA,SAAAG,GAAAnyJ,GACA,IAAAA,EACA,qBAGA,GAAApL,MAAAyH,QAAA2D,GACA,UAAAA,EAAAlL,IAAA,SAAAkL,GAAmD,OAAAmyJ,GAAAnyJ,KAA8BnL,KAAA,SAGjF,IAAAu9J,EAAAlB,GAAAjwJ,KAAAjB,EAAA3K,OACAg9J,EAAArB,GAAA/vJ,KAAAjB,EAAA3K,OACAi9J,EAAApB,GAAAjwJ,KAAAjB,EAAA3K,MAAAwG,QAAAo1J,GAAA,KAEA,GAAAjxJ,EAAAswI,UAKG,CACH,IAAAlzH,EAAA,GACAm1I,EAAA,GACAt9J,KACA,QAAAE,KAAA6K,EAAAswI,UACA,GAAAohB,GAAAv8J,GACAo9J,GAAAb,GAAAv8J,GAEA+4H,GAAA/4H,IACAF,EAAArK,KAAAuK,QAEO,aAAAA,EAAA,CACP,IAAAm7I,EAAAtwI,EAAA,UACAuyJ,GAAAd,IACA,6BACAv8J,OAAA,SAAAs9J,GAA4C,OAAAliB,EAAAkiB,KAC5C19J,IAAA,SAAA09J,GAAyC,gBAAAA,EAAA,QACzC39J,KAAA,YAGAI,EAAArK,KAAAuK,GAiBA,OAdAF,EAAApJ,SACAuxB,GAiBA,SAAAnoB,GACA,MAIA,mCACAA,EAAAH,IAAA29J,IAAA59J,KAAA,sBAvBA69J,CAAAz9J,IAGAs9J,IACAn1I,GAAAm1I,GASA,oBAA8Bn1I,GAP9Bg1I,EACA,UAAApyJ,EAAA,iBACAqyJ,EACA,WAAAryJ,EAAA,kBACAsyJ,EACA,UAAAtyJ,EAAA,MACAA,EAAA3K,OAC8B,IAzC9B,OAAA+8J,GAAAC,EACAryJ,EAAA3K,MAEA,qBAA8Bi9J,EAAA,UAAAtyJ,EAAA,MAAAA,EAAA3K,OAAA,IAoD9B,SAAAo9J,GAAAt9J,GACA,IAAAw9J,EAAAhrI,SAAAxyB,EAAA,IACA,GAAAw9J,EACA,0BAAAA,EAEA,IAAA51H,EAAAmxF,GAAA/4H,GACAy9J,EAAApB,GAAAr8J,GACA,MACA,qBACAW,KAAAC,UAAAZ,GAAA,IACAW,KAAAC,UAAAgnC,GAAA,eAEAjnC,KAAAC,UAAA68J,GACA,IAuBA,IAAAC,IACA3yJ,GAlBA,SAAA6L,EAAAq6C,GAIAr6C,EAAA+mJ,cAAA,SAAA11I,GAAsC,YAAAA,EAAA,IAAAgpC,EAAA,YAetC12C,KAVA,SAAA3D,EAAAq6C,GACAr6C,EAAAgnJ,SAAA,SAAA31I,GACA,YAAAA,EAAA,KAAArR,EAAA,SAAAq6C,EAAA,WAAAA,EAAAkqF,WAAAlqF,EAAAkqF,UAAAn7G,KAAA,iBAAAixB,EAAAkqF,WAAAlqF,EAAAkqF,UAAA/zH,KAAA,kBASAy2I,MAAA1wF,GASA2wF,GAAA,SAAAh2J,GACAgC,KAAAhC,UACAgC,KAAA9G,KAAA8E,EAAA9E,MAAAy6I,GACA3zI,KAAAgpJ,WAAApV,GAAA51I,EAAA61I,QAAA,iBACA7zI,KAAAi0J,WAAArgB,GAAA51I,EAAA61I,QAAA,WACA7zI,KAAA+1H,WAAAv8H,OAAoCo6J,IAAA51J,EAAA+3H,YACpC,IAAA7G,EAAAlxH,EAAAkxH,eAAAnB,EACA/tH,KAAAk0J,eAAA,SAAApnJ,GAAuC,QAAAA,EAAA1R,YAAA8zH,EAAApiH,EAAAngB,MACvCqT,KAAAm0J,OAAA,EACAn0J,KAAAw9H,mBACAx9H,KAAA4kI,KAAA,GAKA,SAAAwvB,GACAC,EACAr2J,GAEA,IAAAuN,EAAA,IAAAyoJ,GAAAh2J,GAEA,OACAjE,OAAA,sBAFAs6J,EAAAC,GAAAD,EAAA9oJ,GAAA,aAEyB,IACzBiyH,gBAAAjyH,EAAAiyH,iBAIA,SAAA82B,GAAAxnJ,EAAAvB,GAKA,GAJAuB,EAAA3S,SACA2S,EAAA83H,IAAA93H,EAAA83H,KAAA93H,EAAA3S,OAAAyqI,KAGA93H,EAAAglJ,aAAAhlJ,EAAAynJ,gBACA,OAAAC,GAAA1nJ,EAAAvB,GACG,GAAAuB,EAAAkC,OAAAlC,EAAA2nJ,cACH,OAAAC,GAAA5nJ,EAAAvB,GACG,GAAAuB,EAAAuhJ,MAAAvhJ,EAAA6nJ,aACH,OAAAC,GAAA9nJ,EAAAvB,GACG,GAAAuB,EAAAo+I,KAAAp+I,EAAA+nJ,YACH,OAAAC,GAAAhoJ,EAAAvB,GACG,gBAAAuB,EAAAngB,KAAAmgB,EAAA4+I,YAAAngJ,EAAAq5H,IAEA,aAAA93H,EAAAngB,IACH,OAubA,SAAAmgB,EAAAvB,GACA,IAAAwjJ,EAAAjiJ,EAAAiiJ,UAAA,YACA70J,EAAA66J,GAAAjoJ,EAAAvB,GACAvO,EAAA,MAAA+xJ,GAAA70J,EAAA,IAAAA,EAAA,IACAiC,EAAA2Q,EAAA3Q,OAAA2Q,EAAAqnI,aACA6gB,IAAAloJ,EAAA3Q,WAAAjE,OAAA4U,EAAAqnI,kBAAAt+I,IAAA,SAAAiyB,GAAmF,OAEnFn6B,KAAA4/H,EAAAzlG,EAAAn6B,MACAyI,MAAA0xB,EAAA1xB,MACA29I,QAAAjsH,EAAAisH,YAEA,KACAkhB,EAAAnoJ,EAAAunI,SAAA,WACAl4I,IAAA84J,GAAA/6J,IACA8C,GAAA,SAEAb,IACAa,GAAA,IAAAb,GAEA84J,IACAj4J,IAAAb,EAAA,gBAAA84J,GAEA,OAAAj4J,EAAA,IA7cAk4J,CAAApoJ,EAAAvB,GAGA,IAAA4S,EACA,GAAArR,EAAA1R,UACA+iB,EA4cA,SACAymB,EACA93B,EACAvB,GAEA,IAAArR,EAAA4S,EAAAuzH,eAAA,KAAA00B,GAAAjoJ,EAAAvB,GAAA,GACA,YAAAq5B,EAAA,IAAAuwH,GAAAroJ,EAAAvB,IAAArR,EAAA,IAAAA,EAAA,QAldAk7J,CAAAtoJ,EAAA1R,UAAA0R,EAAAvB,OACK,CACL,IAAA1hB,IACAijB,EAAAmnI,OAAAnnI,EAAA83H,KAAAr5H,EAAA2oJ,eAAApnJ,MACAjjB,EAAAsrK,GAAAroJ,EAAAvB,IAGA,IAAArR,EAAA4S,EAAAuzH,eAAA,KAAA00B,GAAAjoJ,EAAAvB,GAAA,GACA4S,EAAA,OAAArR,EAAA,SAAAjjB,EAAA,IAAAA,EAAA,KAAAqQ,EAAA,IAAAA,EAAA,QAGA,QAAAjP,EAAA,EAAmBA,EAAAsgB,EAAAy9I,WAAAp8J,OAA6B3B,IAChDkzB,EAAA5S,EAAAy9I,WAAA/9J,GAAA6hB,EAAAqR,GAEA,OAAAA,EArBA,OAAA42I,GAAAjoJ,EAAAvB,IAAA,SA0BA,SAAAipJ,GAAA1nJ,EAAAvB,GACAuB,EAAAynJ,iBAAA,EAIA,IAAAc,EAAA9pJ,EAAAq5H,IAMA,OALA93H,EAAA83H,MACAr5H,EAAAq5H,IAAA93H,EAAA83H,KAEAr5H,EAAAiyH,gBAAA7xI,KAAA,qBAA0C2oK,GAAAxnJ,EAAAvB,GAAA,KAC1CA,EAAAq5H,IAAAywB,EACA,OAAA9pJ,EAAAiyH,gBAAA5wI,OAAA,IAAAkgB,EAAA+kJ,YAAA,gBAIA,SAAA6C,GAAA5nJ,EAAAvB,GAEA,GADAuB,EAAA2nJ,eAAA,EACA3nJ,EAAAo+I,KAAAp+I,EAAA+nJ,YACA,OAAAC,GAAAhoJ,EAAAvB,GACG,GAAAuB,EAAA+kJ,YAAA,CAGH,IAFA,IAAA37J,EAAA,GACAiE,EAAA2S,EAAA3S,OACAA,GAAA,CACA,GAAAA,EAAAk0J,IAAA,CACAn4J,EAAAiE,EAAAjE,IACA,MAEAiE,WAEA,OAAAjE,EAOA,MAAAo+J,GAAAxnJ,EAAAvB,GAAA,IAAAA,EAAA4oJ,SAAA,IAAAj+J,EAAA,IAFAo+J,GAAAxnJ,EAAAvB,GAIA,OAAAipJ,GAAA1nJ,EAAAvB,GAIA,SAAAupJ,GACAhoJ,EACAvB,EACA+pJ,EACAC,GAGA,OADAzoJ,EAAA+nJ,aAAA,EAIA,SAAAW,EACAC,EACAlqJ,EACA+pJ,EACAC,GAEA,IAAAE,EAAA7oK,OACA,OAAA2oK,GAAA,OAGA,IAAAp8J,EAAAs8J,EAAAt4J,QACA,OAAAhE,EAAA45I,IACA,IAAA55I,EAAA,SAAAu8J,EAAAv8J,EAAAmyJ,OAAA,IAAAkK,EAAAC,EAAAlqJ,EAAA+pJ,EAAAC,GAEA,GAAAG,EAAAv8J,EAAAmyJ,OAIA,SAAAoK,EAAA5oJ,GACA,OAAAwoJ,EACAA,EAAAxoJ,EAAAvB,GACAuB,EAAAkC,KACA0lJ,GAAA5nJ,EAAAvB,GACA+oJ,GAAAxnJ,EAAAvB,IA1BAiqJ,CAAA1oJ,EAAAgjJ,aAAAv5J,QAAAgV,EAAA+pJ,EAAAC,GA8BA,SAAAX,GACA9nJ,EACAvB,EACA+pJ,EACAK,GAEA,IAAA5iB,EAAAjmI,EAAAuhJ,IACAplJ,EAAA6D,EAAA7D,MACA0mJ,EAAA7iJ,EAAA6iJ,UAAA,IAAA7iJ,EAAA,aACA8iJ,EAAA9iJ,EAAA8iJ,UAAA,IAAA9iJ,EAAA,aAkBA,OADAA,EAAA6nJ,cAAA,GACAgB,GAAA,WAAA5iB,EAAA,cACA9pI,EAAA0mJ,EAAAC,EAAA,aACA0F,GAAAhB,IAAAxnJ,EAAAvB,GACA,KAGA,SAAA4pJ,GAAAroJ,EAAAvB,GACA,IAAA1hB,EAAA,IAIAisI,EA+EA,SAAAhpH,EAAAvB,GACA,IAAAuqH,EAAAhpH,EAAAipH,WACA,IAAAD,EAAc,OACd,IAEA7qI,EAAAme,EAAA+9C,EAAAyuG,EAFA54J,EAAA,eACA64J,GAAA,EAEA,IAAA5qK,EAAA,EAAAme,EAAA0sH,EAAAlpI,OAA8B3B,EAAAme,EAAOne,IAAA,CACrCk8D,EAAA2uE,EAAA7qI,GACA2qK,GAAA,EACA,IAAAE,EAAAvqJ,EAAAwqH,WAAA5uE,EAAAx5D,MACAmoK,IAGAF,IAAAE,EAAAhpJ,EAAAq6C,EAAA57C,EAAArS,OAEA08J,IACAC,GAAA,EACA74J,GAAA,UAAemqD,EAAA,mBAAAA,EAAA,aAAAA,EAAA/wD,MAAA,WAAA+wD,EAAA,sBAAAtwD,KAAAC,UAAAqwD,EAAA/wD,OAAA,KAAA+wD,EAAA1G,IAAA,SAAA0G,EAAAqtF,aAAArtF,EAAA1G,IAAA,IAAA0G,EAAA,cAAAA,EAAAkqF,UAAA,cAAAx6I,KAAAC,UAAAqwD,EAAAkqF,WAAA,UAGf,GAAAwkB,EACA,OAAA74J,EAAAzG,MAAA,UApGAw/J,CAAAjpJ,EAAAvB,GACAuqH,IAAajsI,GAAAisI,EAAA,KAGbhpH,EAAA5W,MACArM,GAAA,OAAAijB,EAAA,SAGAA,EAAA7S,MACApQ,GAAA,OAAAijB,EAAA,SAEAA,EAAAgjI,WACAjmJ,GAAA,kBAGAijB,EAAA83H,MACA/6I,GAAA,aAGAijB,EAAA1R,YACAvR,GAAA,QAAAijB,EAAA,UAGA,QAAA7hB,EAAA,EAAiBA,EAAAsgB,EAAA0oJ,WAAArnK,OAA6B3B,IAC9CpB,GAAA0hB,EAAA0oJ,WAAAhpK,GAAA6hB,GA+BA,GA5BAA,EAAA3Q,QACAtS,GAAA,SAAAmrK,GAAAloJ,EAAA3Q,OAAA,KAGA2Q,EAAAjT,QACAhQ,GAAA,YAAAmrK,GAAAloJ,EAAAjT,OAAA,KAGAiT,EAAA8nI,SACA/qJ,GAAAipK,GAAAhmJ,EAAA8nI,QAAA,QAEA9nI,EAAAgoI,eACAjrJ,GAAAipK,GAAAhmJ,EAAAgoI,cAAA,QAIAhoI,EAAA4+I,aAAA5+I,EAAA2+I,YACA5hK,GAAA,QAAAijB,EAAA,gBAGAA,EAAA4yH,cACA71I,GAwEA,SACAijB,EACA+tH,EACAtvH,GAMA,IAAAw1H,EAAAj0H,EAAAuhJ,KAAAt4J,OAAAC,KAAA6kI,GAAAt1F,KAAA,SAAArvC,GACA,IAAA4kI,EAAAD,EAAA3kI,GACA,OACA4kI,EAAAyzB,mBACAzzB,EAAAowB,IACApwB,EAAAuzB,KACA2H,GAAAl7B,KAQAm7B,IAAAnpJ,EAAAo+I,GAOA,IAAAnqB,EAEA,IADA,IAAA5mI,EAAA2S,EAAA3S,OACAA,GAAA,CACA,GACAA,EAAAsxJ,WAAAtxJ,EAAAsxJ,YAAAtB,IACAhwJ,EAAAk0J,IACA,CACAttB,GAAA,EACA,MAEA5mI,EAAA+wJ,KACA+K,GAAA,GAEA97J,WAIA,IAAA+7J,EAAAngK,OAAAC,KAAA6kI,GACAhlI,IAAA,SAAAK,GAAyB,OAAAigK,GAAAt7B,EAAA3kI,GAAAqV,KACzB3V,KAAA,KAEA,yBAAAsgK,EAAA,KAAAn1B,EAAA,mBAAAA,GAAAk1B,EAAA,eAGA,SAAAv5J,GACA,IAAA0B,EAAA,KACAnT,EAAAyR,EAAA9P,OACA,KAAA3B,GACAmT,EAAA,GAAAA,EAAA1B,EAAAH,aAAAtR,GAEA,OAAAmT,IAAA,EATA,CAAA83J,GAAA,QA3HA,CAAAppJ,IAAA4yH,YAAAn0H,GAAA,KAGAuB,EAAA22H,QACA55I,GAAA,gBAAoBijB,EAAA22H,MAAA,mBAAA32H,EAAA22H,MAAA,wBAAA32H,EAAA22H,MAAA,iBAGpB32H,EAAAuzH,eAAA,CACA,IAAAA,EAgDA,SAAAvzH,EAAAvB,GACA,IAAA8oJ,EAAAvnJ,EAAA5S,SAAA,GACM,EAQN,GAAAm6J,GAAA,IAAAA,EAAAn/J,KAAA,CACA,IAAAkhK,EAAAhC,GAAAC,EAAA9oJ,EAAAvN,SACA,2CAA+Co4J,EAAA,6BAAiCA,EAAA54B,gBAAA3nI,IAAA,SAAAsoB,GAA4E,oBAAqBA,EAAA,MAAkBvoB,KAAA,WA5DnMygK,CAAAvpJ,EAAAvB,GACA80H,IACAx2I,GAAAw2I,EAAA,KAkBA,OAfAx2I,IAAA+S,QAAA,aAIAkQ,EAAAqnI,eACAtqJ,EAAA,MAAAA,EAAA,KAAAijB,EAAA,SAAAkoJ,GAAAloJ,EAAAqnI,cAAA,KAGArnI,EAAAgnJ,WACAjqK,EAAAijB,EAAAgnJ,SAAAjqK,IAGAijB,EAAA+mJ,gBACAhqK,EAAAijB,EAAA+mJ,cAAAhqK,IAEAA,EA2GA,SAAAmsK,GAAAlpJ,GACA,WAAAA,EAAA5X,OACA,SAAA4X,EAAAngB,KAGAmgB,EAAA5S,SAAAqrC,KAAAywH,KAKA,SAAAG,GACArpJ,EACAvB,GAEA,IAAA+qJ,EAAAxpJ,EAAAunI,SAAA,cACA,GAAAvnI,EAAAo+I,KAAAp+I,EAAA+nJ,cAAAyB,EACA,OAAAxB,GAAAhoJ,EAAAvB,EAAA4qJ,GAAA,QAEA,GAAArpJ,EAAAuhJ,MAAAvhJ,EAAA6nJ,aACA,OAAAC,GAAA9nJ,EAAAvB,EAAA4qJ,IAEA,IAAA1K,EAAA3+I,EAAA2+I,YAAAtB,GACA,GACAv8J,OAAAkf,EAAA2+I,WACAn9I,EAAA,YAAAm9I,EAAA,aACA,aAAA3+I,EAAAngB,IACAmgB,EAAAo+I,IAAAoL,EACA,IAAAxpJ,EAAA,SAAAioJ,GAAAjoJ,EAAAvB,IAAA,0BACAwpJ,GAAAjoJ,EAAAvB,IAAA,YACA+oJ,GAAAxnJ,EAAAvB,IAAA,IAEAgrJ,EAAA9K,EAAA,iBACA,eAAY3+I,EAAA4+I,YAAA,oBAAAp9I,EAAAioJ,EAAA,IAGZ,SAAAxB,GACAjoJ,EACAvB,EACAirJ,EACAC,EACAC,GAEA,IAAAx8J,EAAA4S,EAAA5S,SACA,GAAAA,EAAAtN,OAAA,CACA,IAAA+pK,EAAAz8J,EAAA,GAEA,OAAAA,EAAAtN,QACA+pK,EAAAtI,KACA,aAAAsI,EAAAhqK,KACA,SAAAgqK,EAAAhqK,IACA,CACA,IAAA63I,EAAAgyB,EACAjrJ,EAAA2oJ,eAAAyC,GAAA,UACA,GACA,UAAAF,GAAAnC,IAAAqC,EAAAprJ,GAAAi5H,EAEA,IAAAoyB,EAAAJ,EAYA,SACAt8J,EACAg6J,GAGA,IADA,IAAAl3J,EAAA,EACA/R,EAAA,EAAiBA,EAAAiP,EAAAtN,OAAqB3B,IAAA,CACtC,IAAA6hB,EAAA5S,EAAAjP,GACA,OAAA6hB,EAAA5X,KAAA,CAGA,GAAA2hK,GAAA/pJ,IACAA,EAAAgjJ,cAAAhjJ,EAAAgjJ,aAAAvqH,KAAA,SAAAjpC,GAA+D,OAAAu6J,GAAAv6J,EAAAgvJ,SAAsC,CACrGtuJ,EAAA,EACA,OAEAk3J,EAAApnJ,IACAA,EAAAgjJ,cAAAhjJ,EAAAgjJ,aAAAvqH,KAAA,SAAAjpC,GAA+D,OAAA43J,EAAA53J,EAAAgvJ,YAC/DtuJ,EAAA,IAGA,OAAAA,EA/BA85J,CAAA58J,EAAAqR,EAAA2oJ,gBACA,EACA4B,EAAAY,GAAAK,GACA,UAAA78J,EAAArE,IAAA,SAAAyG,GAA8C,OAAAw5J,EAAAx5J,EAAAiP,KAAwB3V,KAAA,UAAAghK,EAAA,IAAAA,EAAA,KA+BtE,SAAAC,GAAA/pJ,GACA,YAAA7Q,IAAA6Q,EAAAuhJ,KAAA,aAAAvhJ,EAAAngB,KAAA,SAAAmgB,EAAAngB,IAGA,SAAAoqK,GAAA37H,EAAA7vB,GACA,WAAA6vB,EAAAlmC,KACAo/J,GAAAl5H,EAAA7vB,GACG,IAAA6vB,EAAAlmC,MAAAkmC,EAAAq3F,WAaHvkG,EAZAkN,EAaA,MAAAvkC,KAAAC,UAAAo3B,EAAAxE,MAAA,KANA,YADAA,EAJA0R,GAKAlmC,KACAw0B,EAAAI,WACAktI,GAAAngK,KAAAC,UAAA4yB,UAAA,IAHA,IAAAA,EAMAwE,EAuCA,SAAA8mI,GAAAn7J,GAGA,IAFA,IAAA60B,EAAA,GACAuoI,EAAA,GACAhsK,EAAA,EAAiBA,EAAA4O,EAAAjN,OAAkB3B,IAAA,CACnC,IAAAirC,EAAAr8B,EAAA5O,GACAmL,EAAA4gK,GAAA9gI,EAAA9/B,OACA8/B,EAAA69G,QACAkjB,GAAA/gI,EAAA,SAAA9/B,EAAA,IAEAs4B,GAAA,IAAAwH,EAAA,UAAA9/B,EAAA,IAIA,OADAs4B,EAAA,IAAkBA,EAAAn4B,MAAA,UAClB0gK,EACA,MAAAvoI,EAAA,KAAAuoI,EAAA1gK,MAAA,WAEAm4B,EAKA,SAAAsoI,GAAAttI,GACA,OAAAA,EACA9sB,QAAA,qBACAA,QAAA,qBASA,IAAAqI,OAAA,uMAIAlO,MAAA,KAAAnB,KAAA,kBAGA,IAAAqP,OAAA,2BAEAlO,MAAA,KAAAnB,KAAA,8CA2JA,SAAAshK,GAAA/4I,EAAAu4B,GACA,IACA,WAAA78B,SAAAsE,GACG,MAAA7kB,GAEH,OADAo9C,EAAA/qD,MAAiB2N,MAAA6kB,SACjBklD,GAIA,SAAA8zF,GAAA5vJ,GACA,IAAA9M,EAAA1E,OAAA0R,OAAA,MAEA,gBACA6iJ,EACAtsJ,EACAzC,IAEAyC,EAAAxE,KAAuBwE,IACvB9E,YACA8E,EAAA9E,KAqBA,IAAAhD,EAAA8H,EAAAsoJ,WACA14J,OAAAoQ,EAAAsoJ,YAAAgE,EACAA,EACA,GAAA7vJ,EAAAvE,GACA,OAAAuE,EAAAvE,GAIA,IAAAkhK,EAAA7vJ,EAAA+iJ,EAAAtsJ,GA+BA,IAAAhB,KACAq6J,KAyBA,OAxBAr6J,EAAAjD,OAAAm9J,GAAAE,EAAAr9J,OAAAs9J,GACAr6J,EAAAwgI,gBAAA45B,EAAA55B,gBAAA3nI,IAAA,SAAAsoB,GACA,OAAA+4I,GAAA/4I,EAAAk5I,KAsBA58J,EAAAvE,GAAA8G,GAiFA,IA3EAs6J,GAoGAliH,GAPAu5G,IA7FA2I,GA2EA,SACAhN,EACAtsJ,GAEA,IAAAq2J,EAAA1qK,GAAA2gK,EAAA5yJ,OAAAsG,IACA,IAAAA,EAAAuzJ,UACAA,GAAA8C,EAAAr2J,GAEA,IAAAmgB,EAAAi2I,GAAAC,EAAAr2J,GACA,OACAq2J,MACAt6J,OAAAokB,EAAApkB,OACAyjI,gBAAAr/G,EAAAq/G,kBAtFA,SAAAppD,GACA,SAAA7sE,EACA+iJ,EACAtsJ,GAEA,IAAAu5J,EAAAxhK,OAAA0R,OAAA2sE,GACA19B,KACA8gH,KAEAt+J,EAAA,SAAAuW,EAAA8vE,EAAAk4E,IACAA,EAAAD,EAAA9gH,GAAA/qD,KAAA8jB,IAGA,GAAAzR,EA+BA,QAAA9H,KAZA8H,EAAA61I,UACA0jB,EAAA1jB,SACAz/D,EAAAy/D,aAAA37I,OAAA8F,EAAA61I,UAGA71I,EAAA+3H,aACAwhC,EAAAxhC,WAAAv8H,EACAzD,OAAA0R,OAAA2sE,EAAA2hD,YAAA,MACA/3H,EAAA+3H,aAIA/3H,EACA,YAAA9H,GAAA,eAAAA,IACAqhK,EAAArhK,GAAA8H,EAAA9H,IAKAqhK,EAAAr+J,OAEA,IAAAk+J,EAAAE,GAAAhN,EAAA5yJ,OAAA6/J,GAMA,OAFAH,EAAA1gH,SACA0gH,EAAAI,OACAJ,EAGA,OACA7vJ,UACAmwJ,mBAAAP,GAAA5vJ,MA4BA6sE,IAEAsjF,IADA/I,GAAApnJ,QACAonJ,GAAA+I,oBAMA,SAAAC,GAAAx3J,GAGA,OAFAi1C,OAAAroC,SAAAqqB,cAAA,QACAoe,UAAAr1C,EAAA,iCACAi1C,GAAAI,UAAAj8C,QAAA,SAAqC,EAIrC,IAAAuvJ,KAAAplJ,GAAAi0J,IAAA,GAEAvK,KAAA1pJ,GAAAi0J,IAAA,GAIAC,GAAAvqC,EAAA,SAAAh1H,GACA,IAAAyU,EAAA/P,GAAA1E,GACA,OAAAyU,KAAA0oC,YAGAqiH,GAAA11J,GAAA7L,UAAAkqI,OACAr+H,GAAA7L,UAAAkqI,OAAA,SACA1zH,EACAmzH,GAKA,IAHAnzH,KAAA/P,GAAA+P,MAGAC,SAAA6O,MAAA9O,IAAAC,SAAAG,gBAIA,OAAAlN,KAGA,IAAAhC,EAAAgC,KAAAwC,SAEA,IAAAxE,EAAAjE,OAAA,CACA,IAAAuwJ,EAAAtsJ,EAAAssJ,SACA,GAAAA,EACA,oBAAAA,EACA,MAAAA,EAAAtmJ,OAAA,KACAsmJ,EAAAsN,GAAAtN,QASO,KAAAA,EAAA3zH,SAMP,OAAA32B,KALAsqJ,IAAA90G,eAOK1oC,IACLw9I,EAkCA,SAAAx9I,GACA,GAAAA,EAAAgrJ,UACA,OAAAhrJ,EAAAgrJ,UAEA,IAAA50D,EAAAn2F,SAAAqqB,cAAA,OAEA,OADA8rE,EAAAlrE,YAAAlrB,EAAA0wD,WAAA,IACA0lC,EAAA1tD,UAxCAuiH,CAAAjrJ,IAEA,GAAAw9I,EAAA,CAEU,EAIV,IAAArwJ,EAAAy9J,GAAApN,GACAmD,mBAA2B,EAC3B3E,wBACAsE,+BACA9G,WAAAtoJ,EAAAsoJ,WACAkH,SAAAxvJ,EAAAwvJ,UACOxtJ,MACPjG,EAAAE,EAAAF,OACAyjI,EAAAvjI,EAAAujI,gBACAx/H,EAAAjE,SACAiE,EAAAw/H,mBASA,OAAAq6B,GAAArhK,KAAAwJ,KAAA8M,EAAAmzH,IAiBA99H,GAAAoF,QAAAmwJ,GAEe3hJ,EAAA,iDCnsXf,IAAA8xE,EAAoB/+F,EAAQ,QAC5B4/F,EAAY5/F,EAAQ,QA2IpBkO,EAAAC,SACA+gK,kBApHA,SACA5/I,EACAsrE,EACAkF,EACAC,GAEA,IACAC,EACAC,EAIAC,EACA/9F,EAJAg+F,EAAA,EACAC,EAAA,EACAC,EAAA,EAIA,GAAAzF,EAAA92F,SAIAk8F,EACAJ,EAAAuvE,iBAAA7/I,EAAAjmB,oBAAAimB,EAAAlpB,YAEA65F,EAAA32F,KAAAg3F,KA5CA,KA4CAhxE,EAAAlpB,WAAA,OAEA05F,GAAAC,IAEAI,EACAH,EAAA12F,KAAAwf,IAAAg3E,EAAAC,GAGAM,GADAD,EAAA92F,KAAA+mB,MAAA8vE,EAAAF,IACAA,KAKAG,EAAA,GAAAC,EAAA+uE,OAAA,CAYA,KARAlvE,EAAAnB,EAAAzvE,EAAAlpB,eAKA85F,EAAAtF,EAAA,GAAA75F,MAGAoB,EAAA,EAAaA,EAAAi+F,EAAyBj+F,IACtCy4F,EAAAr6E,OAAApe,EAAA,GACApB,KAAAm/F,IAIA5wE,EAAAjmB,qBACAC,KAAA+mB,MAAAuvE,EAAAyvE,iBAAAhvE,EAAA/wE,EAAAlpB,eA+DAkpK,4BAxDA,SAAA9uE,EAAAlxE,EAAAmxE,GACA,OAAAnxE,EAAAoxE,eAAAD,EACAD,GAIAlxE,EAAAoxE,cAAA7wF,IAEA2wF,EAAArzF,OAAA,SAAA2rB,GAEA,OAAAA,EAAAqB,KAAAsmE,IACAnxE,EAAAoxE,cAAAp3F,KAAAwG,IAAAwf,EAAAoxE,cAAA5nE,EAAAqB,KACA7K,EAAAqxE,cAAArxE,EAAAoxE,eACA,OA4CA6uE,oBApCA,SAAA30E,GACA,IACAz4F,EACA22B,EACA5xB,KAEA,IAAA/E,EAAA,EAAaA,EAAAy4F,EAAA92F,OAAmB3B,IAChC22B,EAAA8hE,EAAAz4F,GACA+E,EAAArE,MACAgJ,KAAAitB,EAAA/3B,KAAAK,WACAwE,SAAA,OAGA,OAAAsB,GAwBAsoK,qBApBA,SAAA50E,GACA,IACAz4F,EACA22B,EACAntB,EAAA,EACA5K,EAAA,IAAA+B,WAzHA,SAAA4yB,GACA,IACAvzB,EAEAy+F,EAAA,EAGA,IAAAz+F,EAAA,EAAaA,EAAAuzB,EAAA5xB,OAAkB3B,IAE/By+F,GADAlrE,EAAAvzB,GACApB,KAAAK,WAGA,OAAAw/F,EA6GAC,CAAAjG,IAEA,IAAAz4F,EAAA,EAAaA,EAAAy4F,EAAA92F,OAAmB3B,IAChC22B,EAAA8hE,EAAAz4F,GAEApB,EAAAsuB,IAAAyJ,EAAA/3B,KAAA4K,GACAA,GAAAmtB,EAAA/3B,KAAAK,WAEA,OAAAL,yCCvIA,IAGA+vG,EAAAC,EACAxC,EAJAvzE,EAAah7B,EAAQ,QACrBg2B,EAAgBh2B,EAAQ,SAQxB+wG,EAAA,WACA,IAEA5uG,EACAjB,EAFAutG,EAAA,EAGAsC,EAAAvjG,UAAA6B,KAAA3B,KAAAwJ,MASAA,KAAArU,KAAA,SAAA9B,GACA,IAAA2tG,EAsBA,IApBAxtG,IAGAwtG,EAAA,IAAA5rG,WAAA5B,EAAAE,WAAAL,OAAAK,aACAiuB,IAAAnuB,GACAwtG,EAAAr/E,IAAAtuB,OAAAG,EAAAE,YACAF,EAAAwtG,GALAxtG,EAAAH,OAmBU0tG,EAAAvtG,EAAAE,WAAA,EAAmCqtG,IAC7C,OAAAvtG,EAAAutG,EAAA,IAEAtsG,EAAAssG,EAAA,EACA,MAIA,KAAAtsG,EAAAjB,EAAAE,YAGA,OAAAF,EAAAiB,IACA,OAEA,OAAAjB,EAAAiB,EAAA,IACAA,GAAA,EACA,MACS,OAAAjB,EAAAiB,EAAA,IACTA,IACA,MAIAssG,EAAA,IAAAtsG,EAAA,GACA+U,KAAAokB,QAAA,OAAAp6B,EAAAY,SAAA2sG,EAAA,EAAAtsG,EAAA,IAIA,GACAA,UACS,IAAAjB,EAAAiB,MAAAjB,EAAA4C,QACT2qG,EAAAtsG,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAjB,EAAAiB,EAAA,IACA,IAAAjB,EAAAiB,EAAA,IACAA,GAAA,EACA,MAIA+U,KAAAokB,QAAA,OAAAp6B,EAAAY,SAAA2sG,EAAA,EAAAtsG,EAAA,IACAssG,EAAAtsG,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EAKAjB,IAAAY,SAAA2sG,GACAtsG,GAAAssG,EACAA,EAAA,GAGAv3F,KAAAqkB,MAAA,WAEAr6B,KAAAE,WAAA,GACA8V,KAAAokB,QAAA,OAAAp6B,EAAAY,SAAA2sG,EAAA,IAGAvtG,EAAA,KACAutG,EAAA,EACAv3F,KAAAokB,QAAA,WAGA9tB,UAAA,IAAAwtB,EAKAuzE,GACAI,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,IAOAwB,EAAA,WACA,IAEAhgF,EACArnB,EACA8lG,EACAC,EAEAC,EACAC,EACAC,EARAC,EAAA,IAAAmB,EAUAD,EAAAtjG,UAAA6B,KAAA3B,KAAAwJ,MACA4Z,EAAA5Z,KAaAA,KAAArU,KAAA,SAAAk1B,GACA,UAAAA,EAAA3rB,OAGA3C,EAAAsuB,EAAAtuB,QACA8lG,EAAAx3E,EAAAqC,IACAo1E,EAAAz3E,EAAAoC,IAEAy1E,EAAA/sG,KAAAk1B,KAWA63E,EAAAz3F,GAAA,gBAAApX,GACA,IACAiW,GACAvN,UACA2wB,IAAAm1E,EACAp1E,IAAAq1E,EACAzuG,QAGA,UAAAA,EAAA,IACA,OACAiW,EAAAsnF,YAAA,4CACA,MACA,OACAtnF,EAAAsnF,YAAA,WACAtnF,EAAAgrF,YAAAyN,EAAA1uG,EAAAe,SAAA,IACA,MACA,OACAkV,EAAAsnF,YAAA,yBACAtnF,EAAAgrF,YAAAyN,EAAA1uG,EAAAe,SAAA,IACAkV,EAAAnV,OAAA6tG,EAAA14F,EAAAgrF,aACA,MACA,OACAhrF,EAAAsnF,YAAA,yBACA,MACA,OACAtnF,EAAAsnF,YAAA,6BAOAxtE,EAAAwK,QAAA,OAAAtkB,KAEA44F,EAAAz3F,GAAA,kBACA2Y,EAAAwK,QAAA,UAGApkB,KAAAqkB,MAAA,WACAq0E,EAAAr0E,SAYAo0E,EAAA,SAAAj5E,EAAAm5E,GACA,IAGA/xF,EAFAgyF,EAAA,EACAC,EAAA,EAIA,IAAAjyF,EAAA,EAAeA,EAAA4Y,EAAW5Y,IAC1B,IAAAiyF,IAEAA,GAAAD,EADAD,EAAAx4E,gBACA,UAGAy4E,EAAA,IAAAC,EAAAD,EAAAC,GAYAN,EAAA,SAAA1uG,GAQA,IAPA,IAIAygG,EAAAC,EAHA39F,EAAA/C,EAAAK,WACAsgG,KACAv/F,EAAA,EAIAA,EAAA2B,EAAA,GACA,IAAA/C,EAAAoB,IAAA,IAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,IACAu/F,EAAA7+F,KAAAV,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAAu/F,EAAA59F,OACA,OAAA/C,EAIAygG,EAAA19F,EAAA49F,EAAA59F,OACA29F,EAAA,IAAA3+F,WAAA0+F,GACA,IAAAG,EAAA,EAEA,IAAAx/F,EAAA,EAAeA,EAAAq/F,EAAeG,IAAAx/F,IAC9Bw/F,IAAAD,EAAA,KAEAC,IAEAD,EAAArtF,SAEAotF,EAAAt/F,GAAApB,EAAA4gG,GAGA,OAAAF,GAYAiO,EAAA,SAAA3uG,GACA,IAMA8uG,EAAAhgF,EAAAC,EAAAvtB,EACAytG,EAAAC,EACAC,EAAAC,EACAC,EACAC,EACAC,EACAC,EAEApuG,EAbAquG,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAkBA,GANA/gF,GADAggF,EAAA,IAAA75E,EAAAj1B,IACAw2B,mBACAh1B,EAAAstG,EAAAt4E,mBACAzH,EAAA+/E,EAAAt4E,mBACAs4E,EAAA54E,wBAGAs3E,EAAA1+E,KAEA,KADAmgF,EAAAH,EAAA14E,0BAEA04E,EAAAp5E,SAAA,GAEAo5E,EAAA54E,wBACA44E,EAAA54E,wBACA44E,EAAAp5E,SAAA,GACAo5E,EAAAv4E,eAEA,IADAg5E,EAAA,IAAAN,EAAA,KACA7tG,EAAA,EAAmBA,EAAAmuG,EAAsBnuG,IACzC0tG,EAAAv4E,eAEAq4E,EADAxtG,EAAA,EACA,GAEA,GAFA0tG,GAYA,GAHAA,EAAA54E,wBAGA,KAFAg5E,EAAAJ,EAAA14E,yBAGA04E,EAAA14E,6BACK,OAAA84E,EAKL,IAJAJ,EAAAp5E,SAAA,GACAo5E,EAAA34E,gBACA24E,EAAA34E,gBACAg5E,EAAAL,EAAA14E,wBACAh1B,EAAA,EAAiBA,EAAA+tG,EAAoC/tG,IACrD0tG,EAAA34E,gBAsBA,GAlBA24E,EAAA54E,wBACA44E,EAAAp5E,SAAA,GAEA05E,EAAAN,EAAA14E,wBACAi5E,EAAAP,EAAA14E,wBAGA,KADAk5E,EAAAR,EAAAj5E,SAAA,KAEAi5E,EAAAp5E,SAAA,GAGAo5E,EAAAp5E,SAAA,GACAo5E,EAAAv4E,gBACAk5E,EAAAX,EAAA14E,wBACAs5E,EAAAZ,EAAA14E,wBACAu5E,EAAAb,EAAA14E,wBACAw5E,EAAAd,EAAA14E,yBAEA04E,EAAAv4E,eAEAu4E,EAAAv4E,cAAA,CAGA,OADAu4E,EAAAt4E,oBAEA,OAAAg5E,GAAA,KAAoC,MACpC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,QAAwC,MACxC,QAAAA,GAAA,KAAqC,MACrC,QAAAA,GAAA,KAAqC,MACrC,QAAAA,GAAA,KAAqC,MACrC,SACAA,GAAAV,EAAAt4E,oBAAA,EACAs4E,EAAAt4E,mBACAs4E,EAAAt4E,oBAAA,EACAs4E,EAAAt4E,oBAIAg5E,IACAK,EAAAL,EAAA,GAAAA,EAAA,IAIA,OACA1gF,aACAC,WACAvtB,uBACAhB,MAAA+H,KAAAg3F,MAAA,IAAA6P,EAAA,KAAAK,EAAA,EAAAC,GAAAG,GACApvG,QAAA,EAAA6uG,IAAAD,EAAA,QAAAM,EAAA,EAAAC,MAKAnjG,UAAA,IAAAwtB,EAEA9sB,EAAAC,SACA2iG,aACAC,sDCzbA,IAAAvzE,EAAYx9B,EAAQ,QACpByvK,EAAazvK,EAAQ,QACrB0vK,EAAe1vK,EAAQ,QACvBsyB,EAAmBtyB,EAAQ,QAC3B2vK,EAAsB3vK,EAAQ,QAC9B61B,EAAkB71B,EAAQ,QAE1BkO,EAAAC,QAAA,SAAAtM,GACA,WAAA0jF,QAAA,SAAAnuE,EAAAqP,GACA,IAAAmpJ,EAAA/tK,EAAAd,KACA8uK,EAAAhuK,EAAAqyB,QAEAsJ,EAAAsyI,WAAAF,WACAC,EAAA,gBAGA,IAAA95I,EAAA,IAAAxB,eAGA,GAAA1yB,EAAAkuK,KAAA,CACA,IAAA76I,EAAArzB,EAAAkuK,KAAA76I,UAAA,GACAC,EAAAtzB,EAAAkuK,KAAA56I,UAAA,GACA06I,EAAAG,cAAA,SAAAC,KAAA/6I,EAAA,IAAAC,GA0EA,GAvEAY,EAAAd,KAAApzB,EAAAoyB,OAAAzW,cAAAkyJ,EAAA7tK,EAAAwjB,IAAAxjB,EAAAqR,OAAArR,EAAAquK,mBAAA,GAGAn6I,EAAAxE,QAAA1vB,EAAA0vB,QAGAwE,EAAArB,mBAAA,WACA,GAAAqB,GAAA,IAAAA,EAAApB,aAQA,IAAAoB,EAAAzC,QAAAyC,EAAA65D,aAAA,IAAA75D,EAAA65D,YAAAn/E,QAAA,WAKA,IAAA4lF,EAAA,0BAAAtgE,EAAAzD,EAAAyD,EAAA3B,yBAAA,KAEAvB,GACA9xB,KAFAc,EAAA6xB,cAAA,SAAA7xB,EAAA6xB,aAAAqC,EAAAlD,SAAAkD,EAAAtC,aAGAH,OAAAyC,EAAAzC,OACA68I,WAAAp6I,EAAAo6I,WACAj8I,QAAAmiE,EACAx0F,SACAk0B,WAGA05I,EAAAr4J,EAAAqP,EAAAoM,GAGAkD,EAAA,OAIAA,EAAAhB,QAAA,WACAgB,IAIAtP,EAAAoP,EAAA,kBAAAh0B,EAAA,eAAAk0B,IAGAA,EAAA,OAIAA,EAAAlB,QAAA,WAGApO,EAAAoP,EAAA,gBAAAh0B,EAAA,KAAAk0B,IAGAA,EAAA,MAIAA,EAAAf,UAAA,WACAvO,EAAAoP,EAAA,cAAAh0B,EAAA0vB,QAAA,cAAA1vB,EAAA,eACAk0B,IAGAA,EAAA,MAMAyH,EAAA4yI,uBAAA,CACA,IAAAC,EAAoBrwK,EAAQ,QAG5BswK,GAAAzuK,EAAAuzB,iBAAAu6I,EAAA9tK,EAAAwjB,OAAAxjB,EAAA0uK,eACAF,EAAAG,KAAA3uK,EAAA0uK,qBACAp9J,EAEAm9J,IACAT,EAAAhuK,EAAA4uK,gBAAAH,GAuBA,GAlBA,qBAAAv6I,GACAyH,EAAAvtB,QAAA4/J,EAAA,SAAAn9J,EAAAtF,QACA,IAAAwiK,GAAA,iBAAAxiK,EAAAszB,qBAEAmvI,EAAAziK,GAGA2oB,EAAAT,iBAAAloB,EAAAsF,KAMA7Q,EAAAuzB,kBACAW,EAAAX,iBAAA,GAIAvzB,EAAA6xB,aACA,IACAqC,EAAArC,aAAA7xB,EAAA6xB,aACO,MAAAte,GAGP,YAAAvT,EAAA6xB,aACA,MAAAte,EAMA,mBAAAvT,EAAA6uK,oBACA36I,EAAAxT,iBAAA,WAAA1gB,EAAA6uK,oBAIA,mBAAA7uK,EAAA8uK,kBAAA56I,EAAA66I,QACA76I,EAAA66I,OAAAruJ,iBAAA,WAAA1gB,EAAA8uK,kBAGA9uK,EAAAgvK,aAEAhvK,EAAAgvK,YAAAluF,QAAAt/D,KAAA,SAAAu0B,GACA7hB,IAIAA,EAAAnN,QACAnC,EAAAmxB,GAEA7hB,EAAA,aAIA5iB,IAAAy8J,IACAA,EAAA,MAIA75I,EAAAN,KAAAm6I,4BC3KA,IAUAhyE,EAVAgB,GAAA,mBACAC,GAAA,2CACAC,EAAA,SAAApoE,GAEA,IADA,IAAA/lB,KACA+lB,KACA/lB,EAAA9N,KAAA,GAEA,OAAA8N,GAaAouF,GACAC,OAAAJ,GAAA,QAAAE,EAAA,WACAG,OAAAL,GAAA,KAAAE,EAAA,WACAI,OAAAN,GAAA,SAAAE,EAAA,WACAK,OAAAP,GAAA,SAAAE,EAAA,kBAAAA,EAAA,WACAM,OAAAR,GAAA,SAAAE,EAAA,kBAAAA,EAAA,WACAO,OAAAT,GAAA,SAAAE,EAAA,cAAAA,EAAA,YACAQ,OAAAV,GAAA,SAAAE,EAAA,kBAAAA,EAAA,eAAAA,EAAA,YACAS,OAAAX,GAAA,SAAAE,EAAA,kBAAAA,EAAA,eAAAA,EAAA,eAAAA,EAAA,cACAU,OAAAX,EAAAC,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,WACAW,OAAAZ,EAAAC,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,YACAY,MAAAb,EAAAC,EAAA,gBAAAA,EAAA,UAGA5wF,EAAAC,SAxBAyvF,EAwBAmB,EAvBA9xF,OAAAC,KAAA0wF,GAAAtuF,OAAA,SAAAkF,EAAApH,GAIA,OAHAoH,EAAApH,GAAA,IAAAtK,WAAA86F,EAAAxwF,GAAAkC,OAAA,SAAAmM,EAAA4nD,GACA,OAAA5nD,EAAArM,OAAAi0D,SAEA7uD,6CCbA,IAAAs8J,EACA,IAAA7jK,OAAAC,KAAA,CAEA,IAAA+iC,EAAAhjC,OAAAO,UAAAoU,eACAuL,EAAAlgB,OAAAO,UAAAI,SACAmjK,EAAc/wK,EAAQ,QACtBgxK,EAAA/jK,OAAAO,UAAAyjK,qBACAC,GAAAF,EAAAtjK,MAA0CE,SAAA,MAAiB,YAC3DujK,EAAAH,EAAAtjK,KAAA,aAAuD,aACvD0jK,GACA,WACA,iBACA,UACA,iBACA,gBACA,uBACA,eAEAC,EAAA,SAAA/mI,GACA,IAAAgnI,EAAAhnI,EAAA7f,YACA,OAAA6mJ,KAAA9jK,YAAA88B,GAEAinI,GACAC,mBAAA,EACAC,UAAA,EACAC,WAAA,EACAC,QAAA,EACAC,eAAA,EACAC,SAAA,EACAC,cAAA,EACAC,aAAA,EACAC,wBAAA,EACAC,uBAAA,EACAC,cAAA,EACAC,aAAA,EACAC,cAAA,EACAC,cAAA,EACAlgK,SAAA,EACAmgK,aAAA,EACAC,YAAA,EACAC,UAAA,EACAC,UAAA,EACAC,OAAA,EACAC,kBAAA,EACAC,oBAAA,EACAC,SAAA,GAEAC,EAAA,WAEA,uBAAAj4J,OAAsC,SACtC,QAAAk2B,KAAAl2B,OACA,IACA,IAAA02J,EAAA,IAAAxgI,IAAAd,EAAAviC,KAAAmN,OAAAk2B,IAAA,OAAAl2B,OAAAk2B,IAAA,iBAAAl2B,OAAAk2B,GACA,IACAsgI,EAAAx2J,OAAAk2B,IACM,MAAA37B,GACN,UAGI,MAAAA,GACJ,SAGA,SAhBA,GA8BA07J,EAAA,SAAAtjJ,GACA,IAAA1J,EAAA,OAAA0J,GAAA,iBAAAA,EACA6E,EAAA,sBAAAlF,EAAAzf,KAAA8f,GACAulJ,EAAAhC,EAAAvjJ,GACAwlJ,EAAAlvJ,GAAA,oBAAAqJ,EAAAzf,KAAA8f,GACAylJ,KAEA,IAAAnvJ,IAAAuO,IAAA0gJ,EACA,UAAAl1J,UAAA,sCAGA,IAAAq1J,EAAA/B,GAAA9+I,EACA,GAAA2gJ,GAAAxlJ,EAAA1pB,OAAA,IAAAmsC,EAAAviC,KAAA8f,EAAA,GACA,QAAArrB,EAAA,EAAkBA,EAAAqrB,EAAA1pB,SAAmB3B,EACrC8wK,EAAApwK,KAAAiC,OAAA3C,IAIA,GAAA4wK,GAAAvlJ,EAAA1pB,OAAA,EACA,QAAAga,EAAA,EAAkBA,EAAA0P,EAAA1pB,SAAmBga,EACrCm1J,EAAApwK,KAAAiC,OAAAgZ,SAGA,QAAAjZ,KAAA2oB,EACA0lJ,GAAA,cAAAruK,IAAAorC,EAAAviC,KAAA8f,EAAA3oB,IACAouK,EAAApwK,KAAAiC,OAAAD,IAKA,GAAAqsK,EAGA,IAFA,IAAAiC,EA3CA,SAAA7oI,GAEA,uBAAAzvB,SAAAi4J,EACA,OAAAzB,EAAA/mI,GAEA,IACA,OAAA+mI,EAAA/mI,GACG,MAAAl1B,GACH,UAmCAg+J,CAAA5lJ,GAEAujB,EAAA,EAAkBA,EAAAqgI,EAAAttK,SAAsBitC,EACxCoiI,GAAA,gBAAA/B,EAAArgI,KAAAd,EAAAviC,KAAA8f,EAAA4jJ,EAAArgI,KACAkiI,EAAApwK,KAAAuuK,EAAArgI,IAIA,OAAAkiI,GAGA/kK,EAAAC,QAAA2iK,uCCtGA,IAAA91I,EAAah7B,EAAQ,QACrBqzK,EAAmBrzK,EAAQ,QAE3Bi7B,EAAA,WAEAA,EAAAztB,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAA0qF,mBAEA1qF,KAAA2qF,YACA,IAAAvkE,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,MAGApmB,KAAAg8C,QAGAh8C,KAAA2qF,WAAA5xF,QAAA,SAAA6xF,GACAA,EAAA3pF,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,SACA4qF,EAAA3pF,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,UACGA,OAIH+jB,EAAAztB,UAAA,IAAAwtB,EACAC,EAAAztB,UAAA3K,KAAA,SAAAmU,GACA,IAAAqqF,EAAAC,EAAAS,EAGA,gBAAA/qF,EAAAsnF,cAKA+C,EAAAgyE,EAAAC,SAAAt8J,EAAAgrF,cAGAb,cAAAkyE,EAAAE,iCAKAjyE,EAAA+xE,EAAAG,cAAAnyE,IAeA,GAAArqF,EAAAmjB,IAAAjjB,KAAA+qF,WAEA/qF,KAAAgrF,qBAAA,MAFA,CAIG,GAAAlrF,EAAAmjB,MAAAjjB,KAAA+qF,YAAA/qF,KAAA,oBAMH,OALAA,KAAAirF,mBACAjrF,KAAAirF,cAEAjrF,KAAAgrF,qBAAA,IAMAH,EAAAsxE,EAAAI,oBAAAz8J,EAAAojB,IAAAknE,GACApqF,KAAA0qF,gBAAA1qF,KAAA0qF,gBAAAxyF,OAAA2yF,GACA7qF,KAAA+qF,aAAAjrF,EAAAmjB,MACAjjB,KAAAirF,YAAA,GAEAjrF,KAAAirF,cACAjrF,KAAA+qF,WAAAjrF,EAAAmjB,MAGAc,EAAAztB,UAAA+tB,MAAA,WAEArkB,KAAA0qF,gBAAA99F,QASAoT,KAAA0qF,gBAAA3xF,QAAA,SAAAqjC,EAAA8nD,GACA9nD,EAAA8uD,aAAAhH,IAIAlkF,KAAA0qF,gBAAAvtB,KAAA,SAAA1jE,EAAAC,GACA,OAAAD,EAAAypB,MAAAxpB,EAAAwpB,IACAzpB,EAAAyxF,aAAAxxF,EAAAwxF,aAEAzxF,EAAAypB,IAAAxpB,EAAAwpB,MAGAljB,KAAA0qF,gBAAA3xF,QAAA,SAAA8nB,GACAA,EAAA3rB,KAAA,GAEA8K,KAAAmrF,qBAAAtqE,IAIG7gB,MAEHA,KAAA0qF,gBAAA99F,OAAA,EACAoT,KAAA2qF,WAAA5xF,QAAA,SAAA6xF,GACAA,EAAAvmE,SACGrkB,OAhCHA,KAAA2qF,WAAA5xF,QAAA,SAAA6xF,GACAA,EAAAvmE,SACKrkB,OAkCL+jB,EAAAztB,UAAA0lD,MAAA,WACAh8C,KAAA+qF,WAAA,KACA/qF,KAAAgrF,qBAAA,EACAhrF,KAAAirF,YAAA,EACAjrF,KAAAorF,sBAAA,WACAprF,KAAA2qF,WAAA5xF,QAAA,SAAAsyF,GACAA,EAAArvC,WAIAj4B,EAAAztB,UAAA60F,qBAAA,SAAAtqE,GAEA7gB,KAAAsrF,mBAAAzqE,GACA7gB,KAAAorF,qBAAAvqE,EAAA3rB,MAAA,EACG8K,KAAAurF,mBAAA1qE,KACH7gB,KAAAorF,qBAAAvqE,EAAA3rB,MAAA,GAEA,OAAA8K,KAAAorF,qBAAAvqE,EAAA3rB,OAKA8K,KAAA2qF,YAAA9pE,EAAA3rB,MAAA,GAAA8K,KAAAorF,qBAAAvqE,EAAA3rB,OAAAvJ,KAAAk1B,IAGAkD,EAAAztB,UAAAg1F,mBAAA,SAAAzqE,GACA,oBAAAA,EAAAwpE,SAEAtmE,EAAAztB,UAAAi1F,mBAAA,SAAA1qE,GACA,oBAAAA,EAAAwpE,SAcA,IAAAmB,GACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,GACAC,IAAA,GACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MAGAC,EAAA,SAAAhzE,GACA,cAAAA,EACA,IAEAA,EAAAqtE,EAAArtE,MACAvwB,OAAAC,aAAAswB,KAQAizE,GAAA,wCACA,oCAIAC,EAAA,WAEA,IADA,IAAAnmG,KAAAD,EAAAqmG,GACArmG,KACAC,EAAAS,KAAA,IAEA,OAAAT,GAGAk7B,EAAA,SAAAmrE,EAAAC,GACAprE,EAAA9vB,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAAyxF,OAAAF,GAAA,EACAvxF,KAAA0xF,aAAAF,GAAA,EAEAxxF,KAAAwjC,MAAA,SAAAxjC,KAAAyxF,QAAA,EAAAzxF,KAAA0xF,eAEA1xF,KAAA2xF,eACA3xF,KAAAg8C,QAEAh8C,KAAArU,KAAA,SAAAk1B,GACA,IAAAh3B,EAAA+nG,EAAAC,EAAAC,EAAApoE,EAKA,IAHA7/B,EAAA,MAAAg3B,EAAAwpE,UAGArqF,KAAA+xF,kBAeA,GATA,aAAAloG,GACAmW,KAAA+xF,iBAAAloG,EACKA,IAAAmW,KAAAgyF,WACLhyF,KAAA+xF,iBAAA,MAGAF,EAAAhoG,IAAA,EACAioG,EAAA,IAAAjoG,EAEAA,IAAAmW,KAAAgyF,SAGK,GAAAnoG,IAAAmW,KAAAiyF,wBACLjyF,KAAAkyF,MAAA,aAEK,GAAAroG,IAAAmW,KAAAmyF,gBAKLnyF,KAAAkyF,MAAA,QACAlyF,KAAAoyF,gBAAAvxE,EAAAqC,KAEAljB,KAAAqyF,eAAAxxE,EAAAqC,KAGA0uE,EAAA5xF,KAAAsyF,WACAtyF,KAAAsyF,WAAAtyF,KAAAuyF,cACAvyF,KAAAuyF,cAAAX,EAGA5xF,KAAAwyF,UAAA3xE,EAAAqC,SAEK,GAAAr5B,IAAAmW,KAAAyyF,gBACLzyF,KAAA0yF,YAAA,EACA1yF,KAAA2yF,UAAA9xE,EAAAqC,UACK,GAAAr5B,IAAAmW,KAAA4yF,gBACL5yF,KAAA0yF,YAAA,EACA1yF,KAAA2yF,UAAA9xE,EAAAqC,UACK,GAAAr5B,IAAAmW,KAAA6yF,gBACL7yF,KAAA0yF,YAAA,EACA1yF,KAAA2yF,UAAA9xE,EAAAqC,UACK,GAAAr5B,IAAAmW,KAAA8yF,iBACL9yF,KAAAoyF,gBAAAvxE,EAAAqC,KACAljB,KAAAqyF,eAAAxxE,EAAAqC,KACAljB,KAAA+yF,eACA/yF,KAAAwyF,UAAA3xE,EAAAqC,SAEK,GAAAr5B,IAAAmW,KAAAgzF,WACL,UAAAhzF,KAAAkyF,MACAlyF,KAAAuyF,cAAAvyF,KAAAizF,MAAAjzF,KAAAuyF,cAAAvyF,KAAAizF,MAAA18F,MAAA,MAEAyJ,KAAAsyF,WAAAtyF,KAAAizF,MAAAjzF,KAAAsyF,WAAAtyF,KAAAizF,MAAA18F,MAAA,WAEK,GAAA1M,IAAAmW,KAAAkzF,wBACLlzF,KAAAqyF,eAAAxxE,EAAAqC,KACAljB,KAAAsyF,WAAAjB,SACK,GAAAxnG,IAAAmW,KAAAmzF,4BACLnzF,KAAAuyF,cAAAlB,SAEK,GAAAxnG,IAAAmW,KAAAozF,0BACL,YAAApzF,KAAAkyF,QAGAlyF,KAAAqyF,eAAAxxE,EAAAqC,KACAljB,KAAAsyF,WAAAjB,KAEArxF,KAAAkyF,MAAA,UACAlyF,KAAAwyF,UAAA3xE,EAAAqC,SAGK,GAAAljB,KAAAqzF,mBAAAxB,EAAAC,GAMLpoE,EAAAynE,GADAU,GAAA,EAAAA,IAAA,GACAC,GACA9xF,UAAAkyF,OAAArxE,EAAAqC,IAAAwG,GACA1pB,KAAAszF,eAGK,GAAAtzF,KAAAuzF,eAAA1B,EAAAC,GAOL,UAAA9xF,KAAAkyF,MACAlyF,KAAAuyF,cAAAvyF,KAAAizF,MAAAjzF,KAAAuyF,cAAAvyF,KAAAizF,MAAA18F,MAAA,MAEAyJ,KAAAsyF,WAAAtyF,KAAAizF,MAAAjzF,KAAAsyF,WAAAtyF,KAAAizF,MAAA18F,MAAA,MAQAmzB,EAAAynE,GADAU,GAAA,EAAAA,IAAA,GACAC,GACA9xF,UAAAkyF,OAAArxE,EAAAqC,IAAAwG,GACA1pB,KAAAszF,eAGK,GAAAtzF,KAAAwzF,aAAA3B,EAAAC,GAEL9xF,KAAAoyF,gBAAAvxE,EAAAqC,KAIAljB,UAAAkyF,OAAArxE,EAAAqC,IAAA,KACAljB,KAAAszF,UAEA,QAAAxB,IACA9xF,KAAAyzF,cAAA5yE,EAAAqC,KAAA,MAGA,MAAA4uE,IACA9xF,KAAAyzF,cAAA5yE,EAAAqC,KAAA,WAIK,GAAAljB,KAAA0zF,oBAAA7B,EAAAC,GAKL9xF,KAAAszF,SAAA,EAAAxB,OAGK,GAAA9xF,KAAA2zF,MAAA9B,EAAAC,GAAA,CAIL,IAAA8B,EAAAxC,EAAA73F,QAAA,KAAA1P,GAGA,WAAAmW,KAAAkyF,QAIA0B,EAAA5zF,KAAA0yF,YAAA,MACAkB,EAAA5zF,KAAA0yF,YAAA,GAGA1yF,KAAA2yF,UAAA9xE,EAAAqC,IAAA0wE,IAGAA,IAAA5zF,KAAAizF,OAEAjzF,KAAAoyF,gBAAAvxE,EAAAqC,KACAljB,KAAAizF,KAAAW,GAIA,EAAA9B,IAAA,IAAA9xF,KAAA6zF,YAAAt6F,QAAA,MACAyG,KAAAyzF,cAAA5yE,EAAAqC,KAAA,MAGA,QAAAr5B,KAKAmW,KAAAszF,QAAA,OAAAzpG,IAAA,IAGAmW,KAAA8zF,WAAAhC,IAKA,QAAAA,IACA9xF,KAAAyzF,cAAA5yE,EAAAqC,KAAA,WAKKljB,KAAA+zF,aAAAlC,KACL,IAAAC,IACAA,EAAA,MAEApoE,EAAAynE,EAAAU,GACAnoE,GAAAynE,EAAAW,GACA9xF,UAAAkyF,OAAArxE,EAAAqC,IAAAwG,GACA1pB,KAAAszF,SAAA5pE,EAAA98B,aA/LAoT,KAAA+xF,iBAAA,OAqMA3rE,EAAA9vB,UAAA,IAAAwtB,EAGAsC,EAAA9vB,UAAA+7F,eAAA,SAAAnvE,GACA,IAAAiU,EAAAn3B,KAAAsyF,WAEAz8F,IAAA,SAAA+9F,GACA,IACA,OAAAA,EAAAl8F,OACO,MAAAwG,GAMP,OADAyT,QAAA/C,MAAA,+BACA,MAIAhZ,KAAA,MAEAgH,QAAA,iBAEAu6B,EAAAvqC,QACAoT,KAAAokB,QAAA,QACA4vE,SAAAh0F,KAAAwyF,UACAyB,OAAA/wE,EACAwG,KAAAyN,EACA3R,OAAAxlB,KAAAwjC,SAQApd,EAAA9vB,UAAA0lD,MAAA,WACAh8C,KAAAkyF,MAAA,QAKAlyF,KAAAk0F,QAAA,EACAl0F,KAAAwyF,UAAA,EACAxyF,KAAAsyF,WAAAjB,IACArxF,KAAAuyF,cAAAlB,IACArxF,KAAA+xF,iBAAA,KAGA/xF,KAAAszF,QAAA,EACAtzF,KAAAizF,KA1RA,GA2RAjzF,KAAA0yF,YAAA,EAGA1yF,KAAA6zF,gBAMAztE,EAAA9vB,UAAAq7F,aAAA,WAaA,IAAA3xF,KAAA0xF,cACA1xF,KAAAm0F,MAAA,GACAn0F,KAAAo0F,KAAA,GACAp0F,KAAAq0F,UAAA,GAAAr0F,KAAAyxF,SAAA,EACAzxF,KAAAs0F,QAAA,IACG,IAAAt0F,KAAA0xF,eACH1xF,KAAAm0F,MAAA,GACAn0F,KAAAo0F,KAAA,GACAp0F,KAAAq0F,UAAA,GAAAr0F,KAAAyxF,SAAA,EACAzxF,KAAAs0F,QAAA,IAOAt0F,KAAAgyF,SAAA,EAEAhyF,KAAAiyF,wBAAA,GAAAjyF,KAAAq0F,SACAr0F,KAAAmyF,gBAAA,GAAAnyF,KAAAq0F,SAEAr0F,KAAAyyF,gBAAA,GAAAzyF,KAAAq0F,SACAr0F,KAAA4yF,gBAAA,GAAA5yF,KAAAq0F,SACAr0F,KAAA6yF,gBAAA,GAAA7yF,KAAAq0F,SACAr0F,KAAA8yF,iBAAA,GAAA9yF,KAAAq0F,SAEAr0F,KAAAozF,0BAAA,GAAApzF,KAAAq0F,SAEAr0F,KAAAgzF,WAAA,GAAAhzF,KAAAq0F,SACAr0F,KAAAkzF,wBAAA,GAAAlzF,KAAAq0F,SACAr0F,KAAAmzF,4BAAA,GAAAnzF,KAAAq0F,UAcAjuE,EAAA9vB,UAAA+8F,mBAAA,SAAAxB,EAAAC,GACA,OAAAD,IAAA7xF,KAAAo0F,MAAAtC,GAAA,IAAAA,GAAA,IAcA1rE,EAAA9vB,UAAAi9F,eAAA,SAAA1B,EAAAC,GACA,OAAAD,IAAA7xF,KAAAo0F,KAAA,GAAAvC,IAAA7xF,KAAAo0F,KAAA,IACAtC,GAAA,IAAAA,GAAA,IAcA1rE,EAAA9vB,UAAAk9F,aAAA,SAAA3B,EAAAC,GACA,OAAAD,IAAA7xF,KAAAo0F,MAAAtC,GAAA,IAAAA,GAAA,IAcA1rE,EAAA9vB,UAAAo9F,oBAAA,SAAA7B,EAAAC,GACA,OAAAD,IAAA7xF,KAAAs0F,SAAAxC,GAAA,IAAAA,GAAA,IAcA1rE,EAAA9vB,UAAAq9F,MAAA,SAAA9B,EAAAC,GACA,OAAAD,GAAA7xF,KAAAm0F,OAAAtC,EAAA7xF,KAAAm0F,MAAA,GACArC,GAAA,IAAAA,GAAA,KAYA1rE,EAAA9vB,UAAAw9F,WAAA,SAAAhC,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAWA1rE,EAAA9vB,UAAAy9F,aAAA,SAAAQ,GACA,OAAAA,GAAA,IAAAA,GAAA,KAUAnuE,EAAA9vB,UAAAq8F,UAAA,SAAAzvE,EAAAsxE,GAWA,GATA,WAAAx0F,KAAAkyF,QACAlyF,KAAAizF,KAlcA,GAmcAjzF,KAAAkyF,MAAA,SAEAlyF,KAAAqyF,eAAAnvE,GACAljB,KAAAuyF,cAAAlB,IACArxF,KAAAsyF,WAAAjB,UAGAp1F,IAAAu4F,OAAAx0F,KAAAizF,KAEA,QAAAhoG,EAAA,EAAmBA,EAAA+U,KAAA0yF,YAAsBznG,IACzC+U,KAAAsyF,WAAAkC,EAAAvpG,GAAA+U,KAAAsyF,WAAAtyF,KAAAizF,KAAAhoG,GACA+U,KAAAsyF,WAAAtyF,KAAAizF,KAAAhoG,GAAA,QAIAgR,IAAAu4F,IACAA,EAAAx0F,KAAAizF,MAGAjzF,KAAAk0F,QAAAM,EAAAx0F,KAAA0yF,YAAA,GAKAtsE,EAAA9vB,UAAAm9F,cAAA,SAAAvwE,EAAAuxE,GACAz0F,KAAA6zF,YAAA7zF,KAAA6zF,YAAA37F,OAAAu8F,GACA,IAAA/qE,EAAA+qE,EAAAr8F,OAAA,SAAAsxB,EAAA+qE,GACA,OAAA/qE,EAAA,IAAA+qE,EAAA,KACG,IACHz0F,UAAAkyF,OAAAhvE,EAAAwG,IAKAtD,EAAA9vB,UAAA87F,gBAAA,SAAAlvE,GACA,GAAAljB,KAAA6zF,YAAAjnG,OAAA,CAGA,IAAA88B,EAAA1pB,KAAA6zF,YAAAnjF,UAAAtY,OAAA,SAAAsxB,EAAA+qE,GACA,OAAA/qE,EAAA,KAAA+qE,EAAA,KACG,IACHz0F,KAAA6zF,eACA7zF,UAAAkyF,OAAAhvE,EAAAwG,KAIAtD,EAAA9vB,UAAAo+F,MAAA,SAAAxxE,EAAAwG,GACA,IAAAirE,EAAA30F,KAAAuyF,cAAAvyF,KAAAizF,MAGA0B,GAAAjrE,EACA1pB,KAAAuyF,cAAAvyF,KAAAizF,MAAA0B,GAGAvuE,EAAA9vB,UAAAs+F,OAAA,SAAA1xE,EAAAwG,GACA,IAAAirE,EAAA30F,KAAAsyF,WAAAtyF,KAAAizF,MAEA0B,GAAAjrE,EACA1pB,KAAAsyF,WAAAtyF,KAAAizF,MAAA0B,GAIAvuE,EAAA9vB,UAAAy8F,aAAA,WACA,IAAA9nG,EAEA,IAAAA,EAAA,EAAaA,EAAA+U,KAAAk0F,QAAkBjpG,IAC/B+U,KAAAsyF,WAAArnG,GAAA,GAEA,IAAAA,EAAA+U,KAAAizF,KAAA,EAAyBhoG,EAAAqmG,GAAoBrmG,IAC7C+U,KAAAsyF,WAAArnG,GAAA,GAGA,IAAAA,EAAA+U,KAAAk0F,QAAwBjpG,EAAA+U,KAAAizF,KAAehoG,IACvC+U,KAAAsyF,WAAArnG,GAAA+U,KAAAsyF,WAAArnG,EAAA,GAGA+U,KAAAsyF,WAAAtyF,KAAAizF,MAAA,IAGA7sE,EAAA9vB,UAAAu+F,QAAA,SAAA3xE,EAAAwG,GACA,IAAAirE,EAAA30F,KAAAsyF,WAAAtyF,KAAAizF,MAEA0B,GAAAjrE,EACA1pB,KAAAsyF,WAAAtyF,KAAAizF,MAAA0B,GAIA39F,EAAAC,SACA8sB,gBACAqC,qDCtoBApvB,EAAAC,SACAmlK,SAtJA,SAAA/lK,GAWA,IAVA,IACApL,EAAA,EACAC,GACA++F,aAAA,EACAC,YAAA,GAEAD,EAAA,EACAC,EAAA,EAGAj/F,EAAAoL,EAAAnM,YArBA,MAuBAmM,EAAApL,IAFA,CAOA,WAAAoL,EAAApL,IACAg/F,GAAA,IACAh/F,IAKA,IAHAg/F,GAAA5zF,EAAApL,KAGA,MAAAoL,EAAApL,IACAi/F,GAAA,IACAj/F,IAMA,GAJAi/F,GAAA7zF,EAAApL,MAIAC,EAAA+sB,SA5CA,IA4CAgyE,EAAA,CACA/+F,EAAA++F,cACA/+F,EAAAg/F,cACAh/F,EAAA+sB,QAAA5hB,EAAAzL,SAAAK,IAAAi/F,GACA,MAIAj/F,GAAAi/F,EACAD,EAAA,EACAC,EAAA,EAGA,OAAAh/F,GAyGAoxK,cArGA,SAAAnyE,GAGA,aAAAA,EAAAlyE,QAAA,GACA,KAIA,KAAAkyE,EAAAlyE,QAAA,MAAAkyE,EAAAlyE,QAAA,IACA,KAOA,SAHArqB,OAAAC,aAAAs8F,EAAAlyE,QAAA,GACAkyE,EAAAlyE,QAAA,GACAkyE,EAAAlyE,QAAA,GACAkyE,EAAAlyE,QAAA,IACA,KAIA,IAAAkyE,EAAAlyE,QAAA,GACA,KAKAkyE,EAAAlyE,QAAArtB,SAAA,EAAAu/F,EAAAlyE,QAAArrB,OAAA,IA2EA2vK,oBAvEA,SAAAr5I,EAAAknE,GACA,IAAAn/F,EAAAu0B,EAAAx0B,EAAAnB,EAAAoO,KAGA,QAAAmyF,EAAA,IACA,OAAAnyF,EAKA,IADAunB,EAAA,GAAA4qE,EAAA,GACAn/F,EAAA,EAAaA,EAAAu0B,EAAWv0B,IAExBpB,GACAqL,KAAA,EAAAk1F,EAAA,GAFAp/F,EAAA,EAAAC,IAGAi4B,OAIA,EAAAknE,EAAAp/F,EAAA,KACAnB,EAAAwgG,OAAAD,EAAAp/F,EAAA,MAAAo/F,EAAAp/F,EAAA,GACAiN,EAAAtM,KAAA9B,IAGA,OAAAoO,GAiDAsgG,gCA9CA,SAAA1uG,GAQA,IAPA,IAIAygG,EAAAC,EAHA39F,EAAA/C,EAAAK,WACAsgG,KACAv/F,EAAA,EAIAA,EAAA2B,EAAA,GACA,IAAA/C,EAAAoB,IAAA,IAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,IACAu/F,EAAA7+F,KAAAV,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAAu/F,EAAA59F,OACA,OAAA/C,EAIAygG,EAAA19F,EAAA49F,EAAA59F,OACA29F,EAAA,IAAA3+F,WAAA0+F,GACA,IAAAG,EAAA,EAEA,IAAAx/F,EAAA,EAAeA,EAAAq/F,EAAeG,IAAAx/F,IAC9Bw/F,IAAAD,EAAA,KAEAC,IAEAD,EAAArtF,SAEAotF,EAAAt/F,GAAApB,EAAA4gG,GAGA,OAAAF,GASA8xE,+BArKA,yBCnBA,IAAAG,EAAA9jG,OAAAlrC,OAAA,SAAA/zB,GAA2C,OAAAA,MAE3CzC,EAAAC,QAAAyhE,OAAA7/D,UAAA,SAAA2E,GAAkD,uBAAAA,IAAAg/J,EAAAh/J,QAAA7E,KAAA6E,KAAA7E,wCCAlD,IAAA2tB,EAAYx9B,EAAQ,QACpB2zK,EAAc3zK,EAAQ,QAEtB4zK,GACAC,SAAA,SAAAxmK,GACA,OAAAA,EAAA,MAEAymK,QAAA,SAAAzmK,EAAAD,GACA,OAAAC,EAAA,IAAAD,EAAA,KAEA4P,OAAA,SAAA3P,GACA,OAAAA,IAIA0mK,EAAA5zK,KAAAqN,UAAA6qF,YAEA27E,GACA13J,UAAA,IACA3I,QAAA,EACAsgK,QAAAz2I,EAAA7pB,OACAugK,kBAAA,EACAC,cAAA,SAAA1xD,GACA,OAAAsxD,EAAArmK,KAAA+0G,IAEA2xD,WAAA,EACAC,oBAAA,GAGArmK,EAAA,SAAAA,EACAwf,EACAngB,EACAinK,EACAD,EACAD,EACAH,EACA9mK,EACAknE,EACAkgG,EACAJ,EACAK,EACAN,GAEA,IAAA1/J,EAAAgZ,EACA,sBAAArgB,EACAqH,EAAArH,EAAAE,EAAAmH,QACK,GAAAA,aAAArU,KACLqU,EAAA2/J,EAAA3/J,QACK,UAAAA,EAAA,CACL,GAAA6/J,EACA,OAAAJ,IAAAC,EAAAD,EAAA5mK,EAAA2mK,EAAAC,SAAA5mK,EAGAmH,EAAA,GAGA,oBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAAgpB,EAAA5H,SAAAphB,GACA,OAAAy/J,GAEAO,EADAN,EAAA7mK,EAAA4mK,EAAA5mK,EAAA2mK,EAAAC,UACA,IAAAO,EAAAP,EAAAz/J,EAAAw/J,EAAAC,YAEAO,EAAAnnK,GAAA,IAAAmnK,EAAA1vK,OAAA0P,KAGA,IAMAigK,EANArjG,KAEA,YAAA58D,EACA,OAAA48D,EAIA,GAAAvkE,MAAAyH,QAAAnH,GACAsnK,EAAAtnK,MACK,CACL,IAAAD,EAAAD,OAAAC,KAAAsH,GACAigK,EAAApgG,EAAAnnE,EAAAmnE,QAAAnnE,EAGA,QAAA/K,EAAA,EAAmBA,EAAAsyK,EAAA3wK,SAAoB3B,EAAA,CACvC,IAAAiL,EAAAqnK,EAAAtyK,GAEAiyK,GAAA,OAAA5/J,EAAApH,KAKAgkE,EADAvkE,MAAAyH,QAAAE,GACA48D,EAAAhiE,OAAApB,EACAwG,EAAApH,GACAknK,EAAAjnK,EAAAD,GACAknK,EACAD,EACAD,EACAH,EACA9mK,EACAknE,EACAkgG,EACAJ,EACAK,EACAN,IAGA9iG,EAAAhiE,OAAApB,EACAwG,EAAApH,GACAC,GAAAknK,EAAA,IAAAnnK,EAAA,IAAAA,EAAA,KACAknK,EACAD,EACAD,EACAH,EACA9mK,EACAknE,EACAkgG,EACAJ,EACAK,EACAN,KAKA,OAAA9iG,GAGAljE,EAAAC,QAAA,SAAAqf,EAAA9P,GACA,IAAAlJ,EAAAgZ,EACAtY,EAAAwI,EAAA8f,EAAAG,UAAwCjgB,MAExC,UAAAxI,EAAA++J,cAAA9gK,IAAA+B,EAAA++J,SAAA,mBAAA/+J,EAAA++J,QACA,UAAAp2J,UAAA,iCAGA,IAAAvB,OAAA,IAAApH,EAAAoH,UAAA03J,EAAA13J,UAAApH,EAAAoH,UACA+3J,EAAA,kBAAAn/J,EAAAm/J,mBAAAn/J,EAAAm/J,mBAAAL,EAAAK,mBACAD,EAAA,kBAAAl/J,EAAAk/J,UAAAl/J,EAAAk/J,UAAAJ,EAAAI,UACAzgK,EAAA,kBAAAuB,EAAAvB,OAAAuB,EAAAvB,OAAAqgK,EAAArgK,OACAsgK,EAAA,mBAAA/+J,EAAA++J,QAAA/+J,EAAA++J,QAAAD,EAAAC,QACA5/F,EAAA,mBAAAn/D,EAAAm/D,KAAAn/D,EAAAm/D,KAAA,KACAkgG,OAAA,IAAAr/J,EAAAq/J,WAAAr/J,EAAAq/J,UACAJ,EAAA,mBAAAj/J,EAAAi/J,cAAAj/J,EAAAi/J,cAAAH,EAAAG,cACAD,EAAA,kBAAAh/J,EAAAg/J,iBAAAh/J,EAAAg/J,iBAAAF,EAAAE,iBACA,YAAAh/J,EAAAy2F,OACAz2F,EAAAy2F,OAAAgoE,EAAA,aACK,IAAA1mK,OAAAO,UAAAoU,eAAAlU,KAAAimK,EAAAe,WAAAx/J,EAAAy2F,QACL,UAAA9tF,UAAA,mCAEA,IACA42J,EACAtnK,EAFAqnK,EAAAb,EAAAe,WAAAx/J,EAAAy2F,QAIA,mBAAAz2F,EAAA/H,OAEAqH,GADArH,EAAA+H,EAAA/H,QACA,GAAAqH,GACK3H,MAAAyH,QAAAY,EAAA/H,UAELsnK,EADAtnK,EAAA+H,EAAA/H,QAIA,IAMAwnK,EANAznK,KAEA,oBAAAsH,GAAA,OAAAA,EACA,SAKAmgK,EADAz/J,EAAAy/J,eAAAf,EACA1+J,EAAAy/J,YACK,YAAAz/J,EACLA,EAAA4+J,QAAA,mBAEA,UAGA,IAAAQ,EAAAV,EAAAe,GAEAF,IACAA,EAAAxnK,OAAAC,KAAAsH,IAGA6/D,GACAogG,EAAApgG,QAGA,QAAAlyE,EAAA,EAAmBA,EAAAsyK,EAAA3wK,SAAoB3B,EAAA,CACvC,IAAAiL,EAAAqnK,EAAAtyK,GAEAiyK,GAAA,OAAA5/J,EAAApH,KAIAF,IAAAkC,OAAApB,EACAwG,EAAApH,GACAA,EACAknK,EACAD,EACAD,EACAzgK,EAAAsgK,EAAA,KACA9mK,EACAknE,EACAkgG,EACAJ,EACAK,EACAN,KAIA,IAAAU,EAAA1nK,EAAAJ,KAAAwP,GACAjP,GAAA,IAAA6H,EAAA2/J,eAAA,OAEA,OAAAD,EAAA9wK,OAAA,EAAAuJ,EAAAunK,EAAA,uCC9MA,IAAAp3I,EAAYx9B,EAAQ,QAEpBiwC,EAAAhjC,OAAAO,UAAAoU,eAEAoyJ,GACAO,WAAA,EACAO,iBAAA,EACAC,WAAA,GACA5jD,QAAA3zF,EAAAzpB,OACAuI,UAAA,IACA1a,MAAA,EACAozK,eAAA,IACAC,cAAA,EACAZ,oBAAA,GAmEAa,EAAA,SAAAC,EAAAziK,EAAAwC,GACA,GAAAigK,EAAA,CAKA,IAAA/nK,EAAA8H,EAAAq/J,UAAAY,EAAArhK,QAAA,sBAAAqhK,EAKA58J,EAAA,gBAIA+C,EALA,eAKAiB,KAAAnP,GACAiE,EAAAiK,EAAAlO,EAAAK,MAAA,EAAA6N,EAAAtO,OAAAI,EAIAF,KACA,GAAAmE,EAAA,CAGA,IAAA6D,EAAA+/J,cAAAhlI,EAAAviC,KAAAT,OAAAO,UAAA6D,KACA6D,EAAA4/J,gBACA,OAIA5nK,EAAArK,KAAAwO,GAMA,IADA,IAAAlP,EAAA,EACA,QAAAmZ,EAAA/C,EAAAgE,KAAAnP,KAAAjL,EAAA+S,EAAAtT,OAAA,CAEA,GADAO,GAAA,GACA+S,EAAA+/J,cAAAhlI,EAAAviC,KAAAT,OAAAO,UAAA8N,EAAA,GAAA7N,MAAA,SACAyH,EAAA4/J,gBACA,OAGA5nK,EAAArK,KAAAyY,EAAA,IASA,OAJAA,GACApO,EAAArK,KAAA,IAAAuK,EAAAK,MAAA6N,EAAAtO,OAAA,KAnFA,SAAAooK,EAAA1iK,EAAAwC,GAGA,IAFA,IAAAmgK,EAAA3iK,EAEAvQ,EAAAizK,EAAAtxK,OAAA,EAAkC3B,GAAA,IAAQA,EAAA,CAC1C,IAAAqS,EACAktJ,EAAA0T,EAAAjzK,GAEA,UAAAu/J,EAEAltJ,GADAA,MACApF,OAAAimK,OACS,CACT7gK,EAAAU,EAAA+/J,aAAAhoK,OAAA0R,OAAA,SACA,IAAA22J,EAAA,MAAA5T,EAAAxmJ,OAAA,UAAAwmJ,EAAAxmJ,OAAAwmJ,EAAA59J,OAAA,GAAA49J,EAAAj0J,MAAA,MAAAi0J,EACA10J,EAAA4yB,SAAA01I,EAAA,KAEA5wI,MAAA13B,IACA00J,IAAA4T,GACAxwK,OAAAkI,KAAAsoK,GACAtoK,GAAA,GACAkI,EAAAqgK,aAAAvoK,GAAAkI,EAAA6/J,YAEAvgK,MACAxH,GAAAqoK,EAEA7gK,EAAA8gK,GAAAD,EAIAA,EAAA7gK,EAGA,OAAA6gK,EAuDAG,CAAAtoK,EAAAwF,EAAAwC,KAGAhH,EAAAC,QAAA,SAAAyF,EAAA8J,GACA,IAAAxI,EAAAwI,EAAA8f,EAAAG,UAAwCjgB,MAExC,UAAAxI,EAAAi8G,cAAAh+G,IAAA+B,EAAAi8G,SAAA,mBAAAj8G,EAAAi8G,QACA,UAAAtzG,UAAA,iCAeA,GAZA3I,EAAAugK,mBAAA,IAAAvgK,EAAAugK,kBACAvgK,EAAAoH,UAAA,iBAAApH,EAAAoH,WAAAkhB,EAAAumG,SAAA7uH,EAAAoH,WAAApH,EAAAoH,UAAA03J,EAAA13J,UACApH,EAAAtT,MAAA,iBAAAsT,EAAAtT,MAAAsT,EAAAtT,MAAAoyK,EAAApyK,MACAsT,EAAA6/J,WAAA,iBAAA7/J,EAAA6/J,WAAA7/J,EAAA6/J,WAAAf,EAAAe,WACA7/J,EAAAqgK,aAAA,IAAArgK,EAAAqgK,YACArgK,EAAAi8G,QAAA,mBAAAj8G,EAAAi8G,QAAAj8G,EAAAi8G,QAAA6iD,EAAA7iD,QACAj8G,EAAAq/J,UAAA,kBAAAr/J,EAAAq/J,UAAAr/J,EAAAq/J,UAAAP,EAAAO,UACAr/J,EAAA+/J,aAAA,kBAAA//J,EAAA+/J,aAAA//J,EAAA+/J,aAAAjB,EAAAiB,aACA//J,EAAA4/J,gBAAA,kBAAA5/J,EAAA4/J,gBAAA5/J,EAAA4/J,gBAAAd,EAAAc,gBACA5/J,EAAA8/J,eAAA,iBAAA9/J,EAAA8/J,eAAA9/J,EAAA8/J,eAAAhB,EAAAgB,eACA9/J,EAAAm/J,mBAAA,kBAAAn/J,EAAAm/J,mBAAAn/J,EAAAm/J,mBAAAL,EAAAK,mBAEA,KAAAzgK,GAAA,OAAAA,QAAA,IAAAA,EACA,OAAAsB,EAAA+/J,aAAAhoK,OAAA0R,OAAA,SASA,IANA,IAAA+2J,EAAA,iBAAA9hK,EA9IA,SAAAA,EAAAsB,GAMA,IALA,IAAAV,KACAmhK,EAAAzgK,EAAAugK,kBAAA7hK,EAAAE,QAAA,UAAAF,EACAgiK,EAAA1gK,EAAA8/J,iBAAAnlK,SAAAsD,EAAA+B,EAAA8/J,eACA5gK,EAAAuhK,EAAA1nK,MAAAiH,EAAAoH,UAAAs5J,GAEAzzK,EAAA,EAAmBA,EAAAiS,EAAAtQ,SAAkB3B,EAAA,CACrC,IAKAiL,EAAAsF,EALA2wD,EAAAjvD,EAAAjS,GAEA0zK,EAAAxyG,EAAA5yD,QAAA,MACAqrJ,GAAA,IAAA+Z,EAAAxyG,EAAA5yD,QAAA,KAAAolK,EAAA,GAGA,IAAA/Z,GACA1uJ,EAAA8H,EAAAi8G,QAAA9tD,EAAA2wG,EAAA7iD,SACAz+G,EAAAwC,EAAAm/J,mBAAA,UAEAjnK,EAAA8H,EAAAi8G,QAAA9tD,EAAA51D,MAAA,EAAAquJ,GAAAkY,EAAA7iD,SACAz+G,EAAAwC,EAAAi8G,QAAA9tD,EAAA51D,MAAAquJ,EAAA,GAAAkY,EAAA7iD,UAEAlhF,EAAAviC,KAAA8G,EAAApH,GACAoH,EAAApH,MAAAgC,OAAAoF,EAAApH,IAAAgC,OAAAsD,GAEA8B,EAAApH,GAAAsF,EAIA,OAAA8B,EAmHAshK,CAAAliK,EAAAsB,GAAAtB,EACAY,EAAAU,EAAA+/J,aAAAhoK,OAAA0R,OAAA,SAIAzR,EAAAD,OAAAC,KAAAwoK,GACAvzK,EAAA,EAAmBA,EAAA+K,EAAApJ,SAAiB3B,EAAA,CACpC,IAAAiL,EAAAF,EAAA/K,GACA4zK,EAAAb,EAAA9nK,EAAAsoK,EAAAtoK,GAAA8H,GACAV,EAAAgpB,EAAAw4I,MAAAxhK,EAAAuhK,EAAA7gK,GAGA,OAAAsoB,EAAAy4I,QAAAzhK,uCC1KA,IAAAgpB,EAAYx9B,EAAQ,QAEpB,SAAA2T,EAAAjB,GACA,OAAAmB,mBAAAnB,GACAoB,QAAA,aACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,aAUA5F,EAAAC,QAAA,SAAAkX,EAAAnS,EAAAg9J,GAEA,IAAAh9J,EACA,OAAAmS,EAGA,IAAA6wJ,EACA,GAAAhG,EACAgG,EAAAhG,EAAAh9J,QACG,GAAAsqB,EAAA24I,kBAAAjjK,GACHgjK,EAAAhjK,EAAAtF,eACG,CACH,IAAAwG,KAEAopB,EAAAvtB,QAAAiD,EAAA,SAAAR,EAAAtF,GACA,OAAAsF,QAAA,IAAAA,IAIA8qB,EAAAlpB,QAAA5B,GACAtF,GAAA,KAEAsF,MAGA8qB,EAAAvtB,QAAAyC,EAAA,SAAAjG,GACA+wB,EAAA44I,OAAA3pK,GACAA,IAAA4rF,cACS76D,EAAA1Z,SAAArX,KACTA,EAAAsB,KAAAC,UAAAvB,IAEA2H,EAAAvR,KAAA8Q,EAAAvG,GAAA,IAAAuG,EAAAlH,SAIAypK,EAAA9hK,EAAAtH,KAAA,KAGA,GAAAopK,EAAA,CACA,IAAAG,EAAAhxJ,EAAA5U,QAAA,MACA,IAAA4lK,IACAhxJ,IAAA5X,MAAA,EAAA4oK,IAGAhxJ,KAAA,IAAAA,EAAA5U,QAAA,cAAAylK,EAGA,OAAA7wJ,sCCnEA,IAAAmY,EAAYx9B,EAAQ,QAUpBkO,EAAAC,QAAA,SAAAmoK,EAAAC,GAEAA,QACA,IAAA10K,KAkCA,OAhCA27B,EAAAvtB,SAAA,yCAAAm9B,QACA,IAAAmpI,EAAAnpI,KACAvrC,EAAAurC,GAAAmpI,EAAAnpI,MAIA5P,EAAAvtB,SAAA,mCAAAm9B,GACA5P,EAAA1Z,SAAAyyJ,EAAAnpI,IACAvrC,EAAAurC,GAAA5P,EAAAg5I,UAAAF,EAAAlpI,GAAAmpI,EAAAnpI,SACK,IAAAmpI,EAAAnpI,GACLvrC,EAAAurC,GAAAmpI,EAAAnpI,GACK5P,EAAA1Z,SAAAwyJ,EAAAlpI,IACLvrC,EAAAurC,GAAA5P,EAAAg5I,UAAAF,EAAAlpI,SACK,IAAAkpI,EAAAlpI,KACLvrC,EAAAurC,GAAAkpI,EAAAlpI,MAIA5P,EAAAvtB,SACA,oEACA,sEACA,4EACA,uEACA,cACA,SAAAm9B,QACA,IAAAmpI,EAAAnpI,GACAvrC,EAAAurC,GAAAmpI,EAAAnpI,QACK,IAAAkpI,EAAAlpI,KACLvrC,EAAAurC,GAAAkpI,EAAAlpI,MAIAvrC,uBCjDA,IAAA40K,EAGAA,EAAA,WACA,OAAAv/J,KADA,GAIA,IAEAu/J,KAAA1lJ,SAAA,cAAAA,KAAA,EAAA2lJ,MAAA,QACC,MAAAthK,GAED,iBAAAyF,SACA47J,EAAA57J,QAOA3M,EAAAC,QAAAsoK,sBCJA,IAAAE,GACAC,IAAA,EACArN,IAAA,GAWA,SAAAsN,EAAAvpK,GACA,uBAAAA,MAAA,GAAAA,GAAA,IAuGAY,EAAAC,QAnGA,WACA,IAAA2xE,EAAA,IACAg3F,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAEAlqK,OAAA8f,iBAAA7V,MACA3V,OACA+rB,YAAA,EACAlT,IAAA,WACA,OAAA0lE,GAEAzwD,IAAA,SAAA/hB,GACA,IAAAupK,EAAAvpK,GACA,UAAAsZ,MAAA,oCAEAk5D,EAAAxyE,IAGA8pK,OACA9pJ,YAAA,EACAlT,IAAA,WACA,OAAA08J,GAEAznJ,IAAA,SAAA/hB,GACA,oBAAAA,EACA,UAAAuQ,UAAA,kCAEAi5J,EAAAxpK,IAGA+pK,eACA/pJ,YAAA,EACAlT,IAAA,WACA,OAAA48J,GAEA3nJ,IAAA,SAAA/hB,GACA,IAAAupK,EAAAvpK,GACA,UAAAsZ,MAAA,4CAEAowJ,EAAA1pK,IAGAgqK,eACAhqJ,YAAA,EACAlT,IAAA,WACA,OAAA28J,GAEA1nJ,IAAA,SAAA/hB,GACA,IAAAupK,EAAAvpK,GACA,UAAAsZ,MAAA,4CAEAmwJ,EAAAzpK,IAGAiqK,iBACAjqJ,YAAA,EACAlT,IAAA,WACA,OAAA88J,GAEA7nJ,IAAA,SAAA/hB,GACA,IAAAupK,EAAAvpK,GACA,UAAAsZ,MAAA,8CAEAswJ,EAAA5pK,IAGAkqK,iBACAlqJ,YAAA,EACAlT,IAAA,WACA,OAAA68J,GAEA5nJ,IAAA,SAAA/hB,GACA,IAAAupK,EAAAvpK,GACA,UAAAsZ,MAAA,8CAEAqwJ,EAAA3pK,IAGAmqK,QACAnqJ,YAAA,EACAlT,IAAA,WACA,OAAA+8J,GAEA9nJ,IAAA,SAAA/hB,GACA,IAAAoqK,EArGA,SAAApqK,GACA,uBAAAA,KAGAqpK,EAAArpK,EAAAozB,gBACApzB,EAAAozB,cAgGAi3I,CAAArqK,GAEA,QAAAoqK,EACA,UAAAE,YAAA,+CAEAT,EAAAO,0CC7HA,IAAAG,EAAmB73K,EAAQ,QAY3BkO,EAAAC,QAAA,SAAAmC,EAAAzO,EAAAwzB,EAAAU,EAAAlD,GACA,IAAA/M,EAAA,IAAAc,MAAAtW,GACA,OAAAunK,EAAA/xJ,EAAAjkB,EAAAwzB,EAAAU,EAAAlD,uCCdA,IAAA2K,EAAYx9B,EAAQ,QAEpBkO,EAAAC,QACAqvB,EAAA4yI,uBAIA,WACA,IAEA0H,EAFAC,EAAA,kBAAA7+J,KAAA2L,UAAAC,WACAkzJ,EAAA/zJ,SAAAqqB,cAAA,KASA,SAAA2pI,EAAA5yJ,GACA,IAAAhO,EAAAgO,EAWA,OATA0yJ,IAEAC,EAAAtpI,aAAA,OAAAr3B,GACAA,EAAA2gK,EAAA3gK,MAGA2gK,EAAAtpI,aAAA,OAAAr3B,IAIAA,KAAA2gK,EAAA3gK,KACAo1C,SAAAurH,EAAAvrH,SAAAurH,EAAAvrH,SAAA34C,QAAA,YACA04C,KAAAwrH,EAAAxrH,KACAxhC,OAAAgtJ,EAAAhtJ,OAAAgtJ,EAAAhtJ,OAAAlX,QAAA,aACAwB,KAAA0iK,EAAA1iK,KAAA0iK,EAAA1iK,KAAAxB,QAAA,YACAokK,SAAAF,EAAAE,SACAC,KAAAH,EAAAG,KACAptJ,SAAA,MAAAitJ,EAAAjtJ,SAAA7P,OAAA,GACA88J,EAAAjtJ,SACA,IAAAitJ,EAAAjtJ,UAYA,OARA+sJ,EAAAG,EAAAp9J,OAAA/F,SAAAuC,MAQA,SAAA+gK,GACA,IAAAlgJ,EAAAsF,EAAAw1I,SAAAoF,GAAAH,EAAAG,KACA,OAAAlgJ,EAAAu0B,WAAAqrH,EAAArrH,UACAv0B,EAAAs0B,OAAAsrH,EAAAtrH,MAhDA,GAsDA,WACA,6CC9DA,IAEA6rH,EAFAr9I,EAAah7B,EAAQ,QAKrB8tG,GACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,OAWAuqE,EAAA,WACA,IAAAn3K,EAEAm3K,EAAA7qK,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAArU,KAAA,SAAAk1B,GACA,IAGAg2E,EACAC,EACAC,EACAC,EACAjlG,EACAklG,EAPAhsG,EAAA,EACAisG,EAAA,EAQA,aAAAr2E,EAAA3rB,KAkBA,IAXAlL,GACAgtG,EAAAhtG,GACAA,EAAA,IAAA4B,WAAAorG,EAAA9sG,WAAA22B,EAAAh3B,KAAAK,aACAiuB,IAAA6+E,GACAhtG,EAAAmuB,IAAA0I,EAAAh3B,KAAAmtG,EAAA9sG,aAEAF,EAAA62B,EAAAh3B,KAKAoB,EAAA,EAAAjB,EAAA4C,QAGA,SAAA5C,EAAAiB,IAAA,UAAAjB,EAAAiB,EAAA,KAyBA,GAhBA6rG,EAAA,MAAA9sG,EAAAiB,EAAA,IAIA4rG,GAAA,EAAA7sG,EAAAiB,EAAA,QACAjB,EAAAiB,EAAA,OACA,IAAAjB,EAAAiB,EAAA,OAGAgsG,EAAA,KADAllG,EAAA,WAAA/H,EAAAiB,EAAA,MAEA2rG,GAAA,GAAA5sG,EAAAiB,EAAA,SAEA8rG,EAAA9rG,EAAA4rG,EAIA7sG,EAAAE,WAAA6sG,EACA,OAmBA,GAfA/2F,KAAAokB,QAAA,QACAlB,IAAArC,EAAAqC,IAAAg0E,EAAAD,EACAh0E,IAAApC,EAAAoC,IAAAi0E,EAAAD,EACAllG,cACAsmB,gBAAA,GAAAruB,EAAAiB,EAAA,UACA+D,cAAA,EAAAhF,EAAAiB,EAAA,QACA,IAAAjB,EAAAiB,EAAA,QACAiE,WAAA0nG,GAAA,GAAA5sG,EAAAiB,EAAA,SACAqtB,wBAAA,GAAAtuB,EAAAiB,EAAA,QAEAgE,WAAA,GACApF,KAAAG,EAAAY,SAAAK,EAAA,EAAA6rG,EAAAC,KAIA/sG,EAAAE,aAAA6sG,EAEA,YADA/sG,OAAAiS,GAIAi7F,IAGAltG,IAAAY,SAAAmsG,QAlDA9rG,KAqDA+U,KAAAqkB,MAAA,WACArkB,KAAAokB,QAAA,WAIA9tB,UAAA,IAAAwtB,EAEA9sB,EAAAC,QAAAkqK,qCCxHA,IAIAC,EAJAt9I,EAAah7B,EAAQ,QACrBu4K,EAAev4K,EAAQ,SASvBs4K,EAAA,WACA,IACAj9I,EAAA,IAAAv4B,WACAuqG,EAAA,EAEAirE,EAAA9qK,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAAk6F,aAAA,SAAAz3E,GACA0zE,EAAA1zE,GAGAziB,KAAArU,KAAA,SAAA0K,GACA,IAGA8jG,EACA/rE,EACAvN,EACAu5E,EALA13E,EAAA,EACAC,EAAA,EAiBA,IATAwB,EAAAv3B,QACAwtG,EAAAj2E,EAAAv3B,QACAu3B,EAAA,IAAAv4B,WAAAyK,EAAAnM,WAAAkwG,IACAjiF,IAAAgM,EAAAv5B,SAAA,EAAAwvG,IACAj2E,EAAAhM,IAAA9hB,EAAA+jG,IAEAj2E,EAAA9tB,EAGA8tB,EAAAv3B,OAAA+1B,GAAA,GACA,GAAAwB,EAAAxB,KAAA,IAAApmB,WAAA,IACA4nB,EAAAxB,EAAA,SAAApmB,WAAA,IACA4nB,EAAAxB,EAAA,SAAApmB,WAAA,GAwBO,aAAA4nB,EAAAxB,KACP,UAAAwB,EAAAxB,EAAA,IA0BAA,QA3BO,CAKP,GAAAwB,EAAAv3B,OAAA+1B,EAAA,EACA,MAOA,GAAAA,GAJAD,EAAA2+I,EAAAv+I,cAAAqB,EAAAxB,IAIAwB,EAAAv3B,OACA,MAGAi0B,GACA3rB,KAAA,QACArL,KAAAs6B,EAAAv5B,SAAA+3B,IAAAD,GACAQ,IAAAizE,EACAlzE,IAAAkzE,GAEAn2F,KAAAokB,QAAA,OAAAvD,GACA8B,GAAAD,MAlDA,CAMA,GAAAyB,EAAAv3B,OAAA+1B,EAAA,GACA,MASA,GAAAA,GALAD,EAAA2+I,EAAAz+I,gBAAAuB,EAAAxB,IAKAwB,EAAAv3B,OACA,MAEAwhC,GACAl5B,KAAA,iBACArL,KAAAs6B,EAAAv5B,SAAA+3B,IAAAD,IAEA1iB,KAAAokB,QAAA,OAAAgK,GACAzL,GAAAD,EA+BAy3E,EAAAh2E,EAAAv3B,OAAA+1B,EAGAwB,EADAg2E,EAAA,EACAh2E,EAAAv5B,SAAA+3B,GAEA,IAAA/2B,cAKA0K,UAAA,IAAAwtB,EAEA9sB,EAAAC,QAAAmqK,sBCxHApqK,EAAAC,QAAA,SAAA0xB,EAAA24I,GACA,IAAAC,EAAA54I,EAAA24I,EACA,OAAAlvK,KAAA+mB,MAAAooJ,GAAA,EAAAA,IAAAD,0BCFAtqK,EAAAC,QAEA,SAAAqG,EAAAkkK,GACA,IAAAjkJ,EACA3O,EAAA,KAEA,IACA2O,EAAA1mB,KAAAlN,MAAA2T,EAAAkkK,GACK,MAAAloK,GACLsV,EAAAtV,EAGA,OAAAsV,EAAA2O,yCCVAvmB,EAAAC,QAAA,SAAAqX,EAAAmzJ,GACA,kBAEA,IADA,IAAA3xJ,EAAA,IAAAna,MAAAoa,UAAAnjB,QACA3B,EAAA,EAAmBA,EAAA6kB,EAAAljB,OAAiB3B,IACpC6kB,EAAA7kB,GAAA8kB,UAAA9kB,GAEA,OAAAqjB,EAAA7V,MAAAgpK,EAAA3xJ,wCCGA,IAAAyoF,EAAsCzvG,EAAQ,QAAgCyvG,gCAC9Ex0E,EAAoBj7B,EAAQ,QAAwBi7B,cACpDvD,EAAY13B,EAAQ,QACpBoO,EAAcpO,EAAQ,QAYtB+2G,EAAA,SAAA70G,EAAAgF,GAGA,IAFA,IAAA8vG,EAAA90G,EAEAC,EAAA,EAAiBA,EAAA+E,EAAApD,OAAoB3B,IAAA,CACrC,IAAAiJ,EAAAlE,EAAA/E,GAEA,GAAA60G,EAAA5rG,EAAAS,KACA,OAAAT,EAGA4rG,GAAA5rG,EAAAS,KAGA,aA+HAorG,EAAA,SAAA37F,EAAA47F,GAEA,IAAAznG,EAAAioB,EAAA7oB,QAAAyM,GAAA,gBAGA67F,KACAC,KAuCA,OAzCA1/E,EAAA7oB,QAAAyM,GAAA,SAKArL,QAAA,SAAA/K,EAAA8H,GACA,IAAAqqG,EAAA5nG,EAAAzC,GACAoqG,EAAAv0G,MACAqC,OACAuF,KAAA4sG,MAIAD,EAAAnnG,QAAA,SAAAqnG,GACA,IAWAC,EAXAryG,EAAAoyG,EAAApyG,KACAuF,EAAA6sG,EAAA7sG,KACAjB,EAAAkuB,EAAA7oB,QAAApE,GAAA,SAEA+sG,EAAAppG,EAAAI,UAAAhF,EAAA,IACAC,EAAA+tG,EAAA/tG,QACAL,EAAAsuB,EAAA7oB,QAAApE,GAAA,SAEApB,EAAAD,EAAAtF,OAAA,EAAAsK,EAAAE,UAAAlF,EAAA,IAAAC,oBAAA,EACAouG,EAAA//E,EAAA7oB,QAAApE,GAAA,SAKAysG,IAAAztG,GAAAguG,EAAA3zG,OAAA,IAGAyzG,EAjJA,SAAAnyG,EAAA8B,EAAAuC,GACA,IAGAiuG,EACAv1G,EACA2B,EACA6zG,EALAtyG,EAAA,IAAApE,SAAAmE,EAAAlE,OAAAkE,EAAAjE,WAAAiE,EAAAhE,YACAgB,KAMA,IAAAD,EAAA,EAAaA,EAAA,EAAAiD,EAAAtB,OAA0B3B,GAAA2B,EAKvC,GAJAA,EAAAuB,EAAApC,UAAAd,GACAA,GAAA,IAGA2B,GAAA,GAIA,UAAAsB,EAAAjD,IACA,OACA,IAAApB,EAAAqE,EAAAtD,SAAAK,EAAA,EAAAA,EAAA,EAAA2B,GACA8zG,EAAAb,EAAA50G,EAAA+E,GAEAwwG,GACApZ,YAAA,WACAzyF,KAAA/H,EACA/C,OACAihG,YAAAyN,EAAA1uG,GACA0I,WAGAmuG,GACAF,EAAAt9E,IAAAw9E,EAAAx9E,IACAs9E,EAAAv9E,IAAAy9E,EAAAz9E,IACAw9E,EAAAC,IAIAF,EAAAt9E,IAAAu9E,EAAAv9E,IACAs9E,EAAAv9E,IAAAw9E,EAAAx9E,KAGA/3B,EAAAS,KAAA60G,GAOA,OAAAt1G,EAgGAy1G,CAAA3yG,EAhFA,SAAAuyG,EAAApuG,EAAAG,GACA,IAAAgmG,EAAAnmG,EACAa,EAAAV,EAAAU,uBAAA,EACAC,EAAAX,EAAAW,mBAAA,EACAV,EAAAD,EAAAC,QACAquG,KA6BA,OA3BAL,EAAAxnG,QAAA,SAAA9E,GAIA,IACAjE,EADAkH,EAAAK,UAAAtD,GACAjE,QAEAA,EAAA+I,QAAA,SAAA7E,QACA+H,IAAA/H,EAAAxF,WACAwF,EAAAxF,SAAAsE,QAEAiJ,IAAA/H,EAAAS,OACAT,EAAAS,KAAA1B,GAEAiB,EAAA3B,UACA2B,EAAA+uB,IAAAq1E,OACAr8F,IAAA/H,EAAAU,wBACAV,EAAAU,sBAAA,GAEAV,EAAAgvB,IAAAo1E,EAAApkG,EAAAU,sBAEA0jG,GAAApkG,EAAAxF,WAGAkyG,IAAA1oG,OAAAlI,KAGA4wG,EA4CAC,CAAAN,EAAApuG,EAAAmuG,GAEA/tG,GAEA0tG,EAAA1tG,KACA0tG,EAAA1tG,OAGA0tG,EAAA1tG,GAAA0tG,EAAA1tG,GAAA2F,OAAAmoG,MAIAJ,GAoOAjpG,EAAAC,QA/LA,WACA,IACA69F,EAGAmM,EAEA1uG,EAEA9D,EAEAyyG,EAVAC,GAAA,EAgBAnhG,KAAAmhG,cAAA,WACA,OAAAA,GAOAnhG,KAAA7H,KAAA,WACA28F,EAAA,IAAA/wE,EACAo9E,GAAA,EAGArM,EAAA7zF,GAAA,gBAAAnB,GAEAA,EAAAlI,UAAAkI,EAAAk0F,SAAAvlG,EACAqR,EAAA+sC,QAAA/sC,EAAAm0F,OAAAxlG,EAEAyyG,EAAAjtD,SAAAtoD,KAAAmU,GACAohG,EAAArD,eAAA/9F,EAAA0lB,SAAA,KASAxlB,KAAAohG,UAAA,SAAAtoG,EAAAuoG,GACA,QAAAvoG,GAAA,IAAAA,EAAAlM,QACAy0G,GAAA,iBAAAA,GACA,IAAAtrG,OAAAC,KAAAqrG,GAAAz0G,QAIA2F,IAAAuG,EAAA,IACArK,IAAA4yG,EAAA9uG,KAaAyN,KAAArW,MAAA,SAAAya,EAAAtL,EAAAuoG,GACA,IAAAC,EAEA,IAAAthG,KAAAmhG,gBACA,YAGK,IAAAroG,IAAAuoG,EACL,YAEK,GAAArhG,KAAAohG,UAAAtoG,EAAAuoG,GAGL9uG,EAAAuG,EAAA,GACArK,EAAA4yG,EAAA9uG,QAIK,IAAAA,IAAA9D,EAEL,OADAwyG,EAAAt1G,KAAAyY,GACA,KAIA,KAAA68F,EAAAr0G,OAAA,IACA,IAAA20G,EAAAN,EAAA9jG,QAEA6C,KAAArW,MAAA43G,EAAAzoG,EAAAuoG,GAKA,eAFAC,EAlHA,SAAAl9F,EAAA7R,EAAA9D,GAGA,OAAA8D,GAOA8tG,QAHAN,EAAA37F,EAAA7R,GAGAA,GACA9D,aAPA,KA8GA+yG,CAAAp9F,EAAA7R,EAAA9D,KAEA6yG,EAAAjB,SAIArgG,KAAAyhG,SAAAH,EAAAjB,SAEArgG,KAAAulB,cAEA27E,GAPA,MAgBAlhG,KAAAyhG,SAAA,SAAAxzG,GACA,IAAA+R,KAAAmhG,kBAAAlzG,GAAA,IAAAA,EAAArB,OACA,YAGAqB,EAAA8K,QAAA,SAAA2oG,GACA5M,EAAAnpG,KAAA+1G,MAQA1hG,KAAAulB,YAAA,WACA,IAAAvlB,KAAAmhG,gBACA,YAGArM,EAAAzwE,SAMArkB,KAAA2hG,oBAAA,WACAT,EAAAjtD,YACAitD,EAAArD,mBAOA79F,KAAA4hG,mBAAA,WACA,IAAA5hG,KAAAmhG,gBACA,YAGArM,EAAA94C,SAQAh8C,KAAA6hG,iBAAA,WACA7hG,KAAA2hG,sBACA3hG,KAAA4hG,sBAMA5hG,KAAAg8C,MAAA,WACAilD,KACA1uG,EAAA,KACA9D,EAAA,KAEAyyG,EAOAlhG,KAAA2hG,sBANAT,GACAjtD,YAEA4pD,mBAMA79F,KAAA4hG,sBAGA5hG,KAAAg8C,6CCpbA,SAAA0lH,GAEA,IAAAp7I,EAAYx9B,EAAQ,QACpB64K,EAA0B74K,EAAQ,QAElC84K,GACAC,eAAA,qCAGA,SAAAC,EAAA9kJ,EAAA5mB,IACAkwB,EAAAy7I,YAAA/kJ,IAAAsJ,EAAAy7I,YAAA/kJ,EAAA,mBACAA,EAAA,gBAAA5mB,GAiBA,IAZA4rK,EAYAlF,GACAkF,cAXA,IAAAN,GAAA,qBAAA3rK,OAAAO,UAAAI,SAAAF,KAAAkrK,GAEAM,EAAcl5K,EAAQ,QACnB,oBAAAu0B,iBAEH2kJ,EAAcl5K,EAAQ,SAEtBk5K,GAMAC,kBAAA,SAAAp4K,EAAAmzB,GAGA,OAFA2kJ,EAAA3kJ,EAAA,UACA2kJ,EAAA3kJ,EAAA,gBACAsJ,EAAAsyI,WAAA/uK,IACAy8B,EAAA47I,cAAAr4K,IACAy8B,EAAA5H,SAAA70B,IACAy8B,EAAA67I,SAAAt4K,IACAy8B,EAAA87I,OAAAv4K,IACAy8B,EAAA+7I,OAAAx4K,GAEAA,EAEAy8B,EAAAg8I,kBAAAz4K,GACAA,EAAAG,OAEAs8B,EAAA24I,kBAAAp1K,IACAi4K,EAAA9kJ,EAAA,mDACAnzB,EAAA6M,YAEA4vB,EAAA1Z,SAAA/iB,IACAi4K,EAAA9kJ,EAAA,kCACAnmB,KAAAC,UAAAjN,IAEAA,IAGA04K,mBAAA,SAAA14K,GAEA,oBAAAA,EACA,IACAA,EAAAgN,KAAAlN,MAAAE,GACO,MAAAqU,IAEP,OAAArU,IAOAwwB,QAAA,EAEAg/I,eAAA,aACAE,eAAA,eAEAiJ,kBAAA,EAEA5jJ,eAAA,SAAAxC,GACA,OAAAA,GAAA,KAAAA,EAAA,MAIA0gJ,EAAA9/I,SACAylJ,QACAC,OAAA,sCAIAp8I,EAAAvtB,SAAA,gCAAAgkB,GACA+/I,EAAA9/I,QAAAD,QAGAuJ,EAAAvtB,SAAA,+BAAAgkB,GACA+/I,EAAA9/I,QAAAD,GAAAuJ,EAAAw4I,MAAA8C,KAGA5qK,EAAAC,QAAA6lK,0CC7FA,IAyKA/1E,EAAA,SAAArlE,EAAAjtB,GACA,IAAAP,GArBAS,KAAA,EACAxL,OACAC,UAAA,EACAC,UAAA,EACAC,aAAA,EACAC,cAAA,EACAG,oBAAA,EACAD,gBAAA,IA2BA,OAXAyK,EAAAO,aACAP,EAAAU,sBAAA8sB,EAAAwB,IAAAxB,EAAAuB,IACA/uB,EAAAxF,SAAAgzB,EAAAhzB,SACAwF,EAAAS,KAAA,EAAA+sB,EAAA90B,OACAsH,EAAAS,MAAA+sB,EAAAx3B,WAEAw3B,EAAAslE,WACA9yF,EAAA/K,MAAAE,UAAA,EACA6K,EAAA/K,MAAAM,gBAAA,GAGAyK,GAiEA8C,EAAAC,SACA0rK,oBAzPA,SAAAz7E,GACA,IACAj8F,EACAk8F,EACAvlE,KACA8hE,KAIA,IAFA9hE,EAAA13B,WAAA,EAEAe,EAAA,EAAaA,EAAAi8F,EAAAt6F,OAAqB3B,IAIlC,gCAHAk8F,EAAAD,EAAAj8F,IAGAm8F,aAGAxlE,EAAAh1B,SACAg1B,EAAAlzB,SAAAy4F,EAAAlkE,IAAArB,EAAAqB,IACAygE,EAAA/3F,KAAAi2B,KAEAA,GAAAulE,IACAj9F,WAAAi9F,EAAAt9F,KAAAK,WACA03B,EAAAsB,IAAAikE,EAAAjkE,IACAtB,EAAAqB,IAAAkkE,EAAAlkE,MAGA,8CAAAkkE,EAAAC,cACAxlE,EAAAolE,UAAA,GAEAplE,EAAAlzB,SAAAy4F,EAAAlkE,IAAArB,EAAAqB,IACArB,EAAA13B,YAAAi9F,EAAAt9F,KAAAK,WACA03B,EAAAj2B,KAAAw7F,IAcA,OARAzD,EAAA92F,UACAg1B,EAAAlzB,UACAkzB,EAAAlzB,UAAA,KACAkzB,EAAAlzB,SAAAg1F,IAAA92F,OAAA,GAAA8B,UAIAg1F,EAAA/3F,KAAAi2B,GACA8hE,GA6MAk/E,oBAtMA,SAAAl/E,GACA,IACAz4F,EACA22B,EACAylE,KACAC,KAiBA,IAbAD,EAAAn9F,WAAA,EACAm9F,EAAAE,SAAA,EACAF,EAAA34F,SAAA,EACA24F,EAAAnkE,IAAAwgE,EAAA,GAAAxgE,IACAmkE,EAAApkE,IAAAygE,EAAA,GAAAzgE,IAGAqkE,EAAAp9F,WAAA,EACAo9F,EAAAC,SAAA,EACAD,EAAA54F,SAAA,EACA44F,EAAApkE,IAAAwgE,EAAA,GAAAxgE,IACAokE,EAAArkE,IAAAygE,EAAA,GAAAzgE,IAEAh4B,EAAA,EAAaA,EAAAy4F,EAAA92F,OAAmB3B,KAChC22B,EAAA8hE,EAAAz4F,IAEA+7F,UAGAK,EAAAz6F,SACA06F,EAAA37F,KAAA07F,GACAC,EAAAp9F,YAAAm9F,EAAAn9F,WACAo9F,EAAAC,UAAAF,EAAAE,SACAD,EAAA54F,UAAA24F,EAAA34F,WAGA24F,GAAAzlE,IACA2lE,SAAA3lE,EAAAh1B,OACAy6F,EAAAn9F,WAAA03B,EAAA13B,WACAm9F,EAAAnkE,IAAAtB,EAAAsB,IACAmkE,EAAApkE,IAAArB,EAAAqB,IACAokE,EAAA34F,SAAAkzB,EAAAlzB,WAEA24F,EAAA34F,UAAAkzB,EAAAlzB,SACA24F,EAAAE,UAAA3lE,EAAAh1B,OACAy6F,EAAAn9F,YAAA03B,EAAA13B,WACAm9F,EAAA17F,KAAAi2B,IAaA,OATA0lE,EAAA16F,QAAAy6F,EAAA34F,UAAA,IACA24F,EAAA34F,SAAA44F,IAAA16F,OAAA,GAAA8B,UAEA44F,EAAAp9F,YAAAm9F,EAAAn9F,WACAo9F,EAAAC,UAAAF,EAAAE,SACAD,EAAA54F,UAAA24F,EAAA34F,SAGA44F,EAAA37F,KAAA07F,GACAC,GA6IAu7E,oBAjIA,SAAAv7E,GACA,IAAAD,EAiBA,OAfAC,EAAA,MAAAN,UAAAM,EAAA16F,OAAA,IAEAy6F,EAAAC,EAAAnqF,QAEAmqF,EAAAp9F,YAAAm9F,EAAAn9F,WACAo9F,EAAAC,UAAAF,EAAAE,SAKAD,EAAA,MAAArkE,IAAAokE,EAAApkE,IACAqkE,EAAA,MAAApkE,IAAAmkE,EAAAnkE,IACAokE,EAAA,MAAA54F,UAAA24F,EAAA34F,UAGA44F,GAgHA+wE,oBAjEA,SAAA/wE,EAAAv0F,GACA,IACAsH,EAAApP,EACAiJ,EACAmzF,EACAzlE,EACAntB,EAAA1B,GAAA,EACA/C,KAEA,IAAAqK,EAAA,EAAaA,EAAAitF,EAAA16F,OAAiByN,IAG9B,IAFAgtF,EAAAC,EAAAjtF,GAEApP,EAAA,EAAeA,EAAAo8F,EAAAz6F,OAAuB3B,IACtC22B,EAAAylE,EAAAp8F,GAIAwJ,IAFAP,EAAA6yF,EAAAnlE,EAAAntB,IAEAE,KAEA3E,EAAArE,KAAAuI,GAGA,OAAAlE,GA4CA8yK,mBAxCA,SAAAx7E,GACA,IACAjtF,EAAApP,EAAA2b,EACAygF,EACAzlE,EACAulE,EACA1yF,EAAA,EACA+yF,EAAAF,EAAAp9F,WACAu9F,EAAAH,EAAAC,SAEA19F,EAAA,IAAA+B,WADA47F,EAAA,EAAAC,GAEA39F,EAAA,IAAAC,SAAAF,EAAAG,QAGA,IAAAqQ,EAAA,EAAaA,EAAAitF,EAAA16F,OAAiByN,IAI9B,IAHAgtF,EAAAC,EAAAjtF,GAGApP,EAAA,EAAeA,EAAAo8F,EAAAz6F,OAAuB3B,IAItC,IAHA22B,EAAAylE,EAAAp8F,GAGA2b,EAAA,EAAiBA,EAAAgb,EAAAh1B,OAAyBga,IAC1CugF,EAAAvlE,EAAAhb,GAEA9c,EAAAouB,UAAAzjB,EAAA0yF,EAAAt9F,KAAAK,YACAuK,GAAA,EACA5K,EAAAsuB,IAAAgvE,EAAAt9F,KAAA4K,GACAA,GAAA0yF,EAAAt9F,KAAAK,WAIA,OAAAL,wBCzPAmN,EAAAC,QAAAyhE,OAAAlrC,OAAA,SAAA/zB,GACA,OAAAA,yCCCA,IAAAhC,EAAqB3O,EAAQ,QAE7BkO,EAAAC,QAAA4iB,SAAAvjB,UAAAma,MAAAhZ,qCCFA,IAAAsrK,EAAiBj6K,EAAQ,QAEzBmtB,EAAAlgB,OAAAO,UAAAI,SACAgU,EAAA3U,OAAAO,UAAAoU,eAwDA1T,EAAAC,QAnBA,SAAAie,EAAA9C,EAAAqvJ,GACA,IAAAsB,EAAA3wJ,GACA,UAAAzL,UAAA,+BAGA,IAAAulH,EACAn8G,UAAAnjB,QAAA,IACAs/H,EAAAu1C,GAGA,mBAAAxrJ,EAAAzf,KAAA0e,GA7CA,SAAAsJ,EAAApM,EAAA85G,GACA,QAAAjhI,EAAA,EAAA8f,EAAAyT,EAAA5xB,OAAuC3B,EAAA8f,EAAS9f,IAChDyf,EAAAlU,KAAAgoB,EAAAvzB,KACA,MAAAihI,EACA95G,EAAAoM,EAAAvzB,KAAAuzB,GAEApM,EAAA5b,KAAA01H,EAAA1tG,EAAAvzB,KAAAuzB,IAwCAC,CAAAvJ,EAAA9C,EAAA85G,GACK,iBAAAh3G,EAnCL,SAAA6tB,EAAA3wB,EAAA85G,GACA,QAAAjhI,EAAA,EAAA8f,EAAAg4B,EAAAn2C,OAAwC3B,EAAA8f,EAAS9f,IAEjD,MAAAihI,EACA95G,EAAA2wB,EAAA/+B,OAAA/Y,KAAA83C,GAEA3wB,EAAA5b,KAAA01H,EAAAnpF,EAAA/+B,OAAA/Y,KAAA83C,GA8BAigI,CAAA9tJ,EAAA9C,EAAA85G,GAzBA,SAAA51G,EAAAlE,EAAA85G,GACA,QAAAryF,KAAAvjB,EACA5L,EAAAlU,KAAA8f,EAAAujB,KACA,MAAAqyF,EACA95G,EAAAkE,EAAAujB,KAAAvjB,GAEAlE,EAAA5b,KAAA01H,EAAA51G,EAAAujB,KAAAvjB,IAqBA2sJ,CAAA/tJ,EAAA9C,EAAA85G,wBCzDAl1H,EAAAC,QAIA,SAAAqX,GACA,IAAAy0B,EAAArsC,EAAAF,KAAA8X,GACA,4BAAAy0B,GACA,mBAAAz0B,GAAA,oBAAAy0B,GACA,oBAAAp/B,SAEA2K,IAAA3K,OAAA+O,YACApE,IAAA3K,OAAAu/J,OACA50J,IAAA3K,OAAAw/J,SACA70J,IAAA3K,OAAAy/J,SAXA,IAAA1sK,EAAAX,OAAAO,UAAAI,4CCQA,IAAAkgG,GACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,MAYAnB,EAAA,SAAA5rG,GACA,OAAAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IA4HAmN,EAAAC,SACAqrB,gBA1IA,SAAAz4B,GACA,OAAAA,EAAA,SAAA0S,WAAA,IACA1S,EAAA,SAAA0S,WAAA,IACA1S,EAAA,SAAA0S,WAAA,IAwIAqmB,gBA3GA,SAAAk3E,EAAAn3E,GACA,IACAo3E,EAAAD,EAAAn3E,EAAA,OACAm3E,EAAAn3E,EAAA,OACAm3E,EAAAn3E,EAAA,MACAm3E,EAAAn3E,EAAA,GAIA,OAFA,GADAm3E,EAAAn3E,EAAA,KACA,EAGAo3E,EAAA,GAEAA,EAAA,IAgGAj3E,cA7FA,SAAAg3E,EAAAn3E,GACA,IACAq3E,GAAA,IAAAF,EAAAn3E,EAAA,OACAs3E,EAAAH,EAAAn3E,EAAA,MAGA,OAFA,KAAAm3E,EAAAn3E,EAAA,GAEAs3E,EAAAD,GAwFAnxG,UArFA,SAAAixG,EAAAn3E,GACA,OAAAm3E,EAAAn3E,KAAA,IAAApmB,WAAA,IACAu9F,EAAAn3E,EAAA,SAAApmB,WAAA,IACAu9F,EAAAn3E,EAAA,SAAApmB,WAAA,GACA,kBACG,EAAAu9F,EAAAn3E,IACH,UAAAm3E,EAAAn3E,EAAA,IACA,QAEA,MA6EAI,gBA1EA,SAAAlC,GAGA,IAFA,IAAA51B,EAAA,EAEAA,EAAA,EAAA41B,EAAAj0B,QAAA,CACA,SAAAi0B,EAAA51B,IAAA,UAAA41B,EAAA51B,EAAA,IAMA,OAAA2rG,GAAA,GAAA/1E,EAAA51B,EAAA,SAHAA,IAMA,aA8DA43B,kBA3DA,SAAAhC,GACA,IAAAq1E,EAAAxzE,EAAAhB,EAGAw0E,EAAA,GACA,GAAAr1E,EAAA,KAEAq1E,GAAA,EACAA,GAAAT,EAAA50E,EAAAj2B,SAAA,SAKA,GAGA,IADA83B,EAAA+yE,EAAA50E,EAAAj2B,SAAAsrG,EAAA,EAAAA,EAAA,KACA,EACA,YAOA,YALAtoG,OAAAC,aAAAgzB,EAAAq1E,GACAr1E,EAAAq1E,EAAA,GACAr1E,EAAAq1E,EAAA,GACAr1E,EAAAq1E,EAAA,IAEA,CACAx0E,EAAAb,EAAAj2B,SAAAsrG,EAAA,GAAAA,EAAAxzE,EAAA,IAEA,QAAAz3B,EAAA,EAAqBA,EAAAy2B,EAAAx3B,WAAsBe,IAC3C,OAAAy2B,EAAAz2B,GAAA,CAEA,oDArFA8qG,SAXA,SAAA1/F,EAAAk3B,EAAAp4B,GACA,IAAAlK,EAAAC,EAAA,GACA,IAAAD,EAAAsiC,EAAiBtiC,EAAAkK,EAASlK,IAC1BC,GAAA,UAAAmL,EAAApL,GAAAyL,SAAA,KAAAH,OAAA,GAEA,OAAArL,EAMAqqG,CAoFA7zE,EAAA,EAAAz2B,IACA,CACA,IAAAkkC,EAAAzN,EAAA92B,SAAAK,EAAA,GACA0J,GAAA,EAAAw6B,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OAIA,OAHAx6B,GAAA,EACAA,GAAA,EAAAw6B,EAAA,GAIA,OAKA+mE,GAAA,GACAA,GAAAxzE,QACGwzE,EAAAr1E,EAAA32B,YACH,iDC9JA,IAAAo8B,EAAYx9B,EAAQ,QAUpBkO,EAAAC,QAAA,SAAApN,EAAAmzB,EAAAq8G,GAMA,OAJA/yG,EAAAvtB,QAAAsgI,EAAA,SAAA/qH,GACAzkB,EAAAykB,EAAAzkB,EAAAmzB,KAGAnzB,sCChBA,IAAA4mB,EAAW3nB,EAAQ,QACnBu6K,EAAav6K,EAAQ,QAErB2O,EAAqB3O,EAAQ,QAC7Bw6K,EAAkBx6K,EAAQ,QAC1By6K,EAAWz6K,EAAQ,QAEnB06K,EAAA/yJ,EAAAja,KAAAqjB,SAAArjB,KAAA8sK,KAEAD,EAAAG,GACAF,cACA7rK,iBACA8rK,SAGAvsK,EAAAC,QAAAusK,wBCXAxsK,EAAAC,QAAA,SACAwsK,EACAC,EACAC,EACAC,EACAl0B,EACAm0B,GAEA,IAAAC,EACAC,EAAAN,QAGAvuK,SAAAuuK,EAAA3pK,QACA,WAAA5E,GAAA,aAAAA,IACA4uK,EAAAL,EACAM,EAAAN,EAAA3pK,SAIA,IAqBA6B,EArBAqC,EAAA,mBAAA+lK,EACAA,EAAA/lK,QACA+lK,EA+CA,GA5CAL,IACA1lK,EAAAjE,OAAA2pK,EAAA3pK,OACAiE,EAAAw/H,gBAAAkmC,EAAAlmC,gBACAx/H,EAAAuhI,WAAA,GAIAokC,IACA3lK,EAAApE,YAAA,GAIA81I,IACA1xI,EAAA2hI,SAAA+P,GAIAm0B,GACAloK,EAAA,SAAAm7B,IAEAA,EACAA,GACA92B,KAAAlF,QAAAkF,KAAAlF,OAAA0yI,YACAxtI,KAAA7F,QAAA6F,KAAA7F,OAAAW,QAAAkF,KAAA7F,OAAAW,OAAA0yI,aAEA,oBAAAw2B,sBACAltI,EAAAktI,qBAGAJ,GACAA,EAAAptK,KAAAwJ,KAAA82B,GAGAA,KAAAmtI,uBACAntI,EAAAmtI,sBAAAxrI,IAAAorI,IAKA7lK,EAAAkmK,aAAAvoK,GACGioK,IACHjoK,EAAAioK,GAGAjoK,EAAA,CACA,IAAA/B,EAAAoE,EAAApE,WACAikI,EAAAjkI,EACAoE,EAAAjE,OACAiE,EAAA2E,aAEA/I,GAQAoE,EAAAmmK,cAAAxoK,EAEAqC,EAAAjE,OAAA,SAAAM,EAAAy8B,GAEA,OADAn7B,EAAAnF,KAAAsgC,GACA+mG,EAAAxjI,EAAAy8B,KAVA94B,EAAA2E,aAAAk7H,KACA3lI,OAAA2lI,EAAAliI,IACAA,GAaA,OACAmoK,WACA7sK,QAAA8sK,EACA/lK,gCCnGA,IAOAomK,EACAC,EARA3C,EAAA1qK,EAAAC,WAUA,SAAAqtK,IACA,UAAA50J,MAAA,mCAEA,SAAA60J,IACA,UAAA70J,MAAA,qCAsBA,SAAA80J,EAAAC,GACA,GAAAL,IAAA1xJ,WAEA,OAAAA,WAAA+xJ,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAA1xJ,WAEA,OADA0xJ,EAAA1xJ,WACAA,WAAA+xJ,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAAvmK,GACL,IAEA,OAAAkmK,EAAA5tK,KAAA,KAAAiuK,EAAA,GACS,MAAAvmK,GAET,OAAAkmK,EAAA5tK,KAAAwJ,KAAAykK,EAAA,MAvCA,WACA,IAEAL,EADA,mBAAA1xJ,WACAA,WAEA4xJ,EAEK,MAAApmK,GACLkmK,EAAAE,EAEA,IAEAD,EADA,mBAAAnqJ,aACAA,aAEAqqJ,EAEK,MAAArmK,GACLmmK,EAAAE,GAjBA,GAwEA,IAEAG,EAFAr2J,KACAs2J,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAD,IAGAC,GAAA,EACAD,EAAA93K,OACAyhB,EAAAq2J,EAAAxsK,OAAAmW,GAEAu2J,GAAA,EAEAv2J,EAAAzhB,QACAk4K,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAtqJ,EAAAmqJ,EAAAK,GACAF,GAAA,EAGA,IADA,IAAA55J,EAAAsD,EAAAzhB,OACAme,GAAA,CAGA,IAFA25J,EAAAr2J,EACAA,OACAu2J,EAAA75J,GACA25J,GACAA,EAAAE,GAAAvpD,MAGAupD,GAAA,EACA75J,EAAAsD,EAAAzhB,OAEA83K,EAAA,KACAC,GAAA,EAnEA,SAAAI,GACA,GAAAV,IAAAnqJ,aAEA,OAAAA,aAAA6qJ,GAGA,IAAAV,IAAAE,IAAAF,IAAAnqJ,aAEA,OADAmqJ,EAAAnqJ,aACAA,aAAA6qJ,GAEA,IAEAV,EAAAU,GACK,MAAA7mK,GACL,IAEA,OAAAmmK,EAAA7tK,KAAA,KAAAuuK,GACS,MAAA7mK,GAGT,OAAAmmK,EAAA7tK,KAAAwJ,KAAA+kK,KAgDAC,CAAA3qJ,IAiBA,SAAA4qJ,EAAAR,EAAAjmJ,GACAxe,KAAAykK,MACAzkK,KAAAwe,QAYA,SAAA6kD,KA5BAq+F,EAAAjpC,SAAA,SAAAgsC,GACA,IAAA30J,EAAA,IAAAna,MAAAoa,UAAAnjB,OAAA,GACA,GAAAmjB,UAAAnjB,OAAA,EACA,QAAA3B,EAAA,EAAuBA,EAAA8kB,UAAAnjB,OAAsB3B,IAC7C6kB,EAAA7kB,EAAA,GAAA8kB,UAAA9kB,GAGAojB,EAAA1iB,KAAA,IAAAs5K,EAAAR,EAAA30J,IACA,IAAAzB,EAAAzhB,QAAA+3K,GACAH,EAAAM,IASAG,EAAA3uK,UAAA+kH,IAAA,WACAr7G,KAAAykK,IAAAhsK,MAAA,KAAAuH,KAAAwe,QAEAkjJ,EAAAj5I,MAAA,UACAi5I,EAAA/2H,SAAA,EACA+2H,EAAA7wC,OACA6wC,EAAAwD,QACAxD,EAAAv1K,QAAA,GACAu1K,EAAAyD,YAIAzD,EAAAzgK,GAAAoiE,EACAq+F,EAAA0D,YAAA/hG,EACAq+F,EAAA1yJ,KAAAq0D,EACAq+F,EAAAx6I,IAAAm8C,EACAq+F,EAAA2D,eAAAhiG,EACAq+F,EAAA4D,mBAAAjiG,EACAq+F,EAAAr7B,KAAAhjE,EACAq+F,EAAA6D,gBAAAliG,EACAq+F,EAAA8D,oBAAAniG,EAEAq+F,EAAA36I,UAAA,SAAAp5B,GAAqC,UAErC+zK,EAAAtf,QAAA,SAAAz0J,GACA,UAAA+hB,MAAA,qCAGAgyJ,EAAA+D,IAAA,WAA2B,WAC3B/D,EAAAgE,MAAA,SAAAv+G,GACA,UAAAz3C,MAAA,mCAEAgyJ,EAAAiE,MAAA,WAA4B,6CCjL5B,IA6EAt/I,EA5EAvC,EAAWh7B,EAAQ,QACnBw3B,EAAgBx3B,EAAQ,QAGxBysG,EAAA,SAAAl/F,EAAAk3B,EAAAp4B,GACA,IAAAlK,EAAAC,EAAA,GACA,IAAAD,EAAAsiC,EAAmBtiC,EAAAkK,EAASlK,IAC5BC,GAAA,UAAAmL,EAAApL,GAAAyL,SAAA,KAAAH,OAAA,GAEA,OAAArL,GAIAsqG,EAAA,SAAAn/F,EAAAk3B,EAAAp4B,GACA,OAAArH,mBAAAynG,EAAAl/F,EAAAk3B,EAAAp4B,KAOAsgG,EAAA,SAAA5rG,GACA,OAAAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IAEA6rG,GACAC,KAAA,SAAAhpG,GACA,IAAA1B,EACA,OAAA0B,EAAA9C,KAAA,IAKA,IAAAoB,EAAA,EAAiBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACtC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAwhD,YAAAqnD,EAAA7oG,EAAA9C,KAAA,EAAAoB,GAEA0B,EAAAyJ,MAAAo/F,EAAA7oG,EAAA9C,KAAAoB,EAAA,EAAA0B,EAAA9C,KAAA+C,QAAAgQ,QAAA,WACA,MAGAjQ,EAAA9C,KAAA8C,EAAAyJ,QAEAw/F,KAAA,SAAAjpG,GACA,IAAA1B,EACA,OAAA0B,EAAA9C,KAAA,GAKA,IAAAoB,EAAA,EAAiBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACtC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAwhD,YAAAqnD,EAAA7oG,EAAA9C,KAAA,EAAAoB,GACA0B,EAAAwhB,IAAAqnF,EAAA7oG,EAAA9C,KAAAoB,EAAA,EAAA0B,EAAA9C,KAAA+C,QACA,QAIAipG,KAAA,SAAAlpG,GACA,IAAA1B,EA7CAoL,EA+CA,IAAApL,EAAA,EAAiBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACtC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAmpG,OAlDAz/F,EAkDA1J,EAAA9C,KAjDAksG,SAAAR,EAAAl/F,EAiDA,EAAApL,KACA,MAGA0B,EAAAg3F,YAAAh3F,EAAA9C,KAAAe,SAAAK,EAAA,GACA0B,EAAA9C,KAAA8C,EAAAg3F,eAKAt9D,EAAA,SAAAroB,GACA,IAeA/S,EAdA0sD,GACA5iB,SAAA/2B,MAAA+2B,OAKAvG,WAAAxwB,KAAAwwB,YAGAwnE,EAAA,EAEAhsG,KAEAyC,EAAA,EAQA,GALA45B,EAAA/vB,UAAA6B,KAAA3B,KAAAwJ,MAIAA,KAAAi2F,aAAA31E,EAAA2E,qBAAAvuB,SAAA,IACAihD,EAAAnpB,WACA,IAAAvjC,EAAA,EAAeA,EAAA0sD,EAAAnpB,WAAA5hC,OAAgC3B,IAC/C+U,KAAAi2F,eAAA,KAAAt+C,EAAAnpB,WAAAvjC,GAAAyL,SAAA,KAAAH,OAAA,GAIAyJ,KAAArU,KAAA,SAAAyiC,GACA,IAAAzhC,EAAAupG,EAAAxzE,EAAAhB,EAAAz2B,EACA,sBAAAmjC,EAAAl5B,KAaA,GANAk5B,EAAAtI,yBACAr5B,EAAA,EACAzC,EAAA4C,OAAA,GAIA,IAAA5C,EAAA4C,SACAwhC,EAAAvkC,KAAA+C,OAAA,IACAwhC,EAAAvkC,KAAA,SAAA0S,WAAA,IACA6xB,EAAAvkC,KAAA,SAAA0S,WAAA,IACA6xB,EAAAvkC,KAAA,SAAA0S,WAAA,IACAo7C,EAAA5iB,OAEApjB,QAAAwiB,IAAA,8CAwBA,GAjBAnqC,EAAA2B,KAAAyiC,GACA3hC,GAAA2hC,EAAAvkC,KAAAK,WAGA,IAAAF,EAAA4C,SAKAopG,EAAAP,EAAArnE,EAAAvkC,KAAAe,SAAA,OAIAorG,GAAA,MAIAvpG,EAAAupG,GAAA,CAWA,IANArpG,GACA9C,KAAA,IAAA+B,WAAAoqG,GACAtS,UACAxgE,IAAAl5B,EAAA,GAAAk5B,IACAD,IAAAj5B,EAAA,GAAAi5B,KAEAh4B,EAAA,EAAeA,EAAA+qG,GACfrpG,EAAA9C,KAAAsuB,IAAAnuB,EAAA,GAAAH,KAAAe,SAAA,EAAAorG,EAAA/qG,MACAA,GAAAjB,EAAA,GAAAH,KAAAK,WACAuC,GAAAzC,EAAA,GAAAH,KAAAK,WACAF,EAAAmT,QAIA+4F,EAAA,GACA,GAAAvpG,EAAA9C,KAAA,KAEAqsG,GAAA,EACAA,GAAAT,EAAA9oG,EAAA9C,KAAAe,SAAA,QAGAorG,GAAAP,EAAA9oG,EAAA9C,KAAAe,SAAA,SAKA,GAGA,IADA83B,EAAA+yE,EAAA9oG,EAAA9C,KAAAe,SAAAsrG,EAAA,EAAAA,EAAA,KACA,EAEA,OAAAvkF,QAAAwiB,IAAA,+DAaA,IALAzS,GACArpB,GAPAzK,OAAAC,aAAAlB,EAAA9C,KAAAqsG,GACAvpG,EAAA9C,KAAAqsG,EAAA,GACAvpG,EAAA9C,KAAAqsG,EAAA,GACAvpG,EAAA9C,KAAAqsG,EAAA,IAKArsG,KAAA8C,EAAA9C,KAAAe,SAAAsrG,EAAA,GAAAA,EAAAxzE,EAAA,MAEAxsB,IAAAwrB,EAAArpB,GACAq9F,EAAAh0E,EAAArpB,MACAq9F,EAAAh0E,EAAArpB,IAAAqpB,GAIA,iDAAAA,EAAAo0E,OAAA,CACA,IACA3mE,EAAAzN,EAAA73B,KACA8K,GAAA,EAAAw6B,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OAEAx6B,GAAA,EACAA,GAAA,EAAAw6B,EAAA,GACAzN,EAAAy0E,UAAAxhG,OAKAsH,IAAAtP,EAAAu2B,UAAAjnB,IAAAtP,EAAAs2B,MACAt2B,EAAAu2B,IAAAxB,EAAAy0E,UACAxpG,EAAAs2B,IAAAvB,EAAAy0E,WAEAn2F,KAAAokB,QAAA,YAAA1C,GAGA/0B,EAAA+2F,OAAA/3F,KAAA+1B,GAEAw0E,GAAA,GACAA,GAAAxzE,QACKwzE,EAAAF,GACLh2F,KAAAokB,QAAA,OAAAz3B,OAGA2J,UAAA,IAAAwtB,EAEA9sB,EAAAC,QAAAovB,sBCnPArvB,EAAAC,SACAa,WALA,SAAA1B,GACA,OAAAA,IAAA,uCCCA,IAAAqa,EAAW3nB,EAAQ,QAEnBkO,EAAAC,QAAAwZ,EAAAja,KAAAqjB,SAAArjB,KAAAT,OAAAO,UAAAoU,mDCFA,IAAA9N,EAAAhP,OAAA0I,UAAAsG,QACAgpK,EAAA,OAEA5uK,EAAAC,SACA6C,QAAA,UACA0jK,YACAqI,QAAA,SAAAzvK,GACA,OAAAwG,EAAApG,KAAAJ,EAAAwvK,EAAA,MAEAE,QAAA,SAAA1vK,GACA,OAAAA,IAGAyvK,QAAA,UACAC,QAAA,8CCdA,IAAAx/I,EAAYx9B,EAAQ,QACpB0vK,EAAe1vK,EAAQ,QACvBi9K,EAAyBj9K,EAAQ,QACjCk9K,EAAsBl9K,EAAQ,QAC9Bm9K,EAAkBn9K,EAAQ,QAO1B,SAAAo9K,EAAAC,GACAnmK,KAAA88J,SAAAqJ,EACAnmK,KAAAomK,cACAvnJ,QAAA,IAAAknJ,EACApqJ,SAAA,IAAAoqJ,GASAG,EAAA5vK,UAAAuoB,QAAA,SAAAl0B,GAGA,iBAAAA,GACAA,EAAAolB,UAAA,QACA5B,IAAA4B,UAAA,GAEAplB,SAGAA,EAAAs7K,EAAAjmK,KAAA88J,SAAAnyK,IACAoyB,OAAApyB,EAAAoyB,OAAApyB,EAAAoyB,OAAAyM,cAAA,MAGA,IAAA00I,GAAA8H,OAAA/pK,GACAwvE,EAAA4C,QAAAnuE,QAAAvV,GAUA,IARAqV,KAAAomK,aAAAvnJ,QAAA9lB,QAAA,SAAAstK,GACAnI,EAAA3/J,QAAA8nK,EAAAC,UAAAD,EAAAE,YAGAvmK,KAAAomK,aAAAzqJ,SAAA5iB,QAAA,SAAAstK,GACAnI,EAAAvyK,KAAA06K,EAAAC,UAAAD,EAAAE,YAGArI,EAAAtxK,QACA6+E,IAAAt/D,KAAA+xJ,EAAA/gK,QAAA+gK,EAAA/gK,SAGA,OAAAsuE,GAGAy6F,EAAA5vK,UAAAkwK,OAAA,SAAA77K,GAEA,OADAA,EAAAs7K,EAAAjmK,KAAA88J,SAAAnyK,GACA6tK,EAAA7tK,EAAAwjB,IAAAxjB,EAAAqR,OAAArR,EAAAquK,kBAAAp8J,QAAA,WAIA0pB,EAAAvtB,SAAA,0CAAAgkB,GAEAmpJ,EAAA5vK,UAAAymB,GAAA,SAAA5O,EAAAxjB,GACA,OAAAqV,KAAA6e,QAAAyH,EAAAw4I,MAAAn0K,OACAoyB,SACA5O,YAKAmY,EAAAvtB,SAAA,+BAAAgkB,GAEAmpJ,EAAA5vK,UAAAymB,GAAA,SAAA5O,EAAAtkB,EAAAc,GACA,OAAAqV,KAAA6e,QAAAyH,EAAAw4I,MAAAn0K,OACAoyB,SACA5O,MACAtkB,aAKAmN,EAAAC,QAAAivK,sBCrEA,IAAAO,EAAA,OACAC,GACAhH,GAAA,EACAiH,GAAA,EACAC,GAAA,GAEAC,GACAt5I,MAAA,EACA0sE,OAAA,EACA9kG,IAAA,EACAkY,KAAA,EACAu/C,MAAA,GAWA,SAAAk6G,EAAA1wK,GACA,uBAAAA,MAGAywK,EAAAzwK,EAAAozB,gBACApzB,EAAAozB,eAGA,SAAA8uB,EAAA1gD,EAAAi1C,EAAAnjB,GASA1pB,KAAA+mK,cAAA,EAOA,IAAA/sJ,EAAA,GACAgtJ,GAAA,EACAC,EAAArvK,EACAsvK,EAAAr6H,EACAs6H,EAAAz9I,EACA09I,EAAA,KACAC,EAAA,GACAC,GAAA,EACAC,EAAA,OACAC,EAAA,QACAC,EAAA,GACAC,EAAA,SACAC,EAAA,GACAC,EAAA,SAEA7xK,OAAA8f,iBAAA7V,MACA3H,IACA+d,YAAA,EACAlT,IAAA,WACA,OAAA8W,GAEA7B,IAAA,SAAA/hB,GACA4jB,EAAA,GAAA5jB,IAIAyxK,aACAzxJ,YAAA,EACAlT,IAAA,WACA,OAAA8jK,GAEA7uJ,IAAA,SAAA/hB,GACA4wK,IAAA5wK,IAIAwB,WACAwe,YAAA,EACAlT,IAAA,WACA,OAAA+jK,GAEA9uJ,IAAA,SAAA/hB,GACA,oBAAAA,EACA,UAAAuQ,UAAA,uCAEAsgK,EAAA7wK,EACA4J,KAAA+mK,cAAA,IAIAl6H,SACAz2B,YAAA,EACAlT,IAAA,WACA,OAAAgkK,GAEA/uJ,IAAA,SAAA/hB,GACA,oBAAAA,EACA,UAAAuQ,UAAA,qCAEAugK,EAAA9wK,EACA4J,KAAA+mK,cAAA,IAIAr9I,MACAtT,YAAA,EACAlT,IAAA,WACA,OAAAikK,GAEAhvJ,IAAA,SAAA/hB,GACA+wK,EAAA,GAAA/wK,EACA4J,KAAA+mK,cAAA,IAIAe,QACA1xJ,YAAA,EACAlT,IAAA,WACA,OAAAkkK,GAEAjvJ,IAAA,SAAA/hB,GACAgxK,EAAAhxK,EACA4J,KAAA+mK,cAAA,IAIAp8G,UACAv0C,YAAA,EACAlT,IAAA,WACA,OAAAmkK,GAEAlvJ,IAAA,SAAA/hB,GACA,IAAAoqK,EA5HA,SAAApqK,GACA,uBAAAA,KAGAswK,EAAAtwK,EAAAozB,gBACApzB,EAAAozB,cAuHAu+I,CAAA3xK,GAEA,QAAAoqK,EACA,UAAAE,YAAA,+CAEA2G,EAAA7G,EACAxgK,KAAA+mK,cAAA,IAIAiB,aACA5xJ,YAAA,EACAlT,IAAA,WACA,OAAAokK,GAEAnvJ,IAAA,SAAA/hB,GACAkxK,IAAAlxK,EACA4J,KAAA+mK,cAAA,IAIAnwK,MACAwf,YAAA,EACAlT,IAAA,WACA,OAAAqkK,GAEApvJ,IAAA,SAAA/hB,GACA,oBAAAA,OAAAqwK,EACA,UAAA/F,YAAA,sDAEA6G,EAAAnxK,EACA4J,KAAA+mK,cAAA,IAIAkB,WACA7xJ,YAAA,EACAlT,IAAA,WACA,OAAAskK,GAEArvJ,IAAA,SAAA/hB,GACA,IAAAoqK,EAAAsG,EAAA1wK,GACA,IAAAoqK,EACA,UAAAE,YAAA,+CAEA8G,EAAAhH,EACAxgK,KAAA+mK,cAAA,IAIA/6J,UACAoK,YAAA,EACAlT,IAAA,WACA,OAAAukK,GAEAtvJ,IAAA,SAAA/hB,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAAsZ,MAAA,uCAEA+3J,EAAArxK,EACA4J,KAAA+mK,cAAA,IAIAmB,eACA9xJ,YAAA,EACAlT,IAAA,WACA,OAAAwkK,GAEAvvJ,IAAA,SAAA/hB,GACA,IAAAoqK,EAAAsG,EAAA1wK,GACA,IAAAoqK,EACA,UAAAE,YAAA,+CAEAgH,EAAAlH,EACAxgK,KAAA+mK,cAAA,IAIApyK,MACAyhB,YAAA,EACAlT,IAAA,WACA,OAAAykK,GAEAxvJ,IAAA,SAAA/hB,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAAsZ,MAAA,mCAEAi4J,EAAAvxK,EACA4J,KAAA+mK,cAAA,IAIAtqE,OACArmF,YAAA,EACAlT,IAAA,WACA,OAAA0kK,GAEAzvJ,IAAA,SAAA/hB,GACA,IAAAoqK,EAAAsG,EAAA1wK,GACA,IAAAoqK,EACA,UAAAE,YAAA,+CAEAkH,EAAApH,EACAxgK,KAAA+mK,cAAA,MAUA/mK,KAAAmmD,kBAAAlqD,EAOAq8C,EAAAhiD,UAAA6xK,aAAA,WAEA,OAAA5xH,OAAA6xH,oBAAAzkK,OAAA3D,KAAA0pB,OAGA1yB,EAAAC,QAAAqhD,yBCxRA,SAAA5+B,GAAA,IAAA2qE,EAGAA,EADA,oBAAA1gF,OACAA,YACC,IAAA+V,EACDA,EACC,oBAAAE,KACDA,QAKA5iB,EAAAC,QAAAotF,yDCVA,IAAA9tF,EAAAZ,MAAAW,UAAAC,MACAsjK,EAAa/wK,EAAQ,QAErBu/K,EAAAtyK,OAAAC,KACA4jK,EAAAyO,EAAA,SAAAj1I,GAA4C,OAAAi1I,EAAAj1I,IAAyBtqC,EAAQ,QAE7Ew/K,EAAAvyK,OAAAC,KAEA4jK,EAAA2J,KAAA,WACAxtK,OAAAC,KACA,WAEA,IAAA8Z,EAAA/Z,OAAAC,KAAA+Z,WACA,OAAAD,KAAAljB,SAAAmjB,UAAAnjB,OAHA,CAIG,OAEHmJ,OAAAC,KAAA,SAAAsgB,GACA,OAAAujJ,EAAAvjJ,GACAgyJ,EAAA/xK,EAAAC,KAAA8f,IAEAgyJ,EAAAhyJ,KAIAvgB,OAAAC,KAAA4jK,EAEA,OAAA7jK,OAAAC,MAAA4jK,GAGA5iK,EAAAC,QAAA2iK,qCC7BA,IAAA2O,EAAmBz/K,EAAQ,QAE3B0/K,EAAAD,EAAA,eACAE,EAAAF,EAAA,iBAEAxvI,EAAUjwC,EAAQ,QAElB2tB,GAEAiyJ,sBAAA,SAAAC,EAAAC,GACA,cAAAD,EAAAE,KAAAD,GACA,SAEA,IAAA//I,GACAigJ,oBAAA,EACAC,kBAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,gBAAA,GAGA,QAAAjzK,KAAA0yK,EACA,GAAA7vI,EAAA6vI,EAAA1yK,KAAA2yB,EAAA3yB,GACA,SAIA,IAAAkzK,EAAArwI,EAAA6vI,EAAA,aACAS,EAAAtwI,EAAA6vI,EAAA,YAAA7vI,EAAA6vI,EAAA,WACA,GAAAQ,GAAAC,EACA,UAAAb,EAAA,sEAEA,WAIAxxK,EAAAC,QAAA,SAAA0xK,EAAAW,EAAAC,EAAAnzK,GACA,IAAAmgB,EAAAE,EAAA6yJ,GACA,sBAAA/yJ,EACA,UAAAkyJ,EAAA,wBAAAa,GAEA,IAAA/yJ,EAAAoyJ,EAAAvyK,GACA,UAAAoyK,EAAAe,EAAA,cAAAD,GAEA33J,QAAAwiB,IAAA5d,EAAAoyJ,EAAAvyK,0CC7CA,IAAAqa,EAAW3nB,EAAQ,QACnB41B,EAAe51B,EAAQ,QAMvB4N,EAAAX,OAAAO,UAAAI,SAQA,SAAA0G,EAAA5B,GACA,yBAAA9E,EAAAF,KAAAgF,GA2EA,SAAAoR,EAAApR,GACA,cAAAA,GAAA,iBAAAA,EAuCA,SAAA2f,EAAA3f,GACA,4BAAA9E,EAAAF,KAAAgF,GAwEA,SAAAzC,EAAAuE,EAAAgR,GAEA,UAAAhR,QAAA,IAAAA,EAUA,GALA,iBAAAA,IAEAA,OAGAF,EAAAE,GAEA,QAAArS,EAAA,EAAAme,EAAA9L,EAAA1Q,OAAmC3B,EAAAme,EAAOne,IAC1CqjB,EAAA9X,KAAA,KAAA8G,EAAArS,KAAAqS,QAIA,QAAApH,KAAAoH,EACAvH,OAAAO,UAAAoU,eAAAlU,KAAA8G,EAAApH,IACAoY,EAAA9X,KAAA,KAAA8G,EAAApH,KAAAoH,GAoFAtG,EAAAC,SACAmG,UACA8kK,cA9RA,SAAA1mK,GACA,+BAAA9E,EAAAF,KAAAgF,IA8RAkjB,WACAk6I,WAtRA,SAAAp9J,GACA,0BAAAguK,UAAAhuK,aAAAguK,UAsRAlH,kBA7QA,SAAA9mK,GAOA,MALA,oBAAAlG,yBAAA,OACAA,YAAAsqF,OAAApkF,GAEA,GAAAA,EAAA,QAAAA,EAAAxR,kBAAAsL,aAyQAwmK,SA9PA,SAAAtgK,GACA,uBAAAA,GA8PAkR,SArPA,SAAAlR,GACA,uBAAAA,GAqPAoR,WACAm1J,YA7OA,SAAAvmK,GACA,gBAAAA,GA6OA0jK,OA1NA,SAAA1jK,GACA,wBAAA9E,EAAAF,KAAAgF,IA0NA4mK,OAjNA,SAAA5mK,GACA,wBAAA9E,EAAAF,KAAAgF,IAiNA6mK,OAxMA,SAAA7mK,GACA,wBAAA9E,EAAAF,KAAAgF,IAwMA2f,aACAgnJ,SAtLA,SAAA3mK,GACA,OAAAoR,EAAApR,IAAA2f,EAAA3f,EAAA6rB,OAsLA43I,kBA7KA,SAAAzjK,GACA,0BAAAiuK,iBAAAjuK,aAAAiuK,iBA6KAvQ,qBAjJA,WACA,2BAAAvrJ,WAAA,gBAAAA,UAAA+7J,SACA,iBAAA/7J,UAAA+7J,SACA,OAAA/7J,UAAA+7J,UAIA,oBAAA/lK,QACA,oBAAAoJ,UA0IAhU,UACA+lK,MA/EA,SAAAA,IACA,IAAA5zK,KACA,SAAAy+K,EAAAnuK,EAAAtF,GACA,iBAAAhL,EAAAgL,IAAA,iBAAAsF,EACAtQ,EAAAgL,GAAA4oK,EAAA5zK,EAAAgL,GAAAsF,GAEAtQ,EAAAgL,GAAAsF,EAIA,QAAAvQ,EAAA,EAAAme,EAAA2G,UAAAnjB,OAAuC3B,EAAAme,EAAOne,IAC9C8N,EAAAgX,UAAA9kB,GAAA0+K,GAEA,OAAAz+K,GAmEAo0K,UAxDA,SAAAA,IACA,IAAAp0K,KACA,SAAAy+K,EAAAnuK,EAAAtF,GACA,iBAAAhL,EAAAgL,IAAA,iBAAAsF,EACAtQ,EAAAgL,GAAAopK,EAAAp0K,EAAAgL,GAAAsF,GAEAtQ,EAAAgL,GADK,iBAAAsF,EACL8jK,KAAgC9jK,GAEhCA,EAIA,QAAAvQ,EAAA,EAAAme,EAAA2G,UAAAnjB,OAAuC3B,EAAAme,EAAOne,IAC9C8N,EAAAgX,UAAA9kB,GAAA0+K,GAEA,OAAAz+K,GA0CAsO,OA/BA,SAAAC,EAAAC,EAAA+nK,GAQA,OAPA1oK,EAAAW,EAAA,SAAA8B,EAAAtF,GAEAuD,EAAAvD,GADAurK,GAAA,mBAAAjmK,EACAiV,EAAAjV,EAAAimK,GAEAjmK,IAGA/B,GAwBA/B,KAzKA,SAAAgF,GACA,OAAAA,EAAAE,QAAA,WAAAA,QAAA,gDClKA,IAAAgtK,EAAa9gL,EAAQ,QAQrB,SAAA+gL,EAAAC,GACA,sBAAAA,EACA,UAAAnjK,UAAA,gCAGA,IAAAojK,EACA/pK,KAAAyrE,QAAA,IAAA4C,QAAA,SAAAnuE,GACA6pK,EAAA7pK,IAGA,IAAAwG,EAAA1G,KACA8pK,EAAA,SAAA1wK,GACAsN,EAAA8I,SAKA9I,EAAA8I,OAAA,IAAAo6J,EAAAxwK,GACA2wK,EAAArjK,EAAA8I,WAOAq6J,EAAAvzK,UAAA0zK,iBAAA,WACA,GAAAhqK,KAAAwP,OACA,MAAAxP,KAAAwP,QAQAq6J,EAAA1iK,OAAA,WACA,IAAAu5B,EAIA,OACAh6B,MAJA,IAAAmjK,EAAA,SAAAvtK,GACAokC,EAAApkC,IAIAokC,WAIA1pC,EAAAC,QAAA4yK,wBCnCA,IAAAlmK,EAAa7a,EAAQ,QAErB0tD,EAAAx/C,EAAAC,SACAs/C,OAAUztD,EAAQ,QAClBwvD,OAAUxvD,EAAQ,QAClBmhL,UAAanhL,EAAQ,SAGrB6a,EAAA6yC,QACA7yC,EAAA4yC,OAAAC,EAAAD,OAEA,IAAA2zH,EAAA1zH,EAAA8B,OACA6xH,EAAA3zH,EAAAyzH,UACAG,EAAAzmK,EAAA20C,OACA+xH,EAAA1mK,EAAAsmK,UAEAzzH,EAAA+sH,KAAA,WACA5/J,EAAA20C,OAAA4xH,EACAvmK,EAAAsmK,UAAAE,GAGA3zH,EAAA8zH,QAAA,WACA3mK,EAAA20C,OAAA8xH,EACAzmK,EAAAsmK,UAAAI,GAGA1mK,EAAA20C,QACA9B,EAAA+sH,0CCxCAvsK,EAAAC,QAAA,SAAAkX,GAIA,sCAAAnM,KAAAmM,uCCJA,SAAAy7J,EAAAxwK,GACA4G,KAAA5G,UAGAwwK,EAAAtzK,UAAAI,SAAA,WACA,gBAAAsJ,KAAA5G,QAAA,KAAA4G,KAAA5G,QAAA,KAGAwwK,EAAAtzK,UAAAi0K,YAAA,EAEAvzK,EAAAC,QAAA2yK,sBCAA,IAAAY,EAAAz0K,OAAA0R,QAAA,WACA,SAAAgjK,KACA,gBAAAr3I,GACA,OAAArjB,UAAAnjB,OACA,UAAA8iB,MAAA,kDAGA,OADA+6J,EAAAn0K,UAAA88B,EACA,IAAAq3I,GAPA,GAeA,SAAAC,EAAAC,EAAAvxK,GACA4G,KAAArS,KAAA,eACAqS,KAAAme,KAAAwsJ,EAAAxsJ,KACAne,KAAA5G,WAAAuxK,EAAAvxK,QAkBA,SAAAwxK,EAAAC,GAEA,SAAAC,EAAAzwK,EAAAiL,EAAAiqB,EAAAw7I,GACA,eAAA1wK,GAAA,MAAAiL,IAAA,EAAAiqB,IAAA,EAAAw7I,GAAA,IAGA,IAAAzlK,EAAAulK,EAAAl0K,MAAA,oCACA,OAAA2O,EAIAA,EAAA,GAEAwlK,EAAAxlK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA1I,QAAA,QAAA0I,EAAA,IACGA,EAAA,MAGHwlK,EAAAxlK,EAAA,GAAAA,EAAA,KAAAA,EAAA,IAGAwlK,EAAA,EAAAxlK,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAZA,KAkBA,SAAA0lK,IACAhrK,KAAAk6D,OAAAswG,EAAA,MAwDA,SAAAS,EAAAJ,EAAArvJ,EAAA0vJ,EAAAC,GACA,IAAAjkK,EAAAikK,EAAAN,EAAA9zK,MAAAo0K,IAAAN,GACA,QAAA5/K,KAAAic,EACA,oBAAAA,EAAAjc,GAAA,CAGA,IAAAmgL,EAAAlkK,EAAAjc,GAAA8L,MAAAm0K,GACA,OAAAE,EAAAx+K,OAKA4uB,EAFA4vJ,EAAA,GACAA,EAAA,KAKA,SAAAC,EAAAR,EAAAj+H,EAAA0+H,GAEA,IAAAC,EAAAV,EAEA,SAAAW,IACA,IAAA/qJ,EAAAmqJ,EAAAC,GACA,UAAApqJ,EACA,UAAAiqJ,IAAAe,OAAAC,aACA,wBAAAH,GAIA,OADAV,IAAAjuK,QAAA,qBACA6jB,EAuEA,SAAAkrJ,IACAd,IAAAjuK,QAAA,WAOA,GAHA+uK,IACA/+H,EAAAh1C,UAAA4zK,IACAG,IACA,WAAAd,EAAA1kK,OAAA,KACA,UAAAukK,IAAAe,OAAAC,aACA,qEACAH,GAEAV,IAAA1kK,OAAA,GACAwlK,IACA/+H,EAAAC,QAAA2+H,IAGAG,IArFA,SAAAd,EAAAj+H,GACA,IAAA+K,EAAA,IAAAqzH,EAEAC,EAAAJ,EAAA,SAAAhxI,EAAAtkC,GACA,OAAAskC,GACA,aAEA,QAAA5uC,EAAAqgL,EAAA1+K,OAAA,EAA2C3B,GAAA,EAAQA,IACnD,GAAAqgL,EAAArgL,GAAAoN,KAAA9C,EAAA,CACAoiD,EAAAx/B,IAAA0hB,EAAAyxI,EAAArgL,GAAA68K,QACA,MAGA,MACA,eACAnwH,EAAAk7G,IAAAh5H,EAAAtkC,GAAA,YACA,MACA,WACA,IAAAq2K,EAAAr2K,EAAAwB,MAAA,KACA80K,EAAAD,EAAA,GACAj0H,EAAAm0H,QAAAjyI,EAAAgyI,GACAl0H,EAAAuU,QAAAryB,EAAAgyI,IAAAl0H,EAAAx/B,IAAA,kBACAw/B,EAAAk7G,IAAAh5H,EAAAgyI,GAAA,SACA,IAAAD,EAAAh/K,QACA+qD,EAAAk7G,IAAA,YAAA+Y,EAAA,6BAEA,MACA,eACAA,EAAAr2K,EAAAwB,MAAA,KACA4gD,EAAAuU,QAAAryB,EAAA+xI,EAAA,IACA,IAAAA,EAAAh/K,QACA+qD,EAAAk7G,IAAA,gBAAA+Y,EAAA,6BAEA,MACA,WACAj0H,EAAAuU,QAAAryB,EAAAtkC,GACA,MACA,YACAoiD,EAAAk7G,IAAAh5H,EAAAtkC,GAAA,0CAGK,UAGLq3C,EAAAk7H,OAAAnwH,EAAAz0C,IAAA,eACA0pC,EAAA+d,SAAAhT,EAAAz0C,IAAA,eACA0pC,EAAAh2C,KAAA+gD,EAAAz0C,IAAA,eACA0pC,EAAAq7H,UAAAtwH,EAAAz0C,IAAA,qBACA0pC,EAAAo7H,YAAArwH,EAAAz0C,IAAA,kBACA0pC,EAAAj4C,KAAAgjD,EAAAz0C,IAAA,YACA0pC,EAAA6vD,MAAA9kD,EAAAz0C,IAAA,kBACA0pC,EAAA5gC,SAAA2rC,EAAAz0C,IAAA,YACAqqB,MAAA,EACAlgB,KAAA,EACA4sF,OAAA,GACA9kG,IAAA,IACAy3D,MAAA,KACKhgB,EAAA6vD,OACL7vD,EAAAs7H,cAAAvwH,EAAAz0C,IAAA,iBACAqqB,MAAA,QACAlgB,KAAA,QACA4sF,OAAA,SACA9kG,IAAA,MACAy3D,MAAA,OACKhgB,EAAA6vD,OAsBLsvE,CAAAlB,EAAAj+H,GAzNA89H,EAAAp0K,UAAAk0K,EAAA96J,MAAApZ,WACAo0K,EAAAp0K,UAAAid,YAAAm3J,EAGAA,EAAAe,QACAO,cACA7tJ,KAAA,EACA/kB,QAAA,+BAEAsyK,cACAvtJ,KAAA,EACA/kB,QAAA,0BAmCA4xK,EAAA10K,WAEA6hB,IAAA,SAAA0hB,EAAAtkC,GACAyK,KAAAkD,IAAA22B,IAAA,KAAAtkC,IACAyK,KAAAk6D,OAAArgC,GAAAtkC,IAQA2N,IAAA,SAAA22B,EAAAoyI,EAAAC,GACA,OAAAA,EACAlsK,KAAA+4B,IAAAc,GAAA75B,KAAAk6D,OAAArgC,GAAAoyI,EAAAC,GAEAlsK,KAAA+4B,IAAAc,GAAA75B,KAAAk6D,OAAArgC,GAAAoyI,GAGAlzI,IAAA,SAAAc,GACA,OAAAA,KAAA75B,KAAAk6D,QAGA24F,IAAA,SAAAh5H,EAAAtkC,EAAAkE,GACA,QAAAga,EAAA,EAAmBA,EAAAha,EAAA7M,SAAc6mB,EACjC,GAAAle,IAAAkE,EAAAga,GAAA,CACAzT,KAAAmY,IAAA0hB,EAAAtkC,GACA,QAKAu2K,QAAA,SAAAjyI,EAAAtkC,GACA,UAAAyM,KAAAzM,IACAyK,KAAAmY,IAAA0hB,EAAAnR,SAAAnzB,EAAA,MAIA22D,QAAA,SAAAryB,EAAAtkC,GAEA,SAAAA,EAAAoB,MAAA,8BACApB,EAAAizB,WAAAjzB,KACA,GAAAA,GAAA,OACAyK,KAAAmY,IAAA0hB,EAAAtkC,IACA,KAkIA,IAAA42K,GACA9jB,QAAQ,IACRH,OAAO,IACPC,OAAO,IACPikB,QAAQ,IACRC,QAAQ,IACRC,SAAS,KAGTC,GACAjwK,EAAA,OACArR,EAAA,IACAyO,EAAA,IACA8yK,EAAA,IACAC,KAAA,OACAC,GAAA,KACAn3K,EAAA,OACAo3K,KAAA,QAGAC,GACAr3K,EAAA,QACAo3K,KAAA,QAGAE,GACAH,GAAA,QAIA,SAAAI,EAAAnpK,EAAAknK,GACA,SAAAkC,IAEA,IAAAlC,EACA,YASA,IALA3/K,EAKAoa,EAAAulK,EAAAl0K,MAAA,uBAGA,OARAzL,EAQAoa,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAPAulK,IAAA1kK,OAAAjb,EAAA0B,QACA1B,EAUA,SAAA8hL,EAAA9uK,GACA,OAAAiuK,EAAAjuK,GAEA,SAAA63F,EAAAxmE,GACA,KAAAjqB,EAAAiqB,EAAA54B,MAAA,+BACA44B,IAAA3yB,QAAA0I,EAAA,GAAA0nK,GAEA,OAAAz9I,EAGA,SAAA09I,EAAAxxK,EAAAy8B,GACA,OAAA20I,EAAA30I,EAAAg1I,YACAL,EAAA30I,EAAAg1I,aAAAzxK,EAAAyxK,UAIA,SAAA91I,EAAAliC,EAAAi4K,GACA,IAAAl2I,EAAAs1I,EAAAr3K,GACA,IAAA+hC,EACA,YAEA,IAAAiB,EAAAv0B,EAAAoJ,SAAAqqB,cAAAH,GACAiB,EAAAg1I,UAAAj2I,EACA,IAAAtpC,EAAAi/K,EAAA13K,GAIA,OAHAvH,GAAAw/K,IACAj1I,EAAAvqC,GAAAw/K,EAAAz1K,QAEAwgC,EAQA,IALA,IAEAoG,EAFA8uI,EAAAzpK,EAAAoJ,SAAAqqB,cAAA,OACA37B,EAAA2xK,EAEAC,KAEA,QAAA/uI,EAAAyuI,MACA,SAAAzuI,EAAA,GA+CA7iC,EAAAu8B,YAAAr0B,EAAAoJ,SAAAouB,eAAA46D,EAAAz3D,SA/CA,CACA,SAAAA,EAAA,IAEA+uI,EAAAzgL,QACAygL,IAAAzgL,OAAA,KAAA0xC,EAAAn4B,OAAA,GAAAvJ,QAAA,UACAywK,EAAAnpK,MACAzI,IAAAk+B,YAGA,SAEA,IACAyB,EADA3a,EAAAmqJ,EAAAtsI,EAAAn4B,OAAA,EAAAm4B,EAAA1xC,OAAA,IAEA,GAAA6zB,EAAA,CAEA2a,EAAAz3B,EAAAoJ,SAAAugK,4BAAA,YAAA7sJ,GACAhlB,EAAAu8B,YAAAoD,GACA,SAEA,IAAA91B,EAAAg5B,EAAA3nC,MAAA,oDAEA,IAAA2O,EACA,SAIA,KADA81B,EAAAhE,EAAA9xB,EAAA,GAAAA,EAAA,KAEA,SAIA,IAAA2nK,EAAAxxK,EAAA2/B,GACA,SAGA91B,EAAA,KACA81B,EAAA9C,UAAAhzB,EAAA,GAAAa,OAAA,GAAAvJ,QAAA,UAIAywK,EAAA1hL,KAAA2Z,EAAA,IACA7J,EAAAu8B,YAAAoD,GACA3/B,EAAA2/B,EAQA,OAAAgyI,EAQA,IAAAG,IAAA,gDACA,4DACA,4DACA,4DACA,4DACA,4DACA,gDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,4DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,SAAAC,EAAA3vI,GACA,QAAA5yC,EAAA,EAAiBA,EAAAsiL,EAAA3gL,OAA4B3B,IAAA,CAC7C,IAAAs6H,EAAAgoD,EAAAtiL,GACA,GAAA4yC,GAAA0nF,EAAA,IAAA1nF,GAAA0nF,EAAA,GACA,SAIA,SA4EA,SAAAkoD,KAoBA,SAAAC,EAAA/pK,EAAAipC,EAAA+gI,GACAF,EAAAj3K,KAAAwJ,MACAA,KAAA4sC,MAIA5sC,KAAAkmD,OAAA4mH,EAAAnpK,EAAAipC,EAAAljB,MACA,IAAA0xH,GACA52F,MAAA,yBACA6B,gBAAA,qBACAr6C,SAAA,WACAqB,KAAA,EACAu/C,MAAA,EACAt/C,IAAA,EACAu5C,OAAA,EACAu8F,QAAA,SACAwqB,YAAA,KAAAhhI,EAAA+d,SAAA,gBACA,OAAA/d,EAAA+d,SAAA,cACA,cACAkjH,YAAA,aAGA7tK,KAAA8tK,YAAA1yB,EAAAp7I,KAAAkmD,QAKAlmD,KAAAo1C,IAAAzxC,EAAAoJ,SAAAqqB,cAAA,OACAgkH,GACAnmD,UA1HA,SAAA/uC,GACA,IAAA6nH,KACArkJ,EAAA,GAGA,IAAAw8B,MAAA0X,WACA,YAGA,SAAAowG,EAAAD,EAAA3yI,GACA,QAAAnwC,EAAAmwC,EAAAwiC,WAAAhxE,OAAA,EAA4C3B,GAAA,EAAQA,IACpD8iL,EAAApiL,KAAAyvC,EAAAwiC,WAAA3yE,IAIA,SAAAgjL,EAAAF,GACA,IAAAA,MAAAnhL,OACA,YAGA,IAAAwuC,EAAA2yI,EAAA7pK,MACAwlB,EAAA0R,EAAA3D,aAAA2D,EAAAxD,UACA,GAAAlO,EAAA,CAGA,IAAApkB,EAAAokB,EAAA/yB,MAAA,cACA,OAAA2O,GACAyoK,EAAAnhL,OAAA,EACA0Y,EAAA,IAEAokB,EAEA,eAAA0R,EAAAnE,QACAg3I,EAAAF,GAEA3yI,EAAAwiC,YACAowG,EAAAD,EAAA3yI,GACA6yI,EAAAF,SAFA,EAOA,IADAC,EAAAD,EAAA7nH,GACAx8B,EAAAukJ,EAAAF,IACA,QAAA9iL,EAAA,EAAmBA,EAAAy+B,EAAA98B,OAAiB3B,IAEpC,GAAAuiL,EADA9jJ,EAAAntB,WAAAtR,IAEA,YAIA,YAwEAijL,CAAAluK,KAAAkmD,QACA0nH,YAAA,KAAAhhI,EAAA+d,SAAA,gBACA,OAAA/d,EAAA+d,SAAA,cACA,cACAkjH,YAAA,YACAM,UAAA,WAAAvhI,EAAA6vD,MAAA,SAAA7vD,EAAA6vD,MACA2xE,KAAAT,EAAAS,KACAC,WAAA,WACAriK,SAAA,YAGAhM,KAAA8tK,YAAA1yB,GACAp7I,KAAAo1C,IAAApd,YAAAh4B,KAAAkmD,QAKA,IAAAooH,EAAA,EACA,OAAA1hI,EAAAs7H,eACA,YACAoG,EAAA1hI,EAAA5gC,SACA,MACA,aACAsiK,EAAA1hI,EAAA5gC,SAAA4gC,EAAAj4C,KAAA,EACA,MACA,UACA25K,EAAA1hI,EAAA5gC,SAAA4gC,EAAAj4C,KAOA,KAAAi4C,EAAA+d,SACA3qD,KAAA8tK,aACAzgK,KAAArN,KAAAuuK,YAAAD,EAAA,KACAjkL,MAAA2V,KAAAuuK,YAAA3hI,EAAAj4C,KAAA,OAMAqL,KAAA8tK,aACAxgK,IAAAtN,KAAAuuK,YAAAD,EAAA,KACAhkL,OAAA0V,KAAAuuK,YAAA3hI,EAAAj4C,KAAA,OAIAqL,KAAAwuK,KAAA,SAAAp5K,GACA4K,KAAA8tK,aACAxgK,IAAAtN,KAAAuuK,YAAAn5K,EAAAkY,IAAA,MACAu5C,OAAA7mD,KAAAuuK,YAAAn5K,EAAAyxD,OAAA,MACAx5C,KAAArN,KAAAuuK,YAAAn5K,EAAAiY,KAAA,MACAu/C,MAAA5sD,KAAAuuK,YAAAn5K,EAAAw3D,MAAA,MACAtiE,OAAA0V,KAAAuuK,YAAAn5K,EAAA9K,OAAA,MACAD,MAAA2V,KAAAuuK,YAAAn5K,EAAA/K,MAAA,SAUA,SAAAokL,EAAAnxK,GAKA,IAAAoxK,EAAApkL,EAAAD,EAAAijB,EACA,GAAAhQ,EAAA83C,IAAA,CACA9qD,EAAAgT,EAAA83C,IAAA3a,aACApwC,EAAAiT,EAAA83C,IAAA7a,YACAjtB,EAAAhQ,EAAA83C,IAAAu5H,UAEA,IAAAC,KAAAtxK,EAAA83C,IAAAwoB,cAAAgxG,IAAA,KACAA,EAAAC,gBAAAD,EAAAC,iBACAvxK,IAAA83C,IAAAjoC,wBAKAuhK,EAAAE,EAAAx8K,KAAAwf,IAAAg9J,EAAA,IAAAA,EAAA,GAAAtkL,QAAA,EAAAgT,EAAAhT,OAAAskL,EAAAhiL,QACA,EAGAoT,KAAAqN,KAAA/P,EAAA+P,KACArN,KAAA4sD,MAAAtvD,EAAAsvD,MACA5sD,KAAAsN,IAAAhQ,EAAAgQ,OACAtN,KAAA1V,OAAAgT,EAAAhT,UACA0V,KAAA6mD,OAAAvpD,EAAAupD,QAAAv5C,GAAAhQ,EAAAhT,WACA0V,KAAA3V,MAAAiT,EAAAjT,SACA2V,KAAA8uK,gBAAA7yK,IAAAyyK,IAAApxK,EAAAwxK,WAsHA,SAAAC,EAAAprK,EAAAqrK,EAAAC,EAAAC,GAmCA,IAAAC,EAAA,IAAAV,EAAAO,GACApiI,EAAAoiI,EAAApiI,IACAwiI,EA7TA,SAAAxiI,GACA,oBAAAA,EAAAh2C,OACAg2C,EAAAo7H,aAAAp7H,EAAAh2C,MAAA,GAAAg2C,EAAAh2C,MAAA,KACA,OAAAg2C,EAAAh2C,KAEA,IAAAg2C,EAAAx0B,QAAAw0B,EAAAx0B,MAAAi3J,gBACAziI,EAAAx0B,MAAAi3J,cAAAC,aACA,SAKA,IAHA,IAAAl3J,EAAAw0B,EAAAx0B,MACAitC,EAAAjtC,EAAAi3J,cACA7vJ,EAAA,EACAv0B,EAAA,EAAiBA,EAAAo6D,EAAAz4D,QAAAy4D,EAAAp6D,KAAAmtB,EAAgDntB,IACjE,YAAAo6D,EAAAp6D,GAAA6pB,MACA0K,IAGA,WAAAA,EA4SA+vJ,CAAA3iI,GACA4iI,KAGA,GAAA5iI,EAAAo7H,YAAA,CACA,IAAArzK,EACA,OAAAi4C,EAAA+d,UACA,OACA6kH,GAAA,WACA76K,EAAA,SACA,MACA,SACA66K,GAAA,WACA76K,EAAA,QACA,MACA,SACA66K,GAAA,WACA76K,EAAA,QAIA,IAAA6Z,EAAA2gK,EAAAL,WACA9iK,EAAAwC,EAAApc,KAAAgoC,MAAAg1I,GACAK,EAAAR,EAAAt6K,GAAA6Z,EACAkhK,EAAAF,EAAA,GAKAp9K,KAAAuqE,IAAA3wD,GAAAyjK,IACAzjK,IAAA,OACAA,GAAA5Z,KAAAg3F,KAAAqmF,EAAAjhK,MAOA4gK,EAAA,IACApjK,GAAA,KAAA4gC,EAAA+d,SAAAskH,EAAA3kL,OAAA2kL,EAAA5kL,MACAmlL,IAAA9+J,WAKAy+J,EAAAX,KAAAkB,EAAA1jK,OAEG,CAEH,IAAA2jK,EAAAR,EAAAL,WAAAG,EAAA3kL,OAAA,IAEA,OAAAsiD,EAAAq7H,WACA,aACAmH,GAAAO,EAAA,EACA,MACA,UACAP,GAAAO,EAKA,OAAA/iI,EAAA+d,UACA,OACAqkH,EAAAlB,aACAxgK,IAAA0hK,EAAAT,YAAAa,EAAA,OAEA,MACA,SACAJ,EAAAlB,aACAzgK,KAAA2hK,EAAAT,YAAAa,EAAA,OAEA,MACA,SACAJ,EAAAlB,aACAlhH,MAAAoiH,EAAAT,YAAAa,EAAA,OAKAI,GAAA,qBAIAL,EAAA,IAAAV,EAAAO,GAGA,IAAAY,EApHA,SAAAl2K,EAAA81K,GAKA,IAJA,IAAAI,EACAC,EAAA,IAAApB,EAAA/0K,GACA0xD,EAAA,EAEAngE,EAAA,EAAmBA,EAAAukL,EAAA5iL,OAAiB3B,IAAA,CACpC,KAAAyO,EAAAo2K,qBAAAb,EAAAO,EAAAvkL,KACAyO,EAAAq2K,OAAAd,IAAAv1K,EAAAs2K,YAAAd,IACAx1K,EAAA80K,KAAAgB,EAAAvkL,IAIA,GAAAyO,EAAAq2K,OAAAd,GACA,OAAAv1K,EAEA,IAAA25B,EAAA35B,EAAAu2K,oBAAAhB,GAGA7jH,EAAA/3B,IACAu8I,EAAA,IAAAnB,EAAA/0K,GACA0xD,EAAA/3B,GAGA35B,EAAA,IAAA+0K,EAAAoB,GAEA,OAAAD,GAAAC,EA2FAK,CAAAf,EAAAK,GACAR,EAAAR,KAAAoB,EAAAO,kBAAAlB,IAGA,SAAA14H,KA9XAk3H,EAAAn3K,UAAAw3K,YAAA,SAAA1yB,EAAAhmG,GAEA,QAAAlf,KADAkf,KAAAp1C,KAAAo1C,IACAgmG,EACAA,EAAA1wI,eAAAwrB,KACAkf,EAAAtV,MAAA5J,GAAAklH,EAAAllH,KAKAu3I,EAAAn3K,UAAAi4K,YAAA,SAAA/yK,EAAA40K,GACA,WAAA50K,EAAA,EAAAA,EAAA40K,GA6FA1C,EAAAp3K,UAAAk0K,EAAAiD,EAAAn3K,WACAo3K,EAAAp3K,UAAAid,YAAAm6J,EAuCAe,EAAAn4K,UAAAk4K,KAAA,SAAAgB,EAAAa,GAEA,OADAA,OAAAp0K,IAAAo0K,IAAArwK,KAAA8uK,WACAU,GACA,SACAxvK,KAAAqN,MAAAgjK,EACArwK,KAAA4sD,OAAAyjH,EACA,MACA,SACArwK,KAAAqN,MAAAgjK,EACArwK,KAAA4sD,OAAAyjH,EACA,MACA,SACArwK,KAAAsN,KAAA+iK,EACArwK,KAAA6mD,QAAAwpH,EACA,MACA,SACArwK,KAAAsN,KAAA+iK,EACArwK,KAAA6mD,QAAAwpH,IAMA5B,EAAAn4K,UAAAg6K,SAAA,SAAA7/I,GACA,OAAAzwB,KAAAqN,KAAAojB,EAAAm8B,OACA5sD,KAAA4sD,MAAAn8B,EAAApjB,MACArN,KAAAsN,IAAAmjB,EAAAo2B,QACA7mD,KAAA6mD,OAAAp2B,EAAAnjB,KAIAmhK,EAAAn4K,UAAA05K,YAAA,SAAA3iL,GACA,QAAApC,EAAA,EAAiBA,EAAAoC,EAAAT,OAAkB3B,IACnC,GAAA+U,KAAAswK,SAAAjjL,EAAApC,IACA,SAGA,UAIAwjL,EAAAn4K,UAAAy5K,OAAA,SAAA7sE,GACA,OAAAljG,KAAAsN,KAAA41F,EAAA51F,KACAtN,KAAA6mD,QAAAq8C,EAAAr8C,QACA7mD,KAAAqN,MAAA61F,EAAA71F,MACArN,KAAA4sD,OAAAs2C,EAAAt2C,OAOA6hH,EAAAn4K,UAAAw5K,qBAAA,SAAA5sE,EAAAssE,GACA,OAAAA,GACA,SACA,OAAAxvK,KAAAqN,KAAA61F,EAAA71F,KACA,SACA,OAAArN,KAAA4sD,MAAAs2C,EAAAt2C,MACA,SACA,OAAA5sD,KAAAsN,IAAA41F,EAAA51F,IACA,SACA,OAAAtN,KAAA6mD,OAAAq8C,EAAAr8C,SAMA4nH,EAAAn4K,UAAA25K,oBAAA,SAAAx/I,GAIA,OAHAr+B,KAAAwf,IAAA,EAAAxf,KAAAwG,IAAAoH,KAAA4sD,MAAAn8B,EAAAm8B,OAAAx6D,KAAAwf,IAAA5R,KAAAqN,KAAAojB,EAAApjB,OACAjb,KAAAwf,IAAA,EAAAxf,KAAAwG,IAAAoH,KAAA6mD,OAAAp2B,EAAAo2B,QAAAz0D,KAAAwf,IAAA5R,KAAAsN,IAAAmjB,EAAAnjB,OAEAtN,KAAA1V,OAAA0V,KAAA3V,QAOAokL,EAAAn4K,UAAA65K,kBAAA,SAAAn7E,GACA,OACA1nF,IAAAtN,KAAAsN,IAAA0nF,EAAA1nF,IACAu5C,OAAAmuC,EAAAnuC,OAAA7mD,KAAA6mD,OACAx5C,KAAArN,KAAAqN,KAAA2nF,EAAA3nF,KACAu/C,MAAAooC,EAAApoC,MAAA5sD,KAAA4sD,MACAtiE,OAAA0V,KAAA1V,OACAD,MAAA2V,KAAA3V,QAMAokL,EAAA8B,qBAAA,SAAAjzK,GACA,IAAAhT,EAAAgT,EAAA83C,IAAA93C,EAAA83C,IAAA3a,aAAAn9B,EAAA25B,QAAA35B,EAAAm9B,aAAA,EACApwC,EAAAiT,EAAA83C,IAAA93C,EAAA83C,IAAA7a,YAAAj9B,EAAA25B,QAAA35B,EAAAi9B,YAAA,EACAjtB,EAAAhQ,EAAA83C,IAAA93C,EAAA83C,IAAAu5H,UAAArxK,EAAA25B,QAAA35B,EAAAqxK,UAAA,EAYA,OAPAthK,MAHA/P,IAAA83C,IAAA93C,EAAA83C,IAAAjoC,wBACA7P,EAAA25B,QAAA35B,EAAA6P,wBAAA7P,GAEA+P,KACAu/C,MAAAtvD,EAAAsvD,MACAt/C,IAAAhQ,EAAAgQ,OACAhjB,OAAAgT,EAAAhT,UACAu8D,OAAAvpD,EAAAupD,QAAAv5C,GAAAhQ,EAAAhT,WACAD,MAAAiT,EAAAjT,WA4IAksD,EAAAE,cAAA,WACA,OACA55C,OAAA,SAAAhT,GACA,IAAAA,EACA,SAEA,oBAAAA,EACA,UAAA6lB,MAAA,iCAEA,OAAA5hB,mBAAA6O,mBAAA9S,OAKA0sD,EAAA6xH,oBAAA,SAAAzkK,EAAA6sK,GACA,OAAA7sK,GAAA6sK,EAGA1D,EAAAnpK,EAAA6sK,GAFA,MAYAj6H,EAAAoP,YAAA,SAAAhiD,EAAAgpC,EAAA8jI,GACA,IAAA9sK,IAAAgpC,IAAA8jI,EACA,YAIA,KAAAA,EAAA34I,YACA24I,EAAAx1I,YAAAw1I,EAAA34I,YAGA,IAAA44I,EAAA/sK,EAAAoJ,SAAAqqB,cAAA,OAsBA,GArBAs5I,EAAA5wI,MAAA9zB,SAAA,WACA0kK,EAAA5wI,MAAAzyB,KAAA,IACAqjK,EAAA5wI,MAAA8sB,MAAA,IACA8jH,EAAA5wI,MAAAxyB,IAAA,IACAojK,EAAA5wI,MAAA+mB,OAAA,IACA6pH,EAAA5wI,MAAA6wI,OArBA,OAsBAF,EAAAz4I,YAAA04I,GAKA,SAAA/jI,GACA,QAAA1hD,EAAA,EAAmBA,EAAA0hD,EAAA//C,OAAiB3B,IACpC,GAAA0hD,EAAA1hD,GAAA87K,eAAAp6H,EAAA1hD,GAAAk7D,aACA,SAGA,SAIAyqH,CAAAjkI,GAAA,CAOA,IAAAuiI,KACAD,EAAAR,EAAA8B,qBAAAG,GAEA/C,GACAS,KAFAh8K,KAAAgoC,MAhDA,IAgDA60I,EAAA3kL,OAAA,SAEA,kBAGA,WAGA,IAFA,IAAA0kL,EAAApiI,EAEA3hD,EAAA,EAAmBA,EAAA0hD,EAAA//C,OAAiB3B,IACpC2hD,EAAAD,EAAA1hD,GAGA+jL,EAAA,IAAAtB,EAAA/pK,EAAAipC,EAAA+gI,GACA+C,EAAA14I,YAAAg3I,EAAA55H,KAGA25H,EAAAprK,EAAAqrK,EAAAC,EAAAC,GAIAtiI,EAAAuZ,aAAA6oH,EAAA55H,IAEA85H,EAAAvjL,KAAA8iL,EAAA8B,qBAAAvB,IAjBA,QAbA,QAAA/jL,EAAA,EAAmBA,EAAA0hD,EAAA//C,OAAiB3B,IACpCylL,EAAA14I,YAAA2U,EAAA1hD,GAAAk7D,eAkCA5P,EAAApsB,OAAA,SAAAxmB,EAAA6yC,EAAAyjE,GACAA,IACAA,EAAAzjE,EACAA,MAEAA,IACAA,MAGAx2C,KAAA2D,SACA3D,KAAAw2C,QACAx2C,KAAAuL,MAAA,UACAvL,KAAAhW,OAAA,GACAgW,KAAAi6G,WAAA,IAAAE,YAAA,QACAn6G,KAAAsrK,eAGA/0H,EAAApsB,OAAA7zB,WAGAu6K,mBAAA,SAAA3yK,GACA,KAAAA,aAAAwsK,GAGA,MAAAxsK,EAFA8B,KAAA42C,gBAAA52C,KAAA42C,eAAA14C,IAKAvU,MAAA,SAAAE,GACA,IAAA+vB,EAAA5Z,KAUA,SAAA8wK,IAGA,IAFA,IAAA9mL,EAAA4vB,EAAA5vB,OACA46J,EAAA,EACAA,EAAA56J,EAAA4C,QAAA,OAAA5C,EAAA46J,IAAA,OAAA56J,EAAA46J,MACAA,EAEA,IAAAhuJ,EAAA5M,EAAAmc,OAAA,EAAAy+I,GASA,MAPA,OAAA56J,EAAA46J,MACAA,EAEA,OAAA56J,EAAA46J,MACAA,EAEAhrI,EAAA5vB,SAAAmc,OAAAy+I,GACAhuJ,EAuFA,SAAAm6K,EAAAlG,GACAA,EAAAl0K,MAAA,mBAEAs0K,EAAAJ,EAAA,SAAAhxI,EAAAtkC,GACA,OAAAskC,GACA,sBA1BAgxI,EA2BAt1K,EA1BAoiD,EAAA,IAAAqzH,EAEAC,EAAAJ,EAAA,SAAAhxI,EAAAtkC,GACA,OAAAskC,GACA,YACA8d,EAAAm0H,QAAAjyI,EAAA,IAAAtkC,GACA,MACA,WACAoiD,EAAAx/B,IAAA0hB,EAAA,IAAA+wI,EAAAr1K,MAGO,cAEPqkB,EAAA2gG,gBAAA3gG,EAAA2gG,gBACAF,OAAA1iE,EAAAz0C,IAAA,UACAo3G,MAAA3iE,EAAAz0C,IAAA,WAhBA,IAAA2nK,EACAlzH,GA6BS,KAETszH,EAAAJ,EAAA,SAAAhxI,EAAAtkC,GACA,OAAAskC,GACA,cAhGA,SAAAgxI,GACA,IAAAlzH,EAAA,IAAAqzH,EAsCA,GApCAC,EAAAJ,EAAA,SAAAhxI,EAAAtkC,GACA,OAAAskC,GACA,SACA8d,EAAAx/B,IAAA0hB,EAAAtkC,GACA,MACA,YACAoiD,EAAAuU,QAAAryB,EAAAtkC,GACA,MACA,YACAoiD,EAAAm0H,QAAAjyI,EAAAtkC,GACA,MACA,mBACA,qBACA,IAAAy7K,EAAAz7K,EAAAwB,MAAA,KACA,OAAAi6K,EAAApkL,OACA,MAIA,IAAAqkL,EAAA,IAAAjG,EAGA,GAFAiG,EAAA/kH,QAAA,IAAA8kH,EAAA,IACAC,EAAA/kH,QAAA,IAAA8kH,EAAA,KACAC,EAAAl4I,IAAA,OAAAk4I,EAAAl4I,IAAA,KACA,MAEA4e,EAAAx/B,IAAA0hB,EAAA,IAAAo3I,EAAA/tK,IAAA,MACAy0C,EAAAx/B,IAAA0hB,EAAA,IAAAo3I,EAAA/tK,IAAA,MACA,MACA,aACAy0C,EAAAk7G,IAAAh5H,EAAAtkC,GAAA,SAGO,UAIPoiD,EAAA5e,IAAA,OACA,IAAA+uI,EAAA,IAAAluJ,EAAA48B,MAAAyzH,WAAArwJ,EAAAjW,OAAAsmK,WACAnC,EAAAz9K,MAAAstD,EAAAz0C,IAAA,aACA4kK,EAAA5H,MAAAvoH,EAAAz0C,IAAA,WACA4kK,EAAA1H,cAAAzoH,EAAAz0C,IAAA,mBACA4kK,EAAA3H,cAAAxoH,EAAAz0C,IAAA,qBACA4kK,EAAAxH,gBAAA3oH,EAAAz0C,IAAA,qBACA4kK,EAAAzH,gBAAA1oH,EAAAz0C,IAAA,uBACA4kK,EAAAvH,OAAA5oH,EAAAz0C,IAAA,aAEA0W,EAAAs3J,UAAAt3J,EAAAs3J,SAAApJ,GAGAluJ,EAAA0xJ,WAAA3/K,MACA0M,GAAAs/C,EAAAz0C,IAAA,MACA4kK,YA4CAqJ,CAAA57K,KAGS,KA7HT1L,IAEA+vB,EAAA5vB,QAAA4vB,EAAAqgG,QAAAp9G,OAAAhT,GAAgD27B,QAAA,KAiIhD,IACA,IAAA5uB,EACA,eAAAgjB,EAAArO,MAAA,CAEA,cAAAvJ,KAAA4X,EAAA5vB,QACA,OAAAgW,KAKA,IAAAsF,GAFA1O,EAAAk6K,KAEAn6K,MAAA,sBACA,IAAA2O,MAAA,GACA,UAAAolK,IAAAe,OAAAO,cAGApyJ,EAAArO,MAAA,SAIA,IADA,IAAA6lK,GAAA,EACAx3J,EAAA5vB,QAAA,CAEA,cAAAgY,KAAA4X,EAAA5vB,QACA,OAAAgW,KASA,OANAoxK,EAGAA,GAAA,EAFAx6K,EAAAk6K,IAKAl3J,EAAArO,OACA,aAEA,IAAAvJ,KAAApL,GACAm6K,EAAAn6K,GACWA,IAEXgjB,EAAArO,MAAA,MAEA,SACA,WAEA3U,IACAgjB,EAAArO,MAAA,MAEA,SACA,SAEA,oBAAAvJ,KAAApL,GAAA,CACAgjB,EAAArO,MAAA,OACA,MAGA,IAAA3U,EACA,SAKA,GAHAgjB,EAAAgzB,IAAA,IAAAhzB,EAAA48B,MAAA8B,QAAA1+B,EAAAjW,OAAA20C,QAAA,QACA1+B,EAAArO,MAAA,OAEA,IAAA3U,EAAA2C,QAAA,WACAqgB,EAAAgzB,IAAAv0C,GAAAzB,EACA,SAIA,UAEA,IACAy0K,EAAAz0K,EAAAgjB,EAAAgzB,IAAAhzB,EAAA0xJ,YACW,MAAAptK,GACX0b,EAAAi3J,mBAAA3yK,GAEA0b,EAAAgzB,IAAA,KACAhzB,EAAArO,MAAA,SACA,SAEAqO,EAAArO,MAAA,UACA,SACA,cACA,IAAA8lK,GAAA,IAAAz6K,EAAA2C,QAAA,UAKA,IAAA3C,GAAAy6K,IAAAD,GAAA,IAEAx3J,EAAA+8B,OAAA/8B,EAAA+8B,MAAA/8B,EAAAgzB,KACAhzB,EAAAgzB,IAAA,KACAhzB,EAAArO,MAAA,KACA,SAEAqO,EAAAgzB,IAAAljB,OACA9P,EAAAgzB,IAAAljB,MAAA,MAEA9P,EAAAgzB,IAAAljB,MAAA9yB,EACA,SACA,aAEAA,IACAgjB,EAAArO,MAAA,MAEA,WAGK,MAAArN,GACL0b,EAAAi3J,mBAAA3yK,GAGA,YAAA0b,EAAArO,OAAAqO,EAAAgzB,KAAAhzB,EAAA+8B,OACA/8B,EAAA+8B,MAAA/8B,EAAAgzB,KAEAhzB,EAAAgzB,IAAA,KAGAhzB,EAAArO,MAAA,YAAAqO,EAAArO,MAAA,qBAEA,OAAAvL,MAEAqkB,MAAA,WAEA,IAWA,GAZArkB,KAGAhW,QAHAgW,KAGAi6G,QAAAp9G,UAHAmD,KAKA4sC,KAAA,WALA5sC,KAKAuL,SALAvL,KAMAhW,QAAA,OANAgW,KAOArW,SAKA,YAZAqW,KAYAuL,MACA,UAAAm/J,IAAAe,OAAAO,cAEK,MAAA9tK,GAfL8B,KAgBA6wK,mBAAA3yK,GAGA,OAnBA8B,KAkBA62C,SAlBA72C,KAkBA62C,UACA72C,OAIAhJ,EAAAC,QAAAs/C,2BC3xCA,SAAA78B,GAAA,IAIA43J,EAJAC,OAAA,IAAA73J,IACA,oBAAA/V,iBACA6tK,EAAa1oL,EAAQ,GAIrB,oBAAAikB,SACAukK,EAAAvkK,UAEAukK,EAAAC,EAAA,gCAGAD,EAAAC,EAAA,6BAAAC,GAIAx6K,EAAAC,QAAAq6K,yDCdA,IAAA7gK,EAAW3nB,EAAQ,QACnB6/K,EAAS7/K,EAAQ,QACjB8T,EAAA6T,EAAAja,KAAAqjB,SAAArjB,KAAA5I,OAAA0I,UAAAsG,SAEA60K,EAAA,qJACAC,EAAA,qJAEA16K,EAAAC,QAAA,WACA,IAAA06K,EAAAhJ,EAAAiJ,SAAAjJ,EAAAkJ,qBAAA7xK,OACA,OAAApD,IAAA+0K,EAAAF,EAAA,IAAAC,EAAA,wCCPA,IACAn7K,EAAAZ,MAAAW,UAAAC,MACA0f,EAAAlgB,OAAAO,UAAAI,SAGAM,EAAAC,QAAA,SAAA66K,GACA,IAAAlxK,EAAAZ,KACA,sBAAAY,GAJA,sBAIAqV,EAAAzf,KAAAoK,GACA,UAAA+F,UARA,kDAQA/F,GAyBA,IAvBA,IAEAu/B,EAFArwB,EAAAvZ,EAAAC,KAAAuZ,UAAA,GAqBAgiK,EAAA3/K,KAAAwf,IAAA,EAAAhR,EAAAhU,OAAAkjB,EAAAljB,QACAolL,KACA/mL,EAAA,EAAmBA,EAAA8mL,EAAiB9mL,IACpC+mL,EAAArmL,KAAA,IAAAV,GAKA,GAFAk1C,EAAAtmB,SAAA,6BAAAm4J,EAAAp8K,KAAA,iDAAAikB,CAxBA,WACA,GAAA7Z,gBAAAmgC,EAAA,CACA,IAAAj1C,EAAA0V,EAAAnI,MACAuH,KACA8P,EAAA5X,OAAA3B,EAAAC,KAAAuZ,aAEA,OAAAha,OAAA7K,OACAA,EAEA8U,KAEA,OAAAY,EAAAnI,MACAq5K,EACAhiK,EAAA5X,OAAA3B,EAAAC,KAAAuZ,eAaAnP,EAAAtK,UAAA,CACA,IAAA27K,EAAA,aACAA,EAAA37K,UAAAsK,EAAAtK,UACA6pC,EAAA7pC,UAAA,IAAA27K,EACAA,EAAA37K,UAAA,KAGA,OAAA6pC,uBClDAnpC,EAAAC,QAAA,SAAAb,GACA,cAAAA,GAAA,mBAAAA,GAAA,iBAAAA,yBCDAY,EAAAC,SACA6pG,UAAah4G,EAAQ,QACrB03B,MAAS13B,EAAQ,QACjBu2G,WAAcv2G,EAAQ,QAAcu2G,WACpCE,mBAAsBz2G,EAAQ,QAAcy2G,mBAC5CD,mBAAsBx2G,EAAQ,QAAcw2G,mBAC5CyB,cAAiBj4G,EAAQ,4CCIzB,IAAAw3B,EAAkBx3B,EAAQ,QAE1BopL,EAAA,SAAArxJ,GACA,IAAAO,EAAA,GAAAP,EAAA,GAGA,OAFAO,IAAA,EACAA,GAAAP,EAAA,IAIAU,EAAA,SAAAV,GACA,YAAAA,EAAA,KAGAsxJ,EAAA,SAAAtxJ,GACA,IAAA71B,EAAA,EASA,OAHA,GAAA61B,EAAA,YACA71B,GAAA61B,EAAA,MAEA71B,GAkJAonL,EAAA,SAAAl9K,GACA,OAAAA,GACA,OACA,kDACA,OACA,iBACA,OACA,+BACA,OACA,+BACA,OACA,mCACA,QACA,cAsFA8B,EAAAC,SACApO,UAnPA,SAAAg4B,EAAAiE,GACA,IAAA1D,EAAA8wJ,EAAArxJ,GACA,WAAAO,EACA,MACGA,IAAA0D,EACH,MACGA,EACH,MAEA,MA2OA9C,SAxOA,SAAAnB,GACA,IAAAE,EAAAQ,EAAAV,GACA71B,EAAA,EAAAmnL,EAAAtxJ,GAMA,OAJAE,IACA/1B,GAAA61B,EAAA71B,GAAA,IAGA,GAAA61B,EAAA71B,EAAA,QAAA61B,EAAA71B,EAAA,KAiOAi3B,SA9NA,SAAApB,GACA,IAAA2D,KACAzD,EAAAQ,EAAAV,GACAwxJ,EAAA,EAAAF,EAAAtxJ,GAWA,GATAE,IACAsxJ,GAAAxxJ,EAAAwxJ,GAAA,GAQA,EAAAxxJ,EAAAwxJ,EAAA,IAIA,IAAAttJ,EAGAA,EAAA,IADA,GAAAlE,EAAAwxJ,EAAA,OAAAxxJ,EAAAwxJ,EAAA,IACA,EAQA,IADA,IAAArnL,EAAA,KAHA,GAAA61B,EAAAwxJ,EAAA,QAAAxxJ,EAAAwxJ,EAAA,KAIArnL,EAAA+5B,GAAA,CACA,IAAA95B,EAAAonL,EAAArnL,EAEAw5B,GAAA,GAAA3D,EAAA51B,EAAA,OAAA41B,EAAA51B,EAAA,IAAA41B,EAAA51B,GAIAD,GAAA,OAAA61B,EAAA51B,EAAA,OAAA41B,EAAA51B,EAAA,IAEA,OAAAu5B,IAyLAjD,iCACAF,aAvLA,SAAAR,EAAA2D,GAGA,OADAA,EADA0tJ,EAAArxJ,KAGA,KAAAP,EAAA6B,iBACA,cACA,KAAA7B,EAAA8B,iBACA,cACA,KAAA9B,EAAA2E,qBACA,uBACA,QACA,cA6KAzD,aAzKA,SAAAX,GAEA,IADAU,EAAAV,GAEA,YAGA,IAAA71B,EAAA,EAAAmnL,EAAAtxJ,GAEA,GAAA71B,GAAA61B,EAAA32B,WAWA,YAGA,IACA07B,EADAjE,EAAA,KAuCA,OAvBA,KAVAiE,EAAA/E,EAAA71B,EAAA,OAWA22B,MAIAuB,KAAA,GAAArC,EAAA71B,EAAA,SACA,IAAA61B,EAAA71B,EAAA,UACA,IAAA61B,EAAA71B,EAAA,UACA,IAAA61B,EAAA71B,EAAA,SACA,IAAA61B,EAAA71B,EAAA,SACA22B,EAAAuB,KAAA,EACAvB,EAAAuB,MAAA,EAAArC,EAAA71B,EAAA,SACA22B,EAAAsB,IAAAtB,EAAAuB,IACA,GAAA0C,IACAjE,EAAAsB,KAAA,GAAApC,EAAA71B,EAAA,UACA,IAAA61B,EAAA71B,EAAA,UACA,IAAA61B,EAAA71B,EAAA,UACA,IAAA61B,EAAA71B,EAAA,SACA,IAAA61B,EAAA71B,EAAA,SACA22B,EAAAsB,KAAA,EACAtB,EAAAsB,MAAA,EAAApC,EAAA71B,EAAA,WAGA22B,GA6GAG,4BAzFA,SAAAjB,GASA,IARA,IAAA71B,EAAA,EAAAmnL,EAAAtxJ,GACAyxJ,EAAAzxJ,EAAAj2B,SAAAI,GACAunL,EAAA,EACAC,EAAA,EACAC,GAAA,EAIQD,EAAAF,EAAApoL,WAAA,EAA6CsoL,IACrD,OAAAF,EAAAE,EAAA,IAEAD,EAAAC,EAAA,EACA,MAIA,KAAAD,EAAAD,EAAApoL,YAGA,OAAAooL,EAAAC,IACA,OAEA,OAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MACO,OAAAD,EAAAC,EAAA,IACPA,IACA,MAGAC,EAAA,IAAAD,EAAA,GAEA,8CADAH,EAAA,GAAAE,EAAAE,EAAA,MAEAC,GAAA,GAKA,GACAF,UACO,IAAAD,EAAAC,MAAAD,EAAA1lL,QACP4lL,EAAAD,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAD,EAAAC,EAAA,IACA,IAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MAIA,8CADAH,EAAA,GAAAE,EAAAE,EAAA,MAEAC,GAAA,GAEAD,EAAAD,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EAeA,OAXAD,IAAA1nL,SAAA4nL,GACAD,GAAAC,EACAA,EAAA,EAEAF,KAAApoL,WAAA,GAEA,8CADAkoL,EAAA,GAAAE,EAAAE,EAAA,MAEAC,GAAA,GAIAA,uCChRA,IAAAnsJ,EAAYx9B,EAAQ,QAEpB,SAAAi9K,IACA/lK,KAAAq8B,YAWA0pI,EAAAzvK,UAAAwf,IAAA,SAAAwwJ,EAAAC,GAKA,OAJAvmK,KAAAq8B,SAAA1wC,MACA26K,YACAC,aAEAvmK,KAAAq8B,SAAAzvC,OAAA,GAQAm5K,EAAAzvK,UAAAo8K,MAAA,SAAAr6K,GACA2H,KAAAq8B,SAAAhkC,KACA2H,KAAAq8B,SAAAhkC,GAAA,OAYA0tK,EAAAzvK,UAAAyC,QAAA,SAAAuV,GACAgY,EAAAvtB,QAAAiH,KAAAq8B,SAAA,SAAAhiC,GACA,OAAAA,GACAiU,EAAAjU,MAKArD,EAAAC,QAAA8uK,wBChDA,IAGA4M,EACAC,EACAC,EACAC,EAEAC,EALAJ,EAAA,yFACAC,EAAA,mBACAC,EAAA,oBACAC,EAAA,qCAEAC,GAOAz6F,iBAAA,SAAAH,EAAAC,EAAA5xE,GAKA,GAJAA,QAEA2xE,IAAAzgF,SACA0gF,IAAA1gF,QACA,CAIA,IAAA8O,EAAAi+H,gBACA,OAAAtsD,EAEA,IAAA66F,EAAAD,EAAAE,SAAA96F,GACA,IAAA66F,EACA,UAAAtjK,MAAA,mCAGA,OADAsjK,EAAAj7K,KAAAg7K,EAAArqK,cAAAsqK,EAAAj7K,MACAg7K,EAAAG,kBAAAF,GAEA,IAAAG,EAAAJ,EAAAE,SAAA76F,GACA,IAAA+6F,EACA,UAAAzjK,MAAA,uCAEA,GAAAyjK,EAAAC,OAGA,OAAA5sK,EAAAi+H,iBAGA0uC,EAAAp7K,KAAAg7K,EAAArqK,cAAAyqK,EAAAp7K,MACAg7K,EAAAG,kBAAAC,IAHA/6F,EAKA,IAAAi7F,EAAAN,EAAAE,SAAA96F,GACA,IAAAk7F,EACA,UAAA3jK,MAAA,mCAEA,IAAA2jK,EAAAC,QAAAD,EAAAt7K,MAAA,MAAAs7K,EAAAt7K,KAAA,IAGA,IAAA69C,EAAAg9H,EAAAvtK,KAAAguK,EAAAt7K,MACAs7K,EAAAC,OAAA19H,EAAA,GACAy9H,EAAAt7K,KAAA69C,EAAA,GAEAy9H,EAAAC,SAAAD,EAAAt7K,OACAs7K,EAAAt7K,KAAA,KAEA,IAAAw7K,GAGAH,OAAAC,EAAAD,OACAE,OAAAH,EAAAG,OACAv7K,KAAA,KACAiE,OAAAm3K,EAAAn3K,OACAe,MAAAo2K,EAAAp2K,MACAzE,SAAA66K,EAAA76K,UAEA,IAAA66K,EAAAG,SAIAC,EAAAD,OAAAD,EAAAC,OAGA,MAAAH,EAAAp7K,KAAA,IACA,GAAAo7K,EAAAp7K,KAgBW,CAKX,IAAAy7K,EAAAH,EAAAt7K,KACA07K,EAAAD,EAAA7rJ,UAAA,EAAA6rJ,EAAA39B,YAAA,QAAAs9B,EAAAp7K,KACAw7K,EAAAx7K,KAAAg7K,EAAArqK,cAAA+qK,QApBAF,EAAAx7K,KAAAs7K,EAAAt7K,KAIAo7K,EAAAn3K,SACAu3K,EAAAv3K,OAAAq3K,EAAAr3K,OAIAm3K,EAAAp2K,QACAw2K,EAAAx2K,MAAAs2K,EAAAt2K,QAiBA,OAHA,OAAAw2K,EAAAx7K,OACAw7K,EAAAx7K,KAAAyO,EAAAi+H,gBAAAsuC,EAAArqK,cAAAyqK,EAAAp7K,MAAAo7K,EAAAp7K,MAEAg7K,EAAAG,kBAAAK,IAEAN,SAAA,SAAA9kK,GACA,IAAAjR,EAAAy1K,EAAAttK,KAAA8I,GACA,OAAAjR,GAIAk2K,OAAAl2K,EAAA,OACAo2K,OAAAp2K,EAAA,OACAnF,KAAAmF,EAAA,OACAlB,OAAAkB,EAAA,OACAH,MAAAG,EAAA,OACA5E,SAAA4E,EAAA,QARA,MAWAwL,cAAA,SAAA3Q,GAgBA,IATAA,IAAAhB,MAAA,IAAA2Z,UAAA9a,KAAA,IAAAgH,QAAAi2K,EAAA,IASA96K,EAAAnL,UAAAmL,IAAA6E,QAAAk2K,EAAA,KAAAlmL,SACA,OAAAmL,EAAAhB,MAAA,IAAA2Z,UAAA9a,KAAA,KAEAs9K,kBAAA,SAAAh2K,GACA,OAAAA,EAAAk2K,OAAAl2K,EAAAo2K,OAAAp2K,EAAAnF,KAAAmF,EAAAlB,OAAAkB,EAAAH,MAAAG,EAAA5E,WAMAtB,EAAAC,QAAA87K,qCCxJA,IAAAxK,EAAmBz/K,EAAQ,QAE3B4qL,EAAAnL,EAAA,YACAC,EAAAD,EAAA,eACAoL,EAAApL,EAAA,YAEAqL,EAAmB9qL,EAAQ,QAC3B0zK,EAAa1zK,EAAQ,QACrB+qL,EAAgB/qL,EAAQ,QAExBqrD,EAAWrrD,EAAQ,QACnBgrL,EAAUhrL,EAAQ,QAElBirL,EAAiBjrL,EAAQ,QACzBkrL,EAAkBlrL,EAAQ,QAE1BiwC,EAAUjwC,EAAQ,QAGlBmrL,GACAC,YAAAF,EAEAG,UAAA,SAAA/9K,GACA,QAAAA,GAEAg+K,SAAA,SAAAh+K,GACA,OAAAA,GAEAi+K,UAAA,SAAAj+K,GACA,IAAAuyB,EAAA3oB,KAAAo0K,SAAAh+K,GACA,OAAAomK,EAAA7zI,GAAuB,EACvB,IAAAA,GAAAkrJ,EAAAlrJ,GACAwrB,EAAAxrB,GAAAv2B,KAAA+mB,MAAA/mB,KAAAuqE,IAAAh0C,IAD2CA,GAG3C2rJ,QAAA,SAAA92K,GACA,OAAAwC,KAAAo0K,SAAA52K,IAAA,GAEA+2K,SAAA,SAAA/2K,GACA,OAAAwC,KAAAo0K,SAAA52K,KAAA,GAEAg3K,SAAA,SAAAp+K,GACA,IAAAuyB,EAAA3oB,KAAAo0K,SAAAh+K,GACA,GAAAomK,EAAA7zI,IAAA,IAAAA,IAAAkrJ,EAAAlrJ,GAA6D,SAC7D,IAAA8rJ,EAAAtgI,EAAAxrB,GAAAv2B,KAAA+mB,MAAA/mB,KAAAuqE,IAAAh0C,IACA,OAAAmrJ,EAAAW,EAAA,QAEA7C,SAAA,SAAAx7K,GACA,OAAAu9K,EAAAv9K,IAEAs+K,SAAA,SAAAt+K,GAEA,OADA4J,KAAA6xK,qBAAAz7K,GACAs9K,EAAAt9K,IAEAy7K,qBAAA,SAAAz7K,EAAAu+K,GAEA,SAAAv+K,EACA,UAAAoyK,EAAAmM,GAAA,yBAAAv+K,GAEA,OAAAA,GAEA29K,aACAa,UAAA,SAAAp3K,EAAA+O,GACA,OAAA/O,IAAA+O,EACA,IAAA/O,GAAiB,EAAAA,GAAA,EAAA+O,EAGjBiwJ,EAAAh/J,IAAAg/J,EAAAjwJ,IAIAs8J,KAAA,SAAArrK,GACA,cAAAA,EACA,YAEA,IAAAA,EACA,YAEA,mBAAAA,GAAA,iBAAAA,EACA,SAEA,iBAAAA,EACA,SAEA,kBAAAA,EACA,UAEA,iBAAAA,EACA,cADA,GAMAq3K,qBAAA,SAAAjM,GACA,cAAA5oK,KAAA6oK,KAAAD,GACA,SAEA,IAAA//I,GACAigJ,oBAAA,EACAC,kBAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,gBAAA,GAGA,QAAAjzK,KAAA0yK,EACA,GAAA7vI,EAAA6vI,EAAA1yK,KAAA2yB,EAAA3yB,GACA,SAIA,IAAAkzK,EAAArwI,EAAA6vI,EAAA,aACAS,EAAAtwI,EAAA6vI,EAAA,YAAA7vI,EAAA6vI,EAAA,WACA,GAAAQ,GAAAC,EACA,UAAAb,EAAA,sEAEA,UAIAsM,qBAAA,SAAAlM,GACA,gBAAAA,IAIAgL,EAAA5zK,KAAA,6BAAA4oK,MAEA7vI,EAAA6vI,EAAA,aAAA7vI,EAAA6vI,EAAA,cAQAmM,iBAAA,SAAAnM,GACA,gBAAAA,IAIAgL,EAAA5zK,KAAA,6BAAA4oK,MAEA7vI,EAAA6vI,EAAA,eAAA7vI,EAAA6vI,EAAA,mBAQAoM,oBAAA,SAAApM,GACA,gBAAAA,IAIAgL,EAAA5zK,KAAA,6BAAA4oK,IAEA5oK,KAAA80K,qBAAAlM,KAAA5oK,KAAA+0K,iBAAAnM,KAQAqM,uBAAA,SAAArM,GACA,YAAAA,EACA,OAAAA,EAKA,GAFAgL,EAAA5zK,KAAA,6BAAA4oK,GAEA5oK,KAAA+0K,iBAAAnM,GACA,OACAxyK,MAAAwyK,EAAA,aACApyJ,WAAAoyJ,EAAA,gBACAxyJ,aAAAwyJ,EAAA,kBACA5zJ,eAAA4zJ,EAAA,qBAEG,GAAA5oK,KAAA80K,qBAAAlM,GACH,OACA1lK,IAAA0lK,EAAA,WACAzwJ,IAAAywJ,EAAA,WACAxyJ,aAAAwyJ,EAAA,kBACA5zJ,eAAA4zJ,EAAA,qBAGA,UAAAJ,EAAA,qFAKA0M,qBAAA,SAAAC,GACA,cAAAn1K,KAAA6oK,KAAAsM,GACA,UAAA3M,EAAA,2CAGA,IAAA95H,KAaA,GAZA3V,EAAAo8I,EAAA,gBACAzmI,EAAA,kBAAA1uC,KAAAm0K,UAAAgB,EAAA/+J,aAEA2iB,EAAAo8I,EAAA,kBACAzmI,EAAA,oBAAA1uC,KAAAm0K,UAAAgB,EAAAngK,eAEA+jB,EAAAo8I,EAAA,WACAzmI,EAAA,aAAAymI,EAAA/+K,OAEA2iC,EAAAo8I,EAAA,cACAzmI,EAAA,gBAAA1uC,KAAAm0K,UAAAgB,EAAA3+J,WAEAuiB,EAAAo8I,EAAA,QACA,IAAAhpD,EAAAgpD,EAAAjyK,IACA,YAAAipH,IAAAnsH,KAAA+zK,WAAA5nD,GACA,UAAAxlH,UAAA,6BAEA+nC,EAAA,WAAAy9E,EAEA,GAAApzF,EAAAo8I,EAAA,QACA,IAAA7gD,EAAA6gD,EAAAh9J,IACA,YAAAm8G,IAAAt0H,KAAA+zK,WAAAz/C,GACA,UAAAk0C,EAAA,6BAEA95H,EAAA,WAAA4lF,EAGA,IAAAv7F,EAAA2V,EAAA,YAAA3V,EAAA2V,EAAA,cAAA3V,EAAA2V,EAAA,cAAA3V,EAAA2V,EAAA,iBACA,UAAA85H,EAAA,gGAEA,OAAA95H,IAIA13C,EAAAC,QAAAg9K,qCCxOA,IAAA5Q,EAAav6K,EAAQ,QACrBw6K,EAAkBx6K,EAAQ,QAE1BkO,EAAAC,QAAA,WACA,IAAAm+K,EAAA9R,IAEA,OADAD,EAAAz1K,OAAA0I,WAA2BoB,KAAA09K,IAAoB19K,KAAA,WAAoB,OAAA9J,OAAA0I,UAAAoB,OAAA09K,KACnEA,uBCRA,IAEAzuF,EACAC,EACAC,EACAC,EACAmxE,EACAE,EAEAxxE,EAAA,SAAA39F,GACA,OATA,IASAA,GAGA49F,EAAA,SAAA59F,EAAAw5B,GACA,OAAAx5B,EAAAw5B,GAGAqkE,EAAA,SAAApkE,GACA,OAAAA,EAjBA,KAoBAqkE,EAAA,SAAArkE,EAAAD,GACA,OAAAC,EAAAD,GAGAy1I,EAAA,SAAAx1I,EAAAD,GACA,OAAAmkE,EAAAG,EAAArkE,EAAAD,KAGA21I,EAAA,SAAA11I,EAAAD,GACA,OAAAokE,EAAAC,EAAApkE,GAAAD,IAGAxrB,EAAAC,SACA0vF,mBACAC,mBACAC,mBACAC,mBACAmxE,mBACAE,wCC5BA,SAAAr6H,EAAAu3I,GAEA,GAAAA,GAAA,iBAAAA,EAAA,CACA,IAAAC,EAAAD,EAAAz3I,OAAAy3I,EAAAv3I,SAAAu3I,EAAAx3I,SACAy3I,IAAAD,EAAAC,GAIA,oBAAAD,EAAA,OAAAt7H,EAAAs7H,GAGA,IAOAE,EAPAzhK,EAAAlmB,OAAAynL,GAIA,OADAE,EAAA/mH,EAAA16C,EAAA0V,gBACA+rJ,GAGAA,EAAArsK,EAAA4K,EAAA0V,kBAIA,IAAA1V,EAAAlnB,OAAAknB,EAAAvX,WAAA,WAaAuhC,EAAAuS,WAAA,SAAAvwC,EAAA01K,GACA,GAAA11K,GAAA,iBAAAA,EAAA,CACA,IAAAg+B,EAAAh+B,EAAA89B,OAAA99B,EAAAg+B,SAAAh+B,EAAA+9B,SACA,UAAAC,QAAA7hC,IAAA6hC,EAAoD,SACpD,oBAAA03I,EAAA,CAEA,IAIAD,EAHA,GADAA,EAAA/mH,EAAAgnH,EAAAhsJ,eAC0B,OAAA+rJ,IAAAz3I,EAI1B,GADAy3I,EAAArsK,EAAAssK,EAAAhsJ,eAC0B,OAAA+rJ,IAAAz3I,OACrB,oBAAA03I,EACL,OAAAA,IAAA13I,EAEA,WAYA,IAAA0wB,GARAv3D,EAAAD,EAAAC,QAAA6mC,GAQA3f,KAAAlnB,EAAAu3D,OACAinH,UAAA,EACAtjB,IAAA,EACApW,MAAA,GACA5+I,MAAA,GACAy1J,KAAA,GACAC,IAAA,GACA6iB,cAAA,GACAC,YAAA,GACAzjB,IAAA,GACAE,MAAA,GACAwjB,UAAA,GACAC,YAAA,GACA1gL,IAAA,GACA2gL,KAAA,GACAzoK,KAAA,GACAglJ,GAAA,GACAzlG,MAAA,GACA0lG,KAAA,GACA3wB,OAAA,GACAzgG,OAAA,GACA60I,QAAA,GACAC,eAAA,GACAC,gBAAA,GACAC,WAAA,IACAC,WAAA,IACAC,WAAA,IACAC,WAAA,IACAC,WAAA,IACAC,WAAA,IACAC,cAAA,IACAC,cAAA,IACAC,gBAAA,IACAC,IAAI,IACJC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,KAKAnuK,EAAAjS,EAAAiS,SACAouK,QAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,QAAA,GACA7sD,OAAA,GACA/7E,MAAA,GACA6oI,MAAA,GACAC,KAAA,GACAC,OAAA,GACAhqL,OAAA,GACAiqL,IAAA,GACAC,SAAA,GACAC,KAAA,GACAC,KAAA,GACAC,IAAA,GACA1jD,IAAA,GACA2jD,IAAA;;;;AAQA,IAAAptL,EAAA,GAAYA,EAAA,IAASA,IAAAujE,EAAA5gE,OAAAC,aAAA5C,MAAA,GAGrB,QAAAA,EAAA,GAAgBA,EAAA,GAAQA,IAAAujE,EAAAvjE,EAAA,IAAAA,EAGxB,IAAAA,EAAA,EAAWA,EAAA,GAAQA,IAAAujE,EAAA,IAAAvjE,KAAA,IAGnB,IAAAA,EAAA,EAAWA,EAAA,GAAQA,IAAAujE,EAAA,UAAAvjE,KAAA,GAQnB,IAAA8uD,EAAA9iD,EAAA8iD,MAAA9iD,EAAAwxB,SAGA,IAAAx9B,KAAAujE,EAAAzU,EAAAyU,EAAAvjE,MAGA,QAAAge,KAAAC,EACAslD,EAAAvlD,GAAAC,EAAAD,yBC7KAjS,EAAAC,QAAiBnO,EAAQ,2CCEzB,IAAAgO,EAAgBhO,EAAQ,QACxBa,EAAYb,EAAQ,QACpB2zK,EAAc3zK,EAAQ,QAEtBkO,EAAAC,SACAwlK,UACA9yK,QACAmN,oCCTA,SAAA4iB,EAAAgoJ,IAAA,SAAAhoJ,EAAAzd,GACA,aAEA,IAAAyd,EAAAuB,aAAA,CAIA,IAIAq9J,EA6HAnxB,EAZAoxB,EArBAC,EACAC,EAjGAC,EAAA,EACAC,KACAC,GAAA,EACAl7I,EAAAhkB,EAAA3M,SAoJA8rK,EAAA9iL,OAAA8kF,gBAAA9kF,OAAA8kF,eAAAnhE,GACAm/J,OAAAnmK,WAAAmmK,EAAAn/J,EAGU,wBAAAhjB,SAAAF,KAAAkjB,EAAAgoJ,SApFV4W,EAAA,SAAAQ,GACApX,EAAAjpC,SAAA,WAA0CsgD,EAAAD,OAI1C,WAGA,GAAAp/J,EAAAisE,cAAAjsE,EAAAs/J,cAAA,CACA,IAAAC,GAAA,EACAC,EAAAx/J,EAAAksE,UAMA,OALAlsE,EAAAksE,UAAA,WACAqzF,GAAA,GAEAv/J,EAAAisE,YAAA,QACAjsE,EAAAksE,UAAAszF,EACAD,GAwEKE,GAIAz/J,EAAA0/J,iBA9CLb,EAAA,IAAAa,gBACAC,MAAAzzF,UAAA,SAAA9lF,GAEAi5K,EADAj5K,EAAAjW,OAIAyuL,EAAA,SAAAQ,GACAP,EAAAe,MAAA3zF,YAAAmzF,KA2CKp7I,GAAA,uBAAAA,EAAAtG,cAAA,WAtCL+vH,EAAAzpH,EAAAxwB,gBACAorK,EAAA,SAAAQ,GAGA,IAAAt8H,EAAA9e,EAAAtG,cAAA,UACAolB,EAAAh/B,mBAAA,WACAu7J,EAAAD,GACAt8H,EAAAh/B,mBAAA,KACA2pI,EAAAlsH,YAAAuhB,GACAA,EAAA,MAEA2qG,EAAAnvH,YAAAwkB,KAKA87H,EAAA,SAAAQ,GACApmK,WAAAqmK,EAAA,EAAAD,KAlDAN,EAAA,gBAAApmL,KAAAyjH,SAAA,IACA4iE,EAAA,SAAA34K,GACAA,EAAAqH,SAAAuS,GACA,iBAAA5Z,EAAAjW,MACA,IAAAiW,EAAAjW,KAAA0P,QAAAi/K,IACAO,GAAAj5K,EAAAjW,KAAA0M,MAAAiiL,EAAA5rL,UAIA8sB,EAAArO,iBACAqO,EAAArO,iBAAA,UAAAotK,GAAA,GAEA/+J,EAAA0kB,YAAA,YAAAq6I,GAGAH,EAAA,SAAAQ,GACAp/J,EAAAisE,YAAA6yF,EAAAM,EAAA,OAgEAD,EAAA59J,aA1KA,SAAAO,GAEA,mBAAAA,IACAA,EAAA,IAAA3B,SAAA,GAAA2B,IAIA,IADA,IAAA1L,EAAA,IAAAna,MAAAoa,UAAAnjB,OAAA,GACA3B,EAAA,EAAqBA,EAAA6kB,EAAAljB,OAAiB3B,IACtC6kB,EAAA7kB,GAAA8kB,UAAA9kB,EAAA,GAGA,IAAAsuL,GAAkB/9J,WAAA1L,QAGlB,OAFA6oK,EAAAD,GAAAa,EACAjB,EAAAI,GACAA,KA6JAG,EAAA39J,iBA1JA,SAAAA,EAAA49J,UACAH,EAAAG,GAyBA,SAAAC,EAAAD,GAGA,GAAAF,EAGAlmK,WAAAqmK,EAAA,EAAAD,OACS,CACT,IAAAS,EAAAZ,EAAAG,GACA,GAAAS,EAAA,CACAX,GAAA,EACA,KAjCA,SAAAW,GACA,IAAA/9J,EAAA+9J,EAAA/9J,SACA1L,EAAAypK,EAAAzpK,KACA,OAAAA,EAAAljB,QACA,OACA4uB,IACA,MACA,OACAA,EAAA1L,EAAA,IACA,MACA,OACA0L,EAAA1L,EAAA,GAAAA,EAAA,IACA,MACA,OACA0L,EAAA1L,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,QACA0L,EAAA/iB,MAAAwD,EAAA6T,IAiBAurG,CAAAk+D,GACiB,QACjBr+J,EAAA49J,GACAF,GAAA,MAvEA,CAyLC,oBAAAh/J,UAAA,IAAAF,EAAA1Z,KAAA0Z,EAAAE,uEC7KD,IA6BA0lF,EAAAC,EAAAF,EAAAm6E,EA7BA11J,EAAah7B,EAAQ,QACrBw4D,EAAUx4D,EAAQ,QAClBm+F,EAAiBn+F,EAAQ,QACzB6/F,EAAsB7/F,EAAQ,QAC9B8gG,EAAsB9gG,EAAQ,QAC9Bm9B,EAAWn9B,EAAQ,QACnBq4K,EAAiBr4K,EAAQ,QACzB8wG,EAAiB9wG,EAAQ,QAAgB8wG,WACzCwnE,EAAgBt4K,EAAQ,QACxBw5B,EAAsBx5B,EAAQ,QAAcw5B,gBAG5Co4E,GACA,kBACA,eACA,aACA,yBACA,cAGAC,GACA,QACA,SACA,aACA,WACA,wBASAC,EAAA,SAAAnhG,EAAAC,GACA,IACAzO,EAEA,GAAAwO,EAAA7M,SAAA8M,EAAA9M,OACA,SAIA,IAAA3B,EAAA,EAAaA,EAAAwO,EAAA7M,OAAc3B,IAC3B,GAAAwO,EAAAxO,KAAAyO,EAAAzO,GACA,SAIA,UAGA4vG,EAAA,SACA1oG,EACA2oG,EACA9G,EACA+G,EACA9G,EACA+G,GAWA,OACAztE,OACAtK,IAAA9wB,EACA+wB,IAAA/wB,GAXA6hG,EAAA8G,IAaA3lG,KACA8tB,IAAA9wB,GAbA4oG,EAAAD,GAcA53E,IAAA/wB,GAbA8hG,EAAAD,IAeAgH,2BACA7oG,yBAaAotG,EAAA,SAAAnnF,EAAApa,GACA,IACAsrF,KACAz6F,EAAA,EACA06F,EAAA,EACAX,EAAA,EACAC,EAAAlwF,IAEAqF,QAEAuhG,EAAAjpG,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAArU,KAAA,SAAA9B,GACA+/F,EAAA6vF,eAAArhK,EAAAvuB,GAEAuuB,GACAsiF,EAAA3hG,QAAA,SAAAm9B,GACA9d,EAAA8d,GAAArsC,EAAAqsC,KAKAozD,EAAA39F,KAAA9B,IAGAmW,KAAAi7F,eAAA,SAAAC,GACA3R,EAAA2R,EAAA9iF,EAAA2N,kBAAA5zB,qBAGA6N,KAAAm7F,4BAAA,SAAAhpG,GACA02F,EAAA12F,GAGA6N,KAAAo7F,oBAAA,SAAA34E,GACAmmE,EAAAnmE,GAGAziB,KAAAqkB,MAAA,WACA,IACAq/D,EACAt0F,EACApB,EACAX,EAGA,IAAAi8F,EAAA18F,QAKA82F,EAAAiF,EAAAyvE,4BACA9uE,EAAAlxE,EAAAmxE,GACAnxE,EAAAjmB,oBAAAy3F,EAAA8vF,kCACAthK,EAAApa,EAAA+rF,wBAEApB,EAAAqvE,kBACA5/I,EAAAsrE,EAAAkF,EAAAC,GAIAzwE,EAAApoB,QAAA24F,EAAA0vE,oBAAA30E,GAGA11F,EAAAszD,EAAAtzD,KAAA26F,EAAA2vE,qBAAA50E,IAEA4F,KAEAl6F,EAAAkyD,EAAAlyD,KAAAP,GAAAupB,IACA/qB,EAAA,IAAAzB,WAAAwD,EAAAlF,WAAA8D,EAAA9D,YAGA2E,IAEAxB,EAAA8qB,IAAA/oB,GACA/B,EAAA8qB,IAAAnqB,EAAAoB,EAAAlF,YAEA0/F,EAAA+vF,aAAAvhK,GAEApY,KAAAokB,QAAA,QAA0BhM,QAAA/qB,UAC1B2S,KAAAokB,QAAA,8BAjCApkB,KAAAokB,QAAA,gCAqCA9tB,UAAA,IAAAwtB,GAaAw7E,EAAA,SAAAlnF,EAAApa,GACA,IAIArT,EACAc,EAJAoD,EAAA,EACAq4F,KACAmU,KAIAr9F,QAEAshG,EAAAhpG,UAAA6B,KAAA3B,KAAAwJ,aAEAoY,EAAAkjF,OAEAt7F,KAAAu7F,aAUAv7F,KAAArU,KAAA,SAAA6vG,GACA5R,EAAA6vF,eAAArhK,EAAAojF,GAGA,2BAAAA,EAAApU,aAAAz8F,IACAA,EAAA6wG,EAAA7wG,OACAytB,EAAA5sB,KAAAgwG,EAAA3xG,MAEA8wG,EAAA5hG,QAAA,SAAAm9B,GACA9d,EAAA8d,GAAAvrC,EAAAurC,IACOl2B,OAGP,2BAAAw7F,EAAApU,aACA37F,IACAA,EAAA+vG,EAAA3xG,KACAuuB,EAAA3sB,KAAA+vG,EAAA3xG,OAIAq9F,EAAAv7F,KAAA6vG,IAOAx7F,KAAAqkB,MAAA,WAcA,IAbA,IACAq/D,EACA+X,EACAnU,EACAl4F,EACApB,EACAX,EAEAquG,EACAC,EAFAX,EAAA,EAMA9T,EAAAt6F,QACA,+BAAAs6F,EAAA,GAAAE,aAGAF,EAAA/pF,QAIA,OAAA+pF,EAAAt6F,OAGA,OAFAoT,KAAA47F,oBACA57F,KAAAokB,QAAA,6BAoDA,GA7CAs/D,EAAAuD,EAAA07E,oBAAAz7E,IACAI,EAAAL,EAAA27E,oBAAAl/E,IAoBA,MAAAsD,YAEAyU,EAAAz7F,KAAA67F,iBAAA3U,EAAA,GAAA9uE,KAKA4iF,EAAAS,EAAA/sG,SAEA44F,EAAA/oF,QAAAk9F,GAGAnU,EAAAp9F,YAAAuxG,EAAAvxG,WACAo9F,EAAAC,UAAAkU,EAAAlU,SACAD,EAAApkE,IAAAu4E,EAAAv4E,IACAokE,EAAArkE,IAAAw4E,EAAAx4E,IACAqkE,EAAA54F,UAAA+sG,EAAA/sG,UAGA44F,EAAAL,EAAA47E,oBAAAv7E,IAKA+T,EAAAzuG,OAAA,CACA,IAAAkvG,EAQA,KALAA,EADA99F,EAAA+9F,eACA/7F,KAAAg8F,gBAAA1U,GAEAtnF,KAAAi8F,kBAAA3U,IAoBA,OAfAtnF,KAAAu7F,UAAAh9F,SACA29F,IAAA5U,EAAApjF,MACAzY,IAAA2sB,EAAA3sB,IACAD,IAAA4sB,EAAA5sB,MAIAwU,KAAAu7F,UAAA3uG,OAAAwF,KAAAwG,IAAA,EAAAoH,KAAAu7F,UAAA3uG,QAGAs6F,KAGAlnF,KAAA47F,oBACA57F,KAAAokB,QAAA,6BAMAwlE,EAAA+vF,aAAAvhK,GAEAkvE,EAAAwU,EAGAlS,EAAA6vF,eAAArhK,EAAAkvE,GAIAlvE,EAAApoB,QAAAi3F,EAAAoxE,oBAAA/wE,GAGAt5F,EAAAszD,EAAAtzD,KAAAi5F,EAAA67E,mBAAAx7E,IAEAlvE,EAAAjmB,oBAAAy3F,EAAA8vF,kCACAthK,EAAApa,EAAA+rF,wBAEA/pF,KAAAokB,QAAA,oBAAAkjE,EAAAzxF,IAAA,SAAAqmG,GACA,OACAh5E,IAAAg5E,EAAAh5E,IACAD,IAAAi5E,EAAAj5E,IACA/4B,WAAAgyG,EAAAhyG,eAIAwxG,EAAApU,EAAA,GACAqU,EAAArU,IAAA16F,OAAA,GAEAoT,KAAAokB,QACA,oBACAy2E,EACAziF,EAAAjmB,oBACAupG,EAAAz4E,IACAy4E,EAAAx4E,IACAy4E,EAAA14E,IAAA04E,EAAAjtG,SACAitG,EAAAz4E,IAAAy4E,EAAAjtG,SACAssG,IAGAh7F,KAAAu7F,UAAAh9F,SACA29F,IAAA5U,EAAApjF,MACAzY,IAAA2sB,EAAA3sB,IACAD,IAAA4sB,EAAA5sB,MAIAwU,KAAAu7F,UAAA3uG,OAAAwF,KAAAwG,IAAA,EAAAoH,KAAAu7F,UAAA3uG,QAGAs6F,KAEAlnF,KAAAokB,QAAA,sBAAAhM,EAAAjmB,qBACA6N,KAAAokB,QAAA,oBAAAhM,EAAA2N,mBAEA32B,EAAAkyD,EAAAlyD,KAAAP,GAAAupB,IAIA/qB,EAAA,IAAAzB,WAAAwD,EAAAlF,WAAA8D,EAAA9D,YAGA2E,IAEAxB,EAAA8qB,IAAA/oB,GACA/B,EAAA8qB,IAAAnqB,EAAAoB,EAAAlF,YAEA8V,KAAAokB,QAAA,QAA0BhM,QAAA/qB,UAE1B2S,KAAA47F,eAGA57F,KAAAokB,QAAA,8BAGApkB,KAAA47F,aAAA,WACAhS,EAAA+vF,aAAAvhK,GAIAztB,OAAAsR,EACAxQ,OAAAwQ,GAKA+D,KAAA67F,iBAAA,SAAAL,GACA,IAIAW,EACAC,EACA/U,EACAgV,EACApxG,EALAqxG,EAAA3jG,IAQA,IAAA1N,EAAA,EAAeA,EAAA+U,KAAAu7F,UAAA3uG,OAA2B3B,IAE1Co8F,GADAgV,EAAAr8F,KAAAu7F,UAAAtwG,IACAixG,IAGA9jF,EAAA3sB,KAAAmvG,EAAAxiF,EAAA3sB,IAAA,GAAA4wG,EAAA5wG,IAAA,KACA2sB,EAAA5sB,KAAAovG,EAAAxiF,EAAA5sB,IAAA,GAAA6wG,EAAA7wG,IAAA,MAKA67F,EAAApkE,IAAA7K,EAAA2N,kBAAA9C,MAKAk5E,EAAAX,EAAAv4E,IAAAokE,EAAApkE,IAAAokE,EAAA34F,YAzBA,KA8BAytG,GA/BA,QAmCAC,GACAE,EAAAH,KACAC,EAAAC,EACAC,EAAAH,IAKA,OAAAC,EACAA,EAAAF,IAEA,MAKAl8F,KAAAi8F,kBAAA,SAAA3U,GACA,IAAAiV,EAAAC,EAAAC,EAAAP,EAAAhyG,EAAAq9F,EAAA74F,EAAAotG,EAOA,IALA5xG,EAAAo9F,EAAAp9F,WACAq9F,EAAAD,EAAAC,SACA74F,EAAA44F,EAAA54F,SACA6tG,EAAAC,EAAA,EAEAD,EAAAlB,EAAAzuG,QAAA4vG,EAAAlV,EAAA16F,SACA6vG,EAAApB,EAAAkB,GACAL,EAAA5U,EAAAkV,GAEAC,EAAAv5E,MAAAg5E,EAAAh5E,MAIAg5E,EAAAh5E,IAAAu5E,EAAAv5E,IAGAq5E,KAMAC,IACAtyG,GAAAgyG,EAAAhyG,WACAq9F,GAAA2U,EAAA3U,SACA74F,GAAAwtG,EAAAxtG,UAGA,WAAA8tG,EAEAlV,EAGAkV,IAAAlV,EAAA16F,OAEA,OAGAkvG,EAAAxU,EAAA/wF,MAAAimG,IACAtyG,aACA4xG,EAAAptG,WACAotG,EAAAvU,WACAuU,EAAA54E,IAAA44E,EAAA,GAAA54E,IACA44E,EAAA74E,IAAA64E,EAAA,GAAA74E,IAEA64E,IAKA97F,KAAAg8F,gBAAA,SAAA1U,GACA,IAAAiV,EAAAC,EAAAC,EAAAP,EAAAQ,EAAAC,EAmCAC,EA5BA,IALAL,EAAAlB,EAAAzuG,OAAA,EACA4vG,EAAAlV,EAAA16F,OAAA,EACA8vG,EAAA,KACAC,GAAA,EAEAJ,GAAA,GAAAC,GAAA,IAIA,GAHAC,EAAApB,EAAAkB,GACAL,EAAA5U,EAAAkV,GAEAC,EAAAv5E,MAAAg5E,EAAAh5E,IAAA,CACAy5E,GAAA,EACA,MAGAF,EAAAv5E,IAAAg5E,EAAAh5E,IACAq5E,KAIAA,IAAAlB,EAAAzuG,OAAA,IAIA8vG,EAAAF,GAGAA,KAGA,IAAAG,GAAA,OAAAD,EACA,YAWA,QALAE,EADAD,EACAH,EAEAE,GAIA,OAAApV,EAGA,IAAAwU,EAAAxU,EAAA/wF,MAAAqmG,GACAhoD,EAAAknD,EAAA1jG,OAAA,SAAAykG,EAAAX,GAIA,OAHAW,EAAA3yG,YAAAgyG,EAAAhyG,WACA2yG,EAAAnuG,UAAAwtG,EAAAxtG,SACAmuG,EAAAtV,UAAA2U,EAAA3U,SACAsV,IACQ3yG,WAAA,EAAAwE,SAAA,EAAA64F,SAAA,IAQR,OANAuU,EAAA5xG,WAAA0qD,EAAA1qD,WACA4xG,EAAAptG,SAAAkmD,EAAAlmD,SACAotG,EAAAvU,SAAA3yC,EAAA2yC,SACAuU,EAAA54E,IAAA44E,EAAA,GAAA54E,IACA44E,EAAA74E,IAAA64E,EAAA,GAAA74E,IAEA64E,GAGA97F,KAAA88F,cAAA,SAAAC,GACA1B,EAAA0B,KAIAzmG,UAAA,IAAAwtB,GAUA01J,EAAA,SAAAx7K,EAAAu4F,GAIAv2F,KAAAg9F,eAAA,EACAh9F,KAAAu2F,sBAIA,KAFAv4F,SAEAi/F,MACAj9F,KAAAk9F,cAAAl/F,EAAAi/F,MAEAj9F,KAAAk9F,aAAA,EAGA,kBAAAl/F,EAAA+rF,yBACA/pF,KAAA+pF,uBAAA/rF,EAAA+rF,wBAGA/pF,KAAAm9F,iBACAn9F,KAAAo9F,WAAA,KACAp9F,KAAAq9F,gBACAr9F,KAAAs9F,mBACAt9F,KAAAu9F,mBACAv9F,KAAAw9F,aAAA,EACAx9F,KAAAy9F,cAAA,EAEA+7E,EAAAljL,UAAA6B,KAAA3B,KAAAwJ,MAGAA,KAAArU,KAAA,SAAA+xG,GAGA,OAAAA,EAAAh0E,KACA1pB,KAAAs9F,gBAAA3xG,KAAA+xG,GAGAA,EAAAha,OACA1jF,KAAAu9F,gBAAA5xG,KAAA+xG,IAMA19F,KAAAm9F,cAAAxxG,KAAA+xG,EAAAtlF,OACApY,KAAAq9F,aAAA1xG,KAAA+xG,EAAArwG,OACA2S,KAAAw9F,cAAAE,EAAArwG,MAAAnD,WAEA,UAAAwzG,EAAAtlF,MAAAljB,OACA8K,KAAAo9F,WAAAM,EAAAtlF,YAEA,UAAAslF,EAAAtlF,MAAAljB,OACA8K,KAAA29F,WAAAD,EAAAtlF,YAKA9hB,UAAA,IAAAwtB,EACA01J,EAAAljL,UAAA+tB,MAAA,SAAAoiE,GACA,IAQArD,EACAwa,EACArkF,EAEAtuB,EAXAD,EAAA,EACA8U,GACAm0C,YACA4pD,kBACAjpD,YACAtxB,SAKAw6E,EAAA,EAGA,GAAA99F,KAAAm9F,cAAAvwG,OAAAoT,KAAAg9F,eAAA,CACA,0BAAAvW,GACA,uBAAAA,EAIA,OACK,GAAAzmF,KAAAk9F,YAGL,OACK,OAAAl9F,KAAAm9F,cAAAvwG,OAaL,OANAoT,KAAAy9F,qBAEAz9F,KAAAy9F,eAAAz9F,KAAAg9F,iBACAh9F,KAAAokB,QAAA,QACApkB,KAAAy9F,cAAA,IAuCA,IAjCAz9F,KAAAo9F,YACAU,EAAA99F,KAAAo9F,WAAAr3E,kBAAA7C,IACAy3E,EAAA5hG,QAAA,SAAAm9B,GACAp2B,EAAAwjB,KAAA4S,GAAAl2B,KAAAo9F,WAAAlnE,IACKl2B,OACFA,KAAA29F,aACHG,EAAA99F,KAAA29F,WAAA53E,kBAAA7C,IACAw3E,EAAA3hG,QAAA,SAAAm9B,GACAp2B,EAAAwjB,KAAA4S,GAAAl2B,KAAA29F,WAAAznE,IACKl2B,OAGL,IAAAA,KAAAm9F,cAAAvwG,OACAkT,EAAA5K,KAAA8K,KAAAm9F,cAAA,GAAAjoG,KAEA4K,EAAA5K,KAAA,WAGA8K,KAAAy9F,eAAAz9F,KAAAm9F,cAAAvwG,OAEA2sB,EAAA+nC,EAAA/nC,YAAAvZ,KAAAm9F,eAGAr9F,EAAAyZ,YAAA,IAAA3tB,WAAA2tB,EAAArvB,YAIA4V,EAAAyZ,YAAApB,IAAAoB,GAGAzZ,EAAAjW,KAAA,IAAA+B,WAAAoU,KAAAw9F,cAGAvyG,EAAA,EAAaA,EAAA+U,KAAAq9F,aAAAzwG,OAA8B3B,IAC3C6U,EAAAjW,KAAAsuB,IAAAnY,KAAAq9F,aAAApyG,GAAAD,GACAA,GAAAgV,KAAAq9F,aAAApyG,GAAAf,WAKA,IAAAe,EAAA,EAAaA,EAAA+U,KAAAs9F,gBAAA1wG,OAAiC3B,KAC9Cm4F,EAAApjF,KAAAs9F,gBAAAryG,IAEA2M,UAAAwrF,EAAA4Q,SACAh0F,KAAA+pF,yBACA3G,EAAAxrF,WAAAkmG,GAEA1a,EAAAxrF,WAAA,IAEAwrF,EAAAv2C,QAAAu2C,EAAA6Q,OACAj0F,KAAA+pF,yBACA3G,EAAAv2C,SAAAixD,GAEA1a,EAAAv2C,SAAA,IAEA/sC,EAAA+9F,eAAAza,EAAA59D,SAAA,EACA1lB,EAAAm0C,SAAAtoD,KAAAy3F,GAKA,IAAAn4F,EAAA,EAAaA,EAAA+U,KAAAu9F,gBAAA3wG,OAAiC3B,KAC9C2yG,EAAA59F,KAAAu9F,gBAAAtyG,IAEAw4F,QAAAma,EAAA16E,IACAljB,KAAA+pF,yBACA6T,EAAAna,SAAAqa,GAEAF,EAAAna,SAAA,IAEA3jF,EAAA80C,SAAAjpD,KAAAiyG,GAKA99F,EAAA80C,SAAAqhD,aAAAj2F,KAAAu2F,eAAAN,aAGAj2F,KAAAm9F,cAAAvwG,OAAA,EACAoT,KAAAo9F,WAAA,KACAp9F,KAAAq9F,aAAAzwG,OAAA,EACAoT,KAAAs9F,gBAAA1wG,OAAA,EACAoT,KAAAw9F,aAAA,EACAx9F,KAAAu9F,gBAAA3wG,OAAA,EAGAoT,KAAAokB,QAAA,OAAAtkB,GAGAE,KAAAy9F,eAAAz9F,KAAAg9F,iBACAh9F,KAAAokB,QAAA,QACApkB,KAAAy9F,cAAA,KASA4B,EAAA,SAAArhG,GACA,IAGAo/F,EACAO,EAHA/jF,EAAA5Z,KACA+9F,GAAA,EAIAsB,EAAA/oG,UAAA6B,KAAA3B,KAAAwJ,MAEAhC,QACAgC,KAAA7N,oBAAA6L,EAAA7L,qBAAA,EACA6N,KAAAg+F,qBAEAh+F,KAAAi+F,iBAAA,WACA,IAAAC,KACAl+F,KAAAg+F,kBAAAE,EAEAA,EAAAhpG,KAAA,MACAgpG,EAAA3H,eAAA,IAAAtwE,EAAAI,eAGA63E,EAAAC,UAAA,IAAAijE,EACAljE,EAAAE,6BAAA,IAAAn4E,EAAAjC,wBAAA,SACAk6E,EAAAG,qCAAA,IAAAp4E,EAAAjC,wBAAA,kBACAk6E,EAAAI,WAAA,IAAA6iE,EACAjjE,EAAAK,eAAA,IAAAi7E,EAAAx7K,EAAAkgG,EAAA3H,gBACA2H,EAAAM,eAAAN,EAAAC,UAEAD,EAAAC,UACA92E,KAAA62E,EAAAE,8BACA/2E,KAAA62E,EAAAI,YACAJ,EAAAC,UACA92E,KAAA62E,EAAAG,sCACAh3E,KAAA62E,EAAA3H,gBACAlvE,KAAA62E,EAAAK,gBAEAL,EAAA3H,eAAAt1F,GAAA,qBAAAygB,GACAw8E,EAAAC,UAAAjE,aAAAx4E,EAAAy0E,aAGA+H,EAAAC,UAAAl9F,GAAA,gBAAApX,GACA,mBAAAA,EAAAqL,MAAAgpG,EAAAO,qBACAd,MACA53E,mBACA5zB,oBAAAynB,EAAAznB,qBAEA6zB,MAAA,OACA9wB,KAAA,SAGAgpG,EAAAK,eAAAvB,iBACAkB,EAAAO,mBAAA,IAAAc,EAAA5B,EAAA3/F,GAEAkgG,EAAAI,WACAj3E,KAAA62E,EAAAO,oBACAp3E,KAAA62E,EAAAK,mBAKAL,EAAAK,eAAAt9F,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,SAEAk+F,EAAAK,eAAAt9F,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,UAGAA,KAAA0+F,gBAAA,WACA,IAAAR,KACAl+F,KAAAg+F,kBAAAE,EAEAA,EAAAhpG,KAAA,KACAgpG,EAAA3H,eAAA,IAAAtwE,EAAAI,eAGA63E,EAAAS,aAAA,IAAA14E,EAAAtC,sBACAu6E,EAAA7zE,YAAA,IAAApE,EAAArC,qBACAs6E,EAAAU,iBAAA,IAAA34E,EAAApC,iBACAq6E,EAAAW,6BAAA,IAAA54E,EAAAjC,wBAAA,SACAk6E,EAAAE,6BAAA,IAAAn4E,EAAAjC,wBAAA,SACAk6E,EAAAG,qCAAA,IAAAp4E,EAAAjC,wBAAA,kBACAk6E,EAAAI,WAAA,IAAA6iE,EACAjjE,EAAAY,WAAA,IAAAlF,EACAsE,EAAApJ,cAAA,IAAA7uE,EAAAlC,cACAm6E,EAAAK,eAAA,IAAAi7E,EAAAx7K,EAAAkgG,EAAA3H,gBACA2H,EAAAM,eAAAN,EAAAS,aAGAT,EAAAS,aACAt3E,KAAA62E,EAAA7zE,aACAhD,KAAA62E,EAAAU,kBAIAV,EAAAU,iBACAv3E,KAAA62E,EAAAW,8BACAx3E,KAAA62E,EAAAY,YACAZ,EAAAU,iBACAv3E,KAAA62E,EAAAE,8BACA/2E,KAAA62E,EAAAI,YAEAJ,EAAAU,iBACAv3E,KAAA62E,EAAAG,sCACAh3E,KAAA62E,EAAA3H,gBACAlvE,KAAA62E,EAAAK,gBAGAL,EAAAY,WAAAz3E,KAAA62E,EAAApJ,eACAztE,KAAA62E,EAAAK,gBAEAL,EAAAU,iBAAA39F,GAAA,gBAAApX,GACA,IAAAoB,EAEA,gBAAApB,EAAAqL,KAAA,CAIA,IAHAjK,EAAApB,EAAA0uB,OAAA3rB,OAGA3B,KACAmyG,GAAA,UAAAvzG,EAAA0uB,OAAAttB,GAAAiK,KAGWyoG,GAAA,UAAA9zG,EAAA0uB,OAAAttB,GAAAiK,QACXyoG,EAAA9zG,EAAA0uB,OAAAttB,IACA86B,kBAAA5zB,oBAAAynB,EAAAznB,sBAJAirG,EAAAvzG,EAAA0uB,OAAAttB,IACA86B,kBAAA5zB,oBAAAynB,EAAAznB,oBAQAirG,IAAAc,EAAAa,qBACAb,EAAAK,eAAAvB,iBACAkB,EAAAa,mBAAA,IAAAO,EAAAlC,EAAAp/F,GAEAkgG,EAAAa,mBAAA99F,GAAA,6BAAA8kB,GAIA43E,IACAA,EAAA53E,oBAKAm4E,EAAAO,mBAAAxD,eAAAl1E,EAAA9C,QAIAi7E,EAAAa,mBAAA99F,GAAA,oBACA2Y,EAAAwK,QAAA3T,KAAAmJ,EAAA,YACAskF,EAAAa,mBAAA99F,GAAA,oBACA2Y,EAAAwK,QAAA3T,KAAAmJ,EAAA,2BAEAskF,EAAAa,mBAAA99F,GAAA,+BAAA9O,GACAwrG,GACAO,EAAAO,mBAAAtD,4BAAAhpG,KAKA+rG,EAAAY,WACAz3E,KAAA62E,EAAAa,oBACA13E,KAAA62E,EAAAK,iBAGAZ,IAAAO,EAAAO,qBAEAP,EAAAK,eAAAvB,iBACAkB,EAAAO,mBAAA,IAAAc,EAAA5B,EAAA3/F,GAGAkgG,EAAAI,WACAj3E,KAAA62E,EAAAO,oBACAp3E,KAAA62E,EAAAK,oBAMAL,EAAAK,eAAAt9F,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,SAEAk+F,EAAAK,eAAAt9F,GAAA,OAAAjB,KAAAokB,QAAA3T,KAAAzQ,KAAA,UAIAA,KAAAg/F,uBAAA,SAAA7sG,GACA,IAAA+rG,EAAAl+F,KAAAg+F,kBAEAhgG,EAAA+rF,yBACA/pF,KAAA7N,uBAGAwrG,IACAA,EAAA53E,kBAAA9C,SAAAhnB,EACA0hG,EAAA53E,kBAAA7C,SAAAjnB,EACA2tF,EAAA+vF,aAAAh8E,GACA3/F,EAAA+rF,yBACA4T,EAAA53E,kBAAA5zB,uBAEA+rG,EAAAE,8BACAF,EAAAE,6BAAAnxE,iBAGAmwE,IACAc,EAAAa,qBACAb,EAAAa,mBAAAxD,aACA2C,EAAAW,6BAAA5xE,iBAEAmwE,EAAAr3E,kBAAA9C,SAAAhnB,EACAmhG,EAAAr3E,kBAAA7C,SAAAjnB,EACA2tF,EAAA+vF,aAAAv8E,GACAc,EAAApJ,cAAA94C,QACAh+C,EAAA+rF,yBACAqT,EAAAr3E,kBAAA5zB,wBAIA+rG,EAAAG,sCACAH,EAAAG,qCAAApxE,iBAIAjtB,KAAAo7F,oBAAA,SAAA34E,GACAk7E,GACA39F,KAAAg+F,kBAAAS,mBAAArD,oBAAA34E,IAIAziB,KAAA88F,cAAA,SAAAzB,GACA+B,GAAAp9F,KAAAg+F,kBAAAe,oBACA/+F,KAAAg+F,kBAAAe,mBAAAjC,cAAAzB,IAKAr7F,KAAArU,KAAA,SAAA9B,GACA,GAAAk0G,EAAA,CACA,IAAAkB,EAAA38E,EAAAz4B,GAEAo1G,GAAA,QAAAj/F,KAAAg+F,kBAAA9oG,KACA8K,KAAAi+F,mBACOgB,GAAA,OAAAj/F,KAAAg+F,kBAAA9oG,MACP8K,KAAA0+F,kBAEAX,GAAA,EAEA/9F,KAAAg+F,kBAAAQ,eAAA7yG,KAAA9B,IAIAmW,KAAAqkB,MAAA,WACA05E,GAAA,EAEA/9F,KAAAg+F,kBAAAQ,eAAAn6E,SAIArkB,KAAAk/F,cAAA,WACAl/F,KAAAg+F,kBAAAlJ,eACA90F,KAAAg+F,kBAAAlJ,cAAA94C,WAKA1lD,UAAA,IAAAwtB,EAEA9sB,EAAAC,SACAooG,aACAC,qBACAC,qBACA7E,mBACAC,mBAEAE,qEChkCA,IAAA/2E,EAAA,WACA9jB,KAAA7H,KAAA,WACA,IAAA4uB,KAOA/mB,KAAAiB,GAAA,SAAA/L,EAAA+xB,GACAF,EAAA7xB,KACA6xB,EAAA7xB,OAEA6xB,EAAA7xB,GAAA6xB,EAAA7xB,GAAAgD,OAAA+uB,IAQAjnB,KAAAknB,IAAA,SAAAhyB,EAAA+xB,GACA,IAAAnxB,EACA,QAAAixB,EAAA7xB,KAGAY,EAAAixB,EAAA7xB,GAAAqE,QAAA0tB,GACAF,EAAA7xB,GAAA6xB,EAAA7xB,GAAAqB,QACAwwB,EAAA7xB,GAAAmU,OAAAvT,EAAA,GACAA,GAAA,IAOAkK,KAAAokB,QAAA,SAAAlvB,GACA,IAAAiyB,EAAAl8B,EAAA2B,EAAAkjB,EAEA,GADAqX,EAAAJ,EAAA7xB,GAQA,OAAA6a,UAAAnjB,OAEA,IADAA,EAAAu6B,EAAAv6B,OACA3B,EAAA,EAAmBA,EAAA2B,IAAY3B,EAC/Bk8B,EAAAl8B,GAAAuL,KAAAwJ,KAAA+P,UAAA,QAEO,CAGP,IAFAD,KACA7kB,EAAA8kB,UAAAnjB,OACA3B,EAAA,EAAmBA,EAAA8kB,UAAAnjB,SAAsB3B,EACzC6kB,EAAAnkB,KAAAokB,UAAA9kB,IAGA,IADA2B,EAAAu6B,EAAAv6B,OACA3B,EAAA,EAAmBA,EAAA2B,IAAY3B,EAC/Bk8B,EAAAl8B,GAAAwN,MAAAuH,KAAA8P,KAOA9P,KAAAonB,QAAA,WACAL,QAcAjD,EAAAxtB,UAAA+wB,KAAA,SAAAC,GASA,OARAtnB,KAAAiB,GAAA,gBAAApX,GACAy9B,EAAA37B,KAAA9B,KAGAmW,KAAAiB,GAAA,gBAAAwlF,GACAn/D,EAAAjD,MAAAoiE,KAGAn/D,GAOAxD,EAAAxtB,UAAA3K,KAAA,SAAA9B,GACAmW,KAAAokB,QAAA,OAAAv6B,IAGAi6B,EAAAxtB,UAAA+tB,MAAA,SAAAoiE,GACAzmF,KAAAokB,QAAA,OAAAqiE,IAGAzvF,EAAAC,QAAA6sB,qCClHA,IAAAwC,EAAYx9B,EAAQ,QAIpB8wL,GACA,6DACA,kEACA,gEACA,sCAgBA5iL,EAAAC,QAAA,SAAA+lB,GACA,IACA9mB,EACAsF,EACAvQ,EAHA+1B,KAKA,OAAAhE,GAEAsJ,EAAAvtB,QAAAikB,EAAAjmB,MAAA,eAAAH,GAKA,GAJA3L,EAAA2L,EAAA2C,QAAA,KACArD,EAAAowB,EAAA5uB,KAAAd,EAAAuP,OAAA,EAAAlb,IAAAu+B,cACAhuB,EAAA8qB,EAAA5uB,KAAAd,EAAAuP,OAAAlb,EAAA,IAEAiL,EAAA,CACA,GAAA8qB,EAAA9qB,IAAA0jL,EAAArgL,QAAArD,IAAA,EACA,OAGA8qB,EAAA9qB,GADA,eAAAA,GACA8qB,EAAA9qB,GAAA8qB,EAAA9qB,OAAAgC,QAAAsD,IAEAwlB,EAAA9qB,GAAA8qB,EAAA9qB,GAAA,KAAAsF,OAKAwlB,GAnBiBA,sCC9BjB,IAAAsF,EAAYx9B,EAAQ,QAEpBkO,EAAAC,QACAqvB,EAAA4yI,wBAKA2gB,MAAA,SAAAlsL,EAAAyI,EAAA0jL,EAAA/hL,EAAAgiL,EAAAC,GACA,IAAAC,KACAA,EAAAtuL,KAAAgC,EAAA,IAAAgP,mBAAAvG,IAEAkwB,EAAA5Z,SAAAotK,IACAG,EAAAtuL,KAAA,eAAA1C,KAAA6wL,GAAAI,eAGA5zJ,EAAAw1I,SAAA/jK,IACAkiL,EAAAtuL,KAAA,QAAAoM,GAGAuuB,EAAAw1I,SAAAie,IACAE,EAAAtuL,KAAA,UAAAouL,IAGA,IAAAC,GACAC,EAAAtuL,KAAA,UAGAohB,SAAAktK,SAAArkL,KAAA,OAGA0jK,KAAA,SAAA3rK,GACA,IAAAgJ,EAAAoW,SAAAktK,OAAAtjL,MAAA,IAAAsO,OAAA,aAA4DtX,EAAA,cAC5D,OAAAgJ,EAAA7I,mBAAA6I,EAAA,UAGAiiC,OAAA,SAAAjrC,GACAqS,KAAA65K,MAAAlsL,EAAA,GAAA1E,KAAA8kB,MAAA,UAQA8rK,MAAA,aACAvgB,KAAA,WAA+B,aAC/B1gI,OAAA,iDC/CA,IAAAG,EAAAhjC,OAAAO,UAAAoU,eAEAyvK,EAAA,WAEA,IADA,IAAA37J,KACAvzB,EAAA,EAAmBA,EAAA,MAASA,EAC5BuzB,EAAA7yB,KAAA,MAAAV,EAAA,WAAAA,EAAAyL,SAAA,KAAA4P,eAGA,OAAAkY,EANA,GAgCA47J,EAAA,SAAAjzK,EAAAnJ,GAEA,IADA,IAAAV,EAAAU,KAAA+/J,aAAAhoK,OAAA0R,OAAA,SACAxc,EAAA,EAAmBA,EAAAkc,EAAAva,SAAmB3B,OACtC,IAAAkc,EAAAlc,KACAqS,EAAArS,GAAAkc,EAAAlc,IAIA,OAAAqS,GA+JAtG,EAAAC,SACAmjL,gBACA3zJ,OAvGA,SAAA7lB,EAAAuG,GACA,OAAApR,OAAAC,KAAAmR,GAAA/O,OAAA,SAAA+vB,EAAAjyB,GAEA,OADAiyB,EAAAjyB,GAAAiR,EAAAjR,GACAiyB,GACKvnB,IAoGLm+J,QArCA,SAAA3oK,GAIA,IAHA,IAAAiY,IAAkB/Q,KAAO81B,EAAAh9B,GAAW8/B,KAAA,MACpC25G,KAEA5kJ,EAAA,EAAmBA,EAAAojB,EAAAzhB,SAAkB3B,EAKrC,IAJA,IAAAwvB,EAAApM,EAAApjB,GACAqS,EAAAmd,EAAAnd,IAAAmd,EAAAyb,MAEAlgC,EAAAD,OAAAC,KAAAsH,GACAsJ,EAAA,EAAuBA,EAAA5Q,EAAApJ,SAAiBga,EAAA,CACxC,IAAA1Q,EAAAF,EAAA4Q,GACApL,EAAA8B,EAAApH,GACA,iBAAAsF,GAAA,OAAAA,IAAA,IAAAq0I,EAAAt2I,QAAAiC,KACA6S,EAAA1iB,MAA4B2R,MAAA44B,KAAAhgC,IAC5B25I,EAAAlkJ,KAAA6P,IAKA,OA/KA,SAAA6S,GAGA,IAFA,IAAA/Q,EAEA+Q,EAAAzhB,QAAA,CACA,IAAA6tB,EAAApM,EAAAnK,MAGA,GAFA5G,EAAAmd,EAAAnd,IAAAmd,EAAAyb,MAEAvgC,MAAAyH,QAAAE,GAAA,CAGA,IAFA,IAAA+8K,KAEAzzK,EAAA,EAA2BA,EAAAtJ,EAAA1Q,SAAgBga,OAC3C,IAAAtJ,EAAAsJ,IACAyzK,EAAA1uL,KAAA2R,EAAAsJ,IAIA6T,EAAAnd,IAAAmd,EAAAyb,MAAAmkJ,GAIA,OAAA/8K,EA2JAg9K,CAAAjsK,IAmBAxR,OAlGA,SAAAH,GACA,IACA,OAAA5O,mBAAA4O,EAAAE,QAAA,YACK,MAAAsB,GACL,OAAAxB,IA+FAD,OA3FA,SAAAC,GAGA,OAAAA,EAAA9P,OACA,OAAA8P,EAMA,IAHA,IAAAqmC,EAAA,iBAAArmC,IAAA9O,OAAA8O,GAEA6zB,EAAA,GACAtlC,EAAA,EAAmBA,EAAA83C,EAAAn2C,SAAmB3B,EAAA,CACtC,IAAAqR,EAAAymC,EAAAxmC,WAAAtR,GAGA,KAAAqR,GACA,KAAAA,GACA,KAAAA,GACA,MAAAA,GACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,IAEAi0B,GAAAwS,EAAA/+B,OAAA/Y,GAIAqR,EAAA,IACAi0B,GAAA4pJ,EAAA79K,GAIAA,EAAA,KACAi0B,GAAA4pJ,EAAA,IAAA79K,GAAA,GAAA69K,EAAA,OAAA79K,GAIAA,EAAA,OAAAA,GAAA,MACAi0B,GAAA4pJ,EAAA,IAAA79K,GAAA,IAAA69K,EAAA,IAAA79K,GAAA,MAAA69K,EAAA,OAAA79K,IAIArR,GAAA,EACAqR,EAAA,aAAAA,IAAA,QAAAymC,EAAAxmC,WAAAtR,IACAslC,GAAA4pJ,EAAA,IAAA79K,GAAA,IACA69K,EAAA,IAAA79K,GAAA,OACA69K,EAAA,IAAA79K,GAAA,MACA69K,EAAA,OAAA79K,IAGA,OAAAi0B,GA2CA7R,SAdA,SAAAphB,GACA,cAAAA,QAAA,IAAAA,MAIAA,EAAAiW,aAAAjW,EAAAiW,YAAAmL,UAAAphB,EAAAiW,YAAAmL,SAAAphB,KAUAuvH,SAnBA,SAAAvvH,GACA,0BAAAvH,OAAAO,UAAAI,SAAAF,KAAA8G,IAmBAwhK,MApKA,SAAAA,EAAAl+J,EAAAuG,EAAAnJ,GACA,IAAAmJ,EACA,OAAAvG,EAGA,oBAAAuG,EAAA,CACA,GAAAxR,MAAAyH,QAAAwD,GACAA,EAAAjV,KAAAwb,OACS,qBAAAvG,EAKT,OAAAA,EAAAuG,IAJAnJ,EAAA+/J,cAAA//J,EAAA4/J,kBAAA7kI,EAAAviC,KAAAT,OAAAO,UAAA6Q,MACAvG,EAAAuG,IAAA,GAMA,OAAAvG,EAGA,oBAAAA,EACA,OAAAA,GAAA1I,OAAAiP,GAGA,IAAAozK,EAAA35K,EAKA,OAJAjL,MAAAyH,QAAAwD,KAAAjL,MAAAyH,QAAA+J,KACAozK,EAAAH,EAAAx5K,EAAA5C,IAGArI,MAAAyH,QAAAwD,IAAAjL,MAAAyH,QAAA+J,IACAA,EAAApO,QAAA,SAAA0hB,EAAAxvB,GACA8tC,EAAAviC,KAAAoK,EAAA3V,GACA2V,EAAA3V,IAAA,iBAAA2V,EAAA3V,GACA2V,EAAA3V,GAAA6zK,EAAAl+J,EAAA3V,GAAAwvB,EAAAzc,GAEA4C,EAAAjV,KAAA8uB,GAGA7Z,EAAA3V,GAAAwvB,IAGA7Z,GAGA7K,OAAAC,KAAAmR,GAAA/O,OAAA,SAAA+vB,EAAAjyB,GACA,IAAAE,EAAA+Q,EAAAjR,GAOA,OALA6iC,EAAAviC,KAAA2xB,EAAAjyB,GACAiyB,EAAAjyB,GAAA4oK,EAAA32I,EAAAjyB,GAAAE,EAAA4H,GAEAmqB,EAAAjyB,GAAAE,EAEA+xB,GACKoyJ,wCCjGLvjL,EAAAC,QAAA,SAAAb,GACA,SAAAA,MAAAm0K,gDCDAvzK,EAAAC,SACAkrB,iBAAA,GACAC,iBAAA,GACA6C,qBAAA,uCCiBAjuB,EAAAC,QAAA,SAAAukB,GACA,gBAAAjX,GACA,OAAAiX,EAAA/iB,MAAA,KAAA8L,2BCxBAvN,EAAAC,QAIA,WAGA,IAFA,IAAA2J,KAEA3V,EAAA,EAAmBA,EAAA8kB,UAAAnjB,OAAsB3B,IAAA,CACzC,IAAAkc,EAAA4I,UAAA9kB,GAEA,QAAAiL,KAAAiR,EACAuD,EAAAlU,KAAA2Q,EAAAjR,KACA0K,EAAA1K,GAAAiR,EAAAjR,IAKA,OAAA0K,GAfA,IAAA8J,EAAA3U,OAAAO,UAAAoU,kDCOA1T,EAAAC,QAAA,SAAAkhF,EAAAC,GACA,OAAAA,EACAD,EAAAv7E,QAAA,eAAAw7E,EAAAx7E,QAAA,WACAu7E,yBCZA,IAAAzgF,EAAW5O,EAAQ,QACnBiQ,EAAcjQ,EAAQ,QAKtBkO,EAAAC,QAAA,SAAA+lB,GACA,IAAAA,EACA,SAEA,IAAA9xB,KAmBA,OAjBA6N,EACArB,EAAAslB,GAAAjmB,MAAA,MACA,SAAA68F,GACA,IAbAnzC,EAaA3qD,EAAA89F,EAAAr6F,QAAA,KACArD,EAAAwB,EAAAk8F,EAAAr9F,MAAA,EAAAT,IAAA0zB,cACApzB,EAAAsB,EAAAk8F,EAAAr9F,MAAAT,EAAA,SAEA,IAAA5K,EAAAgL,GACAhL,EAAAgL,GAAAE,GAlBAqqD,EAmBSv1D,EAAAgL,GAlBT,mBAAAH,OAAAO,UAAAI,SAAAF,KAAAiqD,GAmBAv1D,EAAAgL,GAAAvK,KAAAyK,GAEAlL,EAAAgL,IAAAhL,EAAAgL,GAAAE,MAKAlL,uBC7BA,SAAAsvL,EAAAjrJ,GACA,OAAAA,EAAA3yB,QAAA,gBAIA5F,EAAAC,QAAA,SAAAwjL,GAIA,IAHA,IAAAlrJ,EAAA,GACAtkC,EAAA,EAEQA,EAAA8kB,UAAAnjB,OAAsB3B,IAC9BskC,GAAAirJ,EAAAC,EAAAxvL,KAAA8kB,UAAA9kB,EAAA,QAEA,OAAAskC,wCCVA,IAAAtZ,EAAAlgB,OAAAO,UAAAI,SAEAM,EAAAC,QAAA,SAAAb,GACA,IAAAsG,EAAAuZ,EAAAzf,KAAAJ,GACAyjK,EAAA,uBAAAn9J,EASA,OARAm9J,IACAA,EAAA,mBAAAn9J,GACA,OAAAtG,GACA,iBAAAA,GACA,iBAAAA,EAAAxJ,QACAwJ,EAAAxJ,QAAA,GACA,sBAAAqpB,EAAAzf,KAAAJ,EAAAskL,SAEA7gB,sCCHA7iK,EAAAC,QAAA,SAAA2X,EAAAjkB,EAAAwzB,EAAAU,EAAAlD,GA4BA,OA3BA/M,EAAAjkB,SACAwzB,IACAvP,EAAAuP,QAGAvP,EAAAiQ,UACAjQ,EAAA+M,WACA/M,EAAA+rK,cAAA,EAEA/rK,EAAAqkE,OAAA,WACA,OAEA75E,QAAA4G,KAAA5G,QACAzL,KAAAqS,KAAArS,KAEAwgD,YAAAnuC,KAAAmuC,YACAxlB,OAAA3oB,KAAA2oB,OAEAiyJ,SAAA56K,KAAA46K,SACAC,WAAA76K,KAAA66K,WACAC,aAAA96K,KAAA86K,aACA72K,MAAAjE,KAAAiE,MAEAtZ,OAAAqV,KAAArV,OACAwzB,KAAAne,KAAAme,OAGAvP,sCCtCA,IAAA0X,EAAYx9B,EAAQ,QACpB2nB,EAAW3nB,EAAQ,QACnBo9K,EAAYp9K,EAAQ,QACpBm9K,EAAkBn9K,EAAQ,QAS1B,SAAAiyL,EAAAC,GACA,IAAAlkJ,EAAA,IAAAovI,EAAA8U,GACApqK,EAAAH,EAAAy1J,EAAA5vK,UAAAuoB,QAAAiY,GAQA,OALAxQ,EAAA9sB,OAAAoX,EAAAs1J,EAAA5vK,UAAAwgC,GAGAxQ,EAAA9sB,OAAAoX,EAAAkmB,GAEAlmB,EAIA,IAAAqqK,EAAAF,EAtBejyL,EAAQ,SAyBvBmyL,EAAA/U,QAGA+U,EAAAxzK,OAAA,SAAA0+J,GACA,OAAA4U,EAAA9U,EAAAgV,EAAAne,SAAAqJ,KAIA8U,EAAArR,OAAe9gL,EAAQ,QACvBmyL,EAAApR,YAAoB/gL,EAAQ,QAC5BmyL,EAAAC,SAAiBpyL,EAAQ,QAGzBmyL,EAAAnmJ,IAAA,SAAAqmJ,GACA,OAAA9sG,QAAAv5C,IAAAqmJ,IAEAF,EAAAG,OAAetyL,EAAQ,QAEvBkO,EAAAC,QAAAgkL,EAGAjkL,EAAAC,QAAA6C,QAAAmhL,qCCvBA,IAEAI,EAAAtlL,OAAAioE,yBACA,WAAiB,OAAAjoE,OAAAioE,yBAAAjuD,UAAA,UAAA7M,IAAjB,GACA,WAAgB,UAAAyD,WAEhBqP,EAAA,mBAAA5G,QAAA,iBAAAA,OAAAgD,SAEAkpK,EAAAvlL,OAAA8kF,gBAAA,SAAAr9E,GAAsD,OAAAA,EAAA8V,WAQtDioK,OAhBAt/K,EAkBAu/K,EAAA,oBAAA5vL,gBAlBAqQ,EAkBAq/K,EAAA1vL,YAEA6vL,GACAC,YAAA/lL,MACAgmL,kBAAA,oBAAArmL,iBAtBA2G,EAsBA3G,YACAsmL,2BAAA,oBAAAtmL,iBAvBA2G,EAuBA3G,YAAAgB,UACAulL,6BAAA7lK,EAAAslK,KAAAlsK,OAAAgD,kBAxBAnW,EAyBA6/K,qBAAAnmL,MAAAW,UACAylL,yBAAApmL,MAAAW,UAAA1E,QACAoqL,yBAAArmL,MAAAW,UAAAyC,QACAkjL,sBAAAtmL,MAAAW,UAAAN,KACAkmL,wBAAAvmL,MAAAW,UAAA4jE,OACAiiH,0CA9BAlgL,EA+BAmgL,yBA/BAngL,EAgCAogL,kCAhCApgL,EAiCAqgL,0BAjCArgL,EAkCAsgL,kCAlCAtgL,EAmCAugL,mCAnCAvgL,EAoCAwgL,6BAAAlB,GAAAvlK,GAAA5G,OAAAstK,cAAAnB,EAAAnsK,OAAAstK,sBApCAzgL,EAqCA0gL,cAAA,oBAAAC,aArCA3gL,EAqCA2gL,QACAC,cAAAn9K,QACAo9K,uBAAAp9K,QAAApJ,UACAymL,eAAA,oBAAAhzL,cAxCAkS,EAwCAlS,SACAizL,wBAAA,oBAAAjzL,cAzCAkS,EAyCAlS,SAAAuM,UACA2mL,WAAAh0L,KACAi0L,oBAAAj0L,KAAAqN,UACA6mL,gBAAAvpK,UACAwpK,yBAAAtvL,mBACAuvL,gBAAAh3K,UACAi3K,yBAAA3gL,mBACA4gL,YAAA7tK,MACA8tK,qBAAA9tK,MAAApZ,UACAmnL,WAAAje,KACAke,gBAAAC,UACAC,yBAAAD,UAAArnL,UACAunL,mBAAA,oBAAAC,kBArDA7hL,EAqDA6hL,aACAC,4BAAA,oBAAAD,kBAtDA7hL,EAsDA6hL,aAAAxnL,UACA0nL,mBAAA,oBAAAC,kBAvDAhiL,EAuDAgiL,aACAC,4BAAA,oBAAAD,kBAxDAhiL,EAwDAgiL,aAAA3nL,UACA6nL,eAAAtkK,SACAukK,wBAAAvkK,SAAAvjB,UACA+nL,qBA3DApiL,EA4DAqiL,6BA5DAriL,EA6DAsiL,8BA7DAtiL,EA8DAuiL,gBAAA,oBAAAC,eA9DAxiL,EA8DAwiL,UACAC,yBAAA,oBAAAD,eA/DAxiL,EA+DAwiL,UAAAnoL,UACAqoL,iBAAA,oBAAAC,gBAhEA3iL,EAgEA2iL,WACAC,0BAAA,oBAAAD,gBAjEA3iL,EAiEAwiL,UAAAnoL,UACAwoL,iBAAA,oBAAA7sJ,gBAlEAh2B,EAkEAg2B,WACA8sJ,0BAAA,oBAAA9sJ,gBAnEAh2B,EAmEAg2B,WAAA37B,UACA0oL,eAAAnmL,SACAomL,YAAAzxJ,MACA0xJ,wBAAAlpK,EAAAslK,OAAAlsK,OAAAgD,mBAtEAnW,EAuEAkjL,WAAAtoL,KACAuoL,gBAAAvoL,KAAAlN,MACA01L,UAAA,oBAAAr+I,SAzEA/kC,EAyEA+kC,IACAs+I,2BAAA,oBAAAt+I,KAAAhrB,EAAAslK,GAAA,IAAAt6I,KAAA5xB,OAAAgD,kBA1EAnW,EA2EAsjL,mBAAA,oBAAAv+I,SA3EA/kC,EA2EA+kC,IAAA1qC,UACAkpL,WAAAptL,KACAqtL,aAAA/mH,OACAgnH,sBAAAhnH,OAAApiE,UACAqpL,aAAA5pL,OACA6pL,sBAAA7pL,OAAAO,UACAupL,wBAAA9pL,OAAAO,UAAAI,SACAopL,uBAAA/pL,OAAAO,UAAAypL,QACAC,iBAAAx3J,WACAy3J,eAAAv3J,SACAw3J,cAAA,oBAAA7xG,aArFApyE,EAqFAoyE,QACA8xG,uBAAA,oBAAA9xG,aAtFApyE,EAsFAoyE,QAAA/3E,UACA8pL,wBAAA,oBAAA/xG,aAvFApyE,EAuFAoyE,QAAA/3E,UAAA6V,KACAk0K,kBAAA,oBAAAhyG,aAxFApyE,EAwFAoyE,QAAAv5C,IACAwrJ,qBAAA,oBAAAjyG,aAzFApyE,EAyFAoyE,QAAA9+D,OACAgxK,sBAAA,oBAAAlyG,aA1FApyE,EA0FAoyE,QAAAnuE,QACAsgL,YAAA,oBAAA5sJ,WA3FA33B,EA2FA23B,MACA6sJ,iBAAAC,WACAC,0BAAAD,WAAApqL,UACAsqL,qBAAA95J,eACA+5J,8BAAA/5J,eAAAxwB,UACAwqL,cAAA,oBAAArtJ,aAhGAx3B,EAgGAw3B,QACAstJ,aAAA97K,OACA+7K,sBAAA/7K,OAAA3O,UACA2qL,UAAA,oBAAA7vD,SAnGAn1H,EAmGAm1H,IACA8vD,2BAAA,oBAAA9vD,KAAAp7G,EAAAslK,GAAA,IAAAlqD,KAAAhiH,OAAAgD,kBApGAnW,EAqGAklL,mBAAA,oBAAA/vD,SArGAn1H,EAqGAm1H,IAAA96H,UACA8qL,wBAAA,oBAAAC,uBAtGAplL,EAsGAolL,kBACAC,iCAAA,oBAAAD,uBAvGAplL,EAuGAolL,kBAAA/qL,UACAirL,aAAA3zL,OACA4zL,8BAAAxrK,EAAAslK,EAAA,GAAAlsK,OAAAgD,kBAzGAnW,EA0GAwlL,sBAAA7zL,OAAA0I,UACAorL,aAAA1rK,EAAA5G,YA3GAnT,EA4GA0lL,sBAAA3rK,EAAA5G,OAAA9Y,eA5GA2F,EA6GA2lL,kBAAAlhB,YACAmhB,2BAAAnhB,YAAApqK,UACAwrL,qBAAAzG,EACA0G,iBAAAvG,EACAwG,0BAAAxG,IAAAllL,eAjHA2F,EAkHAgmL,gBAAAt7K,UACAu7K,yBAAAv7K,UAAArQ,UACA6rL,iBAAA,oBAAAv2L,gBApHAqQ,EAoHArQ,WACAw2L,0BAAA,oBAAAx2L,gBArHAqQ,EAqHArQ,WAAA0K,UACA+rL,wBAAA,oBAAAC,uBAtHArmL,EAsHAqmL,kBACAC,iCAAA,oBAAAD,uBAvHArmL,EAuHAqmL,kBAAAhsL,UACAksL,kBAAA,oBAAAvtL,iBAxHAgH,EAwHAhH,YACAwtL,2BAAA,oBAAAxtL,iBAzHAgH,EAyHAhH,YAAAqB,UACAosL,kBAAA,oBAAA/yL,iBA1HAsM,EA0HAtM,YACAgzL,2BAAA,oBAAAhzL,iBA3HAsM,EA2HAtM,YAAA2G,UACAssL,eAAAC,SACAC,wBAAAD,SAAAvsL,UACAysL,cAAA,oBAAAC,aA9HA/mL,EA8HA+mL,QACAC,uBAAA,oBAAAD,aA/HA/mL,EA+HA+mL,QAAA1sL,UACA4sL,cAAA,oBAAAC,aAhIAlnL,EAgIAknL,QACAC,uBAAA,oBAAAD,aAjIAlnL,EAiIAknL,QAAA7sL,WAGAU,EAAAC,QAAA,SAAAtJ,EAAA01L,GACA,GAAAtzK,UAAAnjB,OAAA,qBAAAy2L,EACA,UAAA18K,UAAA,6CAGA,IAAAzQ,EAAA,KAAAvI,EACA,KAAAuI,KAAAulL,GACA,UAAA/a,YAAA,aAAA/yK,EAAA,oBAIA,YAAA8tL,EAAAvlL,KAAAmtL,EACA,UAAA18K,UAAA,aAAAhZ,EAAA,wDAEA,OAAA8tL,EAAAvlL,uCC7KA,IAAAotL,EAAAzpK,SAAAvjB,UAAAI,SAEA6sL,EAAA,cACAC,EAAA,SAAAptL,GACA,IACA,IAAAqtL,EAAAH,EAAA9sL,KAAAJ,GACA,OAAAmtL,EAAAvhL,KAAAyhL,GACE,MAAAvlL,GACF,WAaA+X,EAAAlgB,OAAAO,UAAAI,SAGAgtL,EAAA,mBAAAt0K,QAAA,iBAAAA,OAAAC,YAEArY,EAAAC,QAAA,SAAAb,GACA,IAAAA,EAAc,SACd,sBAAAA,GAAA,iBAAAA,EAAgE,SAChE,sBAAAA,MAAAE,UAAuD,SACvD,GAAAotL,EAAsB,OAlBtB,SAAAttL,GACA,IACA,OAAAotL,EAAAptL,KACAktL,EAAA9sL,KAAAJ,IACA,GACE,MAAA8H,GACF,UAYsBylL,CAAAvtL,GACtB,GAAAotL,EAAAptL,GAA2B,SAC3B,IAAAwtL,EAAA3tK,EAAAzf,KAAAJ,GACA,MAXA,sBAWAwtL,GAVA,+BAUAA,uCCnCA,SAAAlqK,GAAA5wB,EAAAqmC,EAAApZ,EAAA,sBAAApsB,IAAAb,EAAAqmC,EAAApZ,EAAA,sBAAA8tK,IAAA,IAAAC,EAAAh7L,EAAA,QAAAi7L,EAAAj7L,EAAA2qB,EAAAqwK,GAKAl3K,EAAA,SAAAtP,GACA,QAAAA,GAAA,iBAAAA,GAGAwhK,EAAA,SAAAA,IACA,QAAAlqI,EAAA7kB,UAAAnjB,OAAAo3L,EAAA,IAAAruL,MAAAi/B,GAAAppB,EAAA,EAAwEA,EAAAopB,EAAappB,IACrFw4K,EAAAx4K,GAAAuE,UAAAvE,GAGA,OAAAw4K,EAAA5rL,OAAA,SAAAlN,EAAAic,GAUA,OATApR,OAAAC,KAAAmR,GAAApO,QAAA,SAAA7C,GACAP,MAAAyH,QAAAlS,EAAAgL,KAAAP,MAAAyH,QAAA+J,EAAAjR,IACAhL,EAAAgL,GAAAhL,EAAAgL,GAAAgC,OAAAiP,EAAAjR,IACO0W,EAAA1hB,EAAAgL,KAAA0W,EAAAzF,EAAAjR,IACPhL,EAAAgL,GAAA4oK,EAAA5zK,EAAAgL,GAAAiR,EAAAjR,IAEAhL,EAAAgL,GAAAiR,EAAAjR,KAGAhL,QAkBA0kB,EAAA,SAAAq0K,GACA,OAAAA,EAAA7rL,OAAA,SAAAoF,EAAA+O,GACA,OAAA/O,EAAAtF,OAAAqU,SAGAb,EAAA,SAAAwJ,GACA,IAAAA,EAAAtoB,OACA,SAKA,IAFA,IAAA1B,KAEAD,EAAA,EAAiBA,EAAAiqB,EAAAtoB,OAAiB3B,IAClCC,EAAAS,KAAAupB,EAAAjqB,IAGA,OAAAC,GAYAg5L,EAAA,SAAAh4J,GACA,IA5CAkH,EAsEA,OAtEAA,EA4CAlH,EAAA9zB,OAAA,SAAA+vB,EAAA6D,GAIA,IAGAm4J,EAHAx2L,EAAAq+B,EAAAnE,WAAAxvB,IAAA2zB,EAAAnE,WAAA8kJ,MAAA,IAEAxkJ,EAAAx6B,IAIAq+B,EAAA7nB,SAAA,GAAA8oB,eAAA,GAEAk3J,EAAAh8J,EAAAx6B,GAAAwW,UAAAxY,KAAA8M,MAAA0rL,EAAAn4J,EAAA7nB,UAIA6nB,EAAAnE,WAAA2hG,oBACArhG,EAAAx6B,GAAAk6B,WAAA2hG,kBAAAx9F,EAAAnE,WAAA2hG,oBAIArhG,EAAAx6B,GAAAq+B,EAGA,OAAA7D,OAnEApyB,OAAAC,KAAAo9B,GAAAv9B,IAAA,SAAAgkC,GACA,OAAAzG,EAAAyG,MAoEAhkC,IAAA,SAAAm2B,GArCA,IAAA5iB,EAAAlT,EAuCA,OADA81B,EAAAf,qBAtCA7hB,EAsCA4iB,EAAA7nB,SAtCAjO,EAsCA,gBArCAkT,EAAAhR,OAAA,SAAAqB,EAAAyE,EAAAjT,GAKA,OAJAiT,EAAAhI,IACAuD,EAAA9N,KAAAV,GAGAwO,QAiCAuyB,KA0GAo4J,EAAA,SAAAC,GACA,IAAAC,EAEAz8J,EAAAw8J,EAAAx8J,WACA1jB,EAAAkgL,EAAAlgL,SACA6nB,GACAnE,YAAAy8J,GACAh4J,KAAAzE,EAAAxvB,GACAqyB,MAAA,QACAG,UAAA,OACA3B,YACA7+B,MAAAw9B,EAAAx9B,MACAC,OAAAu9B,EAAAv9B,QAEAk5G,OAAA37E,EAAA86E,OACAv5E,UAAAvB,EAAAy2D,WACKgmG,EAAA,gBAAAA,GACL/oK,IAAA,GACAgQ,QAAA,YAAA1D,EAAA3yB,MAAA,UACA+4B,SAAApG,EAAA08J,YACApqG,YAAA,GACA/sD,eAAAvF,EAAAn5B,SACAyV,WACAsnB,cAAAtnB,EAAAvX,OAAAuX,EAAA,GAAAwkB,OAAA,GAOA,OAJAd,EAAA2hG,oBACAx9F,EAAAw9F,kBAAA3hG,EAAA2hG,mBAGAx9F,GA2DA,oBAAAroB,mBAAA,IAAA+V,GAAA,oBAAAE,WAMA,IAJA5iB,EAIAwtL,GAAA,SAAAxtL,EAAAC,GAIA,IAGA07K,EACAC,EACAC,EACAC,EAEAC,EALAJ,EAAA,yFACAC,EAAA,mBACAC,EAAA,oBACAC,EAAA,qCAEAC,GAOAz6F,iBAAA,SAAAH,EAAAC,EAAA5xE,GAKA,GAJAA,QAEA2xE,IAAAzgF,SACA0gF,IAAA1gF,QACA,CAIA,IAAA8O,EAAAi+H,gBACA,OAAAtsD,EAEA,IAAA66F,EAAAD,EAAAE,SAAA96F,GACA,IAAA66F,EACA,UAAAtjK,MAAA,mCAGA,OADAsjK,EAAAj7K,KAAAg7K,EAAArqK,cAAAsqK,EAAAj7K,MACAg7K,EAAAG,kBAAAF,GAEA,IAAAG,EAAAJ,EAAAE,SAAA76F,GACA,IAAA+6F,EACA,UAAAzjK,MAAA,uCAEA,GAAAyjK,EAAAC,OAGA,OAAA5sK,EAAAi+H,iBAGA0uC,EAAAp7K,KAAAg7K,EAAArqK,cAAAyqK,EAAAp7K,MACAg7K,EAAAG,kBAAAC,IAHA/6F,EAKA,IAAAi7F,EAAAN,EAAAE,SAAA96F,GACA,IAAAk7F,EACA,UAAA3jK,MAAA,mCAEA,IAAA2jK,EAAAC,QAAAD,EAAAt7K,MAAA,MAAAs7K,EAAAt7K,KAAA,IAGA,IAAA69C,EAAAg9H,EAAAvtK,KAAAguK,EAAAt7K,MACAs7K,EAAAC,OAAA19H,EAAA,GACAy9H,EAAAt7K,KAAA69C,EAAA,GAEAy9H,EAAAC,SAAAD,EAAAt7K,OACAs7K,EAAAt7K,KAAA,KAEA,IAAAw7K,GAGAH,OAAAC,EAAAD,OACAE,OAAAH,EAAAG,OACAv7K,KAAA,KACAiE,OAAAm3K,EAAAn3K,OACAe,MAAAo2K,EAAAp2K,MACAzE,SAAA66K,EAAA76K,UAEA,IAAA66K,EAAAG,SAIAC,EAAAD,OAAAD,EAAAC,OAGA,MAAAH,EAAAp7K,KAAA,IACA,GAAAo7K,EAAAp7K,KAgBW,CAKX,IAAAy7K,EAAAH,EAAAt7K,KACA07K,EAAAD,EAAA7rJ,UAAA,EAAA6rJ,EAAA39B,YAAA,QAAAs9B,EAAAp7K,KACAw7K,EAAAx7K,KAAAg7K,EAAArqK,cAAA+qK,QApBAF,EAAAx7K,KAAAs7K,EAAAt7K,KAIAo7K,EAAAn3K,SACAu3K,EAAAv3K,OAAAq3K,EAAAr3K,OAIAm3K,EAAAp2K,QACAw2K,EAAAx2K,MAAAs2K,EAAAt2K,QAiBA,OAHA,OAAAw2K,EAAAx7K,OACAw7K,EAAAx7K,KAAAyO,EAAAi+H,gBAAAsuC,EAAArqK,cAAAyqK,EAAAp7K,MAAAo7K,EAAAp7K,MAEAg7K,EAAAG,kBAAAK,IAEAN,SAAA,SAAA9kK,GACA,IAAAjR,EAAAy1K,EAAAttK,KAAA8I,GACA,OAAAjR,GAIAk2K,OAAAl2K,EAAA,OACAo2K,OAAAp2K,EAAA,OACAnF,KAAAmF,EAAA,OACAlB,OAAAkB,EAAA,OACAH,MAAAG,EAAA,OACA5E,SAAA4E,EAAA,QARA,MAWAwL,cAAA,SAAA3Q,GAgBA,IATAA,IAAAhB,MAAA,IAAA2Z,UAAA9a,KAAA,IAAAgH,QAAAi2K,EAAA,IASA96K,EAAAnL,UAAAmL,IAAA6E,QAAAk2K,EAAA,KAAAlmL,SACA,OAAAmL,EAAAhB,MAAA,IAAA2Z,UAAA9a,KAAA,KAEAs9K,kBAAA,SAAAh2K,GACA,OAAAA,EAAAk2K,OAAAl2K,EAAAo2K,OAAAp2K,EAAAnF,KAAAmF,EAAAlB,OAAAkB,EAAAH,MAAAG,EAAA5E,WAKAtB,EAAAC,QAAA87K,EA7JgCzkK,CAAhCtX,GAAkBC,YAAcD,EAAAC,SAAAD,EAAAC,SAkKhCwtL,EAAA,SAAAC,EAAAC,GAEA,kBAAA3iL,KAAA2iL,GACAA,GAIA,QAAA3iL,KAAA0iL,KACAA,EAAAF,EAAAlsG,iBAA0CyrG,EAAAtqL,EAAQmE,SAAAuC,KAAAukL,IAGlDF,EAAAlsG,iBAAAosG,EAAAC,KA4BAC,EAAA,SAAAh7J,GACA,IAAAi7J,EAAAj7J,EAAA86J,QACAA,OAAA,IAAAG,EAAA,GAAAA,EACAC,EAAAl7J,EAAAziB,OACAA,OAAA,IAAA29K,EAAA,GAAAA,EACAC,EAAAn7J,EAAA21D,MACAA,OAAA,IAAAwlG,EAAA,GAAAA,EACA5sL,GACAojB,IAAApU,EACAgzE,YAAAsqG,EAAAC,GAAA,GAAAv9K,IAGA,GAAAo4E,EAAA,CACA,IAAAx0C,EAAAw0C,EAAAxoF,MAAA,KACAiuL,EAAAt8J,SAAAqiB,EAAA,OACAk6I,EAAAv8J,SAAAqiB,EAAA,OACA5yC,EAAA8wB,WACAr8B,OAAAq4L,EAAAD,EACAh6L,OAAAg6L,GAIA,OAAA7sL,GAkBA+sL,EAAA,SAAAr9J,EAAAshC,EAAAz6D,GACA,IAAAy2L,EAAAt9J,EAAAs9J,IACAj6E,EAAArjF,EAAAqjF,aACAk6E,EAAAv9J,EAAAu9J,sBACAC,EAAAx9J,EAAAp5B,UACAA,OAAA,IAAA42L,EAAA,EAAAA,EACAC,EAAAz9J,EAAA0F,MACAA,OAAA,IAAA+3J,EAAA,EAAAA,EACAC,EAAA19J,EAAAoiF,oBAKAu7E,GAHAL,EAAAj6E,GAAA,UADA,IAAAq6E,EAAA,EAAAA,IAEAH,EAAA73J,GAGA,OAAAn7B,KAAAg3F,MAAAo8F,EAAA/2L,EAAA06D,GAAAz6D,IAiBA+2L,EAAA,SAAA59J,EAAA69J,GAgBA,IAfA,IAAAC,EAAA99J,EAAA3yB,KACAA,OAAA,IAAAywL,EAAA,SAAAA,EACAC,EAAA/9J,EAAAoiF,oBACAA,OAAA,IAAA27E,EAAA,EAAAA,EACAC,EAAAh+J,EAAAuE,MACAA,OAAA,IAAAy5J,EAAA,GAAAA,EACAC,EAAAj+J,EAAAi+J,eACAC,EAAAl+J,EAAAp5B,UACAA,OAAA,IAAAs3L,EAAA,EAAAA,EACAC,EAAAn+J,EAAAo+J,YACAA,OAAA,IAAAD,EAAA,EAAAA,EACA/3J,EAAApG,EAAA08J,YACApgL,KACAglD,GAAA,EAEA+8H,EAAA,EAAsBA,EAAAR,EAAA94L,OAAiCs5L,IAAA,CACvD,IAAAvU,EAAA+T,EAAAQ,GACAx3L,EAAAijL,EAAAxiJ,EACArpB,EAAA6rK,EAAA3tG,GAAA,EACAmiH,EAAAxU,EAAArzI,GAAA,EAEA6qB,EAAA,IAEAA,EAAAg9H,GAGAA,KAAAh9H,IAqBAA,EAAAg9H,GAGA,IAAA3mK,OAAA,EAEA,GAAA1Z,EAAA,GACA,IAAAsgL,EAAAF,EAAA,EAKA1mK,EAHA4mK,IAAAV,EAAA94L,OAEA,YAAAsI,GAAA+0G,EAAA,GAAA79E,EAAA7yB,QAAA,cACA2rL,EAAAr9J,EAAAshC,EAAAz6D,IAGAo3L,EAAAr3L,EAAA06D,GAAAz6D,GAGAg3L,EAAAU,GAAA9nJ,EAAA6qB,GAAAz6D,OAGA8wB,EAAA1Z,EAAA,EAMA,IAHA,IAAA3Q,EAAA8wL,EAAA9hL,EAAAvX,OAAA4yB,EACAmJ,EAAAs9J,EAAA9hL,EAAAvX,OAEA+7B,EAAAxzB,GACAgP,EAAAxY,MACAg9B,SACAj6B,WAAAD,EACA06D,OACAl7B,aAEAk7B,GAAAz6D,EACAi6B,IAIA,OAAAxkB,GAQAkiL,GASA50B,OAAA,SAAA5pI,GACA,IAAAn5B,EAAAm5B,EAAAn5B,SACA22L,EAAAx9J,EAAAp5B,UACAA,OAAA,IAAA42L,EAAA,EAAAA,EACAS,EAAAj+J,EAAAi+J,eACA,OACAv4J,MAAA,EACAp4B,IAAA/C,KAAAg3F,KAAA08F,GAAAp3L,EAAAD,MAYAslJ,QAAA,SAAAlsH,GACA,IAAAs9J,EAAAt9J,EAAAs9J,IACAj6E,EAAArjF,EAAAqjF,aACAk6E,EAAAv9J,EAAAu9J,sBACAW,EAAAl+J,EAAAp5B,UACAA,OAAA,IAAAs3L,EAAA,EAAAA,EACAr3L,EAAAm5B,EAAAn5B,SACA42L,EAAAz9J,EAAA0F,MACAA,OAAA,IAAA+3J,EAAA,EAAAA,EACAC,EAAA19J,EAAAoiF,oBACAA,OAAA,IAAAs7E,EAAA,EAAAA,EACAe,EAAAz+J,EAAA0+J,qBACAA,OAAA,IAAAD,EAAA3tL,IAAA2tL,EACAv4K,GAAAo3K,EAAAj6E,GAAA,IACAs7E,EAAApB,EAAA73J,EAEAi4J,EADAz3K,EAAAk8F,EACAu8E,EACAC,EAAAr0L,KAAAg3F,KAAAo8F,EAAA/2L,EAAAC,GACAg4L,EAAAt0L,KAAA+mB,OAAApL,EAAAy4K,EAAAD,GAAA93L,EAAAC,GACAi4L,EAAAv0L,KAAA+mB,OAAApL,EAAAy4K,GAAA/3L,EAAAC,GACA,OACA6+B,MAAAn7B,KAAAwf,IAAA,EAAA80K,GACAvxL,IAAA/C,KAAAwG,IAAA6tL,EAAAE,MAuDAC,EAAA,SAAA/+J,GACA,IAAA89J,EAAA99J,EAAA3yB,KACAA,OAAA,IAAAywL,EAAA,SAAAA,EACAj3L,EAAAm5B,EAAAn5B,SACAm4L,EAAAh/J,EAAAp5B,UACAA,OAAA,IAAAo4L,EAAA,EAAAA,EACAf,EAAAj+J,EAAAi+J,eAEAgB,EAAAT,EAAAnxL,GAAA2yB,GAIA1jB,EA3uBA,SAAAopB,EAAAp4B,GAGA,IAFA,IAAAjK,KAEAD,EAAAsiC,EAAqBtiC,EAAAkK,EAASlK,IAC9BC,EAAAS,KAAAV,GAGA,OAAAC,EAouBAq0F,CAHAunG,EAAAv5J,MACAu5J,EAAA3xL,KAEAU,IAvCA,SAAAgyB,GACA,gBAAAc,EAAA7yB,GACA,IAAApH,EAAAm5B,EAAAn5B,SACAq4L,EAAAl/J,EAAAp5B,UACAA,OAAA,IAAAs4L,EAAA,EAAAA,EACAxC,EAAA18J,EAAA08J,YACAyB,EAAAn+J,EAAAo+J,YAEA,OACAt9J,aAFA,IAAAq9J,EAAA,EAAAA,GAEAr9J,EACAj6B,WAAAD,EACAw/B,SAAAs2J,EACAp7H,KAAArzD,EAAApH,IA2BAs4L,CAAAn/J,IAEA,cAAA3yB,EAAA,CACA,IAAAY,EAAAqO,EAAAvX,OAAA,EAEAuX,EAAArO,GAAApH,SAAAo3L,EAAAp3L,EAAAD,EAAAqH,EAGA,OAAAqO,GAGA8iL,EAAA,kCAwFAC,EAAA,SAAA/4K,EAAA+rD,GACA,OAAA/rD,EAAAvR,QAAAqqL,EAnDA,SAAA/sH,GACA,gBAAAvjE,EAAAwwL,EAAA1yF,EAAApqG,GACA,UAAAsM,EAEA,UAGA,YAAAujE,EAAAitH,GACA,OAAAxwL,EAGA,IAAAP,EAAA,GAAA8jE,EAAAitH,GAEA,2BAAAA,EAEA/wL,GAMA/L,EAHAoqG,EAGA/rE,SAAAr+B,EAAA,IAFA,EAKA+L,EAAAxJ,QAAAvC,EACA+L,EAGA,OAAAT,MAAAtL,EAAA+L,EAAAxJ,OAAA,GAAAgJ,KAAA,KAAAQ,IAuBAgxL,CAAAltH,KA+CAmtH,EAAA,SAAAx/J,EAAA69J,GACA,IAAA4B,GACAC,iBAAA1/J,EAAAxvB,GACAmvL,UAAA3/J,EAAAy2D,WAAA,GAEAmpG,EAAA5/J,EAAA6/J,eACAA,OAAA,IAAAD,GACAE,UAAA,GACApoG,MAAA,IACGkoG,EACHG,EAAAhD,GACAF,QAAA78J,EAAA68J,QACAv9K,OAAA+/K,EAAAQ,EAAAC,UAAAL,GACA/nG,MAAAmoG,EAAAnoG,QAGA,OA/CA,SAAA13D,EAAA69J,GACA,OAAA79J,EAAAn5B,UAAAg3L,EAWA79J,EAAAn5B,SACAk4L,EAAA/+J,GAGA49J,EAAA59J,EAAA69J,KAXA/8J,OAAAd,EAAAo+J,aAAA,EACAv3L,SAAAm5B,EAAAi+J,eACA38H,KAAA,EACAl7B,SAAApG,EAAA08J,cAsCAsD,CAAAhgK,EAAA69J,GACA7vL,IAAA,SAAAuO,GACAkjL,EAAA5uH,OAAAt0D,EAAAukB,OACA2+J,EAAAz5K,KAAAzJ,EAAA+kD,KACA,IAAA5tC,EAAA2rK,EAAAr/J,EAAAuE,OAAA,GAAAk7J,GACA,OACA/rK,MACA0S,SAAA7pB,EAAA6pB,SACAv/B,SAAA0V,EAAA1V,SACAyrF,YAAAsqG,EAAA58J,EAAA68J,SAAA,GAAAnpK,GACA1lB,IAAA+xL,EACAj/J,OAAAvkB,EAAAukB,WAKA+tB,EACA,2BADAA,EAEA,sBAFAA,EAGA,mBAHAA,EAIA,cAJAA,EAMA,2BANAA,EAOA,gCA+CAoxI,EAAA,SAAAjgK,EAAA69J,GACA,IAAAh3L,EAAAm5B,EAAAn5B,SACAq5L,EAAAlgK,EAAAmgK,YACAA,OAAA,IAAAD,OAGA,IAAAr5L,IAAAg3L,GAAAh3L,GAAAg3L,EACA,UAAAh2K,MAAAgnC,GAGA,IAGAuxI,EAHAC,EAAAF,EAAAnyL,IAAA,SAAAsyL,GACA,OA3CA,SAAAtgK,EAAAugK,GACA,IAAA1D,EAAA78J,EAAA68J,QACA+C,EAAA5/J,EAAA6/J,eACAA,OAAA,IAAAD,KAA4DA,EAC5DluK,EAAAqrK,GACAF,UACAv9K,OAAAugL,EAAAC,UACApoG,MAAAmoG,EAAAnoG,QAEAn7E,EAAAwgL,GACAF,UACAv9K,OAAAihL,EAAAh8J,MACAmzD,MAAA6oG,EAAAC,aAGA,OADAjkL,EAAAvO,IAAA0jB,EACAnV,EA4BAkkL,CAAAzgK,EAAAsgK,KA0BA,OAtBAz5L,IACAu5L,EAAArB,EAAA/+J,IAGA69J,IACAuC,EAAAxC,EAAA59J,EAAA69J,IAGAuC,EAAApyL,IAAA,SAAAswL,EAAArwL,GACA,GAAAoyL,EAAApyL,GAAA,CACA,IAAAsO,EAAA8jL,EAAApyL,GAIA,OAHAsO,EAAA6pB,SAAAk4J,EAAAl4J,SACA7pB,EAAA1V,SAAAy3L,EAAAz3L,SACA0V,EAAAukB,OAAAw9J,EAAAx9J,OACAvkB,KAKGnO,OAAA,SAAAmO,GACH,OAAAA,KAgBAmkL,EAAA,SAAA1gK,GACA,IAAA68J,EAAA78J,EAAA68J,QACA+C,EAAA5/J,EAAA6/J,eACAA,OAAA,IAAAD,KAA4DA,EAC5D3B,EAAAj+J,EAAAi+J,eACAT,EAAAx9J,EAAAp5B,UACAA,OAAA,IAAA42L,EAAA,EAAAA,EACAmD,EAAA3gK,EAAA4gK,WACAA,OAAA,IAAAD,EAAA,GAAAA,EACA95L,EAAAm5B,EAAAn5B,SAEA,IAAAg2L,EACA,UAAAh1K,MAAAgnC,GAGA,IAAAn9B,EAAAqrK,GACAF,UACAv9K,OAAAugL,EAAAC,UACApoG,MAAAmoG,EAAAnoG,QAEAn7E,EAAAwgL,GACAF,UACAv9K,OAAAu9K,EACAnlG,MAAAkpG,IAKA,GAHArkL,EAAAvO,IAAA0jB,EAGA7qB,EAAA,CACA,IAAAu5L,EAAArB,EAAA/+J,GAEAogK,EAAAr7L,SACAwX,EAAA1V,SAAAu5L,EAAA,GAAAv5L,SACA0V,EAAA6pB,SAAAg6J,EAAA,GAAAh6J,eAEG63J,IACH1hL,EAAA1V,SAAAo3L,EAAAr3L,EACA2V,EAAA6pB,SAAA,GAKA,OADA7pB,EAAAukB,OAAA,GACAvkB,IAGAskL,EAAA,SAAA9+J,GACA,IAEA++J,EACAC,EAHA/gK,EAAA+B,EAAA/B,WACAzE,EAAAwG,EAAAxG,YAeA,GAXAA,EAAAknI,UACAs+B,EAAAvB,EACAsB,EAAA7pB,EAAAj3I,EAAAzE,EAAAknI,WACGlnI,EAAAtf,MACH8kL,EAAAL,EACAI,EAAA7pB,EAAAj3I,EAAAzE,EAAAtf,OACGsf,EAAAlO,OACH0zK,EAAAd,EACAa,EAAA7pB,EAAAj3I,EAAAzE,EAAAlO,QAGA0zK,EACA,OACA/gK,cAIA,IAAA1jB,EAAAykL,EAAAD,EAAAvlK,EAAA6K,UAIA,GAAA06J,EAAAj6L,SAAA,CACA,IAAAm6L,EAAAF,EACAj6L,EAAAm6L,EAAAn6L,SACAo6L,EAAAD,EAAAp6L,UACAA,OAAA,IAAAq6L,EAAA,EAAAA,EACAH,EAAAj6L,WAAAD,OACG0V,EAAAvX,OAGH+7L,EAAAj6L,SAAAyV,EAAA/L,OAAA,SAAAwZ,EAAAxN,GACA,OAAAhS,KAAAwf,MAAAxf,KAAAg3F,KAAAhlF,EAAA1V,YACK,GAELi6L,EAAAj6L,SAAA,EAGA,OACAm5B,WAAA8gK,EACAxkL,aAOA4kL,EAAA,SAAA7wJ,EAAAvqC,GACA,OAAA+d,EAAAwsB,EAAA0lC,YAAA3nE,OAAA,SAAA2zB,GAEA,OADAA,EAAAqN,UACAtpC,KAGAq7L,EAAA,SAAA9wJ,GACA,OAAAA,EAAAT,YAAA//B,QAGAuxL,EAAA,SAAAvsL,GACA,IAOA/F,EADA,+EACA0O,KAAA3I,GAEA,IAAA/F,EACA,SAGA,IAAAuyL,EAAAvyL,EAAAJ,MAAA,GACA4yL,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GAEA,OArBA,QAqBA1gK,WAAA2gK,GAAA,GApBA,OAoBA3gK,WAAA4gK,GAAA,GAnBA,MAmBA5gK,WAAA6gK,GAAA,GAlBA,KAkBA7gK,WAAA8gK,GAAA,GAjBA,GAiBA9gK,WAAA+gK,GAAA,GAAA/gK,WAAAghK,GAAA,IAeAC,GAUAC,0BAAA,SAAAtzL,GACA,OAAA6yL,EAAA7yL,IAaAgvL,sBAAA,SAAAhvL,GACA,MAnCA,oCAGA4L,KANAtF,EAsCAtG,KA/BAsG,GAAA,KAGAzT,KAAAU,MAAA+S,GA4BA,IAtCA,IAAAA,GAkDAutG,oBAAA,SAAA7zG,GACA,OAAA6yL,EAAA7yL,IAYAmwL,qBAAA,SAAAnwL,GACA,OAAA6yL,EAAA7yL,IAYAm3B,MAAA,SAAAn3B,GACA,OAAA6yL,EAAA7yL,IAWA/L,MAAA,SAAA+L,GACA,OAAAsyB,SAAAtyB,EAAA,KAWA9L,OAAA,SAAA8L,GACA,OAAAsyB,SAAAtyB,EAAA,KAWAkoF,UAAA,SAAAloF,GACA,OAAAsyB,SAAAtyB,EAAA,KAWA6vL,YAAA,SAAA7vL,GACA,OAAAsyB,SAAAtyB,EAAA,KAWA3H,UAAA,SAAA2H,GACA,OAAAsyB,SAAAtyB,EAAA,KAeA1H,SAAA,SAAA0H,GACA,IAAAuzL,EAAAjhK,SAAAtyB,EAAA,IAEA,OAAAo3B,MAAAm8J,GACAV,EAAA7yL,GAGAuzL,GAWAx6J,EAAA,SAAA/4B,GACA,OAAAsyB,SAAAtyB,EAAA,KAYAkoC,EAAA,SAAAloC,GACA,OAAAsyB,SAAAtyB,EAAA,KAYA4tE,EAAA,SAAA5tE,GACA,OAAAsyB,SAAAtyB,EAAA,KAYAo2B,QAAA,SAAAp2B,GACA,OAAAA,IAaAwxB,EAAA,SAAA9a,GACA,OAAAA,KAAA+a,WAIAnc,EAAAoB,EAAA+a,YAAAzvB,OAAA,SAAAqB,EAAAyE,GACA,IAAA0rL,EAAAH,EAAAvrL,EAAAvQ,OAAA87L,EAAAj9J,QAEA,OADA/yB,EAAAyE,EAAAvQ,MAAAi8L,EAAA1rL,EAAA9H,OACAqD,WAeA,IAAAowL,GACAC,gDAAA,kBACAC,gDAAA,qBACAC,gDAAA,0BACAC,gDAAA,uBAaAC,EAAA,SAAAC,EAAAC,GACA,OAAAA,EAAAx9L,OAIAgjB,EAAAu6K,EAAAt0L,IAAA,SAAAm/F,GACA,OAAAo1F,EAAAv0L,IAAA,SAAAw0L,GACA,OAAA5F,EAAAzvF,EAAAg0F,EAAAqB,SALAF,GAgCAG,EAAA,SAAAC,GACA,IAAAC,EAAAzB,EAAAwB,EAAA,sBACAE,EAAA1B,EAAAwB,EAAA,kBACAvC,EAAAyC,GAAA1B,EAAA0B,EAAA,cAAA50L,IAAA,SAAA05B,GACA,OAAAuvI,GACAnyK,IAAA,cACKi7B,EAAA2H,MAELm7J,EAAA3B,EAAAwB,EAAA,kBACAI,EAAAF,GAAAD,EACA9E,EAAAiF,GAAA5B,EAAA4B,EAAA,sBACAC,EAAAH,GAAAC,GAAAF,EACAK,EAAAD,GAAA7B,EAAA6B,EAAA,qBAMAtgC,EAAAkgC,GAAA5iK,EAAA4iK,GAEAlgC,GAAAugC,EACAvgC,EAAAo9B,eAAAmD,GAAAjjK,EAAAijK,GACGvgC,KAAAo9B,iBAIHp9B,EAAAo9B,gBACAC,UAAAr9B,EAAAo9B,iBAIA,IAAAtkK,GACAknI,WACAr8H,SAAAy3J,GAAAqD,EAAArD,EAAA,KAAA7vL,IAAA,SAAA05B,GACA,OAAA3H,EAAA2H,KAEAra,KAAAu1K,GAAA3rB,EAAAl3I,EAAA6iK,IACAzC,cACAN,eAAA9/J,EAAAijK,KAEA/mL,KAAA4mL,GAAA5rB,EAAAl3I,EAAA8iK,IACAhD,eAAA9/J,EAAAijK,MAQA,OALA90L,OAAAC,KAAAotB,GAAArqB,QAAA,SAAA7C,GACAktB,EAAAltB,WACAktB,EAAAltB,KAGAktB,GAgEA0nK,EAAA,SAAAC,GACA,OAAAA,EAAA3yL,OAAA,SAAA+vB,EAAAiT,GACA,IAAAvT,EAAAD,EAAAwT,GACAiuF,EAAAwgE,EAAAhiK,EAAAmjK,aAEA,GAAA3hE,EAAA,CACAlhG,EAAAkhG,IACAxhG,cAEA,IAAAojK,EAAAlC,EAAA3tJ,EAAA,gBAEA,GAAA6vJ,EAAA,CACA,IAAAxhE,EAAAu/D,EAAAiC,GACAC,EAAAzhE,GA5LA,SAAA0hE,GAIA,IAHA,IAAAC,EAAsBrH,EAAAtqL,EAAQ4xL,KAAAF,GAC9B3sK,EAAA,IAAA5yB,WAAAw/L,EAAAx+L,QAEA3B,EAAA,EAAiBA,EAAAmgM,EAAAx+L,OAA0B3B,IAC3CuzB,EAAAvzB,GAAAmgM,EAAA7uL,WAAAtR,GAGA,OAAAuzB,EAoLA8sK,CAAA7hE,GACAthG,EAAAkhG,GAAAI,KAAAyhE,GAIA,OAAA/iK,QA6BAojK,EAAA,SAAAC,EAAAC,EAAAC,GACA,gBAAAnB,GACA,IAAAoB,EAAA/jK,EAAA2iK,GACAqB,EAAA1B,EAAAuB,EAAA1C,EAAAwB,EAAA,YACAt8I,EAAA86I,EAAAwB,EAAA,WACAsB,GACA59I,KAAArmB,EAAAqmB,IAEA9xC,EAAA2iK,EAAA0sB,EAAAG,EAAAE,GACAriE,EAAAshE,EAAA/B,EAAAwB,EAAA,sBAEAx0L,OAAAC,KAAAwzH,GAAA58H,SACAuP,EAAA2iK,EAAA3iK,GACAqtH,uBAIA,IAAApmG,EAAAknK,EAAAC,GACAz+D,EAAAi9D,EAAAwB,EAAA,kBACAuB,EAAAhtB,EAAA4sB,EAAAtoK,GACA,OAAAxT,EAAAk8G,EAAAj2H,IA7FA,SAAA81L,EAAAC,EAAAE,GACA,gBAAAC,GACA,IAAAC,EAAAjD,EAAAgD,EAAA,WACAE,EAAA/B,EAAA0B,EAAAI,GACAnkK,EAAAi3I,EAAA6sB,EAAA/jK,EAAAmkK,IACAG,EAAA5B,EAAAyB,GACA,OAAAE,EAAAp2L,IAAA,SAAA6uL,GACA,OACAthK,YAAA07I,EAAAgtB,EAAAI,GACArkK,WAAAi3I,EAAAj3I,GACA68J,gBAmFAyH,CAAAhwL,EAAAyvL,EAAAE,OA8DAM,EAAA,SAAAC,EAAAruL,QACA,IAAAA,IACAA,MAGA,IAAAsuL,EAAAtuL,EACAuuL,EAAAD,EAAArhF,YACAA,OAAA,IAAAshF,EAAA,GAAAA,EACAC,EAAAF,EAAAnH,IACAA,OAAA,IAAAqH,EAAAvjM,KAAA8kB,MAAAy+K,EACAC,EAAAH,EAAAphF,aACAA,OAAA,IAAAuhF,EAAA,EAAAA,EACAC,EAAA3D,EAAAsD,EAAA,UAEA,IAAAK,EAAA9/L,OACA,UAAA8iB,MAAAgnC,GAGA,IAAAi2I,EAAA/kK,EAAAykK,GACAO,EAAA1C,GAAAj/E,GAAA89E,EAAAsD,EAAA,YAIA,OAHAM,EAAA7G,eAAA6G,EAAAjD,2BAAA,EACAiD,EAAAxH,MACAwH,EAAAzhF,eACAt7F,EAAA88K,EAAA72L,IAxDA,SAAA82L,EAAAC,GACA,gBAAAC,EAAA/2L,GACA,IAAA21L,EAAAvB,EAAA0C,EAAA7D,EAAA8D,EAAA,YACAC,EAAAllK,EAAAilK,GACAE,EAAArkK,SAAAokK,EAAAz0L,GAAA,IAEAksL,EAAsBR,EAAAtqL,EAAQ+zB,MAAAu/J,GAAAj3L,EAAAi3L,EAC9BvB,EAAA1sB,EAAA6tB,GACApI,gBAEAyI,EAAAjE,EAAA8D,EAAA,iBACAnB,EAAApB,EAAAuC,GACA,OAAAj9K,EAAAo9K,EAAAn3L,IAAA01L,EAAAC,EAAAC,EAAAC,MA4CAuB,CAAAN,EAAAC,MAGAM,EAAA,SAAAC,GACA,QAAAA,EACA,UAAAz9K,MAAAgnC,GAGA,IACA02I,GADA,IAAmBrJ,EAAAtqL,EAAQ4zL,WAC3BC,gBAAAH,EAAA,mBACAd,EAAAe,GAAA,QAAAA,EAAAlgL,gBAAA+pB,QAAAm2J,EAAAlgL,gBAAA,KAEA,IAAAm/K,QAAAltJ,qBAAA,eAAAvyC,OAAA,EACA,UAAA8iB,MAAAgnC,GAGA,OAAA21I,GAmDA1iM,EAAA,SAAAwjM,EAAAnvL,GACA,OAnjDA,SAAAuvL,GACA,IAAAC,EAEA,IAAAD,EAAA3gM,OACA,SAIA,IAAA6gM,EAAAF,EAAA,GAAA1lK,WACAn5B,EAAA++L,EAAA3H,eACA4H,EAAAD,EAAAxjF,oBACAA,OAAA,IAAAyjF,EAAA,EAAAA,EAiBAC,EAAAzJ,EAAAqJ,EAAAt3L,OAfA,SAAA23L,GACA,IAAA/lK,EAAA+lK,EAAA/lK,WACA,oBAAAA,EAAA++E,UAAA,UAAA/+E,EAAAgmK,eAaAh4L,IAAAuuL,GACA0J,EAAA5J,EAAAqJ,EAAAt3L,OAXA,SAAA83L,GACA,IAAAlmK,EAAAkmK,EAAAlmK,WACA,oBAAAA,EAAA++E,UAAA,UAAA/+E,EAAAgmK,eAUAG,EAAAT,EAAAt3L,OAPA,SAAAg4L,GACA,IAAApmK,EAAAomK,EAAApmK,WACA,mBAAAA,EAAA++E,UAAA,SAAA/+E,EAAAgmK,cAMAn0G,GACA1uD,YAAA,EACAC,uBACA9mB,YACAonB,SAAA,EACAY,aAAAqhK,GACA9iK,SACAC,UACK6iK,EAAA,sBAAsCA,EAAA3iK,aAA6B2iK,GACxEjyK,IAAA,GACA7sB,WACAw9B,UAAAyhK,EACA1jF,oBAAA,IAAAA,GAWA,OARA6jF,EAAAlhM,SACA8sF,EAAAvtD,YAAAzB,MAAA1S,MAAA81K,EAzHA11L,OAAA,SAAAqB,EAAAuyB,GACA,IAAAiiB,EAAAjiB,EAAAnE,WAAAomB,MAAAjiB,EAAAnE,WAAAomB,KAAA73C,OAAA,OACA9H,EAAA09B,EAAAnE,WAAA8kJ,MAAA,GACAn+H,EAAA,OAOA,OALAlgD,IACAkgD,EAAAxiB,EAAAnE,WAAA8kJ,KAAA,KAAA1+H,EAAA,KAIAx0C,EAAA+0C,IAAA/0C,EAAA+0C,GAAAtiB,UAAA,GAAArE,WAAAuB,UAAA4C,EAAAnE,WAAAy2D,UACA7kF,GAGAA,EAAA+0C,IACAlgD,WACAm+B,YAAA,EACA3yB,QAAA,SAAAm0C,EACA/hB,WA9EA,SAAAtC,GACA,IAAAskK,EAEArmK,EAAA+B,EAAA/B,WACA1jB,EAAAylB,EAAAzlB,SACA6nB,GACAnE,YAAAqmK,GACA5hK,KAAAzE,EAAAxvB,GACA+wB,UAAAvB,EAAAy2D,UACAklB,OAAA37E,EAAA86E,QACKurF,EAAA,gBAAAA,GACL3yK,IAAA,GACAgQ,QAAA,YAAA1D,EAAA3yB,MAAA,UACA+4B,SAAApG,EAAA08J,YACApqG,YAAA,GACA/sD,eAAAvF,EAAAn5B,SACAyV,WACAsnB,cAAAtnB,EAAAvX,OAAAuX,EAAA,GAAAwkB,OAAA,GAOA,OAJAd,EAAA2hG,oBACAx9F,EAAAw9F,kBAAA3hG,EAAA2hG,mBAGAx9F,EAsDAmiK,CAAAniK,IACAzQ,IAAA,IAEA9hB,SAuGAu0L,EAAAphM,SACA8sF,EAAAvtD,YAAAtB,UAAAymG,KArGA,SAAAplG,GACA,OAAAA,EAAA9zB,OAAA,SAAAqB,EAAAuyB,GACA,IA5DA9B,EACAkkK,EAEAvmK,EACA1jB,EAwDAqqC,EAAAxiB,EAAAnE,WAAA8kJ,MAAA,OAEA,OAAAlzK,EAAA+0C,GACA/0C,GAGAA,EAAA+0C,IACAlgD,SAAAkgD,EACA10C,SAAA,EACA2yB,YAAA,EACAP,YAtEAhC,EAsEA8B,EAnEAnE,EAAAqC,EAAArC,WACA1jB,EAAA+lB,EAAA/lB,cAEA,IAAAA,IAEAA,IACAoX,IAAAsM,EAAA68J,QACAz2J,SAAApG,EAAA08J,YACApqG,YAAAtyD,EAAA68J,SAAA,GACAh2L,SAAAm5B,EAAAi+J,eACAn9J,OAAA,IAGAd,EAAAn5B,SAAAm5B,EAAAi+J,iBAIAj+J,YAAAumK,GACA9hK,KAAAzE,EAAAxvB,GACA+wB,UAAAvB,EAAAy2D,WACK8vG,EAAA,gBAAAA,GACL7yK,IAAA,GACAgQ,QAAA,YAAA1D,EAAA3yB,MAAA,UACA+4B,SAAApG,EAAA08J,YACApqG,YAAAtyD,EAAA68J,SAAA,GACAt3J,eAAAvF,EAAAn5B,SACAyV,WACAsnB,cAAAtnB,EAAAvX,OAAAuX,EAAA,GAAAwkB,OAAA,KAyCApN,IAAA,IAEA9hB,QAsFA40L,CAAAL,IAGAt0G,EA6/CA40G,CAAAlC,EAAAc,EAAAC,GAAAnvL,GA3pBAnI,IAAA6yL,KAsqBA7E,EAAA,SAAAsJ,GACA,OApDA,SAAAd,GACA,IAAAkC,EAAAxF,EAAAsD,EAAA,gBAEA,IAAAkC,EACA,YAGA,IAAA1mK,EAAAD,EAAA2mK,GAEA,OAAA1mK,EAAAmjK,aACA,uCACA,uCACAnjK,EAAA9K,OAAA,OACA,MAEA,yCACA,sCACA,yCACA,sCACA8K,EAAA9K,OAAA,MACA,MAEA,oCACA,oCACA8K,EAAA9K,OAAA,SACA8K,EAAAzxB,MAAAnN,KAAAU,MAAAk+B,EAAAzxB,OACA,MAEA,sCACA,iCACA,kCACA,QACA,UAAAsZ,MAAAgnC,GAGA,OAAA7uB,EAiBA2mK,CAAAtB,EAAAC,8DC1yDA,IAAAl3K,EAAAlgB,OAAAO,UAAAI,SAEAg2H,EAAkB5jI,EAAQ,QAE1Bi6K,EAAiBj6K,EAAQ,QAGzB2lM,EACA,SAAAC,GACA,IAAAC,EAOA,IALAA,EADA5+K,UAAAnjB,OAAA,EACAmjB,UAAA,GAEA,kBAAAkG,EAAAzf,KAAAk4L,GAAA9gM,OAAA8qE,UAGA9qE,QAAA+gM,IAAAj2H,OAAA,CACA,IACAtiE,EAAAnL,EADAusF,EAAAm3G,IAAA/gM,QAAA,6CAEA,IAAA3C,EAAA,EAAcA,EAAAusF,EAAA5qF,SAAoB3B,EAClC,GAAA83K,EAAA2rB,EAAAl3G,EAAAvsF,OACAmL,EAAAs4L,EAAAl3G,EAAAvsF,MACAyhI,EAAAt2H,IACA,OAAAA,EAIA,UAAAuQ,UAAA,oBAEA,UAAAA,UAAA,2CAKA3P,EAAAC,QAAA,SAAA4zK,GACA,OAAAn+C,EAAAm+C,GACAA,EAEA96J,UAAAnjB,OAAA,EACA6hM,EAAA5jB,EAAA96J,UAAA,IAEA0+K,EAAA5jB,uCCzCA,IAAAvkJ,EAAYx9B,EAAQ,QACpB8lM,EAAoB9lM,EAAQ,QAC5BoyL,EAAepyL,EAAQ,QACvBg0K,EAAeh0K,EAAQ,QACvB+lM,EAAoB/lM,EAAQ,QAC5BgmM,EAAkBhmM,EAAQ,QAK1B,SAAAimM,EAAApkM,GACAA,EAAAgvK,aACAhvK,EAAAgvK,YAAAqQ,mBAUAhzK,EAAAC,QAAA,SAAAtM,GAkCA,OAjCAokM,EAAApkM,GAGAA,EAAAwtF,UAAA02G,EAAAlkM,EAAAwjB,OACAxjB,EAAAwjB,IAAA2gL,EAAAnkM,EAAAwtF,QAAAxtF,EAAAwjB,MAIAxjB,EAAAqyB,QAAAryB,EAAAqyB,YAGAryB,EAAAd,KAAA+kM,EACAjkM,EAAAd,KACAc,EAAAqyB,QACAryB,EAAAs3K,kBAIAt3K,EAAAqyB,QAAAsJ,EAAAw4I,MACAn0K,EAAAqyB,QAAAylJ,WACA93K,EAAAqyB,QAAAryB,EAAAoyB,YACApyB,EAAAqyB,aAGAsJ,EAAAvtB,SACA,qDACA,SAAAgkB,UACApyB,EAAAqyB,QAAAD,MAIApyB,EAAAq3K,SAAAlF,EAAAkF,SAEAr3K,GAAAwhB,KAAA,SAAAwP,GAUA,OATAozK,EAAApkM,GAGAgxB,EAAA9xB,KAAA+kM,EACAjzK,EAAA9xB,KACA8xB,EAAAqB,QACAryB,EAAA43K,mBAGA5mJ,GACG,SAAAnM,GAcH,OAbA0rK,EAAA1rK,KACAu/K,EAAApkM,GAGA6kB,KAAAmM,WACAnM,EAAAmM,SAAA9xB,KAAA+kM,EACAp/K,EAAAmM,SAAA9xB,KACA2lB,EAAAmM,SAAAqB,QACAryB,EAAA43K,qBAKAl0F,QAAA9+D,OAAAC,0BCnFAxY,EAAAC,QAAA,SAAA0xB,GACA,OAAAA,GAAA,2CCYA,IAAA7E,EAAah7B,EAAQ,QAMrBy3B,EAAA,SAAAnqB,EAAA4+F,GACA,IAAAC,EAAA,EAeA,IAbA7+F,EAAA4+F,IAQAC,GAAA,GAKA7iG,KAAAuqE,IAAAq4B,EAAA5+F,GAlBA,YAmBAA,GArBA,WAqBA6+F,EAGA,OAAA7+F,GAGA4tB,EAAA,SAAA9uB,GACA,IAAAggG,EAAAC,EAEAnxE,EAAA1tB,UAAA6B,KAAA3B,KAAAwJ,MAEAA,KAAAo1F,MAAAlgG,EAEA8K,KAAArU,KAAA,SAAA9B,GACAA,EAAAqL,OAAA8K,KAAAo1F,aAIAn5F,IAAAk5F,IACAA,EAAAtrG,EAAAo5B,KAGAp5B,EAAAo5B,IAAA1C,EAAA12B,EAAAo5B,IAAAkyE,GACAtrG,EAAAq5B,IAAA3C,EAAA12B,EAAAq5B,IAAAiyE,GAEAD,EAAArrG,EAAAo5B,IAEAjjB,KAAAokB,QAAA,OAAAv6B,KAGAmW,KAAAqkB,MAAA,WACA8wE,EAAAD,EACAl1F,KAAAokB,QAAA,SAGApkB,KAAAitB,cAAA,WACAkoE,OAAA,EACAD,OAAA,IAKAlxE,EAAA1tB,UAAA,IAAAwtB,EAEA9sB,EAAAC,SACA+sB,0BACAzD,sCCcAvpB,EAAAC,SACA0iL,aAhDA,SAAAvhK,UACAA,EAAAoxE,qBACApxE,EAAAyxE,qBACAzxE,EAAAqxE,qBACArxE,EAAA0xE,eA6CA4vF,kCAlCA,SAAAthK,EAAA2xE,GACA,IACA53F,EAEAq3F,EAAApxE,EAAAoxE,cAyBA,OAtBAO,IACAP,GAAApxE,EAAA2N,kBAAA9C,KAKA9wB,EAAAimB,EAAA2N,kBAAA5zB,oBAGAA,GAAAq3F,EAGAr3F,EAAAC,KAAAwf,IAAA,EAAAzf,GAEA,UAAAimB,EAAAljB,OAIA/C,GADAimB,EAAAlpB,WAxFA,IA0FAiD,EAAAC,KAAA+mB,MAAAhnB,IAGAA,GAMAsnL,eA5FA,SAAArhK,EAAAvuB,GACA,iBAAAA,EAAAq5B,WACAjnB,IAAAmc,EAAA2N,kBAAA7C,MACA9K,EAAA2N,kBAAA7C,IAAAr5B,EAAAq5B,UAGAjnB,IAAAmc,EAAAqxE,cACArxE,EAAAqxE,cAAA5/F,EAAAq5B,IAEA9K,EAAAqxE,cAAAr3F,KAAAwG,IAAAwf,EAAAqxE,cAAA5/F,EAAAq5B,UAGAjnB,IAAAmc,EAAA0xE,cACA1xE,EAAA0xE,cAAAjgG,EAAAq5B,IAEA9K,EAAA0xE,cAAA13F,KAAAwf,IAAAwG,EAAA0xE,cAAAjgG,EAAAq5B,MAIA,iBAAAr5B,EAAAo5B,WACAhnB,IAAAmc,EAAA2N,kBAAA9C,MACA7K,EAAA2N,kBAAA9C,IAAAp5B,EAAAo5B,UAGAhnB,IAAAmc,EAAAoxE,cACApxE,EAAAoxE,cAAA3/F,EAAAo5B,IAEA7K,EAAAoxE,cAAAp3F,KAAAwG,IAAAwf,EAAAoxE,cAAA3/F,EAAAo5B,UAGAhnB,IAAAmc,EAAAyxE,cACAzxE,EAAAyxE,cAAAhgG,EAAAo5B,IAEA7K,EAAAyxE,cAAAz3F,KAAAwf,IAAAwG,EAAAyxE,cAAAhgG,EAAAo5B","file":"static/js/vendor.6e304c2ab92a2a0b9fa8.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = +5d+\n// module chunks = 0","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/polyfill.js\n// module id = +86n\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = /cRm\n// module chunks = 0","/*!\n  * vue-router v3.0.6\n  * (c) 2019 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      var vnodeData = parent.$vnode && parent.$vnode.data;\n      if (vnodeData) {\n        if (vnodeData.routerView) {\n          depth++;\n        }\n        if (vnodeData.keepAlive && parent._inactive) {\n          inactive = true;\n        }\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // register instance in init hook\n    // in case kept-alive component be actived when routes changed\n    data.hook.init = function (vnode) {\n      if (vnode.data.keepAlive &&\n        vnode.componentInstance &&\n        vnode.componentInstance !== matched.instances[name]\n      ) {\n        matched.instances[name] = vnode.componentInstance;\n      }\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n      ? 'router-link-active'\n      : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n      ? 'router-link-exact-active'\n      : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n      ? activeClassFallback\n      : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n      ? exactActiveClassFallback\n      : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n}\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  params = params || {};\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n\n    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}\n    if (params.pathMatch) { params[0] = params.pathMatch; }\n\n    return filler(params, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  } finally {\n    // delete the 0 if it was added\n    delete params[0];\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next._normalized) {\n    return next\n  } else if (next.name) {\n    return extend({}, raw)\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  window.history.replaceState({ key: getStateKey() }, '', window.location.href.replace(window.location.origin, ''));\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(router, to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = /*@__PURE__*/(function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = /*@__PURE__*/(function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  // empty path\n  if (index < 0) { return '' }\n\n  href = href.slice(index + 1);\n  // decode the hash but not the search or hash\n  // as search(query) is already decoded\n  // https://github.com/vuejs/vue-router/issues/2708\n  var searchIndex = href.indexOf('?');\n  if (searchIndex < 0) {\n    var hashIndex = href.indexOf('#');\n    if (hashIndex > -1) { href = decodeURI(href.slice(0, hashIndex)) + href.slice(hashIndex); }\n    else { href = decodeURI(href); }\n  } else {\n    if (searchIndex > -1) { href = decodeURI(href.slice(0, searchIndex)) + href.slice(searchIndex); }\n  }\n\n  return href\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = /*@__PURE__*/(function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // set up app destroyed handler\n  // https://github.com/vuejs/vue-router/issues/2639\n  app.$once('hook:destroyed', function () {\n    // clean out app from this.apps array once destroyed\n    var index = this$1.apps.indexOf(app);\n    if (index > -1) { this$1.apps.splice(index, 1); }\n    // ensure we still have a main app or null if no apps\n    // we do not release the router so it can be reused\n    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }\n  });\n\n  // main app previously initialized\n  // return as we don't need to set up new history listener\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  current = current || this.history.current;\n  var location = normalizeLocation(\n    to,\n    current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.6';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-router/dist/vue-router.esm.js\n// module id = /ocq\n// module chunks = 0","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/define-properties/index.js\n// module id = /ymf\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/mp4-generator.js\n// module id = 020U\n// module chunks = 0","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 162o\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/node_modules/is-buffer/index.js\n// module id = 1Yoh\n// module chunks = 0","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/settle.js\n// module id = 21It\n// module chunks = 0","'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/exp-golomb.js\n// module id = 2BoW\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 33ZF\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/m2ts.js\n// module id = 4cG2\n// module chunks = 0","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/normalizeHeaderName.js\n// module id = 5VQ+\n// module chunks = 0","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = null\n// module chunks = ","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = null\n// module chunks = ","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Video.js 7.5.5 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.5.5\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + new Date().getTime();\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi;\nvar prefixedAPI = false; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  prefixedAPI = browserApi[0] === specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_assertThisInitialized(_this))\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    this.player_.tech(true).focus();\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_);\n    this.one(this.player_, 'play', this.handlePlay); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name$$1) {\n        if (typeof _this[name$$1] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name$$1 + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_assertThisInitialized(_this)), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name$$1) {\n        _this[name$$1](options.plugins[name$$1]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_assertThisInitialized(_this)); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, FullscreenApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise.catch(restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise.catch(muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var fsApi = FullscreenApi;\n    var el = this.el();\n    var isFs = document[fsApi.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + fsApi.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + fsApi.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (!prefixedAPI) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    if (prefixedAPI) {\n      var fsApi = FullscreenApi;\n      var el = this.el();\n      var isFs = document[fsApi.fullscreenElement] === el;\n\n      if (!isFs && el.matches) {\n        isFs = el.matches(':' + fsApi.fullscreen);\n      } else if (!isFs && el.msMatchesSelector) {\n        isFs = el.msMatchesSelector(':' + fsApi.fullscreen);\n      }\n\n      return isFs;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // These tags will be excluded entirely.\n\n      var excludedTags = ['textarea']; // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[FullscreenApi.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits$1 = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits$1(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n\n    setTextContent(style$1, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name$$1 + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = xhr;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.9.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream; // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2016 Brightcove\n     * All rights reserved.\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type if updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      } // TODO: check for sidx here\n      // Continue asynchronously if there is no sidx\n      // wait one tick to allow haveMaster to run first on a child loader\n\n\n      this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n        startingState: startingState,\n        playlist: playlist\n      }), 0);\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist;\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this2 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this2.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this3 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this3.request = null;\n\n        if (error) {\n          _this3.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this3.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this3.state === 'HAVE_NOTHING') {\n            _this3.started = false;\n          }\n\n          return _this3.trigger('error');\n        }\n\n        _this3.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this3.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this3.masterLoaded_ = Date.now();\n        }\n\n        _this3.srcUrl = resolveManifestRedirect(_this3.handleManifestRedirects, _this3.srcUrl, req);\n\n        _this3.syncClientServerClock_(_this3.onClientServerClockSync_.bind(_this3));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this4 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this4.clientOffset_ = _this4.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this4.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this4.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this5 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this6 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this6.request = null;\n\n        if (error) {\n          _this6.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this6.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return _this6.trigger('error');\n        }\n\n        _this6.masterXml_ = req.responseText;\n\n        var newMaster = _this6.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this6.master, newMaster);\n\n        if (updatedMaster) {\n          _this6.master = updatedMaster;\n        }\n\n        window$1.setTimeout(function () {\n          _this6.trigger('minimumUpdatePeriod');\n        }, _this6.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this7 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this7.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n  // incrementally decrypt the segment\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // Fmp4 CaptionParser\n\n    _this.captionParser_ = new CaptionParser();\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        });\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.9.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = null\n// module chunks = ","/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n        attrs[i].end = args.end;\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n            { start: stack[i].start, end: stack[i].end }\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /\\s+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element);\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          \"Component template should contain exactly one root element. \" +\n          \"If you are using v-if on multiple elements, \" +\n          \"use v-else-if to chain them instead.\",\n          { start: element.start }\n        );\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start$1;\n          element.end = end;\n          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n            cumulated[attr.name] = attr;\n            return cumulated\n          }, {});\n        }\n        attrs.forEach(function (attr) {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn$2(\n              \"Invalid dynamic argument expression: attribute names cannot contain \" +\n              \"spaces, quotes, <, >, / or =.\",\n              {\n                start: attr.start + attr.name.indexOf(\"[\"),\n                end: attr.start + attr.name.length\n              }\n            );\n          }\n        });\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.',\n          { start: element.start }\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root);\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end$1;\n      }\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start: start }\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n              { start: start }\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anyting as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start;\n          child.end = end;\n        }\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\n          \"<template> cannot be keyed. Place the key on real elements instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\",\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp),\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\",\n          children[i]\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn$2(\n        \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n        \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n        \"can also be used on plain elements in addition to <template> to \" +\n        \"denote scoped slots.\",\n        el.rawAttrsMap['scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn$2(\n        \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n        \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n        \"scoped slot to make it clearer.\",\n        el.rawAttrsMap['slot-scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn$2(\n              \"<template v-slot> can only appear at the root level inside \" +\n              \"the receiving the component\",\n              el\n            );\n          }\n        }\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn$2(\n              \"v-slot can only be used on components or <template>.\",\n              slotBinding$1\n            );\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.scopedSlots) {\n            warn$2(\n              \"To avoid scope ambiguity, the default slot should also use \" +\n              \"<template> syntax when there are other named slots.\",\n              slotBinding$1\n            );\n          }\n        }\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        \"v-slot shorthand syntax requires a slot name.\",\n        binding\n      );\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\",\n        getRawBindingAttr(el, 'key')\n      );\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*(?:[\\w$]+)?\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \",\n        el.rawAttrsMap['v-once']\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    );\n  }\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(function (e) {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            );\n          });\n        } else {\n          warn$$1(\n            \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n            compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n            vm\n          );\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n        } else {\n          compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n        }\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n          warn = function (msg, range, tip) {\n            var data = { msg: msg };\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength;\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength;\n              }\n            }\n            (tip ? tips : errors).push(data);\n          };\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn);\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","var coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nvar sumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence = function(\n  track,\n  frames,\n  audioAppendStartTs,\n  videoBaseMediaDecodeTime\n) {\n  var\n    baseMediaDecodeTimeTs,\n    frameDuration = 0,\n    audioGapDuration = 0,\n    audioFillFrameCount = 0,\n    audioFillDuration = 0,\n    silentFrame,\n    i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs =\n    clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n  // determine frame clock duration based on sample rate, round up to avoid overfills\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration =\n      baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n    // number of full frames in the audio gap\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  }\n\n  // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -=\n    Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n};\n\n// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts = function(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  }\n\n  // We will need to recalculate the earliest segment Dts\n  track.minSegmentDts = Infinity;\n\n  return adtsFrames.filter(function(currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    }\n    // Otherwise, discard it\n    return false;\n  });\n};\n\n// generate the track's raw mdat data from an array of frames\nvar generateSampleTable = function(frames) {\n  var\n    i,\n    currentFrame,\n    samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n    });\n  }\n  return samples;\n};\n\n// generate the track's sample table from an array of frames\nvar concatenateFrameData = function(frames) {\n  var\n    i,\n    currentFrame,\n    dataOffset = 0,\n    data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/audio-frame-utils.js\n// module id = 7DRH\n// module chunks = 0","'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/h264.js\n// module id = 7GJ1\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/adapters/xhr.js\n// module id = 7GwW\n// module chunks = 0","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/data/silence.js\n// module id = 7JOd\n// module chunks = 0","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/implementation.js\n// module id = 7ciz\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 8Ig8\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 8KjM\n// module chunks = 0","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isFinite.js\n// module id = 9+gG\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats['default'];\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qs/lib/stringify.js\n// module id = CwSZ\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qs/lib/parse.js\n// module id = DDCP\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/buildURL.js\n// module id = DQCr\n// module chunks = 0","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach([\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength',\n    'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken',\n    'socketPath'\n  ], function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/mergeConfig.js\n// module id = DUeU\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/createError.js\n// module id = FtD3\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/isURLSameOrigin.js\n// module id = GHBc\n// module chunks = 0","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/adts.js\n// module id = GJFR\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\nvar aacUtils = require('./utils');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if (((everything[byteIndex] & 0xff) === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/index.js\n// module id = GfXe\n// module chunks = 0","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/mod.js\n// module id = H1lJ\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/bind.js\n// module id = JP+z\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = Jyyp\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  // Only Node.JS has a process variable that is of [[Class]] process\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/defaults.js\n// module id = KCLY\n// module chunks = 0","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/frame-utils.js\n// module id = MjOi\n// module chunks = 0","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isNaN.js\n// module id = No8i\n// module chunks = 0","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/index.js\n// module id = PiFy\n// module chunks = 0","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/utils.js\n// module id = SkH0\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/transformData.js\n// module id = TNV1\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/index.js\n// module id = TaKV\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/metadata-stream.js\n// module id = X4yv\n// module chunks = 0","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = XHP2\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/has/src/index.js\n// module id = XfW5\n// module chunks = 0","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qs/lib/formats.js\n// module id = XgCd\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n  config.method = config.method ? config.method.toLowerCase() : 'get';\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/Axios.js\n// module id = XmWM\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/index.js\n// module id = bidq\n// module chunks = 0","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/assertRecord.js\n// module id = bvnS\n// module chunks = 0","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/utils.js\n// module id = cGG2\n// module chunks = 0","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/CancelToken.js\n// module id = cWxy\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/isAbsoluteURL.js\n// module id = dIwP\n// module chunks = 0","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/Cancel.js\n// module id = dVOP\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/implementation.js\n// module id = eXcd\n// module chunks = 0","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/implementation.js\n// module id = fRHV\n// module chunks = 0","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/helpers/isPrimitive.js\n// module id = fXO7\n// module chunks = 0","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/index.js\n// module id = fYOu\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = fleF\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/InterceptorManager.js\n// module id = fuGk\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = fx5k\n// module chunks = 0","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/es5.js\n// module id = i7Em\n// module chunks = 0","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });\n\treturn polyfill;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/shim.js\n// module id = ilki\n// module chunks = 0","var\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = lamJ\n// module chunks = 0","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keycode/index.js\n// module id = ljAp\n// module chunks = 0","module.exports = require('./lib/axios');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/index.js\n// module id = mtWM\n// module chunks = 0","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qs/lib/index.js\n// module id = mw3O\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = mypn\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/transmuxer.js\n// module id = nAZl\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = nIbA\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/parseHeaders.js\n// module id = oJlt\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/cookies.js\n// module id = p1b6\n// module chunks = 0","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    var obj;\n\n    while (queue.length) {\n        var item = queue.pop();\n        obj = item.obj[item.prop];\n\n        if (Array.isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n\n    return obj;\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nvar encode = function encode(str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    return compactQueue(queue);\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qs/lib/utils.js\n// module id = p8xL\n// module chunks = 0","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/isCancel.js\n// module id = pBtG\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = pl6C\n// module chunks = 0","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/spread.js\n// module id = pxG4\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/combineURLs.js\n// module id = qRfI\n// module chunks = 0","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 0","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/isArguments.js\n// module id = t+1C\n// module chunks = 0","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/enhanceError.js\n// module id = t8qj\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/axios.js\n// module id = tIFN\n// module chunks = 0","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/GetIntrinsic.js\n// module id = teQR\n// module chunks = 0","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = vRXZ\n// module chunks = 0","/*! @name mpd-parser @version 0.7.0 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.7.0\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      playlist.segments[0].discontinuity = true;\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + \" (\" + role + \")\";\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range;\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    range: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return {\n      attributes: attributes\n    };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = vmOg\n// module chunks = 0","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/es5.js\n// module id = wSG+\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/dispatchRequest.js\n// module id = xLtR\n// module chunks = 0","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/sign.js\n// module id = xeqp\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = yevv\n// module chunks = 0","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/track-decode-info.js\n// module id = zGuD\n// module chunks = 0"],"sourceRoot":""}